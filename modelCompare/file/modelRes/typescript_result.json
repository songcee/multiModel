[{"prefix":"import { TextEditor, ExtensionContext } from 'vscode';\n\n/**\n * @file 代码处理器\n */\nexport class CodeProcessor {\n  private whiteList;\n  private functionIdentifier;\n  private commentIdentifier;\n  private uselessComment;\n  private _extensionContext;\n  private _maxLength;\n\n  constructor(context: ExtensionContext, maxLength: number) {\n    this.whiteList = ['js', 'vue', 'jsx', 'tsx', 'ts', 'py'];\n    this.functionIdentifier = {\n      tsx: [\n        [\n          `[\n    (function body: (statement_block) @body)\n    (function_declaration body: (statement_block) @body)\n    (generator_function body: (statement_block) @body)\n    (generator_function_declaration body: (statement_block) @body)\n    (method_definition body: (statement_block) @body)\n    (arrow_function body: (statement_block) @body)\n  ] @function`\n        ]\n      ],\n      python: [\n        [\n          `(function_definition body: (block\n             (expression_statement (string))? @docstring) @body) @function`\n        ],\n        ['(ERROR (\"def\" (identifier) (parameters))) @function']\n      ]\n    };\n    this.commentIdentifier = {\n      tsx: [['(comment) @comment']],\n      python: [['(comment) @comment']]\n    };\n    this.uselessComment = ['@Copyright', '@copyright', '@licence', '@Licence', '@Author', '@author', '@Date', 'date'];\n    this._extensionContext = context;\n    this._maxLength = maxLength;\n  }\n  /**\n   * 用于设置最近打开的文件\n   * @param editor \n   */\n  setRecentFile(editor: TextEditor) {\n    const document = editor.document;\n    let recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n    if(!recentFileList) {\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify([]));\n    }\n    recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n\n    const reg","infill":" = /.*\\..*/;\n    const fileList = JSON.parse(recentFileList);\n    ","suffix":"\n    const r = /.*\\..*/,\n      i = JSON.parse(s),\n      a = Re(n);\n    if (this.whiteList.includes(a) && r.test(n.fileName)) {\n      let o = gi(n),\n        c = {\n          path: o,\n          language: a,\n          innerText: n.getText(),\n          lines: nc(n)\n        };\n      i.some((u) => u.path === o)\n        ? i.forEach((u, l) => {\n            u.path === o && (i.splice(l, 1), i.unshift(c));\n          })\n        : (i.length === this._maxLength + 1 && i.pop(), i.unshift(c)),\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify(i));\n    }\n    console.log('最近打开的文件列表：', i);\n  }\n  async getFileCache(t, n) {\n    let s = this._extensionContext.workspaceState.get('recentFileList') || '[]',\n      r = JSON.parse(s),\n      i = this._extensionContext.workspaceState.get('fileCache');\n    i || (this._extensionContext.workspaceState.update('fileCache', JSON.stringify({})), (i = JSON.stringify({})));\n    let a = JSON.parse(i),\n      o = gi(n);\n    a[o] && delete a[o];\n    let c = t,\n      u = [],\n      l = 'innerText1';\n    return (\n      t > 11e3 * 0.9 && (l = 'innerText2'),\n      await Promise.all(\n        r.splice(1).map(async (p) => {\n          if (!a[p.path]) {\n            let { output1: d, output2: m } = await this.clearCommentsOrFunction(p);\n            a[p.path] = {\n              innerText1: d.replace(\n                /\\r\\n/g,\n                `\n`\n              ),\n              innerText2: m.replace(\n                /\\r\\n/g,\n                `\n`\n              )\n            };\n          }\n          a[p.path][l]?.trim() &&\n            c + a[p.path][l].length <= 11e3 &&\n            ((c += a[p.path][l].length),\n            u.push({\n              file_path: p.path,\n              file_content: a[p.path][l]\n            }));\n        })\n      ),\n      this._extensionContext.workspaceState.update('fileCache', JSON.stringify(a)),\n      console.log('file_list: ', u),\n      u\n    );\n  }\n  getScriptCode(t) {\n    let n = '',\n      s = /<script[^>]*?>([\\s\\S]*?)<\\/script>/i,\n      r = t.match(s);\n    return r ? (n = r[1].trim()) : (n = t), n;\n  }\n  async clearCommentsOrFunction(t) {\n    let n = '';\n    t.language === 'vue' ? (n = this.getScriptCode(t.innerText)) : (n = t.innerText);\n    let s = '',\n      r = '';\n    try {\n      let i = M[t.language]?.wasm,\n        c = (await TreeSitter.getInstance().getParser(i)).parse(n),\n        u = this.functionIdentifier[i],\n        l = [];\n      for (let b of u) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        l.push(...b[1].matches(c.rootNode));\n      }\n      let d = l\n          .map((b) => b.captures.find((O) => O.name === 'body')?.node)\n          .map((b) => ({\n            startIndex: b.startIndex,\n            endIndex: b.endIndex\n          })),\n        m = 0,\n        h = d[0]?.startIndex ?? 0;\n      for (let b = 0; b < d.length; b++) (r += n.slice(m, h)), (m = d[b].endIndex), (h = d[b + 1]?.startIndex ?? n.length);\n      r += n.slice(m, h);\n      let f = this.commentIdentifier[i],\n        v = [];\n      for (let b of f) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        v.push(...b[1].matches(c.rootNode));\n      }\n      let x = v.map((b) => b.captures.find((O) => O.name === 'comment')?.node).filter((b) => this.uselessComment.some((L) => b.text.includes(L))),\n        E = 0,\n        R = x[0]?.startIndex ?? 0;\n      for (let b = 0; b < x.length; b++) (s += n.slice(E, R)), (E = x[b].endIndex), (R = x[b + 1]?.startIndex ?? n.length);\n      return (\n        (s += n.slice(E, R)),\n        {\n          output1: s || n,\n          output2: r || n\n        }\n      );\n    } catch {\n      return (\n        console.log(t.path, 'recentFile tree sitter parse error'),\n        {\n          output1: n,\n          output2: n\n        }\n      );\n    }\n  }\n  async getRecentFile() {\n    return this._extensionContext.workspaceState.get('recentFileList') || '[]';\n  }\n}\n","relevantFile":"","relevantFileList":[],"filePath":"src/utils/completion/codeProcessor.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ex = /\\.([^.]+)$/;","deepseek-chat-lite":" = /.*\\..*/;","deepseek-chat":"```\n// Start Generation Here\n    const reg = /.*\\..*/,","copilot":" = /.*\\..*/;\n    const fileList = JSON.parse(recentFileList);\n    "}},{"prefix":"const cbAuth_10 = window.cbAuth.includes('10');\nconst cbAuth_19 = window.cbAuth.includes('19');\nconst csiAuth = window.csiAuth === '1';\n\n/** 债券类型代码判断是否利率债 */\nconst isInterestRateBondRegs = [/^640001/, /^640004001001$/, /^640004001002$/, /^640004001003$/, /^640002/];\n\n/** 判断是否是利率债，否则就是信用债 */\nexport function isInterestRateBond(bondTypeCode: string) {\n  return isInterestRateBondRegs.some(reg => reg.test(bondTypeCode));\n}\n\n/**\n * 判断是否为空值\n * - null\n * - undefined\n * - \"--\"\n * - \"\"\n */\nexport function isEmptyValue(value: unknown): boolean {\n  return value === null || value === undefined || value === '--' || value === '';\n}\n\n/**\n * 中债中证权限判断\n * authType 1-不需要权限 2-中债权限 3-中债隐含评级权限 4-中证权限 5-中债和中证权限\n */\nexport function checkCbCsiAuth(authType: number, data: { chargeId","infill":": string; isCbHistory: string }","suffix":") {\r\n  const { chargeId, isCbHistory } = data;\r\n  if (authType === 1) return true;\r\n  if (authType === 2) {\r\n    return !chargeId || isEmptyValue(isCbHistory) || (isCbHistory === '0' && cbAuth_19) || (isCbHistory === '1' && window.cbAuth.includes(chargeId));\r\n  }\r\n  if (authType === 3 && cbAuth_10) return true;\r\n  if (authType === 4 && csiAuth) return true;\r\n  if (authType === 5) {\r\n    return (\r\n      !chargeId ||\r\n      isEmptyValue(isCbHistory) ||\r\n      (isCbHistory === '0' && cbAuth_19) ||\r\n      (isCbHistory === '1' && window.cbAuth.includes(chargeId) && csiAuth)\r\n    );\r\n  }\r\n  return false;\r\n}\r\n","relevantFile":"<file_path>src/App/Drawer/Quote/types/apiRequest.ts\nexport type GetLatestQuoteParam = {\n  thsCode: string;\n  marketCode: string;\n};\n\n/** 获取成交明细 参数 */\nexport type GetDealDetailBody = {\n  /**同花顺代码*/\n  thsCode: string;\n  /**是否只查询经纪商数据*/\n  onlyBroker: boolean;\n  /**排序值对应的seq，用来应对多个排序值相等的情况下 按照seq继续排序，能够确定唯一一条滚动方向的记录数据*/\n  seq: string;\n  /**分页大小*/\n  size: string;\n  /**排序方向, 0 正向， 1 倒向*/\n  sortBy?: '0' | '1';\n  /**排序字段*/\n  sortField?: string;\n  /**滚动方向,0-向上，1-向下*/\n  direction?: '0' | '1';\n  /**排序值*/\n  sortValue?: string;\n  /**轮询，1-轮询，0（或者不填）-全量*/\n  poll?: boolean;\n  /** 上次请求时间 */\n  preRequestTime?: string;\n};\n\n/** 成交明细-右侧统计图 */\nexport type GetDealDetailStatisticsParam = {\n  /**同花顺代码*/\n  thsCode: string;\n  /**是否只查询经纪商数据*/\n  onlyBroker: boolean;\n};\n<file_path>src/components/BasicChart/IndexAndOverlay.tsx\n  /** 收盘价 */\n  closingPrice,\n  /** 均价 */\n  avgPrice,\n  /** 中债估值 */\n  cb,\n  /** 中债行权 */\n  cbExe,\n  /** 中证估值 */\n  csi,\n  /** 中证行权 */\n  csiExe,\n  bid,\n  ofr,\n  /** 最优报价 \n  best,*/\n  /** 上清所估值 */\n  sse,\n  /** CFETS估值 */\n  cfets,\n  /** 重大事件 */\n  event,\n}\n\nconst OverlayTypeNameMap = {\n  [OverlayType.deal]: t('成交'),\n  [OverlayType.closingPrice]: t('收盘价'),\n  [OverlayType.avgPrice]: t('均价'),\n  [OverlayType.cb]: t('中债估值'),\n  [OverlayType.cbExe]: t('中债') + `(${t('行权')})`,\n  [OverlayType.csi]: t('中证估值'),\n  [OverlayType.csiExe]: t('中证') + `(${t('行权')})`,\n  [OverlayType.bid]: 'Bid',\n  [OverlayType.ofr]: 'Ofr',\n  [OverlayType.sse]: t('上清所估值'),\n  [OverlayType.cfets]: t('CFETS估值'),\n  [OverlayType.event]: t('重大事件'),\n};\n\ntype Options = {\n  /** 指标 */\n  curIndex: Ref<IndexSelectValue>;\n  /** 叠加指标 */\n  curOverlay: Ref<OverlayType | undefined>;\n  /** 可选项 */\n  overlayOptions: OverlayType[];\n  handleIndexChange: (v: IndexSelectValue) => void;\n  handleOverlayChange: (v: OverlayType) => void;\n};\nexport function IndexAndOverlay({ curIndex, curOverlay, overlayOptions, handleIndexChange, handleOverlayChange }: Options) {\n  const { t } = useI18n();\n  const indexSelectOptions = [\n    { label: t('收益率'), value: IndexSelectValue.benefit },\n    { label: t('净价'), value: IndexSelectValue.price },\n  ];\n  const addonSelectOptions = overlayOptions\n    .filter(overlayType => {\n      // 根据权限判断过滤\n      if (overlayType === OverlayType.cb) return checkCbCsiAuth(2);\n      else if (overlayType === OverlayType.csi) return checkCbCsiAuth(4);\n<file_path>src/shims-vue.d.ts\ndeclare module '*.svg';\n/** 是否是开发环境 */\ndeclare const __DEV__: boolean;\ndeclare interface Window {\n  showClientPushData: boolean;\n  API: {\n    use: (method: string, param: any[], fun?: (para?: any) => void) => void;\n    OnClientCmd: (param: [string]) => void;\n  };\n  TA: {\n    log: (options: { id: string }) => void;\n  };\n  /** i18n.t */\n  $t: (v: string, obj?: object | any[]) => string;\n\n  /** 板块变动客户端通知 */\n  sectorChange(): void;\n  lang: 'cn' | 'en';\n  /** 当前日期 */\n  curDate: string;\n  /** 客户端时间误差 serverTime - userTime*/\n  timeErr: number;\n  authList: {\n    /** 0: 无权限,1: 审核中,2: 有权限 */\n    auth: number;\n    authType: number;\n    company: string;\n    source: string;\n  }[];\n  cbAuth: string[];\n  /** 中证权限 0: 无权限,1: 有权限 */\n  csiAuth: string;\n  /** 有权限的源 */\n  validAuthSource: string[]; // 1,2,3,4,5,6\n\n  easyDealTableColumns: FtlTableColumn[];\n  listDealTableColumns: FtlTableColumn[];\n  easyQuoteTableColumns: FtlTableColumn[];\n  listQuoteTableColumns: FtlTableColumn[];\n}\n\ndeclare type FtlTableColumn = {\n  id: string;\n  name: string;\n  /** 0-left 1-center 2-right */\n  align?: 0 | 1 | 2;\n  selected?: 0 | 1;\n  width?: number;\n  sortField?: string;\n  /** 0-string 1-number */\n  sortFieldType?: 0 | 1;\n};\n<file_path>src/App/Drawer/Quote/types/model.ts\nimport { TagEnum } from './enum';\n\n/** 报价行情表格数据 */\nexport type QuoteTableData = {\n  /** 推送的数据会有 */\n  thsCode?: string;\n  /**时间*/ time: string;\n  /**买价*/ bid: string;\n  /**卖价*/ ofr: string;\n  /**买量*/ buyAmount: string;\n  /**卖量*/ sellAmount: string;\n  /**\n   * 类型字段 取自公共包TagEnum\n   * - 1-国际货币，\n   * - 2-中诚\n   * - 20-国利\n   * - 21-平安利顺\n   * - 22-上田八木\n   * - 23-信唐\n   * - 3-CFETS\n   * - 4-X-BOND\n   * - 5-交易所\n   * - 6-上证固收\n   */\n  tag: TagEnum;\n};\n\n/** 报价行情-成交明细-表格数据 */\nexport type DealDetailData = {\n  /** 实时数据会有推 */\n  thsCode?: string;\n  /** 唯一值 */\n  dealId: string;\n  /**成交时间*/\n  dealTime: string;\n  /**成交数量（万手）,经纪商和CFETS展示成交类型*/\n  dealAmountOrType: string;\n  /**成交价格*/\n  dealPrice: string;\n  /**类型字段 取自公共包TagEnum 1-国际货币，2-中诚，20-国利，21-平安利顺，22-上田八木，23-信唐，3-CFETS，4-X-BOND，5-交易所，6-上证固收*/\n  tag: TagEnum;\n  /**取值：1-正常数据、2-撤销数据、3-回放数据、4-测试数据*/\n  dataFlag: 1 | 2 | 3 | 4;\n};\n\n/** 报价行情-成交统计-右侧统计图 */\nexport type DealDetailStatistics = {\n  /**TRD类型的成交数量\t*/\n  TRD: number;\n  /**TKN类型的成交数量\t*/\n  TKN: number;\n  /**GVN类型的成交数量*/\n  GVN: number;\n};","relevantFileList":[],"filePath":"src/utils/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ?: string; isCbHistory?: string }","deepseek-chat-lite":": string; isCbHistory: string }) {","deepseek-chat":"```\n// Start Generation Here\n  const { chargeId, isCbHistory","copilot":": string; isCbHistory: string }"}},{"prefix":"import { TextEditor, ExtensionContext } from 'vscode';\n\nimport { getFileSuffix } from '../file';\n\n/**\n * @file 代码处理器\n */\nexport class CodeProcessor {\n  private whiteList;\n  private functionIdentifier;\n  private commentIdentifier;\n  private uselessComment;\n  private _extensionContext;\n  private _maxLength;\n\n  constructor(context: ExtensionContext, maxLength: number) {\n    this.whiteList = ['js', 'vue', 'jsx', 'tsx', 'ts', 'py'];\n    this.functionIdentifier = {\n      tsx: [\n        [\n          `[\n    (function body: (statement_block) @body)\n    (function_declaration body: (statement_block) @body)\n    (generator_function body: (statement_block) @body)\n    (generator_function_declaration body: (statement_block) @body)\n    (method_definition body: (statement_block) @body)\n    (arrow_function body: (statement_block) @body)\n  ] @function`\n        ]\n      ],\n      python: [\n        [\n          `(function_definition body: (block\n             (expression_statement (string))? @docstring) @body) @function`\n        ],\n        ['(ERROR (\"def\" (identifier) (parameters))) @function']\n      ]\n    };\n    this.commentIdentifier = {\n      tsx: [['(comment) @comment']],\n      python: [['(comment) @comment']]\n    };\n    this.uselessComment = ['@Copyright', '@copyright', '@licence', '@Licence', '@Author', '@author', '@Date', 'date'];\n    this._extensionContext = context;\n    this._maxLength = maxLength;\n  }\n  /**\n   * 用于设置最近打开的文件\n   * @param editor \n   */\n  setRecentFile(editor: TextEditor) {\n    const document = editor.document;\n    let recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n    if(!recentFileList) {\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify([]));\n    }\n    recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n\n    const reg = /.*\\..*/;\n    const fileList = JSON.parse(recentFileList);\n    const fileSuffix = ","infill":"getFileSuffix(document);\n","suffix":"\n    if (this.whiteList.includes(fileSuffix) && reg.test(n.fileName)) {\n      let o = gi(n),\n        c = {\n          path: o,\n          language: a,\n          innerText: n.getText(),\n          lines: nc(n)\n        };\n      i.some((u) => u.path === o)\n        ? i.forEach((u, l) => {\n            u.path === o && (i.splice(l, 1), i.unshift(c));\n          })\n        : (i.length === this._maxLength + 1 && i.pop(), i.unshift(c)),\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify(i));\n    }\n    console.log('最近打开的文件列表：', i);\n  }\n  async getFileCache(t, n) {\n    let s = this._extensionContext.workspaceState.get('recentFileList') || '[]',\n      r = JSON.parse(s),\n      i = this._extensionContext.workspaceState.get('fileCache');\n    i || (this._extensionContext.workspaceState.update('fileCache', JSON.stringify({})), (i = JSON.stringify({})));\n    let a = JSON.parse(i),\n      o = gi(n);\n    a[o] && delete a[o];\n    let c = t,\n      u = [],\n      l = 'innerText1';\n    return (\n      t > 11e3 * 0.9 && (l = 'innerText2'),\n      await Promise.all(\n        r.splice(1).map(async (p) => {\n          if (!a[p.path]) {\n            let { output1: d, output2: m } = await this.clearCommentsOrFunction(p);\n            a[p.path] = {\n              innerText1: d.replace(\n                /\\r\\n/g,\n                `\n`\n              ),\n              innerText2: m.replace(\n                /\\r\\n/g,\n                `\n`\n              )\n            };\n          }\n          a[p.path][l]?.trim() &&\n            c + a[p.path][l].length <= 11e3 &&\n            ((c += a[p.path][l].length),\n            u.push({\n              file_path: p.path,\n              file_content: a[p.path][l]\n            }));\n        })\n      ),\n      this._extensionContext.workspaceState.update('fileCache', JSON.stringify(a)),\n      console.log('file_list: ', u),\n      u\n    );\n  }\n  getScriptCode(t) {\n    let n = '',\n      s = /<script[^>]*?>([\\s\\S]*?)<\\/script>/i,\n      r = t.match(s);\n    return r ? (n = r[1].trim()) : (n = t), n;\n  }\n  async clearCommentsOrFunction(t) {\n    let n = '';\n    t.language === 'vue' ? (n = this.getScriptCode(t.innerText)) : (n = t.innerText);\n    let s = '',\n      r = '';\n    try {\n      let i = M[t.language]?.wasm,\n        c = (await TreeSitter.getInstance().getParser(i)).parse(n),\n        u = this.functionIdentifier[i],\n        l = [];\n      for (let b of u) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        l.push(...b[1].matches(c.rootNode));\n      }\n      let d = l\n          .map((b) => b.captures.find((O) => O.name === 'body')?.node)\n          .map((b) => ({\n            startIndex: b.startIndex,\n            endIndex: b.endIndex\n          })),\n        m = 0,\n        h = d[0]?.startIndex ?? 0;\n      for (let b = 0; b < d.length; b++) (r += n.slice(m, h)), (m = d[b].endIndex), (h = d[b + 1]?.startIndex ?? n.length);\n      r += n.slice(m, h);\n      let f = this.commentIdentifier[i],\n        v = [];\n      for (let b of f) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        v.push(...b[1].matches(c.rootNode));\n      }\n      let x = v.map((b) => b.captures.find((O) => O.name === 'comment')?.node).filter((b) => this.uselessComment.some((L) => b.text.includes(L))),\n        E = 0,\n        R = x[0]?.startIndex ?? 0;\n      for (let b = 0; b < x.length; b++) (s += n.slice(E, R)), (E = x[b].endIndex), (R = x[b + 1]?.startIndex ?? n.length);\n      return (\n        (s += n.slice(E, R)),\n        {\n          output1: s || n,\n          output2: r || n\n        }\n      );\n    } catch {\n      return (\n        console.log(t.path, 'recentFile tree sitter parse error'),\n        {\n          output1: n,\n          output2: n\n        }\n      );\n    }\n  }\n  async getRecentFile() {\n    return this._extensionContext.workspaceState.get('recentFileList') || '[]';\n  }\n}\n","relevantFile":"<file_path>src/utils/file.ts\nimport { TextDocument } from 'vscode';\n/**\n * 获取文件后缀\n * @param textDocument \n * @returns \n */\nexport const getFileSuffix = (textDocument: TextDocument) => {\n    const suffix = textDocument.fileName.split(\".\");\n    return suffix[suffix.length - 1];\n}","relevantFileList":[],"filePath":"src/utils/completion/codeProcessor.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" getFileSuffix(document.fileName);","deepseek-chat-lite":"getFileSuffix(document.fileName);","deepseek-chat":"```\n// Start Generation Here\n    getFileSuffix(document);\n//","copilot":"getFileSuffix(document);\n"}},{"prefix":"import { TextEditor, ExtensionContext } from 'vscode';\n\n/**\n * @file 代码处理器\n */\nexport class CodeProcessor {\n  private whiteList;\n  private functionIdentifier;\n  private commentIdentifier;\n  private uselessComment;\n  private _extensionContext;\n  private _maxLength;\n\n  constructor(context: ExtensionContext, maxLength: number) {\n    this.whiteList = ['js', 'vue', 'jsx', 'tsx', 'ts', 'py'];\n    this.functionIdentifier = {\n      tsx: [\n        [\n          `[\n    (function body: (statement_block) @body)\n    (function_declaration body: (statement_block) @body)\n    (generator_function body: (statement_block) @body)\n    (generator_function_declaration body: (statement_block) @body)\n    (method_definition body: (statement_block) @body)\n    (arrow_function body: (statement_block) @body)\n  ] @function`\n        ]\n      ],\n      python: [\n        [\n          `(function_definition body: (block\n             (expression_statement (string))? @docstring) @body) @function`\n        ],\n        ['(ERROR (\"def\" (identifier) (parameters))) @function']\n      ]\n    };\n    this.commentIdentifier = {\n      tsx: [['(comment) @comment']],\n      python: [['(comment) @comment']]\n    };\n    this.uselessComment = ['@Copyright', '@copyright', '@licence', '@Licence', '@Author', '@author', '@Date', 'date'];\n    this._extensionContext = context;\n    this._maxLength = maxLength;\n  }\n  /**\n   * 用于设置最近打开的文件\n   * @param editor \n   */\n  setRecentFile(editor: TextEditor) {\n    const document = editor.document;\n    let recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n    if(!recentFileList) {\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify([]));\n    }\n    recentFileList","infill":" = this._extensionContext.workspaceState.get('recentFileList');","suffix":"\n     (s = this._extensionContext.workspaceState.get('recentFileList')));\n    let r = /.*\\..*/,\n      i = JSON.parse(s),\n      a = Re(n);\n    if (this.whiteList.includes(a) && r.test(n.fileName)) {\n      let o = gi(n),\n        c = {\n          path: o,\n          language: a,\n          innerText: n.getText(),\n          lines: nc(n)\n        };\n      i.some((u) => u.path === o)\n        ? i.forEach((u, l) => {\n            u.path === o && (i.splice(l, 1), i.unshift(c));\n          })\n        : (i.length === this._maxLength + 1 && i.pop(), i.unshift(c)),\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify(i));\n    }\n    console.log('最近打开的文件列表：', i);\n  }\n  async getFileCache(t, n) {\n    let s = this._extensionContext.workspaceState.get('recentFileList') || '[]',\n      r = JSON.parse(s),\n      i = this._extensionContext.workspaceState.get('fileCache');\n    i || (this._extensionContext.workspaceState.update('fileCache', JSON.stringify({})), (i = JSON.stringify({})));\n    let a = JSON.parse(i),\n      o = gi(n);\n    a[o] && delete a[o];\n    let c = t,\n      u = [],\n      l = 'innerText1';\n    return (\n      t > 11e3 * 0.9 && (l = 'innerText2'),\n      await Promise.all(\n        r.splice(1).map(async (p) => {\n          if (!a[p.path]) {\n            let { output1: d, output2: m } = await this.clearCommentsOrFunction(p);\n            a[p.path] = {\n              innerText1: d.replace(\n                /\\r\\n/g,\n                `\n`\n              ),\n              innerText2: m.replace(\n                /\\r\\n/g,\n                `\n`\n              )\n            };\n          }\n          a[p.path][l]?.trim() &&\n            c + a[p.path][l].length <= 11e3 &&\n            ((c += a[p.path][l].length),\n            u.push({\n              file_path: p.path,\n              file_content: a[p.path][l]\n            }));\n        })\n      ),\n      this._extensionContext.workspaceState.update('fileCache', JSON.stringify(a)),\n      console.log('file_list: ', u),\n      u\n    );\n  }\n  getScriptCode(t) {\n    let n = '',\n      s = /<script[^>]*?>([\\s\\S]*?)<\\/script>/i,\n      r = t.match(s);\n    return r ? (n = r[1].trim()) : (n = t), n;\n  }\n  async clearCommentsOrFunction(t) {\n    let n = '';\n    t.language === 'vue' ? (n = this.getScriptCode(t.innerText)) : (n = t.innerText);\n    let s = '',\n      r = '';\n    try {\n      let i = M[t.language]?.wasm,\n        c = (await TreeSitter.getInstance().getParser(i)).parse(n),\n        u = this.functionIdentifier[i],\n        l = [];\n      for (let b of u) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        l.push(...b[1].matches(c.rootNode));\n      }\n      let d = l\n          .map((b) => b.captures.find((O) => O.name === 'body')?.node)\n          .map((b) => ({\n            startIndex: b.startIndex,\n            endIndex: b.endIndex\n          })),\n        m = 0,\n        h = d[0]?.startIndex ?? 0;\n      for (let b = 0; b < d.length; b++) (r += n.slice(m, h)), (m = d[b].endIndex), (h = d[b + 1]?.startIndex ?? n.length);\n      r += n.slice(m, h);\n      let f = this.commentIdentifier[i],\n        v = [];\n      for (let b of f) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        v.push(...b[1].matches(c.rootNode));\n      }\n      let x = v.map((b) => b.captures.find((O) => O.name === 'comment')?.node).filter((b) => this.uselessComment.some((L) => b.text.includes(L))),\n        E = 0,\n        R = x[0]?.startIndex ?? 0;\n      for (let b = 0; b < x.length; b++) (s += n.slice(E, R)), (E = x[b].endIndex), (R = x[b + 1]?.startIndex ?? n.length);\n      return (\n        (s += n.slice(E, R)),\n        {\n          output1: s || n,\n          output2: r || n\n        }\n      );\n    } catch {\n      return (\n        console.log(t.path, 'recentFile tree sitter parse error'),\n        {\n          output1: n,\n          output2: n\n        }\n      );\n    }\n  }\n  async getRecentFile() {\n    return this._extensionContext.workspaceState.get('recentFileList') || '[]';\n  }\n}\n","relevantFile":"","relevantFileList":[],"filePath":"src/utils/completion/codeProcessor.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  = JSON.parse(recentFileList);","deepseek-chat-lite":" = JSON.parse(recentFileList);","deepseek-chat":"```\n// Start Generation Here\n    if (recentFileList) {\n","copilot":" = this._extensionContext.workspaceState.get('recentFileList');"}},{"prefix":"import { TextEditor, ExtensionContext } from 'vscode';\n\n/**\n * @file 代码处理器\n */\nexport class CodeProcessor {\n  private whiteList;\n  private functionIdentifier;\n  private commentIdentifier;\n  private uselessComment;\n  private _extensionContext;\n  private _maxLength;\n\n  constructor(context: ExtensionContext, maxLength: number) {\n    this.whiteList = ['js', 'vue', 'jsx', 'tsx', 'ts', 'py'];\n    this.functionIdentifier = {\n      tsx: [\n        [\n          `[\n    (function body: (statement_block) @body)\n    (function_declaration body: (statement_block) @body)\n    (generator_function body: (statement_block) @body)\n    (generator_function_declaration body: (statement_block) @body)\n    (method_definition body: (statement_block) @body)\n    (arrow_function body: (statement_block) @body)\n  ] @function`\n        ]\n      ],\n      python: [\n        [\n          `(function_definition body: (block\n             (expression_statement (string))? @docstring) @body) @function`\n        ],\n        ['(ERROR (\"def\" (identifier) (parameters))) @function']\n      ]\n    };\n    this.commentIdentifier = {\n      tsx: [['(comment) @comment']],\n      python: [['(comment) @comment']]\n    };\n    this.uselessComment = ['@Copyright', '@copyright', '@licence', '@Licence', '@Author', '@author', '@Date', 'date'];\n    this._extensionContext = context;\n    this._maxLength = maxLength;\n  }\n  /**\n   * 用于设置最近打开的文件\n   * @param editor \n   */\n  setRecentFile(editor: TextEditor) {\n    const document = editor.document;\n    let recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n    if(","infill":"!recentFileList) {\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify([]));\n    }\n    recentFileList = this._extensionContext.workspaceState.get('recentFileList');","suffix":"\n    recentFileList || (this._extensionContext.workspaceState.update('recentFileList', JSON.stringify([])), (s = this._extensionContext.workspaceState.get('recentFileList')));\n    let r = /.*\\..*/,\n      i = JSON.parse(s),\n      a = Re(n);\n    if (this.whiteList.includes(a) && r.test(n.fileName)) {\n      let o = gi(n),\n        c = {\n          path: o,\n          language: a,\n          innerText: n.getText(),\n          lines: nc(n)\n        };\n      i.some((u) => u.path === o)\n        ? i.forEach((u, l) => {\n            u.path === o && (i.splice(l, 1), i.unshift(c));\n          })\n        : (i.length === this._maxLength + 1 && i.pop(), i.unshift(c)),\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify(i));\n    }\n    console.log('最近打开的文件列表：', i);\n  }\n  async getFileCache(t, n) {\n    let s = this._extensionContext.workspaceState.get('recentFileList') || '[]',\n      r = JSON.parse(s),\n      i = this._extensionContext.workspaceState.get('fileCache');\n    i || (this._extensionContext.workspaceState.update('fileCache', JSON.stringify({})), (i = JSON.stringify({})));\n    let a = JSON.parse(i),\n      o = gi(n);\n    a[o] && delete a[o];\n    let c = t,\n      u = [],\n      l = 'innerText1';\n    return (\n      t > 11e3 * 0.9 && (l = 'innerText2'),\n      await Promise.all(\n        r.splice(1).map(async (p) => {\n          if (!a[p.path]) {\n            let { output1: d, output2: m } = await this.clearCommentsOrFunction(p);\n            a[p.path] = {\n              innerText1: d.replace(\n                /\\r\\n/g,\n                `\n`\n              ),\n              innerText2: m.replace(\n                /\\r\\n/g,\n                `\n`\n              )\n            };\n          }\n          a[p.path][l]?.trim() &&\n            c + a[p.path][l].length <= 11e3 &&\n            ((c += a[p.path][l].length),\n            u.push({\n              file_path: p.path,\n              file_content: a[p.path][l]\n            }));\n        })\n      ),\n      this._extensionContext.workspaceState.update('fileCache', JSON.stringify(a)),\n      console.log('file_list: ', u),\n      u\n    );\n  }\n  getScriptCode(t) {\n    let n = '',\n      s = /<script[^>]*?>([\\s\\S]*?)<\\/script>/i,\n      r = t.match(s);\n    return r ? (n = r[1].trim()) : (n = t), n;\n  }\n  async clearCommentsOrFunction(t) {\n    let n = '';\n    t.language === 'vue' ? (n = this.getScriptCode(t.innerText)) : (n = t.innerText);\n    let s = '',\n      r = '';\n    try {\n      let i = M[t.language]?.wasm,\n        c = (await TreeSitter.getInstance().getParser(i)).parse(n),\n        u = this.functionIdentifier[i],\n        l = [];\n      for (let b of u) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        l.push(...b[1].matches(c.rootNode));\n      }\n      let d = l\n          .map((b) => b.captures.find((O) => O.name === 'body')?.node)\n          .map((b) => ({\n            startIndex: b.startIndex,\n            endIndex: b.endIndex\n          })),\n        m = 0,\n        h = d[0]?.startIndex ?? 0;\n      for (let b = 0; b < d.length; b++) (r += n.slice(m, h)), (m = d[b].endIndex), (h = d[b + 1]?.startIndex ?? n.length);\n      r += n.slice(m, h);\n      let f = this.commentIdentifier[i],\n        v = [];\n      for (let b of f) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        v.push(...b[1].matches(c.rootNode));\n      }\n      let x = v.map((b) => b.captures.find((O) => O.name === 'comment')?.node).filter((b) => this.uselessComment.some((L) => b.text.includes(L))),\n        E = 0,\n        R = x[0]?.startIndex ?? 0;\n      for (let b = 0; b < x.length; b++) (s += n.slice(E, R)), (E = x[b].endIndex), (R = x[b + 1]?.startIndex ?? n.length);\n      return (\n        (s += n.slice(E, R)),\n        {\n          output1: s || n,\n          output2: r || n\n        }\n      );\n    } catch {\n      return (\n        console.log(t.path, 'recentFile tree sitter parse error'),\n        {\n          output1: n,\n          output2: n\n        }\n      );\n    }\n  }\n  async getRecentFile() {\n    return this._extensionContext.workspaceState.get('recentFileList') || '[]';\n  }\n}\n","relevantFile":"","relevantFileList":[],"filePath":"src/utils/completion/codeProcessor.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"!recentFileList) {","deepseek-chat-lite":"!recentFileList) {","deepseek-chat":"```\n// Start Generation Here\n      !recentFileList && (this._","copilot":"!recentFileList) {\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify([]));\n    }\n    recentFileList = this._extensionContext.workspaceState.get('recentFileList');"}},{"prefix":"import { TextEditor, ExtensionContext, TextDocument } from 'vscode';\n\nimport { getFileSuffix, getRelativePath } from '../file';\n\n/**\n * @file 代码处理器\n */\nexport class CodeProcessor {\n  private whiteList;\n  private functionIdentifier;\n  private commentIdentifier;\n  private uselessComment;\n  private _extensionContext;\n  private _maxLength;\n\n  constructor(context: ExtensionContext, maxLength: number) {\n    this.whiteList = ['js', 'vue', 'jsx', 'tsx', 'ts', 'py'];\n    this.functionIdentifier = {\n      tsx: [\n        [\n          `[\n    (function body: (statement_block) @body)\n    (function_declaration body: (statement_block) @body)\n    (generator_function body: (statement_block) @body)\n    (generator_function_declaration body: (statement_block) @body)\n    (method_definition body: (statement_block) @body)\n    (arrow_function body: (statement_block) @body)\n  ] @function`\n        ]\n      ],\n      python: [\n        [\n          `(function_definition body: (block\n             (expression_statement (string))? @docstring) @body) @function`\n        ],\n        ['(ERROR (\"def\" (identifier) (parameters))) @function']\n      ]\n    };\n    this.commentIdentifier = {\n      tsx: [['(comment) @comment']],\n      python: [['(comment) @comment']]\n    };\n    this.uselessComment = ['@Copyright', '@copyright', '@licence', '@Licence', '@Author', '@author', '@Date', 'date'];\n    this._extensionContext = context;\n    this._maxLength = maxLength;\n  }\n  /**\n   * 用于设置最近打开的文件\n   * @param editor \n   */\n  setRecentFile(editor: TextEditor) {\n    const document: TextDocument = editor.document;\n    let recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n    if(!recentFileList) {\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify([]));\n    }\n    recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n\n    const reg = /.*\\..*/;\n    const fileList = JSON.parse(recentFileList);\n    const fileSuffix = getFileSuffix(document);\n\n    if (this.whiteList.includes(fileSuffix) && reg.test(document.fileName)) {\n        const rela","infill":"tivePath = getRelativePath(document);","suffix":"\n      let o = gi(n),\n        c = {\n          path: o,\n          language: a,\n          innerText: n.getText(),\n          lines: nc(n)\n        };\n      i.some((u) => u.path === o)\n        ? i.forEach((u, l) => {\n            u.path === o && (i.splice(l, 1), i.unshift(c));\n          })\n        : (i.length === this._maxLength + 1 && i.pop(), i.unshift(c)),\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify(i));\n    }\n    console.log('最近打开的文件列表：', i);\n  }\n  async getFileCache(t, n) {\n    let s = this._extensionContext.workspaceState.get('recentFileList') || '[]',\n      r = JSON.parse(s),\n      i = this._extensionContext.workspaceState.get('fileCache');\n    i || (this._extensionContext.workspaceState.update('fileCache', JSON.stringify({})), (i = JSON.stringify({})));\n    let a = JSON.parse(i),\n      o = gi(n);\n    a[o] && delete a[o];\n    let c = t,\n      u = [],\n      l = 'innerText1';\n    return (\n      t > 11e3 * 0.9 && (l = 'innerText2'),\n      await Promise.all(\n        r.splice(1).map(async (p) => {\n          if (!a[p.path]) {\n            let { output1: d, output2: m } = await this.clearCommentsOrFunction(p);\n            a[p.path] = {\n              innerText1: d.replace(\n                /\\r\\n/g,\n                `\n`\n              ),\n              innerText2: m.replace(\n                /\\r\\n/g,\n                `\n`\n              )\n            };\n          }\n          a[p.path][l]?.trim() &&\n            c + a[p.path][l].length <= 11e3 &&\n            ((c += a[p.path][l].length),\n            u.push({\n              file_path: p.path,\n              file_content: a[p.path][l]\n            }));\n        })\n      ),\n      this._extensionContext.workspaceState.update('fileCache', JSON.stringify(a)),\n      console.log('file_list: ', u),\n      u\n    );\n  }\n  getScriptCode(t) {\n    let n = '',\n      s = /<script[^>]*?>([\\s\\S]*?)<\\/script>/i,\n      r = t.match(s);\n    return r ? (n = r[1].trim()) : (n = t), n;\n  }\n  async clearCommentsOrFunction(t) {\n    let n = '';\n    t.language === 'vue' ? (n = this.getScriptCode(t.innerText)) : (n = t.innerText);\n    let s = '',\n      r = '';\n    try {\n      let i = M[t.language]?.wasm,\n        c = (await TreeSitter.getInstance().getParser(i)).parse(n),\n        u = this.functionIdentifier[i],\n        l = [];\n      for (let b of u) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        l.push(...b[1].matches(c.rootNode));\n      }\n      let d = l\n          .map((b) => b.captures.find((O) => O.name === 'body')?.node)\n          .map((b) => ({\n            startIndex: b.startIndex,\n            endIndex: b.endIndex\n          })),\n        m = 0,\n        h = d[0]?.startIndex ?? 0;\n      for (let b = 0; b < d.length; b++) (r += n.slice(m, h)), (m = d[b].endIndex), (h = d[b + 1]?.startIndex ?? n.length);\n      r += n.slice(m, h);\n      let f = this.commentIdentifier[i],\n        v = [];\n      for (let b of f) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        v.push(...b[1].matches(c.rootNode));\n      }\n      let x = v.map((b) => b.captures.find((O) => O.name === 'comment')?.node).filter((b) => this.uselessComment.some((L) => b.text.includes(L))),\n        E = 0,\n        R = x[0]?.startIndex ?? 0;\n      for (let b = 0; b < x.length; b++) (s += n.slice(E, R)), (E = x[b].endIndex), (R = x[b + 1]?.startIndex ?? n.length);\n      return (\n        (s += n.slice(E, R)),\n        {\n          output1: s || n,\n          output2: r || n\n        }\n      );\n    } catch {\n      return (\n        console.log(t.path, 'recentFile tree sitter parse error'),\n        {\n          output1: n,\n          output2: n\n        }\n      );\n    }\n  }\n  async getRecentFile() {\n    return this._extensionContext.workspaceState.get('recentFileList') || '[]';\n  }\n}\n","relevantFile":"<file_path>src/utils/file.ts\nimport { TextDocument, workspace, WorkspaceFolder } from 'vscode';\n/**\n * 获取文件后缀\n * @param textDocument \n * @returns \n */\nexport const getFileSuffix = (textDocument: TextDocument) => {\n    const suffix = textDocument.fileName.split(\".\");\n    return suffix[suffix.length - 1];\n}\n\n/**\n * 获取文件相对工作目录的路径\n * @param file \n * @returns \n */\nexport const getRelativePath = (file: TextDocument): string => {\n    const workspaceFolder: WorkspaceFolder = workspace.getWorkspaceFolder(file.uri);\n    let relativePath: string;\n    const filePath: string = file.uri.path;\n    if (workspaceFolder) {\n        const folderName: string = workspaceFolder.name;\n        const index: number = filePath.indexOf(folderName) + folderName.length;\n        relativePath = filePath.substring(index + 1);\n    } else {\n        relativePath = filePath.substring(1);\n    }\n    return relativePath;\n}","relevantFileList":[],"filePath":"src/utils/completion/codeProcessor.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"tivePath = getRelativePath(document);","deepseek-chat-lite":"tivePath = getRelativePath(document.fileName);","deepseek-chat":"```\n// Start Generation Here\n      const relativePath = getRelativePath(","copilot":"tivePath = getRelativePath(document);"}},{"prefix":"import ","infill":"{ TextDocument } from 'vscode';","suffix":"\n/**\n * 获取文件后缀\n * @param textDocument \n * @returns \n */\nexport const getFileSuffix = (textDocument: TextDocument) => {\n    const suffix = textDocument.fileName.split(\".\");\n    return suffix[suffix.length - 1];\n}\n","relevantFile":"","relevantFileList":[],"filePath":"src/utils/file.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" { TextDocument } from \"vscode\";","deepseek-chat-lite":"{ TextDocument } from \"vscode\";","deepseek-chat":"```\n// Start Generation Here\nimport { TextDocument } from 'vscode","copilot":"{ TextDocument } from 'vscode';"}},{"prefix":"import { TextDocument } from 'vscode';","infill":";","suffix":";\n/**\n * 获取文件后缀\n * @param textDocument \n * @returns \n */\nexport const getFileSuffix = (textDocument: TextDocument) => {\n    const suffix = textDocument.fileName.split(\".\");\n    return suffix[suffix.length - 1];\n}\n","relevantFile":"<file_path>src/utils/completion/codeProcessor.ts\nimport { TextEditor, ExtensionContext } from 'vscode';\n\n/**\n * @file 代码处理器\n */\nexport class CodeProcessor {\n  private whiteList;\n  private functionIdentifier;\n  private commentIdentifier;\n  private uselessComment;\n  private _extensionContext;\n  private _maxLength;\n\n  constructor(context: ExtensionContext, maxLength: number) {\n    this.whiteList = ['js', 'vue', 'jsx', 'tsx', 'ts', 'py'];\n    this.functionIdentifier = {\n      tsx: [\n        [\n          `[\n    (function body: (statement_block) @body)\n    (function_declaration body: (statement_block) @body)\n    (generator_function body: (statement_block) @body)\n    (generator_function_declaration body: (statement_block) @body)\n    (method_definition body: (statement_block) @body)\n    (arrow_function body: (statement_block) @body)\n  ] @function`\n        ]\n      ],\n      python: [\n        [\n          `(function_definition body: (block\n             (expression_statement (string))? @docstring) @body) @function`\n        ],\n        ['(ERROR (\"def\" (identifier) (parameters))) @function']\n      ]\n    };\n    this.commentIdentifier = {\n      tsx: [['(comment) @comment']],\n      python: [['(comment) @comment']]\n    };\n    this.uselessComment = ['@Copyright', '@copyright', '@licence', '@Licence', '@Author', '@author', '@Date', 'date'];\n    this._extensionContext = context;\n    this._maxLength = maxLength;\n  }\n  /**\n   * 用于设置最近打开的文件\n   * @param editor \n   */\n  setRecentFile(editor: TextEditor) {\n    const document = editor.document;\n    let recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n    if(!recentFileList) {\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify([]));\n    }\n    recentFileList = this._extensionContext.workspaceState.get('recentFileList');\n\n    const reg = /.*\\..*/;\n    const fileList = JSON.parse(recentFileList);\n    \n    const r = /.*\\..*/,","relevantFileList":[],"filePath":"src/utils/file.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\nimport { TextDocument } from 'vscode","copilot":";"}},{"prefix":"import { window, Position, TextEditor, Range, TextDocument, workspace, TextDocumentChangeEvent, WorkspaceFolder } from 'vscode';\nimport * as path from 'path';\nimport * as fs from 'fs';\n\nimport { uuid, getWorkspaceName, getFileRelativePath } from '.';\nimport axios from './axios';\nimport { truncateDocs, retrieveAllSnippets } from './snippet';\n\nimport { CompletionSnapshotItem, IApiLocalFile, IOpenFileItem, ICompletionSnapshot } from '../type/util'; \n\n/**\n * 获取当前编辑文件，光标所在位置的上文信息\n * @returns \n */\nexport const getPrefixContent = (position: Position): string => {\n    // 获取当前编辑器信息\n    const editor: TextEditor = window.activeTextEditor;\n    // 设置起止位置区间\n    const line: number = position.line;  \n    const start: Position = new Position(0, 0);  \n    const end: Position = new Position(line, position.character);\n    // 获取区间内容\n    const range: Range = new Range(start, end);\n    const context: string = editor.document.getText(range);  \n\n    return context || '';\n}\n\n/**\n * 获取当前编辑文件，光标所在位置的下文信息\n * @returns \n */\nexport const getSuffixContent = (position: Position): string => {\n    // 获取当前编辑器信息\n    const editor: TextEditor = window.activeTextEditor; \n    const document: TextDocument = editor.document;\n    // 设置起止位置区间 \n    const start: Position = new Position(position.line, position.character);\n    const lineCount: number = document.lineCount;\n    const end: Position = new Position(lineCount, 0);\n    // 获取区间内容\n    const range = new Range(start, end);\n    const context = editor.document.getText(range);  \n\n    return context || '';\n}\n\n/**\n * 判断上下文中是否存在一模一样的代码\n * @param chars \n * @returns \n */\nexport const isExistCharInFileContent = (item: CompletionSnapshotItem): boolean => {\n    const context = getPrefixContent(item.triggerPosition) + getSuffixContent(item.acceptPosition);\n    \n    return context.includes(item.content);\n}\n\n/**\n * 续写快照\n */\nexport class CompletionSnapshot implements ICompletionSnapshot {\n    public queue = new Map();\n    private timer: NodeJS.Timer | null = null;\n    // 定时检测一次队列是否有需要清空的数据，默认 1 分钟\n    private interval: number = 15000;\n    // 上报时刻，15s、30s、5min\n    private reportInterval: Array<number> = [15000, 30000, 300000];\n    // 二次修改后等待上报的时间\n    private modifyWaitTime: number = 30000;\n    private waitTimer:NodeJS.Timer | null = null;\n    // 等待上报的二次修改数据队列\n    private waitModifyQueue: Array<CompletionSnapshotItem> = [];\n    // 等待上报的采纳数据队列\n    private waitAcceptQueue: Array<CompletionSnapshotItem> = [];\n\n    constructor() {\n        // this.registerChangeTextDocument();\n    }\n\n    /**\n     * 追加续写采纳内容\n     * @param item \n     */\n    public append(item: CompletionSnapshotItem): void {\n        const data: CompletionSnapshotItem = {\n            ...item,\n            time: +new Date(),\n            prefixContent: '',\n            suffixContent: '',\n            modifTime: 0\n        }\n\n        // 同文件队列内容追加，新文件新增队列\n        const sameFileItem = this.queue.get(item.path);\n        if(sameFileItem) {\n            sameFileItem.data.push(data);\n            sameFileItem.time = this.reportInterval.map(interval => interval + new Date().getTime())\n        } else {\n            this.queue.set(item.path, {\n                reportTimestamp: this.reportInterval.map(interval => interval + new Date().getTime()),\n                data: [data]\n            });\n        }\n        \n        if(!this.timer) {\n            // 如果当前计时器为空，则创建一个计时器\n            this.createTimer();\n        }\n    }\n\n    /**\n     * 注册监听编辑器文档更新事件\n     */\n    private registerChangeTextDocument() {\n        workspace.onDidChangeTextDocument((event: TextDocumentChangeEvent) => {\n            const filePath = getFileRelativePath(event.document.fileName, workspace.rootPath);\n            const currentFileQueue = this.queue.get(filePath);\n            // 空队列或者当前文件续写为空队列\n            if(this.queue.size === 0 || !currentFileQueue) {\n                return;\n            }\n            \n            const range: Range = event.contentChanges[0]?.range;\n            const startPosition: Position = range?.start;\n            const endPosition: Position = range?.end;\n\n            if(!startPosition || !endPosition) {\n                return;\n            }\n\n            this.handleChangeTextDocument(startPosition, endPosition, event);\n        }); \n    }\n\n    /**\n     * 对比是否修改了续写内容\n     * @param startPosition \n     * @param endPosition \n     * @param event \n     */\n    private handleChangeTextDocument(startPosition: Position, endPosition: Position, event: TextDocumentChangeEvent) {\n        const text: string = event.contentChanges[0]?.text || '';\n        const filePath = getFileRelativePath(event.document.fileName, workspace.rootPath);\n        const currentFileQueue = this.queue.get(filePath);\n        currentFileQueue.forEach((item: CompletionSnapshotItem, index: number) => {\n            // 已经修改过的不再匹配\n            if(item.modifTime !== 0) {\n                return;\n            }\n            // 触发续写采纳的位置\n            const triggerPosition: Position = item.triggerPosition;\n            // 续写采纳之后的位置\n            const acceptPosition: Position = item.acceptPosition;\n            const isAfter = startPosition.isAfter(acceptPosition);\n            const isBefore = endPosition.isBefore(triggerPosition);\n            if (isAfter && !isBefore) {\n              console.log('在续写代码之后修改');\n            } else if (isBefore && !isAfter) {\n              const newLines = text.split('\\n').length - 1;\n              console.log('在续写代码之前修改', text, newLines);\n              if (newLines > 0) {\n        ","infill":" = workspaceFolder.name;\n        const index = filePath.indexOf(folderName) + folderName.length;","suffix":"\n        relativePath = filePath.substring(index + 1);\n    } else relativePath = filePath.substring(1);\n    return relativePath\n}","relevantFile":"<file_path>src/utils/file.ts\nimport { TextDocument } from 'vscode';\n/**\n * 获取文件后缀\n * @param textDocument \n * @returns \n */\nexport const getFileSuffix = (textDocument: TextDocument) => {\n    const suffix = textDocument.fileName.split(\".\");\n    return suffix[suffix.length - 1];\n}\n<file_path>src/utils/completion/codeProcessor.ts\n\n    if (this.whiteList.includes(fileSuffix) && reg.test(document.fileName)) {\n      let o = gi(n),\n        c = {\n          path: o,\n          language: a,\n          innerText: n.getText(),\n          lines: nc(n)\n        };\n      i.some((u) => u.path === o)\n        ? i.forEach((u, l) => {\n            u.path === o && (i.splice(l, 1), i.unshift(c));\n          })\n        : (i.length === this._maxLength + 1 && i.pop(), i.unshift(c)),\n        this._extensionContext.workspaceState.update('recentFileList', JSON.stringify(i));\n    }\n    console.log('最近打开的文件列表：', i);\n  }\n  async getFileCache(t, n) {\n    let s = this._extensionContext.workspaceState.get('recentFileList') || '[]',\n      r = JSON.parse(s),\n      i = this._extensionContext.workspaceState.get('fileCache');\n    i || (this._extensionContext.workspaceState.update('fileCache', JSON.stringify({})), (i = JSON.stringify({})));\n    let a = JSON.parse(i),\n      o = gi(n);\n    a[o] && delete a[o];\n    let c = t,\n      u = [],\n      l = 'innerText1';\n    return (\n      t > 11e3 * 0.9 && (l = 'innerText2'),\n      await Promise.all(\n        r.splice(1).map(async (p) => {\n          if (!a[p.path]) {\n            let { output1: d, output2: m } = await this.clearCommentsOrFunction(p);\n            a[p.path] = {\n              innerText1: d.replace(\n                /\\r\\n/g,\n                `\n`\n              ),\n              innerText2: m.replace(\n                /\\r\\n/g,\n                `\n`\n              )\n            };\n          }\n          a[p.path][l]?.trim() &&\n            c + a[p.path][l].length <= 11e3 &&\n            ((c += a[p.path][l].length),\n            u.push({\n              file_path: p.path,\n              file_content: a[p.path][l]\n            }));\n        })\n      ),\n      this._extensionContext.workspaceState.update('fileCache', JSON.stringify(a)),\n      console.log('file_list: ', u),\n      u","relevantFileList":[],"filePath":"src/utils/editor.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"         item.modifTime = newLines;","deepseek-chat-lite":"        item.modifTime = +new Date();","deepseek-chat":"```\n// Start Generation Here\n                const relativePath = filePath.substring(","copilot":" = workspaceFolder.name;\n        const index = filePath.indexOf(folderName) + folderName.length;"}},{"prefix":"import { window, Position, TextEditor, Range, TextDocument, workspace, TextDocumentChangeEvent, WorkspaceFolder } from 'vscode';\nimport * as path from 'path';\nimport * as fs from 'fs';\n\nimport { uuid, getWorkspaceName, getFileRelativePath } from '.';\nimport axios from './axios';\nimport { truncateDocs, retrieveAllSnippets } from './snippet';\n\nimport { CompletionSnapshotItem, IApiLocalFile, IOpenFileItem, ICompletionSnapshot } from '../type/util'; \n\n/**\n * 获取当前编辑文件，光标所在位置的上文信息\n * @returns \n */\nexport const getPrefixContent = (position: Position): string => {\n    // 获取当前编辑器信息\n    const editor: TextEditor = window.activeTextEditor;\n    // 设置起止位置区间\n    const line: number = position.line;  \n    const start: Position = new Position(0, 0);  \n    const end: Position = new Position(line, position.character);\n    // 获取区间内容\n    const range: Range = new Range(start, end);\n    const context: string = editor.document.getText(range);  \n\n    return context || '';\n}\n\n/**\n * 获取当前编辑文件，光标所在位置的下文信息\n * @returns \n */\nexport const getSuffixContent = (position: Position): string => {\n    // 获取当前编辑器信息\n    const editor: TextEditor = window.activeTextEditor; \n    const document: TextDocument = editor.document;\n    // 设置起止位置区间 \n    const start: Position = new Position(position.line, position.character);\n    const lineCount: number = document.lineCount;\n    const end: Position = new Position(lineCount, 0);\n    // 获取区间内容\n    const range = new Range(start, end);\n    const context = editor.document.getText(range);  \n\n    return context || '';\n}\n\n/**\n * 判断上下文中是否存在一模一样的代码\n * @param chars \n * @returns \n */\nexport const isExistCharInFileContent = (item: CompletionSnapshotItem): boolean => {\n    const context = getPrefixContent(item.triggerPosition) + getSuffixContent(item.acceptPosition);\n    \n    return context.includes(item.content);\n}\n\n/**\n * 续写快照\n */\nexport class CompletionSnapshot implements ICompletionSnapshot {\n    public queue = new Map();\n    private timer: NodeJS.Timer | null = null;\n    // 定时检测一次队列是否有需要清空的数据，默认 1 分钟\n    private interval: number = 15000;\n    // 上报时刻，15s、30s、5min\n    private reportInterval: Array<number> = [15000, 30000, 300000];\n    // 二次修改后等待上报的时间\n    private modifyWaitTime: number = 30000;\n    private waitTimer:NodeJS.Timer | null = null;\n    // 等待上报的二次修改数据队列\n    private waitModifyQueue: Array<CompletionSnapshotItem> = [];\n    // 等待上报的采纳数据队列\n    private waitAcceptQueue: Array<CompletionSnapshotItem> = [];\n\n    constructor() {\n        // this.registerChangeTextDocument();\n    }\n\n    /**\n     * 追加续写采纳内容\n     * @param item \n     */\n    public append(item: CompletionSnapshotItem): void {\n        const data: CompletionSnapshotItem = {\n            ...item,\n            time: +new Date(),\n            prefixContent: '',\n            suffixContent: '',\n            modifTime: 0\n        }\n\n        // 同文件队列内容追加，新文件新增队列\n        const sameFileItem = this.queue.get(item.path);\n        if(sameFileItem) {\n            sameFileItem.data.push(data);\n            sameFileItem.time = this.reportInterval.map(interval => interval + new Date().getTime())\n        } else {\n            this.queue.set(item.path, {\n                reportTimestamp: this.reportInterval.map(interval => interval + new Date().getTime()),\n                data: [data]\n            });\n        }\n        \n        if(!this.timer) {\n            // 如果当前计时器为空，则创建一个计时器\n            this.createTimer();\n        }\n    }\n\n    /**\n     * 注册监听编辑器文档更新事件\n     */\n    private registerChangeTextDocument() {\n        workspace.onDidChangeTextDocument((event: TextDocumentChangeEvent) => {\n            const filePath = getFileRelativePath(event.document.fileName, workspace.rootPath);\n            const currentFileQueue = this.queue.get(filePath);\n            // 空队列或者当前文件续写为空队列\n            if(this.queue.size === 0 || !currentFileQueue) {\n                return;\n            }\n            \n            const range: Range = event.contentChanges[0]?.range;\n            const startPosition: Position = range?.start;\n            const endPosition: Position = range?.end;\n\n            if(!startPosition || !endPosition) {\n                return;\n            }\n\n            this.handleChangeTextDocument(startPosition, endPosition, event);\n        }); \n    }\n\n    /**\n     * 对比是否修改了续写内容\n     * @param startPosition \n     * @param endPosition \n     * @param event \n     */\n    private handleChangeTextDocument(startPosition: Position, endPosition: Position, event: TextDocumentChangeEvent) {\n        const text: string = event.contentChanges[0]?.text || '';\n        const filePath = getFileRelativePath(event.document.fileName, workspace.rootPath);\n        const currentFileQueue = this.queue.get(filePath);\n        currentFileQueue.forEach((item: CompletionSnapshotItem, index: number) => {\n            // 已经修改过的不再匹配\n            if(item.modifTime !== 0) {\n                return;\n            }\n            // 触发续写采纳的位置\n            const triggerPosition: Position = item.triggerPosition;\n            // 续写采纳之后的位置\n            const acceptPosition: Position = item.acceptPosition;\n            const isAfter = startPosition.isAfter(acceptPosition);\n            const isBefore = endPosition.isBefore(triggerPosition);\n            if (isAfter && !isBefore) {\n              console.log('在续写代码之后修改');\n            } else if (isBefore && !isAfter) {\n              const newLines = text.split('\\n').length - 1;\n              console.log('在续写代码之前修改', text, newLines);\n              if (newLines > 0","infill":"filePath.indexOf(folderName) + folderName.length;","suffix":"\n        relativePath = filePath.substring(index + 1);\n    } else relativePath = filePath.substring(1);\n    return relativePath\n}","relevantFile":"<file_path>src/utils/file.ts\nimport { TextDocument } from 'vscode';\n/**\n * 获取文件后缀\n * @param textDocument \n * @returns \n */\nexport const getFileSuffix = (textDocument: TextDocument) => {\n    const suffix = textDocument.fileName.split(\".\");\n    return suffix[suffix.length - 1];\n}\n<file_path>src/utils/completion/codeProcessor.ts\n              )\n            };\n          }\n          a[p.path][l]?.trim() &&\n            c + a[p.path][l].length <= 11e3 &&\n            ((c += a[p.path][l].length),\n            u.push({\n              file_path: p.path,\n              file_content: a[p.path][l]\n            }));\n        })\n      ),\n      this._extensionContext.workspaceState.update('fileCache', JSON.stringify(a)),\n      console.log('file_list: ', u),\n      u\n    );\n  }\n  getScriptCode(t) {\n    let n = '',\n      s = /<script[^>]*?>([\\s\\S]*?)<\\/script>/i,\n      r = t.match(s);\n    return r ? (n = r[1].trim()) : (n = t), n;\n  }\n  async clearCommentsOrFunction(t) {\n    let n = '';\n    t.language === 'vue' ? (n = this.getScriptCode(t.innerText)) : (n = t.innerText);\n    let s = '',\n      r = '';\n    try {\n      let i = M[t.language]?.wasm,\n        c = (await TreeSitter.getInstance().getParser(i)).parse(n),\n        u = this.functionIdentifier[i],\n        l = [];\n      for (let b of u) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        l.push(...b[1].matches(c.rootNode));\n      }\n      let d = l\n          .map((b) => b.captures.find((O) => O.name === 'body')?.node)\n          .map((b) => ({\n            startIndex: b.startIndex,\n            endIndex: b.endIndex\n          })),\n        m = 0,\n        h = d[0]?.startIndex ?? 0;\n      for (let b = 0; b < d.length; b++) (r += n.slice(m, h)), (m = d[b].endIndex), (h = d[b + 1]?.startIndex ?? n.length);\n      r += n.slice(m, h);\n      let f = this.commentIdentifier[i],\n        v = [];\n      for (let b of f) {\n        if (!b[1]) {\n          let L = c.getLanguage();\n          b[1] = L.query(b[0]);\n        }\n        v.push(...b[1].matches(c.rootNode));\n      }\n      let x = v.map((b) => b.captures.find((O) => O.name === 'comment')?.node).filter((b) => this.uselessComment.some((L) => b.text.includes(L))),","relevantFileList":[],"filePath":"src/utils/editor.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ) {","deepseek-chat-lite":") {","deepseek-chat":"```\n// Start Generation Here\n                const newLines = text.split('\\","copilot":"filePath.indexOf(folderName) + folderName.length;"}},{"prefix":"import type { IntNode, IntLink, SankeyDataApi, PropsData } from './interface';\nimport { Market, NodeType, Theme, App, Template } from './enum';\nconst environmentMap = {\n  [Template.STOCK]: {\n    market: Market.STOCK,\n    app: App.STOCK,\n  },\n  [Template.STOCK_AINVEST]: {\n    market: Market.AINVEST,\n    app: App.STOCK,\n  },\n  [Template.AINVEST]: {\n    market: Market.AINVEST,\n    app: App.AINVEST,\n  },\n  [Template.HK]: {\n    market: Market.HK,\n    app: App.STOCK,\n  },\n};\nconst defaultOption = {\n  animationDurationUpdate: 1000,\n  tooltip: {\n    trigger: 'item',\n    className: 'sankey-tooltip-border',\n    confine: true,\n  },\n  title: {\n    show: false,\n  },\n  graphic: {\n    elements: [],\n  },\n  dvWaterMark: {\n    show: false,\n  },\n  series: [\n    {\n      type: 'sankey',\n      id: 'treeSankey',\n      orient: 'horizontal',\n      universalTransition: false,\n      animation: true,\n      dvLayout: 'tree',\n      dvRootHeight: 24,\n      dvNodeLengthPercent: 0.5,\n      nodeWidth: 12,\n      top: 25,\n      bottom: 2,\n      left: 120,\n      right: 120,\n      data: [],\n      links: [],\n    },\n  ],\n};\n\nconst hkNodes: IntNode[] = [\n  {\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income_special_subject',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income',\n    depth: 2,\n    root: true,\n    type: 'income',\n  },\n  {\n    name: 'sales_cost',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'gross_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'other_operating_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n    children: [\n      'change_of_fair_value_of_investment_properties',\n      'operating_profits_special_subject',\n      'other_income',\n    ],\n  },\n  {\n    name: 'other_fee_total',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    children: ['benefit_finance_fee', 'manage_fee', 'sales_fee', 'other_fee'],\n  },\n  {\n    // 经营溢利\n    name: 'operating_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 参控及特殊项目收益\n    name: 'control_special_accounts_income',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税前利润\n    name: 'profit_before_tax',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税后利润特殊科目\n    name: 'profit_after_tax_special_subject',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    name: 'parent_holder_net_profit',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他股东收益\n    name: 'other_shareholders_profits',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n];\nconst hkLinks: IntLink[] = [\n  {\n    from: 'turnover',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income_special_subject',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'sales_cost',\n  },\n  {\n    from: 'operating_income',\n    to: 'gross_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'other_fee_total',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n    formula: \"return data['gross_profit'].value-data['other_fee_total'].value\",\n  },\n  {\n    from: 'other_operating_income',\n    to: 'operating_profit',\n    formula: 'other_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_before_tax',\n    formula: 'operating_profit',\n  },\n  {\n    from: 'control_special_accounts_income',\n    to: 'profit_before_tax',\n    formula: 'control_special_accounts_income',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'profit_after_tax_special_subject',\n    to: 'net_profit',\n    formula: 'profit_after_tax_special_subject',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'other_shareholders_profits',\n  },\n];\nconst stockNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  {\n    // 营业成本\n    name: 'operating_costs',\n    depth: 2,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 毛利润\n    name: 'operating_income',\n    depth: 2,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'others_operating_income',\n    depth: 2,\n    root: false,\n    type: 'income',\n    children: [\n      'fair_changes_income',\n      'invest_income',\n      'asset_disposal_income',\n      'assets_impairment_loss',\n      'credit_impairment_loss',\n      'other_operating_income_second',\n    ],\n  },\n  {\n    // 费用及营业税\n    name: 'others_costs_total',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n    children: [\n      'sales_fee',\n      'manage_fee',\n      'research_and_development_expenses',\n      'benefit_finance_fee',\n      'taxes_and_surcharges',\n      'others_costs_total_second',\n    ],\n  },\n  {\n    // 营业利润\n    name: 'operating_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 营业外净收益\n    name: 'non_operating_net_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 利润总额\n    name: 'profit_total',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 5,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 归母净利润\n    name: 'parent_holder_net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 少数股东损益\n    name: 'minority_holder_income_loss',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n];\nconst stockLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'operating_costs',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'others_costs_total',\n  },\n  {\n    from: 'operating_income',\n    to: 'operating_profit',\n    formula: \"return data['operating_profit'].value-data['others_operating_income'].value\",\n  },\n  {\n    from: 'others_operating_income',\n    to: 'operating_profit',\n    formula: 'others_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_total',\n    formula: \"return data['profit_total'].value-data['non_operating_net_income'].value\",\n  },\n  {\n    from: 'non_operating_net_income',\n    to: 'profit_total',\n    formula: 'non_operating_net_income',\n  },\n  {\n    from: 'profit_total',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_total',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'minority_holder_income_loss',\n  },\n];\nconst stockFinaceNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 0,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 金融业务收入\n    name: 'financial_business_income',\n    depth: 0,\n    root: false,\n    type: 'income',\n    children: [\n      'premiums_earned',\n      'net_income_from_handling_of_assets',\n      'charges_commissions_income',\n      // 特殊科目收入\n      'operating_income_total_special',\n      'operating_income_total_balance',\n    ],\n  },\n  {\n    // 营业成本\n    name: 'op","infill":"节点，用于特殊处理（存在正负数时，进行负数zhi）","suffix":"\n    children: [{\n      name: 'selling_administrative_expenses'\n    }, {\n      name: 'research_development_expenses'\n    }, {\n      name: 'other_fee'\n    }]\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 1\n  },\n  {\n    // 净利息费用\n    name: 'interest',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 2\n  },\n  {\n    // 其他杂项\n    name: 'other_item',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 3\n  },\n  {\n    // 市场、销售和管理费用\n    name: 'selling_administrative_expenses',\n    depth: 4,\n    root: false,\n    type: 'expenditure'\n  },\n  {\n    // 研发费用\n    name: 'research_development_expenses',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 其他费用\n    name: 'other_fee',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n  }\n];\n/**\n * 业务逻辑处理\n * 从links里查找target的节点，如果找到则加上value值(value一定为负数)\n * link.value的来源与targetValue与sourceValue的最小值（肯定是正数）\n * 逻辑：(遵循两个节点连线用最小值作为连接值)\n * 1.如果targetValue小于sourceValue，则link.value加上value\n * 2.如果targetValue大于sourceValue，则targetValue+value后再对比下link.value,取最小值\n */\nfunction findTargetValue(links: IntLink[], target: string, value: number) {\n  links.forEach((link) => {\n    // 如果target和source相同，且sourceValue小于targetValue，则加上value\n    // (link.value原始值从source和targetValue中取的最小值，所以targetValue大时就不用处理了)\n    if (link.targetValue < link.sourceValue) { \n      if (link.targetKey === target) {\n        link.value += value;\n      }\n    } else {\n      if (link.targetKey === target) {\n        // targetValue+value后再对比下link.value,取最小值\n        link.value = Math.min(link.value, link.targetValue + value);\n      }\n    }\n  });\n}\nconst ainvestLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'gross_profit',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'revenue_cost',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_expenses',\n  },\n  {\n    from: 'operating_profit',\n    to: 'net_profit',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'income_tax_expense',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'interest',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey: string = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'other_item',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'selling_administrative_expenses',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'research_development_expenses',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'other_fee',\n  },\n];\nconst marketSet = {\n  [Market.HK]: {\n    nodes: hkNodes,\n    links: hkLinks,\n  },\n  [Market.AINVEST]: {\n    nodes: ainvestNodes,\n    links: ainvestLinks,\n  },\n  [Market.STOCK]: {\n    nodes: stockNodes,\n    links: stockLinks,\n  },\n  [Market.STOCK_FINANCE]: {\n    nodes: stockFinaceNodes,\n    links: stockFinaceLinks,\n  },\n};\n\nconst colorMap = {\n  [Theme.WHITE]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#29B393',\n      down: '#ED4949',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n  [Theme.BLACK]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#2FC9A5',\n      down: '#FF5353',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n};\nconst periodsListMap = {\n  [Market.AINVEST]: [\n    {\n      name: 'quarterly',\n      label: 'sankey_quarterly',\n    },\n    {\n      name: 'annual',\n      label: 'sankey_annual',\n    },\n  ],\n  [Market.STOCK]: [\n    {\n      name: 'Latest',\n      label: 'sankey_Latest',\n    },\n    {\n      name: 'Q1',\n      label: 'sankey_Q1',\n    },\n    {\n      name: 'H1',\n      label: 'sankey_H1',\n    },\n    {\n      name: 'Q3',\n      label: 'sankey_9M',\n    },\n    {\n      name: 'Annual',\n      label: 'sankey_annual',\n    },\n  ],\n};\n// 正负向之和节点\nconst directionsSumNodes = {\n  positive: {\n    name: 'sankey_income_positive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n  nagetive: {\n    name: 'sankey_income_nagetive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n};\n// 动态收入节点的目标节点（正负向之和目标节点）\nconst incomeSumNodeMap = {\n  [Market.AINVEST]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  [Market.HK]: {\n    show: true,\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  [Market.STOCK]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  // 实际不存在\n  [Market.STOCK_FINANCE]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n};\n\nconst businessSet: { [key: string]: any }","relevantFile":"<file_path>packages/components/finance/sankey-combined-chart/common/assistTreeNode.ts\n/**\n * 辅助树节点\n * 给桑基图建立树型关系，方便特殊逻辑处理\n * 作用：\n * 1、美股负数处理，当子节点存在有正有负数时（且子节点数大于等与3个时），\n * 将节点拆分为两个类型节点，一个负数之和节点，一个正数之和节点\n * \n */\nconst ainvestTree = {\n    \n};","relevantFileList":[],"filePath":"packages/components/finance/sankey-combined-chart/common/config.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" erating_costs',","deepseek-chat-lite":"erating_expenses',","deepseek-chat":"```\n// Start Generation Here\nconst ainvestNodes: IntNode[] =","copilot":"节点，用于特殊处理（存在正负数时，进行负数zhi）"}},{"prefix":"import type { IntNode, IntLink, SankeyDataApi, PropsData } from './interface';\nimport { Market, NodeType, Theme, App, Template } from './enum';\nconst environmentMap = {\n  [Template.STOCK]: {\n    market: Market.STOCK,\n    app: App.STOCK,\n  },\n  [Template.STOCK_AINVEST]: {\n    market: Market.AINVEST,\n    app: App.STOCK,\n  },\n  [Template.AINVEST]: {\n    market: Market.AINVEST,\n    app: App.AINVEST,\n  },\n  [Template.HK]: {\n    market: Market.HK,\n    app: App.STOCK,\n  },\n};\nconst defaultOption = {\n  animationDurationUpdate: 1000,\n  tooltip: {\n    trigger: 'item',\n    className: 'sankey-tooltip-border',\n    confine: true,\n  },\n  title: {\n    show: false,\n  },\n  graphic: {\n    elements: [],\n  },\n  dvWaterMark: {\n    show: false,\n  },\n  series: [\n    {\n      type: 'sankey',\n      id: 'treeSankey',\n      orient: 'horizontal',\n      universalTransition: false,\n      animation: true,\n      dvLayout: 'tree',\n      dvRootHeight: 24,\n      dvNodeLengthPercent: 0.5,\n      nodeWidth: 12,\n      top: 25,\n      bottom: 2,\n      left: 120,\n      right: 120,\n      data: [],\n      links: [],\n    },\n  ],\n};\n\nconst hkNodes: IntNode[] = [\n  {\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income_special_subject',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income',\n    depth: 2,\n    root: true,\n    type: 'income',\n  },\n  {\n    name: 'sales_cost',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'gross_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'other_operating_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n    children: [\n      'change_of_fair_value_of_investment_properties',\n      'operating_profits_special_subject',\n      'other_income',\n    ],\n  },\n  {\n    name: 'other_fee_total',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    children: ['benefit_finance_fee', 'manage_fee', 'sales_fee', 'other_fee'],\n  },\n  {\n    // 经营溢利\n    name: 'operating_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 参控及特殊项目收益\n    name: 'control_special_accounts_income',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税前利润\n    name: 'profit_before_tax',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税后利润特殊科目\n    name: 'profit_after_tax_special_subject',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    name: 'parent_holder_net_profit',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他股东收益\n    name: 'other_shareholders_profits',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n];\nconst hkLinks: IntLink[] = [\n  {\n    from: 'turnover',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income_special_subject',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'sales_cost',\n  },\n  {\n    from: 'operating_income',\n    to: 'gross_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'other_fee_total',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n    formula: \"return data['gross_profit'].value-data['other_fee_total'].value\",\n  },\n  {\n    from: 'other_operating_income',\n    to: 'operating_profit',\n    formula: 'other_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_before_tax',\n    formula: 'operating_profit',\n  },\n  {\n    from: 'control_special_accounts_income',\n    to: 'profit_before_tax',\n    formula: 'control_special_accounts_income',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'profit_after_tax_special_subject',\n    to: 'net_profit',\n    formula: 'profit_after_tax_special_subject',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'other_shareholders_profits',\n  },\n];\nconst stockNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  {\n    // 营业成本\n    name: 'operating_costs',\n    depth: 2,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 毛利润\n    name: 'operating_income',\n    depth: 2,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'others_operating_income',\n    depth: 2,\n    root: false,\n    type: 'income',\n    children: [\n      'fair_changes_income',\n      'invest_income',\n      'asset_disposal_income',\n      'assets_impairment_loss',\n      'credit_impairment_loss',\n      'other_operating_income_second',\n    ],\n  },\n  {\n    // 费用及营业税\n    name: 'others_costs_total',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n    children: [\n      'sales_fee',\n      'manage_fee',\n      'research_and_development_expenses',\n      'benefit_finance_fee',\n      'taxes_and_surcharges',\n      'others_costs_total_second',\n    ],\n  },\n  {\n    // 营业利润\n    name: 'operating_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 营业外净收益\n    name: 'non_operating_net_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 利润总额\n    name: 'profit_total',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 5,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 归母净利润\n    name: 'parent_holder_net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 少数股东损益\n    name: 'minority_holder_income_loss',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n];\nconst stockLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'operating_costs',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'others_costs_total',\n  },\n  {\n    from: 'operating_income',\n    to: 'operating_profit',\n    formula: \"return data['operating_profit'].value-data['others_operating_income'].value\",\n  },\n  {\n    from: 'others_operating_income',\n    to: 'operating_profit',\n    formula: 'others_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_total',\n    formula: \"return data['profit_total'].value-data['non_operating_net_income'].value\",\n  },\n  {\n    from: 'non_operating_net_income',\n    to: 'profit_total',\n    formula: 'non_operating_net_income',\n  },\n  {\n    from: 'profit_total',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_total',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'minority_holder_income_loss',\n  },\n];\nconst stockFinaceNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 0,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 金融业务收入\n    name: 'financial_business_income',\n    depth: 0,\n    root: false,\n    type: 'income',\n    children: [\n      'premiums_earned',\n      'net_income_from_handling_of_assets',\n      'charges_commissions_income',\n      // 特殊科目收入\n      'operating_income_total_special',\n      'operating_income_total_balance',\n    ],\n  },\n  {\n    // 营业成本\n    name: 'op","infill":"[{\n      name: ''\n    }]","suffix":"\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 1\n  },\n  {\n    // 净利息费用\n    name: 'interest',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 2\n  },\n  {\n    // 其他杂项\n    name: 'other_item',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 3\n  },\n  {\n    // 市场、销售和管理费用\n    name: 'selling_administrative_expenses',\n    depth: 4,\n    root: false,\n    type: 'expenditure'\n  },\n  {\n    // 研发费用\n    name: 'research_development_expenses',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 其他费用\n    name: 'other_fee',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n  }\n];\n/**\n * 业务逻辑处理\n * 从links里查找target的节点，如果找到则加上value值(value一定为负数)\n * link.value的来源与targetValue与sourceValue的最小值（肯定是正数）\n * 逻辑：(遵循两个节点连线用最小值作为连接值)\n * 1.如果targetValue小于sourceValue，则link.value加上value\n * 2.如果targetValue大于sourceValue，则targetValue+value后再对比下link.value,取最小值\n */\nfunction findTargetValue(links: IntLink[], target: string, value: number) {\n  links.forEach((link) => {\n    // 如果target和source相同，且sourceValue小于targetValue，则加上value\n    // (link.value原始值从source和targetValue中取的最小值，所以targetValue大时就不用处理了)\n    if (link.targetValue < link.sourceValue) { \n      if (link.targetKey === target) {\n        link.value += value;\n      }\n    } else {\n      if (link.targetKey === target) {\n        // targetValue+value后再对比下link.value,取最小值\n        link.value = Math.min(link.value, link.targetValue + value);\n      }\n    }\n  });\n}\nconst ainvestLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'gross_profit',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'revenue_cost',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_expenses',\n  },\n  {\n    from: 'operating_profit',\n    to: 'net_profit',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'income_tax_expense',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'interest',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey: string = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'other_item',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'selling_administrative_expenses',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'research_development_expenses',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'other_fee',\n  },\n];\nconst marketSet = {\n  [Market.HK]: {\n    nodes: hkNodes,\n    links: hkLinks,\n  },\n  [Market.AINVEST]: {\n    nodes: ainvestNodes,\n    links: ainvestLinks,\n  },\n  [Market.STOCK]: {\n    nodes: stockNodes,\n    links: stockLinks,\n  },\n  [Market.STOCK_FINANCE]: {\n    nodes: stockFinaceNodes,\n    links: stockFinaceLinks,\n  },\n};\n\nconst colorMap = {\n  [Theme.WHITE]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#29B393',\n      down: '#ED4949',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n  [Theme.BLACK]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#2FC9A5',\n      down: '#FF5353',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n};\nconst periodsListMap = {\n  [Market.AINVEST]: [\n    {\n      name: 'quarterly',\n      label: 'sankey_quarterly',\n    },\n    {\n      name: 'annual',\n      label: 'sankey_annual',\n    },\n  ],\n  [Market.STOCK]: [\n    {\n      name: 'Latest',\n      label: 'sankey_Latest',\n    },\n    {\n      name: 'Q1',\n      label: 'sankey_Q1',\n    },\n    {\n      name: 'H1',\n      label: 'sankey_H1',\n    },\n    {\n      name: 'Q3',\n      label: 'sankey_9M',\n    },\n    {\n      name: 'Annual',\n      label: 'sankey_annual',\n    },\n  ],\n};\n// 正负向之和节点\nconst directionsSumNodes = {\n  positive: {\n    name: 'sankey_income_positive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n  nagetive: {\n    name: 'sankey_income_nagetive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n};\n// 动态收入节点的目标节点（正负向之和目标节点）\nconst incomeSumNodeMap = {\n  [Market.AINVEST]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  [Market.HK]: {\n    show: true,\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  [Market.STOCK]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  // 实际不存在\n  [Market.STOCK_FINANCE]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n};\n\nconst businessSet: { [key: string]: any } = {\n  [Market.AINVEST]: {\n    nodeHideSelf: [\n      ['net_profit', 'income_tax_expense', 'interest', 'other_item'],\n      ['selling_administrative_expenses', ","relevantFile":"<file_path>packages/components/finance/sankey-combined-chart/common/assistTreeNode.ts\n/**\n * 辅助树节点\n * 给桑基图建立树型关系，方便特殊逻辑处理\n * 作用：\n * 1、美股负数处理，当子节点存在有正有负数时（且子节点数大于等与3个时），\n * 将节点拆分为两个类型节点，一个负数之和节点，一个正数之和节点\n * \n */\nconst ainvestTree = {\n    \n};","relevantFileList":[],"filePath":"packages/components/finance/sankey-combined-chart/common/config.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" erating_costs',","deepseek-chat-lite":"erating_expenses',","deepseek-chat":"```\n// Start Generation Here\nconst ainvestNodes: IntNode[] =","copilot":"[{\n      name: ''\n    }]"}},{"prefix":"import type { IntNode, IntLink, SankeyDataApi, PropsData } from './interface';\nimport { Market, NodeType, Theme, App, Template } from './enum';\nconst environmentMap = {\n  [Template.STOCK]: {\n    market: Market.STOCK,\n    app: App.STOCK,\n  },\n  [Template.STOCK_AINVEST]: {\n    market: Market.AINVEST,\n    app: App.STOCK,\n  },\n  [Template.AINVEST]: {\n    market: Market.AINVEST,\n    app: App.AINVEST,\n  },\n  [Template.HK]: {\n    market: Market.HK,\n    app: App.STOCK,\n  },\n};\nconst defaultOption = {\n  animationDurationUpdate: 1000,\n  tooltip: {\n    trigger: 'item',\n    className: 'sankey-tooltip-border',\n    confine: true,\n  },\n  title: {\n    show: false,\n  },\n  graphic: {\n    elements: [],\n  },\n  dvWaterMark: {\n    show: false,\n  },\n  series: [\n    {\n      type: 'sankey',\n      id: 'treeSankey',\n      orient: 'horizontal',\n      universalTransition: false,\n      animation: true,\n      dvLayout: 'tree',\n      dvRootHeight: 24,\n      dvNodeLengthPercent: 0.5,\n      nodeWidth: 12,\n      top: 25,\n      bottom: 2,\n      left: 120,\n      right: 120,\n      data: [],\n      links: [],\n    },\n  ],\n};\n\nconst hkNodes: IntNode[] = [\n  {\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income_special_subject',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income',\n    depth: 2,\n    root: true,\n    type: 'income',\n  },\n  {\n    name: 'sales_cost',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'gross_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'other_operating_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n    children: [\n      'change_of_fair_value_of_investment_properties',\n      'operating_profits_special_subject',\n      'other_income',\n    ],\n  },\n  {\n    name: 'other_fee_total',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    children: ['benefit_finance_fee', 'manage_fee', 'sales_fee', 'other_fee'],\n  },\n  {\n    // 经营溢利\n    name: 'operating_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 参控及特殊项目收益\n    name: 'control_special_accounts_income',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税前利润\n    name: 'profit_before_tax',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税后利润特殊科目\n    name: 'profit_after_tax_special_subject',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    name: 'parent_holder_net_profit',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他股东收益\n    name: 'other_shareholders_profits',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n];\nconst hkLinks: IntLink[] = [\n  {\n    from: 'turnover',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income_special_subject',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'sales_cost',\n  },\n  {\n    from: 'operating_income',\n    to: 'gross_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'other_fee_total',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n    formula: \"return data['gross_profit'].value-data['other_fee_total'].value\",\n  },\n  {\n    from: 'other_operating_income',\n    to: 'operating_profit',\n    formula: 'other_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_before_tax',\n    formula: 'operating_profit',\n  },\n  {\n    from: 'control_special_accounts_income',\n    to: 'profit_before_tax',\n    formula: 'control_special_accounts_income',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'profit_after_tax_special_subject',\n    to: 'net_profit',\n    formula: 'profit_after_tax_special_subject',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'other_shareholders_profits',\n  },\n];\nconst stockNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  {\n    // 营业成本\n    name: 'operating_costs',\n    depth: 2,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 毛利润\n    name: 'operating_income',\n    depth: 2,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'others_operating_income',\n    depth: 2,\n    root: false,\n    type: 'income',\n    children: [\n      'fair_changes_income',\n      'invest_income',\n      'asset_disposal_income',\n      'assets_impairment_loss',\n      'credit_impairment_loss',\n      'other_operating_income_second',\n    ],\n  },\n  {\n    // 费用及营业税\n    name: 'others_costs_total',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n    children: [\n      'sales_fee',\n      'manage_fee',\n      'research_and_development_expenses',\n      'benefit_finance_fee',\n      'taxes_and_surcharges',\n      'others_costs_total_second',\n    ],\n  },\n  {\n    // 营业利润\n    name: 'operating_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 营业外净收益\n    name: 'non_operating_net_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 利润总额\n    name: 'profit_total',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 5,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 归母净利润\n    name: 'parent_holder_net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 少数股东损益\n    name: 'minority_holder_income_loss',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n];\nconst stockLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'operating_costs',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'others_costs_total',\n  },\n  {\n    from: 'operating_income',\n    to: 'operating_profit',\n    formula: \"return data['operating_profit'].value-data['others_operating_income'].value\",\n  },\n  {\n    from: 'others_operating_income',\n    to: 'operating_profit',\n    formula: 'others_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_total',\n    formula: \"return data['profit_total'].value-data['non_operating_net_income'].value\",\n  },\n  {\n    from: 'non_operating_net_income',\n    to: 'profit_total',\n    formula: 'non_operating_net_income',\n  },\n  {\n    from: 'profit_total',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_total',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'minority_holder_income_loss',\n  },\n];\nconst stockFinaceNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 0,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 金融业务收入\n    name: 'financial_business_income',\n    depth: 0,\n    root: false,\n    type: 'income',\n    children: [\n      'premiums_earned',\n      'net_income_from_handling_of_assets',\n      'charges_commissions_income',\n      // 特殊科目收入\n      'operating_income_total_special',\n      'operating_income_total_balance',\n    ],\n  },\n  {\n    // 营业成本\n    name: 'op","infill":"name: 'other_fee'","suffix":"\n    }]\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 1\n  },\n  {\n    // 净利息费用\n    name: 'interest',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 2\n  },\n  {\n    // 其他杂项\n    name: 'other_item',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 3\n  },\n  {\n    // 市场、销售和管理费用\n    name: 'selling_administrative_expenses',\n    depth: 4,\n    root: false,\n    type: 'expenditure'\n  },\n  {\n    // 研发费用\n    name: 'research_development_expenses',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 其他费用\n    name: 'other_fee',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n  }\n];\n/**\n * 业务逻辑处理\n * 从links里查找target的节点，如果找到则加上value值(value一定为负数)\n * link.value的来源与targetValue与sourceValue的最小值（肯定是正数）\n * 逻辑：(遵循两个节点连线用最小值作为连接值)\n * 1.如果targetValue小于sourceValue，则link.value加上value\n * 2.如果targetValue大于sourceValue，则targetValue+value后再对比下link.value,取最小值\n */\nfunction findTargetValue(links: IntLink[], target: string, value: number) {\n  links.forEach((link) => {\n    // 如果target和source相同，且sourceValue小于targetValue，则加上value\n    // (link.value原始值从source和targetValue中取的最小值，所以targetValue大时就不用处理了)\n    if (link.targetValue < link.sourceValue) { \n      if (link.targetKey === target) {\n        link.value += value;\n      }\n    } else {\n      if (link.targetKey === target) {\n        // targetValue+value后再对比下link.value,取最小值\n        link.value = Math.min(link.value, link.targetValue + value);\n      }\n    }\n  });\n}\nconst ainvestLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'gross_profit',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'revenue_cost',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_expenses',\n  },\n  {\n    from: 'operating_profit',\n    to: 'net_profit',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'income_tax_expense',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'interest',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey: string = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'other_item',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'selling_administrative_expenses',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'research_development_expenses',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'other_fee',\n  },\n];\nconst marketSet = {\n  [Market.HK]: {\n    nodes: hkNodes,\n    links: hkLinks,\n  },\n  [Market.AINVEST]: {\n    nodes: ainvestNodes,\n    links: ainvestLinks,\n  },\n  [Market.STOCK]: {\n    nodes: stockNodes,\n    links: stockLinks,\n  },\n  [Market.STOCK_FINANCE]: {\n    nodes: stockFinaceNodes,\n    links: stockFinaceLinks,\n  },\n};\n\nconst colorMap = {\n  [Theme.WHITE]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#29B393',\n      down: '#ED4949',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n  [Theme.BLACK]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#2FC9A5',\n      down: '#FF5353',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n};\nconst periodsListMap = {\n  [Market.AINVEST]: [\n    {\n      name: 'quarterly',\n      label: 'sankey_quarterly',\n    },\n    {\n      name: 'annual',\n      label: 'sankey_annual',\n    },\n  ],\n  [Market.STOCK]: [\n    {\n      name: 'Latest',\n      label: 'sankey_Latest',\n    },\n    {\n      name: 'Q1',\n      label: 'sankey_Q1',\n    },\n    {\n      name: 'H1',\n      label: 'sankey_H1',\n    },\n    {\n      name: 'Q3',\n      label: 'sankey_9M',\n    },\n    {\n      name: 'Annual',\n      label: 'sankey_annual',\n    },\n  ],\n};\n// 正负向之和节点\nconst directionsSumNodes = {\n  positive: {\n    name: 'sankey_income_positive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n  nagetive: {\n    name: 'sankey_income_nagetive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n};\n// 动态收入节点的目标节点（正负向之和目标节点）\nconst incomeSumNodeMap = {\n  [Market.AINVEST]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  [Market.HK]: {\n    show: true,\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  [Market.STOCK]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  // 实际不存在\n  [Market.STOCK_FINANCE]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n};\n\nconst businessSet: { [key: string]: any } = {\n  [Market.AINVEST]: {\n    nodeHideSelf: [\n      ['net_profit', 'income_tax_expense', 'interest', 'other_item'],\n      ['selling_administrative_exp","relevantFile":"<file_path>packages/components/finance/sankey-combined-chart/common/assistTreeNode.ts\n/**\n * 辅助树节点\n * 给桑基图建立树型关系，方便特殊逻辑处理\n * 作用：\n * 1、美股负数处理，当子节点存在有正有负数时（且子节点数大于等与3个时），\n * 将节点拆分为两个类型节点，一个负数之和节点，一个正数之和节点\n * \n */\nconst ainvestTree = {\n    \n};","relevantFileList":[],"filePath":"packages/components/finance/sankey-combined-chart/common/config.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" erating_costs',","deepseek-chat-lite":"erating_expenses',","deepseek-chat":"```\n// Start Generation Here\nconst ainvestNodes: IntNode[] =","copilot":"name: 'other_fee'"}},{"prefix":"import {\n  marketSet,\n  colorMap,\n  incomeSumNodeMap,\n  directionsSumNodes,\n  businessSet,\n  environmentMap,\n} from './config';\nimport { Market, NodeType, Template, Theme, App } from './enum';\nimport type { ProjectNode, Node, Link, IntLink, IntNode, SankeyDataApi, PropData, BaseApiObj } from './interface';\nimport { formateLocalMoney, fromateLocalYoY, formateLocaleData } from './utils';\nimport initTsLocale from '@/common/init/tsLocale';\nimport locale from '../locale/index';\nconst localeInstance: any = initTsLocale(locale);\n\ninterface PropsData {\n  propNodes: Node[];\n  links: Link[];\n  canUse: boolean,\n}\nconst OPACITY = 0.84;\nconst specialI18nMap = {\n  // 596001-年报    596003-一季报   596004-二季报  596005-三季报 596006-四季报\n  '596001': 'FY',\n  '596003': 'Quarterly_Q1',\n  '596004': 'Quarterly_Q2',\n  '596005': 'Quarterly_Q3',\n  '596006': 'Quarterly_Q4',\n}\nclass SankeyOption {\n  private sourceData: SankeyDataApi[];\n  /**\n   * 模板标识，用于区分当前应用环境，如ths美股，ainvest\n   */\n  private template: Template;\n  private market: Market;\n  private lang: string;\n  private app: App;\n  private colors: { [key: string]: string };\n  /* 全局相关配置项 */\n  private nodes: IntNode[];\n  private links: IntLink[];\n  // 正负向之和节点配置\n  private incomeSumNode: any;\n  // 特殊业务处理（删除负项）\n  private specialBusinessSet: { nodeHideSelf: string[][]; nodeHideAll: string[] } | null;\n  /* 单周期数据相关，为了抽离函数提到公告变量，每次循环需要主动重置 */\n  private nodeDelete: string[] = [];\n  // 层级移动值 （可能存在预设的层级消失的情况）\n  private depthMove: number = 0;\n  /**\n   * 图标，同个桑基图周期中图标相同\n   * 海外因为需要生成分享图片，需要提前以跨域方式加载并储存成base64\n   */\n  private logo = '';\n  private imgLoad: boolean = false;\n  constructor(data: SankeyDataApi[], environment: { mode: Template; theme: Theme; lang: string }) {\n    this.sourceData = data;\n    const { mode, theme, lang } = environment;\n    this.template = mode;\n    this.lang = lang;\n    this.app = environmentMap[mode].app;\n    this.colors = colorMap[theme][this.app];\n    // 市场相关的配置\n    this.market = environmentMap[mode].market;\n    const { nodes, links } = marketSet[this.market];\n    this.nodes = nodes;\n    this.links = links;\n    this.incomeSumNode = incomeSumNodeMap[this.market];\n    this.specialBusinessSet = businessSet[this.market] || null;\n  }\n  /***********对外功能 **************/\n  public async getData() {\n    // 组件需要的数据结构\n    let sankeyPropData: PropData = {\n      links: [],\n      datas: [],\n      info: [],\n      dates: [],\n    };\n    if (this.template === Template.AINVEST) {\n      // 美股提前请求图片\n      await this.getImgUrl();\n    }\n    this.sourceData.forEach((item: SankeyDataApi, index: number) => {\n      // 循环前重置数据\n      this.resetSingleData();\n      const param = this.formatMarketSet(item);\n      if (!param.canUse) {\n        // 单个数据不可用，隐藏单条，最新不可用则隐藏全部\n        if (index === this.sourceData.length - 1) {\n          sankeyPropData = {\n            links: [],\n            datas: [],\n            info: [],\n            dates: [],\n          };\n        }\n        return;\n      }\n      sankeyPropData.links.push(param.links);\n      sankeyPropData.datas.push(param.datas);\n      sankeyPropData.info.push(param.info);\n      sankeyPropData.dates.push(param.year);\n    });\n    // 临时逻辑，A股不展示金融类，后续将删除\n    if (this.template === Template.STOCK && this.sourceData.length !== sankeyPropData.datas.length) {\n      sankeyPropData = {\n        links: [],\n        datas: [],\n        info: [],\n        dates: [],\n      };\n    }\n    return sankeyPropData;\n  }\n  // 重设数据\n  public setData(data: SankeyDataApi[]) {\n    this.sourceData = data;\n  }\n  // 重设环境值(与构造函数相同)\n  public setProps(environment: { mode: Template; theme: Theme; lang: string }) {\n    const { mode, theme, lang } = environment;\n    this.template = mode;\n    this.lang = lang;\n    this.market = environmentMap[mode].market;\n    this.app = environmentMap[mode].app;\n    this.colors = colorMap[theme][this.app];\n    // 市场相关的配置\n    this.market = environmentMap[mode].market;\n    const { nodes, links } = marketSet[this.market];\n    this.nodes = nodes;\n    this.links = links;\n    this.incomeSumNode = incomeSumNodeMap[this.market];\n    this.specialBusinessSet = businessSet[this.market] || null;\n  }\n  /***********内部函数 **************/\n  private i18n(text: string) {\n    const prefixMap = {\n      [Market.AINVEST]: 'sankey_',\n      [Market.HK]: 'hk_sankey_',\n      [Market.STOCK]: 'stock_sankey_',\n      [Market.STOCK_FINANCE]: 'stock_sankey_',\n    };\n    const key = `${prefixMap[this.market]}${text}`;\n    return localeInstance.$t(key);\n  }\n  private i18nSp(text: string) {\n    return localeInstance.$t(text);\n  }\n  /**\n   * 这里的设计存在两个矛盾点\n   *  1.遍历到子节点时，可能发现同级节点不展示，需要回删\n   *  2.如何取到当前节点的同级节点\n   * 在此条件下，只能把nodeHideSelf设计为二维数组，并且提前处理这段逻辑,尽量减少遍历次数\n   */\n  private specialBusinessProcess(data: SankeyDataApi) {\n    if (!this.specialBusinessSet) {\n      // 调用前已处理，这里为了sonar和ts判断\n      return;\n    }\n    const { nodeHideSelf } = this.specialBusinessSet;\n    if (!nodeHideSelf.length) {\n      return;\n    }\n    // nodeHideSelf是个二维数组，只要有值为0，则隐藏这个组的所有节点\n    nodeHideSelf.forEach((item: string[]) => {\n      for (let node of item) {\n        if (Number(data[node]?.value) <= 0) {\n          this.nodeDelete = this.nodeDelete.concat(item);\n          break;\n        }\n      }\n    });\n  }\n  private getLinksValue(link: IntLink, data: SankeyDataApi, from:string","infill":", to:string","suffix":") {\n    const { formula } = link;\n    // 默认为from和to的绝对值取最小值\n    let linkValue = Math.abs(data[to].value) > Math.abs(data[from].value) ? data[from].value : data[to].value;\n    // 自定义取值方式\n    if (formula) {\n      if (data[formula]) {\n        linkValue = data[formula].value;\n      } else {\n        const func = new Function('data', formula);\n        linkValue = func(data);\n      }\n    }\n    return formateLocalMoney(linkValue as string | number);\n  }\n  // positive 是否为正向\n  private setDirectionsNode(positive: boolean, nodes: ProjectNode[], sum: number, propsData: PropsData) {\n    // 补充动态节点的link,并计算正负向之和\n    nodes.forEach(node => {\n      if (node.value) {\n        propsData.propNodes.push({\n          name: node.name,\n          compare: fromateLocalYoY(node.yoy),\n          depth: 0,\n          num: formateLocalMoney(node.value),\n          number: formateLocaleData(node.value, this.lang),\n          root: false,\n          itemStyle: {\n            color: this.colors[NodeType.INCOME],\n            opacity: OPACITY,\n          },\n        });\n        propsData.links.push({\n          source: node.name,\n          target: positive ? directionsSumNodes.positive.name : directionsSumNodes.nagetive.name,\n          value: Number(node.value),\n        });\n\n      }\n    });\n    // 需要计算正负向之和,固定补充节点\n    propsData.propNodes.push(\n      Object.assign(positive ? directionsSumNodes.positive : directionsSumNodes.nagetive, {\n        num: sum,\n        number: formateLocaleData(sum, this.lang),\n        itemStyle: {\n          color: positive ? this.colors[directionsSumNodes.positive.type] : this.colors[directionsSumNodes.nagetive.type],\n          opacity: OPACITY,\n        },\n      }),\n    );\n    propsData.links.push({\n      source: positive ? directionsSumNodes.positive.name : directionsSumNodes.nagetive.name,\n      target: this.i18n(this.incomeSumNode.name),\n      value: sum,\n    });\n  }\n\n  // 处理正负向节点\n  private handelDirectionsNode(positiveNode: ProjectNode[], negativeNode: ProjectNode[], sum: any, propsData: PropsData) {\n    const { positiveSum, negativeSum } = sum;\n    directionsSumNodes.positive.name = this.i18nSp(directionsSumNodes.positive.name);\n    directionsSumNodes.nagetive.name = this.i18nSp(directionsSumNodes.nagetive.name);\n    if (positiveSum + negativeSum > 0) {\n      // 执行顺序影响绘图上下位置，依照节点绝对值小的在上，相等则正数在上\n      this.setDirectionsNode(false, negativeNode, negativeSum, propsData);\n      this.setDirectionsNode(true, positiveNode, positiveSum, propsData);\n    } else {\n      this.setDirectionsNode(true, positiveNode, positiveSum, propsData);\n      this.setDirectionsNode(false, negativeNode, negativeSum, propsData);\n    }\n  }\n  // 拆分复杂度\n  _formatProjects(projects: ProjectNode[], propsData: PropsData) {\n    // 不需要计算正负向和，补充links\n    projects.forEach((node: ProjectNode) => {\n      if (node.value) {\n        propsData.propNodes.push({\n          name: node.name,\n          compare: fromateLocalYoY(node.yoy),\n          depth: 0,\n          num: formateLocalMoney(node.value),\n          number: formateLocaleData(node.value, this.lang),\n          root: false,\n          itemStyle: {\n            color: this.colors[NodeType.INCOME],\n            opacity: OPACITY,\n          },\n        });\n        propsData.links.push({\n          source: node.name,\n          target: this.i18n(this.incomeSumNode.name),\n          value: formateLocalMoney(node.value),\n        });\n      }\n    });\n  }\n  // 动态层的处理，需要有业务区分的逻辑\n  private formatProjects(projects: ProjectNode[], propsData: PropsData) {\n    // 正向之和\n    const positiveNode = [] as ProjectNode[];\n    // 负向之和\n    const negativeNode = [] as ProjectNode[];\n    let positiveSum = 0;\n    let negativeSum = 0;\n    // 区分正负向之和并添加到节点配置\n    projects.forEach((projectNode: ProjectNode) => {\n      if (projectNode.value && Number(projectNode.value)) {\n        const value = Number(projectNode.value);\n        // 特殊节点\n        if (projectNode.name === '$other_sum') {\n          projectNode.name = this.i18nSp('sankey_sum_of_rest');\n        }\n        if (value > 0) {\n          positiveSum = positiveSum + Number(projectNode.value);\n          positiveNode.push(projectNode);\n        } else {\n          negativeSum = negativeSum + Number(projectNode.value);\n          negativeNode.push(projectNode);\n        }\n      }\n    });\n    if (positiveNode.length && negativeNode.length) {\n      const sum = { positiveSum, negativeSum };\n      this.handelDirectionsNode(positiveNode, negativeNode, sum, propsData);\n      this.depthMove = 1;\n    } else if (!positiveNode.length && !negativeNode.length) {\n      // 没有数据直减一层（这个情景理论不出现）\n      this.depthMove = -1;\n    } else {\n      this._formatProjects(projects, propsData);\n    }\n  }\n  // 判断传入节点列表里是否有负值\n  private judgeHasNegativeNode(nodes: ProjectNode[]) {\n    if (!nodes?.length) {\n      return false;\n    }\n    const hasNegativeNode = nodes.find((node: ProjectNode) => node.value && Number(node.value) < 0);\n    return Boolean(hasNegativeNode);\n  }\n  // 判断A股混合金融类型\n  private judgeIsFinanceStock(_data: SankeyDataApi) {\n    // 金融业务收入 financial_business_income 和金融业务成本 financial_business_cost 都为空，则为普通企业\n    const { financial_business_income, financial_business_cost } = _data;\n    return financial_business_income?.value || financial_business_cost?.value;\n  }\n  // 重设节点类型,A股每个周期都可能模板不同\n  private resetNodeSet(data: SankeyDataApi) {\n    if (this.judgeIsFinanceStock(data)) {\n      // 判断A股混合金融类型,需要取到接口数据后内部判断\n      this.market = Market.STOCK_FINANCE;\n    } else {\n      this.market = Market.STOCK;\n    }\n    // 市场相关的配置\n    const { nodes, links } = marketSet[this.market];\n    this.nodes = nodes;\n    this.links = links;\n    this.incomeSumNode = incomeSumNodeMap[this.market];\n    this.specialBusinessSet = businessSet[this.market] || null;\n  }\n  /**\n   * 因为桑基图内部不会切换股票，因此即使数据改变，图标也不重新请求\n   * @returns 返回base64的图片编码\n   */\n  private async getImgUrl() {\n    // 已加载过直接返回\n    if (this.imgLoad) {\n      return;\n    }\n    const item = this.sourceData[0];\n    const { subject } = item;\n    if (subject.logo) {\n      this.logo = await this.loadBase64Logo(subject.logo as string);\n    } else {\n      this.imgLoad = true;\n    }\n  }\n  private async loadBase64Logo(imgUrl: string): Promise<string> {\n    // 海外分享需要转图片，内部logo需要以跨域方式加载\n    return new Promise((resolve) => {\n      const img = new Image();\n      // 加载跨域图片\n      img.crossOrigin = 'anonymous';\n      img.onload = () => {\n        this.imgLoad = true;\n        try {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          canvas.width = img.width;\n          canvas.height = img.height;\n          ctx?.drawImage(img, 0, 0, img.width, img.height);\n          const dataURL = canvas.toDataURL('image/png');\n          this.logo = dataURL;\n          resolve(dataURL);\n        } catch (error) {\n          window.console.log(error);\n          resolve('');\n        }\n      };\n      img.onerror = () => {\n        this.imgLoad = true;\n        resolve('');\n      }\n      // 只需要和其他页面请求区分，不需要用时间戳\n      const url = imgUrl.includes('?') ? `${imgUrl}&cross=true` : `${imgUrl}?cross=true`;\n      img.src = url;\n    })\n  }\n  // 拆分处理复杂度\n  private _customNode(propsData: PropsData, data: SankeyDataApi, node: IntNode) {\n    const { subject } = data;\n    const item = data[node.name];\n    // 处理为可视化所需的数据格式\n    const _node: Node = {\n      key: node.name,\n      name: this.i18n(node.name),\n      compare: fromateLocalYoY(item.yoy),\n      depth: node.depth + this.depthMove,\n      num: formateLocalMoney(item.value as string),\n      number: formateLocaleData(item.value as string, this.lang),\n      root: node.root,\n      itemStyle: {\n        color: this.colors[node.type],\n        opacity: node.root ? 1.0 : OPACITY,\n      },\n      sort: node.sort || 0,\n    };\n    if (node.children) {\n      // children数据先处理\n      _node.children = node.children.map((child: string) => ({\n        name: this.i18n(child),\n        number: data[child]?.value ? formateLocaleData(data[child].value as string, this.lang) : '","relevantFile":"<file_path>packages/components/finance/sankey-combined-chart/common/assistTreeNode.ts\n/**\n * 辅助树节点\n * 给桑基图建立树型关系，方便特殊逻辑处理\n * 作用：\n * 1、美股负数处理，当子节点存在有正有负数时（且子节点数大于等与3个时），\n * 将节点拆分为两个类型节点，一个负数之和节点，一个正数之和节点\n * \n */\nconst ainvestTree = {\n    \n};","relevantFileList":[],"filePath":"packages/components/finance/sankey-combined-chart/common/useGetOptions.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ) {","deepseek-chat-lite":", to: string","deepseek-chat":"```\n// Start Generation Here\n    const { to } = link;\n","copilot":", to:string"}},{"prefix":"import {\n  marketSet,\n  colorMap,\n  incomeSumNodeMap,\n  directionsSumNodes,\n  businessSet,\n  environmentMap,\n} from './config';\nimport { Market, NodeType, Template, Theme, App } from './enum';\nimport type { ProjectNode, Node, Link, IntLink, IntNode, SankeyDataApi, PropData, BaseApiObj } from './interface';\nimport { formateLocalMoney, fromateLocalYoY, formateLocaleData } from './utils';\nimport initTsLocale from '@/common/init/tsLocale';\nimport locale from '../locale/index';\nconst localeInstance: any = initTsLocale(locale);\n\ninterface PropsData {\n  propNodes: Node[];\n  links: Link[];\n  canUse: boolean,\n}\nconst OPACITY = 0.84;\nconst specialI18nMap = {\n  // 596001-年报    596003-一季报   596004-二季报  596005-三季报 596006-四季报\n  '596001': 'FY',\n  '596003': 'Quarterly_Q1',\n  '596004': 'Quarterly_Q2',\n  '596005': 'Quarterly_Q3',\n  '596006': 'Quarterly_Q4',\n}\nclass SankeyOption {\n  private sourceData: SankeyDataApi[];\n  /**\n   * 模板标识，用于区分当前应用环境，如ths美股，ainvest\n   */\n  private template: Template;\n  private market: Market;\n  private lang: string;\n  private app: App;\n  private colors: { [key: string]: string };\n  /* 全局相关配置项 */\n  private nodes: IntNode[];\n  private links: IntLink[];\n  // 正负向之和节点配置\n  private incomeSumNode: any;\n  // 特殊业务处理（删除负项）\n  private specialBusinessSet: { nodeHideSelf: string[][]; nodeHideAll: string[] } | null;\n  /* 单周期数据相关，为了抽离函数提到公告变量，每次循环需要主动重置 */\n  private nodeDelete: string[] = [];\n  // 层级移动值 （可能存在预设的层级消失的情况）\n  private depthMove: number = 0;\n  /**\n   * 图标，同个桑基图周期中图标相同\n   * 海外因为需要生成分享图片，需要提前以跨域方式加载并储存成base64\n   */\n  private logo = '';\n  private imgLoad: boolean = false;\n  constructor(data: SankeyDataApi[], environment: { mode: Template; theme: Theme; lang: string }) {\n    this.sourceData = data;\n    const { mode, theme, lang } = environment;\n    this.template = mode;\n    this.lang = lang;\n    this.app = environmentMap[mode].app;\n    this.colors = colorMap[theme][this.app];\n    // 市场相关的配置\n    this.market = environmentMap[mode].market;\n    const { nodes, links } = marketSet[this.market];\n    this.nodes = nodes;\n    this.links = links;\n    this.incomeSumNode = incomeSumNodeMap[this.market];\n    this.specialBusinessSet = businessSet[this.market] || null;\n  }\n  /***********对外功能 **************/\n  public async getData() {\n    // 组件需要的数据结构\n    let sankeyPropData: PropData = {\n      links: [],\n      datas: [],\n      info: [],\n      dates: [],\n    };\n    if (this.template === Template.AINVEST) {\n      // 美股提前请求图片\n      await this.getImgUrl();\n    }\n    this.sourceData.forEach((item: SankeyDataApi, index: number) => {\n      // 循环前重置数据\n      this.resetSingleData();\n      const param = this.formatMarketSet(item);\n      if (!param.canUse) {\n        // 单个数据不可用，隐藏单条，最新不可用则隐藏全部\n        if (index === this.sourceData.length - 1) {\n          sankeyPropData = {\n            links: [],\n            datas: [],\n            info: [],\n            dates: [],\n          };\n        }\n        return;\n      }\n      sankeyPropData.links.push(param.links);\n      sankeyPropData.datas.push(param.datas);\n      sankeyPropData.info.push(param.info);\n      sankeyPropData.dates.push(param.year);\n    });\n    // 临时逻辑，A股不展示金融类，后续将删除\n    if (this.template === Template.STOCK && this.sourceData.length !== sankeyPropData.datas.length) {\n      sankeyPropData = {\n        links: [],\n        datas: [],\n        info: [],\n        dates: [],\n      };\n    }\n    return sankeyPropData;\n  }\n  // 重设数据\n  public setData(data: SankeyDataApi[]) {\n    this.sourceData = data;\n  }\n  // 重设环境值(与构造函数相同)\n  public setProps(environment: { mode: Template; theme: Theme; lang: string }) {\n    const { mode, theme, lang } = environment;\n    this.template = mode;\n    this.lang = lang;\n    this.market = environmentMap[mode].market;\n    this.app = environmentMap[mode].app;\n    this.colors = colorMap[theme][this.app];\n    // 市场相关的配置\n    this.market = environmentMap[mode].market;\n    const { nodes, links } = marketSet[this.market];\n    this.nodes = nodes;\n    this.links = links;\n    this.incomeSumNode = incomeSumNodeMap[this.market];\n    this.specialBusinessSet = businessSet[this.market] || null;\n  }\n  /***********内部函数 **************/\n  private i18n(text: string) {\n    const prefixMap = {\n      [Market.AINVEST]: 'sankey_',\n      [Market.HK]: 'hk_sankey_',\n      [Market.STOCK]: 'stock_sankey_',\n      [Market.STOCK_FINANCE]: 'stock_sankey_',\n    };\n    const key = `${prefixMap[this.market]}${text}`;\n    return localeInstance.$t(key);\n  }\n  private i18nSp(text: string) {\n    return localeInstance.$t(text);\n  }\n  /**\n   * 这里的设计存在两个矛盾点\n   *  1.遍历到子节点时，可能发现同级节点不展示，需要回删\n   *  2.如何取到当前节点的同级节点\n   * 在此条件下，只能把nodeHideSelf设计为二维数组，并且提前处理这段逻辑,尽量减少遍历次数\n   */\n  private specialBusinessProcess(data: SankeyDataApi) {\n    if (!this.specialBusinessSet) {\n      // 调用前已处理，这里为了sonar和ts判断\n      return;\n    }\n    const { nodeHideSelf } = this.specialBusinessSet;\n    if (!nodeHideSelf.length) {\n      return;\n    }\n    // nodeHideSelf是个二维数组，只要有值为0，则隐藏这个组的所有节点\n    nodeHideSelf.forEach((item: string[]) => {\n      for (let node of item) {\n        if (Number(data[node]?.value) <= 0) {\n          this.nodeDelete = this.nodeDelete.concat(item);\n          break;\n        }\n      }\n    });\n  }\n  private getLinksValue(link: IntLink, data: SankeyDataApi, from:string, to:string) {\n    const { formula } = link;\n    // 默认为from和to的绝对值取最小值\n    let linkValue = Math.abs(data[to].value) > Math.abs(data[from].value) ? data[from].value : data[to].value;\n    // 自定义取值方式\n    if (formula) {\n      if (data[formula]) {\n        linkValue = data[formula].value;\n      } else {\n        const func = new Function('data', formula);\n        linkValue = func(data);\n      }\n    }\n    return formateLocalMoney(linkValue as string | number);\n  }\n  // positive 是否为正向\n  private setDirectionsNode(positive: boolean, nodes: ProjectNode[], sum: number, propsData: PropsData) {\n    // 补充动态节点的link,并计算正负向之和\n    nodes.forEach(node => {\n      if (node.value) {\n        propsData.propNodes.push({\n          name: node.name,\n          compare: fromateLocalYoY(node.yoy),\n          depth: 0,\n          num: formateLocalMoney(node.value),\n          number: formateLocaleData(node.value, this.lang),\n          root: false,\n          itemStyle: {\n            color: this.colors[NodeType.INCOME],\n            opacity: OPACITY,\n          },\n        });\n        propsData.links.push({\n          source: node.name,\n          target: positive ? directionsSumNodes.positive.name : directionsSumNodes.nagetive.name,\n          value: Number(node.value),\n        });\n\n      }\n    });\n    // 需要计算正负向之和,固定补充节点\n    propsData.propNodes.push(\n      Object.assign(positive ? directionsSumNodes.positive : directionsSumNodes.nagetive, {\n        num: sum,\n        number: formateLocaleData(sum, this.lang),\n        itemStyle: {\n          color: positive ? this.colors[directionsSumNodes.positive.type] : this.colors[directionsSumNodes.nagetive.type],\n          opacity: OPACITY,\n        },\n      }),\n    );\n    propsData.links.push({\n      source: positive ? directionsSumNodes.positive.name : directionsSumNodes.nagetive.name,\n      target: this.i18n(this.incomeSumNode.name),\n      value: sum,\n    });\n  }\n\n  // 处理正负向节点\n  private handelDirectionsNode(positiveNode: ProjectNode[], negativeNode: ProjectNode[], sum: any, propsData: PropsData) {\n    const { positiveSum, negativeSum } = sum;\n    directionsSumNodes.positive.name = this.i18nSp(directionsSumNodes.positive.name);\n    directionsSumNodes.nagetive.name = this.i18nSp(directionsSumNodes.nagetive.name);\n    if (positiveSum + negativeSum > 0) {\n      // 执行顺序影响绘图上下位置，依照节点绝对值小的在","infill":", to","suffix":"),\n          sourceValue: Number(data[from].value),\n          targetValue: Number(data[to].value),\n          // 连线需要的方向，如果是负数，则用dvDirection=top\n          dvDirection: link.dvDirection ? link.dvDirection : null,\n        });\n      }\n    });\n  }\n  // 重设单周期变量\n  private resetSingleData() {\n    this.depthMove = 0;\n    this.nodeDelete = [];\n  }\n  private formatInfo(subject: BaseApiObj) {\n    const { year, name, sourceCode, report_type } = subject;\n    const text = sourceCode ? this.i18nSp(specialI18nMap[sourceCode]) : report_type;\n    return {\n      name,\n      text: `${year} ${text}`,\n    };\n  }\n  private formatMarketSet(data: SankeyDataApi) {\n    const { projects, subject } = data;\n    if (this.template === Template.STOCK && this.judgeIsFinanceStock(data)) {\n      // 金融类直接判定不可展示，后续改为resetNodeSet\n      return {\n        canUse: false,\n        info: [],\n        year: '',\n        links: [],\n        datas: [],\n      }\n    }\n    const propsData: PropsData = {\n      propNodes: [],\n      links: [],\n      canUse: true,\n    };\n    if (this.market === Market.STOCK_FINANCE) {\n      // A股混合无动态节点\n      this.depthMove = 0;\n    } else if (!projects?.length) {\n      this.depthMove = -1;\n    } else {\n      // 只处理主营构成的数据(正负向之和情况)\n      this.formatProjects(projects, propsData);\n    }\n    if (this.specialBusinessSet) {\n      // 特殊业务处理先注释掉\n      // this.specialBusinessProcess(data);\n    }\n    this.customNode(propsData, data);\n    this.customLink(propsData, data);\n    // 对propsData排序，按sort排序（存在负数情况时，customLink建立时会影响排序）\n    propsData.propNodes = this._propsDataSortFn(propsData.propNodes);\n    console.log('propsData', propsData);\n    const info = this.formatInfo(subject);\n    return {\n      canUse: propsData.canUse,\n      info,\n      year: info.text,\n      links: propsData.links,\n      datas: propsData.propNodes,\n    };\n  }\n}\n\nexport { SankeyOption };\n","relevantFile":"<file_path>packages/components/finance/sankey-combined-chart/common/assistTreeNode.ts\n/**\n * 辅助树节点\n * 给桑基图建立树型关系，方便特殊逻辑处理\n * 作用：\n * 1、美股负数处理，当子节点存在有正有负数时（且子节点数大于等与3个时），\n * 将节点拆分为两个类型节点，一个负数之和节点，一个正数之和节点\n * \n */\nconst ainvestTree = {\n    \n};","relevantFileList":[],"filePath":"packages/components/finance/sankey-combined-chart/common/useGetOptions.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 上方","deepseek-chat-lite":"上","deepseek-chat":"```\n// Start Generation Here\n      if (positiveNode.length > ","copilot":", to"}},{"prefix":"import type { IntNode, IntLink, SankeyDataApi, PropsData } from './interface';\nimport { Market, NodeType, Theme, App, Template } from './enum';\nconst environmentMap = {\n  [Template.STOCK]: {\n    market: Market.STOCK,\n    app: App.STOCK,\n  },\n  [Template.STOCK_AINVEST]: {\n    market: Market.AINVEST,\n    app: App.STOCK,\n  },\n  [Template.AINVEST]: {\n    market: Market.AINVEST,\n    app: App.AINVEST,\n  },\n  [Template.HK]: {\n    market: Market.HK,\n    app: App.STOCK,\n  },\n};\nconst defaultOption = {\n  animationDurationUpdate: 1000,\n  tooltip: {\n    trigger: 'item',\n    className: 'sankey-tooltip-border',\n    confine: true,\n  },\n  title: {\n    show: false,\n  },\n  graphic: {\n    elements: [],\n  },\n  dvWaterMark: {\n    show: false,\n  },\n  series: [\n    {\n      type: 'sankey',\n      id: 'treeSankey',\n      orient: 'horizontal',\n      universalTransition: false,\n      animation: true,\n      dvLayout: 'tree',\n      dvRootHeight: 24,\n      dvNodeLengthPercent: 0.5,\n      nodeWidth: 12,\n      top: 25,\n      bottom: 2,\n      left: 120,\n      right: 120,\n      data: [],\n      links: [],\n    },\n  ],\n};\n\nconst hkNodes: IntNode[] = [\n  {\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income_special_subject',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income',\n    depth: 2,\n    root: true,\n    type: 'income',\n  },\n  {\n    name: 'sales_cost',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'gross_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'other_operating_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n    children: [\n      'change_of_fair_value_of_investment_properties',\n      'operating_profits_special_subject',\n      'other_income',\n    ],\n  },\n  {\n    name: 'other_fee_total',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    children: ['benefit_finance_fee', 'manage_fee', 'sales_fee', 'other_fee'],\n  },\n  {\n    // 经营溢利\n    name: 'operating_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 参控及特殊项目收益\n    name: 'control_special_accounts_income',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税前利润\n    name: 'profit_before_tax',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税后利润特殊科目\n    name: 'profit_after_tax_special_subject',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    name: 'parent_holder_net_profit',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他股东收益\n    name: 'other_shareholders_profits',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n];\nconst hkLinks: IntLink[] = [\n  {\n    from: 'turnover',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income_special_subject',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'sales_cost',\n  },\n  {\n    from: 'operating_income',\n    to: 'gross_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'other_fee_total',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n    formula: \"return data['gross_profit'].value-data['other_fee_total'].value\",\n  },\n  {\n    from: 'other_operating_income',\n    to: 'operating_profit',\n    formula: 'other_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_before_tax',\n    formula: 'operating_profit',\n  },\n  {\n    from: 'control_special_accounts_income',\n    to: 'profit_before_tax',\n    formula: 'control_special_accounts_income',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'profit_after_tax_special_subject',\n    to: 'net_profit',\n    formula: 'profit_after_tax_special_subject',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'other_shareholders_profits',\n  },\n];\nconst stockNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  {\n    // 营业成本\n    name: 'operating_costs',\n    depth: 2,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 毛利润\n    name: 'operating_income',\n    depth: 2,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'others_operating_income',\n    depth: 2,\n    root: false,\n    type: 'income',\n    children: [\n      'fair_changes_income',\n      'invest_income',\n      'asset_disposal_income',\n      'assets_impairment_loss',\n      'credit_impairment_loss',\n      'other_operating_income_second',\n    ],\n  },\n  {\n    // 费用及营业税\n    name: 'others_costs_total',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n    children: [\n      'sales_fee',\n      'manage_fee',\n      'research_and_development_expenses',\n      'benefit_finance_fee',\n      'taxes_and_surcharges',\n      'others_costs_total_second',\n    ],\n  },\n  {\n    // 营业利润\n    name: 'operating_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 营业外净收益\n    name: 'non_operating_net_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 利润总额\n    name: 'profit_total',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 5,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 归母净利润\n    name: 'parent_holder_net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 少数股东损益\n    name: 'minority_holder_income_loss',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n];\nconst stockLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'operating_costs',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'others_costs_total',\n  },\n  {\n    from: 'operating_income',\n    to: 'operating_profit',\n    formula: \"return data['operating_profit'].value-data['others_operating_income'].value\",\n  },\n  {\n    from: 'others_operating_income',\n    to: 'operating_profit',\n    formula: 'others_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_total',\n    formula: \"return data['profit_total'].value-data['non_operating_net_income'].value\",\n  },\n  {\n    from: 'non_operating_net_income',\n    to: 'profit_total',\n    formula: 'non_operating_net_income',\n  },\n  {\n    from: 'profit_total',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_total',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'minority_holder_income_loss',\n  },\n];\nconst stockFinaceNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 0,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 金融业务收入\n    name: 'financial_business_income',\n    depth: 0,\n    root: false,\n    type: 'income',\n    children: [\n      'premiums_earned',\n      'net_income_from_handling_of_assets',\n      'charges_commissions_income',\n      // 特殊科目收入\n      'operating_income_total_special',\n      'operating_income_total_balance',\n    ],\n  },\n  {\n    // 营业成本\n    name: 'op","infill":"research_development_expenses'","suffix":"\n    }, {\n      name: 'other_fee'\n    }]\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 1\n  },\n  {\n    // 净利息费用\n    name: 'interest',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 2\n  },\n  {\n    // 其他杂项\n    name: 'other_item',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    sort: 3\n  },\n  {\n    // 市场、销售和管理费用\n    name: 'selling_administrative_expenses',\n    depth: 4,\n    root: false,\n    type: 'expenditure'\n  },\n  {\n    // 研发费用\n    name: 'research_development_expenses',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 其他费用\n    name: 'other_fee',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n  }\n];\n/**\n * 业务逻辑处理\n * 从links里查找target的节点，如果找到则加上value值(value一定为负数)\n * link.value的来源与targetValue与sourceValue的最小值（肯定是正数）\n * 逻辑：(遵循两个节点连线用最小值作为连接值)\n * 1.如果targetValue小于sourceValue，则link.value加上value\n * 2.如果targetValue大于sourceValue，则targetValue+value后再对比下link.value,取最小值\n */\nfunction findTargetValue(links: IntLink[], target: string, value: number) {\n  links.forEach((link) => {\n    // 如果target和source相同，且sourceValue小于targetValue，则加上value\n    // (link.value原始值从source和targetValue中取的最小值，所以targetValue大时就不用处理了)\n    if (link.targetValue < link.sourceValue) { \n      if (link.targetKey === target) {\n        link.value += value;\n      }\n    } else {\n      if (link.targetKey === target) {\n        // targetValue+value后再对比下link.value,取最小值\n        link.value = Math.min(link.value, link.targetValue + value);\n      }\n    }\n  });\n}\nconst ainvestLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'gross_profit',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'revenue_cost',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_expenses',\n  },\n  {\n    from: 'operating_profit',\n    to: 'net_profit',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'income_tax_expense',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'interest',\n  },\n  {\n    from: function(data: SankeyDataApi, propData?: PropsData) {\n      const defaultKey: string = 'operating_profit';\n      // 如果有负数，则变更为net_profit（负数都和净利润连接）\n      const changeKey: string = 'net_profit';\n      this.dvDirection = null;\n      const { to } = this;\n      // 如果两个相连的节点乘积小于0，则连接到净利润（业务特殊处理）\n      if (data[to] && Number(data[to].value) * Number(data[defaultKey].value) < 0) {\n        // 设置连接方向\n        this.dvDirection = 'top';\n        // income_tax_expense,interest,other_item这三项有负数时则连接到净利润上\n        // 为负数时，需要重新排序，使得靠近净利润\n        if (propData) {\n          const { propNodes } = propData;\n          findTargetValue(propData.links, changeKey, Number(data[to].value));\n          // propNodes中找到to的节点，并设置sort属性*-1（镜像处理，防止连线相交）\n          const node = propNodes.find((item) => item.key === to);\n          if (node) {\n            node.sort = node.sort * -1;\n          }\n        }\n        return changeKey;\n      }\n      return defaultKey;\n    },\n    to: 'other_item',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'selling_administrative_expenses',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'research_development_expenses',\n  },\n  {\n    from: 'operating_expenses',\n    to: 'other_fee',\n  },\n];\nconst marketSet = {\n  [Market.HK]: {\n    nodes: hkNodes,\n    links: hkLinks,\n  },\n  [Market.AINVEST]: {\n    nodes: ainvestNodes,\n    links: ainvestLinks,\n  },\n  [Market.STOCK]: {\n    nodes: stockNodes,\n    links: stockLinks,\n  },\n  [Market.STOCK_FINANCE]: {\n    nodes: stockFinaceNodes,\n    links: stockFinaceLinks,\n  },\n};\n\nconst colorMap = {\n  [Theme.WHITE]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#29B393',\n      down: '#ED4949',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n  [Theme.BLACK]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#2FC9A5',\n      down: '#FF5353',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n};\nconst periodsListMap = {\n  [Market.AINVEST]: [\n    {\n      name: 'quarterly',\n      label: 'sankey_quarterly',\n    },\n    {\n      name: 'annual',\n      label: 'sankey_annual',\n    },\n  ],\n  [Market.STOCK]: [\n    {\n      name: 'Latest',\n      label: 'sankey_Latest',\n    },\n    {\n      name: 'Q1',\n      label: 'sankey_Q1',\n    },\n    {\n      name: 'H1',\n      label: 'sankey_H1',\n    },\n    {\n      name: 'Q3',\n      label: 'sankey_9M',\n    },\n    {\n      name: 'Annual',\n      label: 'sankey_annual',\n    },\n  ],\n};\n// 正负向之和节点\nconst directionsSumNodes = {\n  positive: {\n    name: 'sankey_income_positive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n  nagetive: {\n    name: 'sankey_income_nagetive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n};\n// 动态收入节点的目标节点（正负向之和目标节点）\nconst incomeSumNodeMap = {\n  [Market.AINVEST]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  [Market.HK]: {\n    show: true,\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  [Market.STOCK]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  // 实际不存在\n  [Market.STOCK_FINANCE]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n};\n\nconst businessSet: { [key: string]: any } = {\n  [Market.AINVEST]: {\n    nodeHideSelf: [\n      ['net_profit', 'income_tax_expense', 'interest', 'other_item'],\\","relevantFile":"<file_path>packages/components/finance/sankey-combined-chart/common/assistTreeNode.ts\n/**\n * 辅助树节点\n * 给桑基图建立树型关系，方便特殊逻辑处理\n * 作用：\n * 1、美股负数处理，当子节点存在有正有负数时（且子节点数大于等与3个时），\n * 将节点拆分为两个类型节点，一个负数之和节点，一个正数之和节点\n * \n */\nconst ainvestTree = {\n    \n};","relevantFileList":[],"filePath":"packages/components/finance/sankey-combined-chart/common/config.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" erating_costs',","deepseek-chat-lite":"erating_expenses',","deepseek-chat":"```\n// Start Generation Here\nconst ainvestNodes: IntNode[] =","copilot":"research_development_expenses'"}},{"prefix":"import type { IntNode, IntLink, SankeyDataApi, PropsData } from './interface';\nimport { Market, NodeType, Theme, App, Template } from './enum';\nconst environmentMap = {\n  [Template.STOCK]: {\n    market: Market.STOCK,\n    app: App.STOCK,\n  },\n  [Template.STOCK_AINVEST]: {\n    market: Market.AINVEST,\n    app: App.STOCK,\n  },\n  [Template.AINVEST]: {\n    market: Market.AINVEST,\n    app: App.AINVEST,\n  },\n  [Template.HK]: {\n    market: Market.HK,\n    app: App.STOCK,\n  },\n};\nconst defaultOption = {\n  animationDurationUpdate: 1000,\n  tooltip: {\n    trigger: 'item',\n    className: 'sankey-tooltip-border',\n    confine: true,\n  },\n  title: {\n    show: false,\n  },\n  graphic: {\n    elements: [],\n  },\n  dvWaterMark: {\n    show: false,\n  },\n  series: [\n    {\n      type: 'sankey',\n      id: 'treeSankey',\n      orient: 'horizontal',\n      universalTransition: false,\n      animation: true,\n      dvLayout: 'tree',\n      dvRootHeight: 24,\n      dvNodeLengthPercent: 0.5,\n      nodeWidth: 12,\n      top: 25,\n      bottom: 2,\n      left: 120,\n      right: 120,\n      data: [],\n      links: [],\n    },\n  ],\n};\n\nconst hkNodes: IntNode[] = [\n  {\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income_special_subject',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  {\n    name: 'operating_income',\n    depth: 2,\n    root: true,\n    type: 'income',\n  },\n  {\n    name: 'sales_cost',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'gross_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'other_operating_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n    children: [\n      'change_of_fair_value_of_investment_properties',\n      'operating_profits_special_subject',\n      'other_income',\n    ],\n  },\n  {\n    name: 'other_fee_total',\n    depth: 4,\n    root: false,\n    type: 'expenditure',\n    children: ['benefit_finance_fee', 'manage_fee', 'sales_fee', 'other_fee'],\n  },\n  {\n    // 经营溢利\n    name: 'operating_profit',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 参控及特殊项目收益\n    name: 'control_special_accounts_income',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税前利润\n    name: 'profit_before_tax',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 税后利润特殊科目\n    name: 'profit_after_tax_special_subject',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    name: 'net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    name: 'parent_holder_net_profit',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他股东收益\n    name: 'other_shareholders_profits',\n    depth: 7,\n    root: false,\n    type: 'profit',\n  },\n];\nconst hkLinks: IntLink[] = [\n  {\n    from: 'turnover',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income_special_subject',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'sales_cost',\n  },\n  {\n    from: 'operating_income',\n    to: 'gross_profit',\n  },\n  {\n    from: 'gross_profit',\n    to: 'other_fee_total',\n  },\n  {\n    from: 'gross_profit',\n    to: 'operating_profit',\n    formula: \"return data['gross_profit'].value-data['other_fee_total'].value\",\n  },\n  {\n    from: 'other_operating_income',\n    to: 'operating_profit',\n    formula: 'other_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_before_tax',\n    formula: 'operating_profit',\n  },\n  {\n    from: 'control_special_accounts_income',\n    to: 'profit_before_tax',\n    formula: 'control_special_accounts_income',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_before_tax',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'profit_after_tax_special_subject',\n    to: 'net_profit',\n    formula: 'profit_after_tax_special_subject',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'other_shareholders_profits',\n  },\n];\nconst stockNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  {\n    // 营业成本\n    name: 'operating_costs',\n    depth: 2,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 毛利润\n    name: 'operating_income',\n    depth: 2,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 其他经营收益\n    name: 'others_operating_income',\n    depth: 2,\n    root: false,\n    type: 'income',\n    children: [\n      'fair_changes_income',\n      'invest_income',\n      'asset_disposal_income',\n      'assets_impairment_loss',\n      'credit_impairment_loss',\n      'other_operating_income_second',\n    ],\n  },\n  {\n    // 费用及营业税\n    name: 'others_costs_total',\n    depth: 3,\n    root: false,\n    type: 'expenditure',\n    children: [\n      'sales_fee',\n      'manage_fee',\n      'research_and_development_expenses',\n      'benefit_finance_fee',\n      'taxes_and_surcharges',\n      'others_costs_total_second',\n    ],\n  },\n  {\n    // 营业利润\n    name: 'operating_profit',\n    depth: 3,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 营业外净收益\n    name: 'non_operating_net_income',\n    depth: 3,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 利润总额\n    name: 'profit_total',\n    depth: 4,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 净利润\n    name: 'net_profit',\n    depth: 5,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 所得税费用\n    name: 'income_tax_expense',\n    depth: 5,\n    root: false,\n    type: 'expenditure',\n  },\n  {\n    // 归母净利润\n    name: 'parent_holder_net_profit',\n    depth: 6,\n    root: false,\n    type: 'profit',\n  },\n  {\n    // 少数股东损益\n    name: 'minority_holder_income_loss',\n    depth: 6,\n    root: false,\n    type: 'expenditure',\n  },\n];\nconst stockLinks: IntLink[] = [\n  {\n    from: 'operating_income_total',\n    to: 'operating_costs',\n  },\n  {\n    from: 'operating_income_total',\n    to: 'operating_income',\n  },\n  {\n    from: 'operating_income',\n    to: 'others_costs_total',\n  },\n  {\n    from: 'operating_income',\n    to: 'operating_profit',\n    formula: \"return data['operating_profit'].value-data['others_operating_income'].value\",\n  },\n  {\n    from: 'others_operating_income',\n    to: 'operating_profit',\n    formula: 'others_operating_income',\n  },\n  {\n    from: 'operating_profit',\n    to: 'profit_total',\n    formula: \"return data['profit_total'].value-data['non_operating_net_income'].value\",\n  },\n  {\n    from: 'non_operating_net_income',\n    to: 'profit_total',\n    formula: 'non_operating_net_income',\n  },\n  {\n    from: 'profit_total',\n    to: 'net_profit',\n  },\n  {\n    from: 'profit_total',\n    to: 'income_tax_expense',\n  },\n  {\n    from: 'net_profit',\n    to: 'parent_holder_net_profit',\n  },\n  {\n    from: 'net_profit',\n    to: 'minority_holder_income_loss',\n  },\n];\nconst stockFinaceNodes: IntNode[] = [\n  {\n    // 营业收入\n    name: 'operating_income_total',\n    depth: 0,\n    root: false,\n    type: 'income',\n  },\n  {\n    // 金融业务收入\n    name: 'financial_business_income',\n    depth: 0,\n    root: false,\n    type: 'income',\n    children: [\n      'premiums_earned',\n      'net_income_from_handling_of_assets',\n      'charges_commissions_income',\n      // 特殊科目收入\n      'operating_income_total_special',\n      'operating_income_total_balance',\n    ],\n  },\n  {\n    // 营业成本\n    name: 'op","infill":"('data', data, propData);","suffix":"\n      return defaultKey;\n    },\n  },\n  {\n    from: 'operating_expenses',\n    to: 'other_fee',\n  },\n];\nconst marketSet = {\n  [Market.HK]: {\n    nodes: hkNodes,\n    links: hkLinks,\n  },\n  [Market.AINVEST]: {\n    nodes: ainvestNodes,\n    links: ainvestLinks,\n  },\n  [Market.STOCK]: {\n    nodes: stockNodes,\n    links: stockLinks,\n  },\n  [Market.STOCK_FINANCE]: {\n    nodes: stockFinaceNodes,\n    links: stockFinaceLinks,\n  },\n};\n\nconst colorMap = {\n  [Theme.WHITE]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#29B393',\n      down: '#ED4949',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n  [Theme.BLACK]: {\n    [App.AINVEST]: {\n      [NodeType.INCOME]: '#165DFF',\n      [NodeType.EXPENDITURE]: '#ED4949',\n      [NodeType.PROFIT]: '#23997E',\n      up: '#2FC9A5',\n      down: '#FF5353',\n    },\n    [App.STOCK]: {\n      [NodeType.INCOME]: '#FF9500',\n      [NodeType.EXPENDITURE]: '#3366FF',\n      [NodeType.PROFIT]: '#FF2436',\n      up: '#ff2436',\n      down: '#07ab4b',\n    },\n  },\n};\nconst periodsListMap = {\n  [Market.AINVEST]: [\n    {\n      name: 'quarterly',\n      label: 'sankey_quarterly',\n    },\n    {\n      name: 'annual',\n      label: 'sankey_annual',\n    },\n  ],\n  [Market.STOCK]: [\n    {\n      name: 'Latest',\n      label: 'sankey_Latest',\n    },\n    {\n      name: 'Q1',\n      label: 'sankey_Q1',\n    },\n    {\n      name: 'H1',\n      label: 'sankey_H1',\n    },\n    {\n      name: 'Q3',\n      label: 'sankey_9M',\n    },\n    {\n      name: 'Annual',\n      label: 'sankey_annual',\n    },\n  ],\n};\n// 正负向之和节点\nconst directionsSumNodes = {\n  positive: {\n    name: 'sankey_income_positive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n  nagetive: {\n    name: 'sankey_income_nagetive',\n    compare: '',\n    depth: 1,\n    type: 'income',\n    root: false,\n  },\n};\n// 动态收入节点的目标节点（正负向之和目标节点）\nconst incomeSumNodeMap = {\n  [Market.AINVEST]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: true,\n    type: 'income',\n  },\n  [Market.HK]: {\n    show: true,\n    name: 'turnover',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  [Market.STOCK]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n  // 实际不存在\n  [Market.STOCK_FINANCE]: {\n    show: true,\n    name: 'operating_income_total',\n    depth: 1,\n    root: false,\n    type: 'income',\n  },\n};\n\nconst businessSet: { [key: string]: any } = {\n  [Market.AINVEST]: {\n    nodeHideSelf: [\n      ['net_profit', 'income_tax_expense', 'interest', 'other_item'],\n      ['selling_administrative_expenses', 'research_development_expenses', 'other_fee'],\n    ],\n    nodeHideAll: [\n      'operating_income_total',\n      'gross_profit',\n      'revenue_cost',\n      'operating_profit',\n      'operating_expenses',\n      'net_profit'\n    ],\n  },\n};\n\nexport {\n  defaultOption,\n  marketSet,\n  colorMap,\n  incomeSumNodeMap,\n  directionsSumNodes,\n  businessSet,\n  environmentMap,\n  periodsListMap,\n};\n","relevantFile":"<file_path>packages/components/finance/sankey-combined-chart/common/assistTreeNode.ts\n/**\n * 辅助树节点\n * 给桑基图建立树型关系，方便特殊逻辑处理\n * 作用：\n * 1、美股负数处理，当子节点存在有正有负数时（且子节点数大于等与3个时），\n * 将节点拆分为两个类型节点，一个负数之和节点，一个正数之和节点\n * \n */\nconst ainvestTree = {\n    \n};","relevantFileList":[],"filePath":"packages/components/finance/sankey-combined-chart/common/config.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" erating_costs',","deepseek-chat-lite":"erating_expenses',","deepseek-chat":"```\n// Start Generation Here\nconst ainvestNodes: IntNode[] =","copilot":"('data', data, propData);"}},{"prefix":"export const MEDAL_INTRO_PAGE = '//t.10jqka.com.cn/m/user/medalIntro';\n\n// 魔法值\nexport enum COMMON_NUMBER {\n  // 最大宽度\n  MAX_WIDTH = 660,\n  // 导航栏高度\n  NAVIGATION_HEIGHT = 88,\n  // 节流时间\n  THROTTLE_TIME = 500,\n  // 一秒\n  SECOND = ","infill":"1000,","suffix":"\n}\n","relevantFile":"<file_path>src/utils/methods/application.ts\nimport User from './user';\n\n/**\n * NATIVE_ACTION - 客户端协议名称\n * HEXIN_SHARE | PREVIEW_IMAGE | ALLOW_UPDATE_TITLE | NOTIFY_WEB\n */\nexport enum NATIVE_ACTION {\n  /** NOTIFY_WEB - 通知 web 方法（找文档，只会用，不清楚啥意思） */\n  NOTIFY_WEB = 'notifyWebHandleEvent',\n  /** NOTIFY_NATIVE_EVENT - 监听客户端事件 */\n  NOTIFY_NATIVE_EVENT = 'NotifyNativeEventToWeb',\n  /** QUERY_NATIVE_AGREEMENT - 此协议用于查询手炒是否支持指定协议 */\n  QUERY_NATIVE_AGREEMENT = 'jse_query',\n  /** GO_BACK - 返回上一级 */\n  GO_BACK = 'goback',\n  /** PAGE_SHOW - 页面展示（打开页面时不会触发） */\n  PAGE_SHOW = 'onShow',\n  /** COPY_FROM_WEB - 客户端复制 */\n  COPY_FROM_WEB = 'copyCommentFromWeb',\n  /** GET_HQ - 获取行情数据 */\n  GET_HQ = 'getHQ',\n  /** HEXIN_SHARE - 分享 */\n  HEXIN_SHARE = 'hexinShare',\n  /** INPUT_OLD_BOX - 客户端发布器 */\n  INPUT_OLD_BOX = 'lunguCallInputBox',\n  /** INPUT_BOX - 新版客户端发布器 */\n  INPUT_BOX = 'HXContentPublisher',\n  /** PREVIEW_IMAGE - 预览图片 */\n  PREVIEW_IMAGE = 'displayImageThumbnail',\n  /** CAN_OPEN_APP - 打开 app */\n  CAN_OPEN_APP = 'canOpenApp',\n  /** INSURANCE_WEB_HANDLE - Android 通知客户端修改导航栏和信号栏显示、隐藏、字体颜色、背景颜色、透明度 */\n  INSURANCE_WEB_HANDLE = 'insuranceWebHandle',\n  /** HIDE_WEB_NAVIGATION_BAR - 爱基金和爱基金 sdk 隐藏导航栏 */\n  HIDE_WEB_NAVIGATION_BAR = 'hideWebNavigationBar',\n  /** WEB_GO_BACK - 爱基金和爱基金 sdk 页面返回 */\n  WEB_GO_BACK = 'webGoBack',\n  /** ALLOW_UPDATE_TITLE - iOS 允许更新客户端标题 */\n  ALLOW_UPDATE_TITLE = 'updateTitleAutomatically',\n  /** CHANGE_TITLE - 初始化修改安卓导航栏标题 */\n  CHANGE_TITLE = 'changeWebViewTitle',\n  /** SAVE_IMAGE_TO_ALBUM - 保存图片到相册 */\n  SAVE_IMAGE_TO_ALBUM = 'saveImageToAlbum',\n  /** SAVE_IMAGE - 爱基金和爱基金 sdk 保存图片 */\n  SAVE_IMAGE = 'saveImage',\n}\n// 应用相关方法\nexport default class Application {\n  private static _environment: Record<string, boolean> = {};\n  /**\n   * 当前应用黑白版状态（可能在后续页面中可以修改，因此每次获取都需要计算）\n   * @returns {'black' | 'white'}\n   */\n  static get themeMode(): 'black' | 'white' {\n    return navigator.userAgent.toLowerCase().match(/hxtheme\\/1/) ? 'black' : 'white';\n  }\n  /**\n   * 获取当前应用运行环境\n   * @returns {Record<string, boolean>}\n   */\n勋章介绍页地址","relevantFileList":[],"filePath":"src/constant.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 1000,","deepseek-chat-lite":"1000,","deepseek-chat":"```\n// Start Generation Here\n  1000,\n  //","copilot":"1000,"}},{"prefix":"export const MEDAL_INTRO_PAGE = '//t.10jqka.com.cn/m/user/medalIntro';\n\n// 魔法值\nexport enum COMMON_NUMBER {\n  // 最大宽度\n  MAX_WIDTH = 660,\n  // 导航栏高度\n  NAVIGATION_HEIGHT = 88,\n  // 节流时间\n  THROTTLE_TIME = 500,\n  // ","infill":"一秒","suffix":"\n  SECOND = 1000,\n}\n","relevantFile":"<file_path>src/utils/methods/application.ts\nimport User from './user';\n\n/**\n * NATIVE_ACTION - 客户端协议名称\n * HEXIN_SHARE | PREVIEW_IMAGE | ALLOW_UPDATE_TITLE | NOTIFY_WEB\n */\nexport enum NATIVE_ACTION {\n  /** NOTIFY_WEB - 通知 web 方法（找文档，只会用，不清楚啥意思） */\n  NOTIFY_WEB = 'notifyWebHandleEvent',\n  /** NOTIFY_NATIVE_EVENT - 监听客户端事件 */\n  NOTIFY_NATIVE_EVENT = 'NotifyNativeEventToWeb',\n  /** QUERY_NATIVE_AGREEMENT - 此协议用于查询手炒是否支持指定协议 */\n  QUERY_NATIVE_AGREEMENT = 'jse_query',\n  /** GO_BACK - 返回上一级 */\n  GO_BACK = 'goback',\n  /** PAGE_SHOW - 页面展示（打开页面时不会触发） */\n  PAGE_SHOW = 'onShow',\n  /** COPY_FROM_WEB - 客户端复制 */\n  COPY_FROM_WEB = 'copyCommentFromWeb',\n  /** GET_HQ - 获取行情数据 */\n  GET_HQ = 'getHQ',\n  /** HEXIN_SHARE - 分享 */\n  HEXIN_SHARE = 'hexinShare',\n  /** INPUT_OLD_BOX - 客户端发布器 */\n  INPUT_OLD_BOX = 'lunguCallInputBox',\n  /** INPUT_BOX - 新版客户端发布器 */\n  INPUT_BOX = 'HXContentPublisher',\n  /** PREVIEW_IMAGE - 预览图片 */\n  PREVIEW_IMAGE = 'displayImageThumbnail',\n  /** CAN_OPEN_APP - 打开 app */\n  CAN_OPEN_APP = 'canOpenApp',\n  /** INSURANCE_WEB_HANDLE - Android 通知客户端修改导航栏和信号栏显示、隐藏、字体颜色、背景颜色、透明度 */\n  INSURANCE_WEB_HANDLE = 'insuranceWebHandle',\n  /** HIDE_WEB_NAVIGATION_BAR - 爱基金和爱基金 sdk 隐藏导航栏 */\n  HIDE_WEB_NAVIGATION_BAR = 'hideWebNavigationBar',\n  /** WEB_GO_BACK - 爱基金和爱基金 sdk 页面返回 */\n  WEB_GO_BACK = 'webGoBack',\n  /** ALLOW_UPDATE_TITLE - iOS 允许更新客户端标题 */\n  ALLOW_UPDATE_TITLE = 'updateTitleAutomatically',\n  /** CHANGE_TITLE - 初始化修改安卓导航栏标题 */\n  CHANGE_TITLE = 'changeWebViewTitle',\n  /** SAVE_IMAGE_TO_ALBUM - 保存图片到相册 */\n  SAVE_IMAGE_TO_ALBUM = 'saveImageToAlbum',\n  /** SAVE_IMAGE - 爱基金和爱基金 sdk 保存图片 */\n  SAVE_IMAGE = 'saveImage',\n}\n// 应用相关方法\nexport default class Application {\n  private static _environment: Record<string, boolean> = {};\n  /**\n   * 当前应用黑白版状态（可能在后续页面中可以修改，因此每次获取都需要计算）\n   * @returns {'black' | 'white'}\n   */\n  static get themeMode(): 'black' | 'white' {\n    return navigator.userAgent.toLowerCase().match(/hxtheme\\/1/) ? 'black' : 'white';\n  }\n  /**\n   * 获取当前应用运行环境\n   * @returns {Record<string, boolean>}\n   */\n勋章介绍页地址","relevantFileList":[],"filePath":"src/constant.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 节流时间","deepseek-chat-lite":"防抖时间","deepseek-chat":"```\n// Start Generation Here\n  // 默认分页大小\n ","copilot":"一秒"}},{"prefix":"interface GetMedalWallParams {\n  uid: number;\n}\n\n// 勋章墙返回数据\ninterface GetMedalWallResult {\n  // 新版勋章墙列表\n  listNew: Array<NewMedalList>;\n  // 老版勋章墙列表\n  listOld: Array<OldMedalList>;\n  // 已获得勋章数量\n  medalNum: number;\n  // 勋章墙jiesah\n  medalWallDesc","infill":": string;","suffix":"\n  // 注册同花顺日期（单位：天）\n  investmentDays: string;\n  // 用户昵称\n  nickname: string;\n  // 用户头像\n  avatar: string;\n  // 佩戴勋章\n  wearMedal: {\n    // 勋章昵称\n    medalName: string;\n    // logo地址\n    logoUrl: string;\n    // 勋章id\n    medalId: number;\n  };\n}\n\n// 勋章墙新版勋章列表\ninterface NewMedalList {\n  // 勋章类别\n  medalCategoryName: string;\n  // 勋章类别描述\n  medalCategoryDescription: string;\n  // 勋章类别id\n  medalCategoryId: number;\n  // 勋章系列列表\n  medalSeriesList: Array<MedalDetailData>\n}\n\n// 勋章墙新版勋章详情\ninterface MedalDetailData {\n  // 勋章昵称\n  medalName: string;\n  // 勋章id\n  medalId: number;\n  // 勋章系列id\n  seriesId: number;\n  // 勋章等级\n  level: number;\n  // 勋章大图logo\n  logoUrl: string;\n  // 是否获取勋章 true：获取 false：未获取\n  hasMedal: boolean;\n  // 是否最新获取 true：最新 false：历史\n  newAcquired: boolean;\n  // 是否佩戴 true：佩戴 false：未佩戴\n  wearMedal: boolean;\n  // 勋章类型 common：普通勋章 activity：活动勋章 history：历史勋章\n  medalType: 'common' | 'activity' | 'history';\n  // 勋章获取时间 单位：秒 0: 永久获取\n  expirationTime: number;\n}\n\n// 勋章墙老版勋章列表\ninterface OldMedalList {\n  // 勋章类别\n  medalCategoryName: string;\n  // 勋章类别描述\n  medalCategoryDescription: string;\n  // 勋章系列列表\n  medalSeriesList: Array<OldMedalDetailData>;\n}\n\ninterface OldMedalDetailData {\n  // 勋章id\n  medalId: number;\n  // 勋章昵称\n  medalName: string;\n  // 勋章等级\n  level: number;\n  // 勋章大图logo\n  logoUrl: string;\n  // 勋章类型 history：历史勋章\n  medalType: 'history';\n}\n\n// 勋章墙操作勋章参数\ninterface OperateMedalParams {\n  // 用户id\n  uid: number;\n  // 勋章id\n  medalId: number;\n  // 操作 wear：佩戴 remove：卸下\n  action: 'wear' | 'remove';\n}\n\n// 勋章墙更新勋章参数\ninterface UpdateMedalParams {\n  // 用户id\n  uid: number;\n  // 勋章id\n  medalIdList: string;\n}\n","relevantFile":"<file_path>src/api/medall-wall.ts\nimport * as reportRequest from '@thsf2e/public-method/es/request/report-request';\n\nimport { GET_MEDAL_DATA, UPDATE_MEDAL_STATUS, WEAR_MEDAL } from './constant';\n\n/**\n * 获取勋章墙数据\n * @param {GetMedalWallParams} param - 参数\n * @returns {Promise<GetMedalWallResult>} - 勋章墙数据\n */\nfunction getMedalData(param: GetMedalWallParams): Promise<GetMedalWallResult> {\n  return reportRequest.default.getData<GetMedalWallResult>(\n    GET_MEDAL_DATA,\n    {\n      ...param,\n    },\n  );\n}\n\n/**\n * 佩戴/取消佩戴勋章\n * @param {OperateMedalParams} param - 参数\n */\nfunction operateMedal(param: OperateMedalParams): Promise<void> {\n  return reportRequest.default.postData<void>(\n    WEAR_MEDAL,\n    {\n      ...param,\n    },\n    {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n}\n\n/**\n * 更新勋章状态\n * @param {UpdateMedalParams} param - 参数\n */\nfunction updateMedal(param: UpdateMedalParams): Promise<void> {\n  return reportRequest.default.postData<void>(\n    UPDATE_MEDAL_STATUS,\n    {\n      ...param,\n    },\n    {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n}\n\nexport {\n  getMedalData,\n  operateMedal,\n  updateMedal,\n};\n勋章墙请求参数","relevantFileList":[],"filePath":"src/types/service/medal-wall.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" : string;","deepseek-chat-lite":"ription: string;","deepseek-chat":"```\n// Start Generation Here\n  // 勋章墙描述\n ","copilot":": string;"}},{"prefix":"import EventEmitter from \"@/utils/EventEmitter\";\nimport sleep from \"@/utils/sleep\";\nenum emitterEvent {\n\tload = \"load\",\n\tpageScroll = \"pageScroll\",\n\tscaleChange = \"scaleChange\",\n\tfindContent = \"findContent\"\n}\nexport default class HTMLReader extends EventEmitter {\n\tframe: HTMLElement;\n\tsearchText: string;\n\tisInit: boolean;\n\tquery: string;\n\tprevQuery: string;\n\tpageHeight: number;\n\tdata: string;\n\tcustomBody: string;\n\tisCustom: boolean;\n\tconstructor({\n\t\tframe,\n\t\tsearchText,\n\t\tdata,\n\t\tisCustom\n\t}: {\n\t\tframe: HTMLElement;\n\t\tsearchText: string;\n\t\tdata: string;\n\t\tisCustom: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.frame = frame;\n\t\tthis.searchText = searchText || \"\";\n\t\tthis.isInit = false;\n\t\tthis.isCustom = isCustom;\n\t\tthis.query = \"\";\n\t\tthis.prevQuery = \"\";\n\t\tthis.customBody = \"custombody\";\n\t\tthis.pageHeight = 600;\n\t\tthis.data = this.handleReplaceBody(data);\n\t\tthis.pagechanging = this.pagechanging.bind(this);\n\t\tthis.frame.addEventListener(\"scroll\", this.pagechanging);\n\t\tconst initPromise = sleep(300);\n\t\tinitPromise.then(() => {\n\t\t\tthis.render();\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\n\thandleReplaceBody(str: string) {\n\t\tif (!this.isCustom) return str;\n\t\tlet body = str;\n\t\tconst customBody = this.customBody;\n\t\tconst index = body.indexOf(\"<body>\");\n\t\tconst index1 = body.indexOf(\"</body>\");\n\t\tif (index === -1) {\n\t\t\tbody = `<${customBody}>${body}</${customBody}>`;\n\t\t} else {\n\t\t\tbody = body.replace(\"<body>\", `<${customBody}>`);\n\t\t}\n\t\tif (index1 === -1) {\n\t\t\tbody = `${body}</${customBody}>`;\n\t\t} else {\n\t\t\tbody = body.replace(\"</body>\", `</${customBody}>`);\n\t\t}\n\t\treturn body;\n\t}\n\t// 将文中的<body>和</body>标签替换成custombody\n\t// <body>可能还有一些属性\n\t// <body class=\"xxx\"> => <custombody class=\"xxx\">\n\t// <body> => <custombody>\n\t// </body> => </custombody>\n\t// 不存在<body> => <custombody>...</custombody>","infill":"// 不存在</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\t// 不存在<body>和</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\treplaceBody() {\r\n\t\t\r\n\t}","suffix":"\r\n\trender() {\r\n\t\tthis.emit(emitterEvent.load, true);\r\n\t\tthis.renderHtml();\r\n\t}\r\n\trenderHtml() {\r\n\t\tthis.frame.innerHTML = this.data;\r\n\t\tthis.pagesInit();\r\n\t}\r\n\tpagesInit() {\r\n\t\tthis.isInit = true;\r\n\t\tthis.emit(emitterEvent.load, false);\r\n\t\tthis.emit(emitterEvent.scaleChange, 1);\r\n\t\tconst initPromise = sleep(100);\r\n\t\tinitPromise.then(() => {\r\n\t\t\tthis.pagechanging({\r\n\t\t\t\ttarget: this.frame\r\n\t\t\t} as unknown as Event);\r\n\t\t\tinitPromise.clear();\r\n\t\t});\r\n\t}\r\n\t/**通过文本溯源 */\r\n\ttraceSourceByText(text: string) {\r\n\t\tif (!text) return;\r\n\t\ttext = text.trim();\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\r\n\t\tconst wrap = this.frame;\r\n\t\tconst results: Recordable[] = [];\r\n\t\tfunction getTextNodes(dom: ChildNode, pIndex: any = null) {\r\n\t\t\tfor (let i = 0; i < dom.childNodes.length; i++) {\r\n\t\t\t\tconst node = dom.childNodes[i];\r\n\t\t\t\tlet parentIndex = pIndex || [];\r\n\t\t\t\tparentIndex = pIndex ? parentIndex.concat([i]) : [i];\r\n\t\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\t\tresults.push({\r\n\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\tpIndex: parentIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (node.nodeType === 1) {\r\n\t\t\t\t\tgetTextNodes(node, parentIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetTextNodes(wrap);\r\n\r\n\t\tconst texts = results.map(v => v.node.nodeValue.trim()).join(\"\");\r\n\t\tconst matchIndex = texts.indexOf(text);\r\n\t\tif (matchIndex === -1) {\r\n\t\t\tconsole.log(\"text is not matched\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet total = 0;\r\n\t\tconst items: Recordable[] = [];\r\n\t\tfor (let i = 0; i < results.length; i++) {\r\n\t\t\tconst item = results[i].node.nodeValue.trim();\r\n\t\t\ttotal += item.length;\r\n\t\t\tif (total >= matchIndex && total <= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t} else if (total >= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (items.length) {\r\n\t\t\tconst eles = items.map(v => v.node.parentElement).filter(v => v !== wrap);\r\n\t\t\teles.forEach(v => {\r\n\t\t\t\tv.classList.add(className);\r\n\t\t\t});\r\n\t\t\tconst firstEle = eles[0];\r\n\t\t\tfirstEle?.scrollIntoView(false);\r\n\t\t}\r\n\t}\r\n\t/**通过属性名-属性值溯源 */\r\n\ttraceSourceByProperty(property: string, value: string) {\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\tconst element = this.frame.querySelector(`[${property}=\"${value}\"]`);\r\n\t\tif (!element) return;\r\n\t\telement.classList.add(className);\r\n\t\telement.scrollIntoView(false);\r\n\t}\r\n\t/** 通过xpath溯源 */\r\n\ttraceSourceByXPath(xpath: string[]) {\r\n\t\tif (!Array.isArray(xpath) || !xpath.length) return;\r\n\t\tconst className = \"ifind_xpath_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet _xpath = xpath[0];\r\n\t\t\tif (this.isCustom) {\r\n\t\t\t\t_xpath = xpath[0].replace(/body/g, this.customBody);\r\n\t\t\t}\r\n\t\t\tconst element = document\r\n\t\t\t\t.evaluate(_xpath, this.frame)\r\n\t\t\t\t.iterateNext() as HTMLElement;\r\n\t\t\tif (!element) {\r\n\t\t\t\tconsole.log(\"element is not found, xpath:\", _xpath);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.classList.add(className);\r\n\t\t\telement.scrollIntoView(false);\r\n\t\t} catch (error) {}\r\n\t}\r\n\tpagechanging(e: Event) {\r\n\t\t// const ele = e.target as HTMLElement;\r\n\t\t// const { scrollHeight, scrollTop } = ele;\r\n\t\t// console.log(\"xxxx\", scrollHeight, scrollTop);\r\n\t\t// const pageTotal = Math.ceil(scrollHeight / pageHeight);\r\n\t\t// const page = Math.ceil(scrollTop / pageHeight) + 1;\r\n\t\tthis.emit(emitterEvent.pageScroll, {\r\n\t\t\tpage: 1,\r\n\t\t\tpageTotal: 1\r\n\t\t});\r\n\t}\r\n\tdestroyed() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.frame.removeEventListener(\"scroll\", this.pagechanging);\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t}\r\n\t_replace(nodes: any, reg: RegExp, textNodes: any[]) {\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (node.nodeType === 1 && node.style?.display === \"none\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (node.nodeType === 3 && node.nodeValue?.match(reg)) {\r\n\t\t\t\ttextNodes.push(node);\r\n\t\t\t} else {\r\n\t\t\t\tif (node.childNodes?.length) {\r\n\t\t\t\t\tthis._replace(node.childNodes, reg, textNodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoSearch(query = this.query) {\r\n\t\tif (this.prevQuery) {\r\n\t\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\t\tif (replaceEles.length) {\r\n\t\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (this.query === this.prevQuery || this.query == \"\") return;\r\n\t\tthis.prevQuery = query;\r\n\t\t(this.frame.parentElement as HTMLElement).scrollTop = 0;\r\n\t\tif (this.isInit) {\r\n\t\t\tconst regExp = new RegExp(\r\n\t\t\t\tquery.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"),\r\n\t\t\t\t\"g\"\r\n\t\t\t);\r\n\t\t\tconst textNodes: any[] = [];\r\n\t\t\tthis._replace(this.frame.childNodes, regExp, textNodes);\r\n\t\t\tfor (let i = 0; i < textNodes.length; i++) {\r\n\t\t\t\tconst node = textNodes[i];\r\n\t\t\t\tconst replaceTxet = node.nodeValue.replace(\r\n\t\t\t\t\tregExp,\r\n\t\t\t\t\t'<replace class=\"highlight\">$&</replace>'\r\n\t\t\t\t);\r\n\t\t\t\tif (node.parentElement) {\r\n\t\t\t\t\tnode.parentElement.innerHTML = replaceTxet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.queryDocument();\r\n\t\t\tthis.queryNext(1);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t// 进行搜索匹配结果\r\n\tqueryDocument() {\r\n\t\tconst len = this.frame.querySelectorAll(\"replace\").length;\r\n\t\tconst data = new Array(len);\r\n\t\tthis.emit(emitterEvent.findContent, data);\r\n\t}\r\n\r\n\tcancelSearch() {\r\n\t\tthis.query = \"\";\r\n\t\tthis.prevQuery = \"\";\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync queryNext(index: number) {\r\n\t\tindex = index - 1;\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tconst lastIndex = index - 1 < 0 ? replaceEles.length - 1 : index - 1;\r\n\t\t\tconst nextIndex = index + 1 > replaceEles.length - 1 ? 0 : index + 1;\r\n\t\t\tconst last = replaceEles[lastIndex] as HTMLElement;\r\n\t\t\tconst next = replaceEles[nextIndex] as HTMLElement;\r\n\t\t\tlast.classList.remove(\"selected\");\r\n\t\t\tnext.classList.remove(\"selected\");\r\n\t\t\tconst item = replaceEles[index] as HTMLElement;\r\n\t\t\tif (item) {\r\n\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\titem.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollPageIntoView(pageNumber: number) {}\r\n}\r\n","relevantFile":"<file_path>source/ai_doc/build/proxy.ts\ntype Ret = Record<string, string | ProxyOptions>;\n\nconst ifindCookie: Recordable = {\n\tCookie:\n\t\"v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=10a0480cb400b407420dc068243e1dd42; jgbsessid=77c58b32ec8bb7d2d5a8eba8cbe0e638; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0OTo6Ojo2MDI2MDQ1NzI6MTcxNTkxMTk3Mjo6Ojo4NjQwMDo6MTBhMDQ4MGNiNDAwYjQwNzQyMGRjMDY4MjQzZTFkZDQyOmRlZmF1bHRfMTE6MA%3D%3D; ticket=c2f9846eb17a94022adeba580e80afff; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2\"\n};\nexport function createProxy() {\n\tconst ret: Ret = {\n\t\t\"/standardgwapi\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/standardgwapi/api/ai_doc_service\": {\n\t\t\ttarget: \"http://10.0.16.189:8080\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t},\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://10.0.16.123:8080\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t// },\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://172.19.80.62\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(/\"\"/, \"\")\n\t\t// },\n\t\t\"/thsft/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/gwstatic/static/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,","relevantFileList":[],"filePath":"source/ai_doc/src/utils/HTMLReader.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\nhandleReplaceBody(str: string) {","copilot":"// 不存在</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\t// 不存在<body>和</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\treplaceBody() {\r\n\t\t\r\n\t}"}},{"prefix":"import EventEmitter from \"@/utils/EventEmitter\";\nimport sleep from \"@/utils/sleep\";\nenum emitterEvent {\n\tload = \"load\",\n\tpageScroll = \"pageScroll\",\n\tscaleChange = \"scaleChange\",\n\tfindContent = \"findContent\"\n}\nexport default class HTMLReader extends EventEmitter {\n\tframe: HTMLElement;\n\tsearchText: string;\n\tisInit: boolean;\n\tquery: string;\n\tprevQuery: string;\n\tpageHeight: number;\n\tdata: string;\n\tcustomBody: string;\n\tisCustom: boolean;\n\tconstructor({\n\t\tframe,\n\t\tsearchText,\n\t\tdata,\n\t\tisCustom\n\t}: {\n\t\tframe: HTMLElement;\n\t\tsearchText: string;\n\t\tdata: string;\n\t\tisCustom: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.frame = frame;\n\t\tthis.searchText = searchText || \"\";\n\t\tthis.isInit = false;\n\t\tthis.isCustom = isCustom;\n\t\tthis.query = \"\";\n\t\tthis.prevQuery = \"\";\n\t\tthis.customBody = \"custombody\";\n\t\tthis.pageHeight = 600;\n\t\tthis.data = this.handleReplaceBody(data);\n\t\tthis.pagechanging = this.pagechanging.bind(this);\n\t\tthis.frame.addEventListener(\"scroll\", this.pagechanging);\n\t\tconst initPromise = sleep(300);\n\t\tinitPromise.then(() => {\n\t\t\tthis.render();\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\n\thandleReplaceBody(str: string) {\n\t\tif (!this.isCustom) return str;\n\t\tlet body = str;\n\t\tconst customBody = this.customBody;\n\t\t// body可能有属性  要使用正则","infill":"替换\r\n\t\tbody = body.replace(/<body[^>]*>/, `<${customBody}>`);","suffix":"\r\n\t\tconst index = body.indexOf(\"<body>\");\r\n\t\tconst index1 = body.indexOf(\"</body>\");\r\n\t\tif (index === -1) {\r\n\t\t\tbody = `<${customBody}>${body}</${customBody}>`;\r\n\t\t} else {\r\n\t\t\tbody = body.replace(\"<body>\", `<${customBody}>`);\r\n\t\t}\r\n\t\tif (index1 === -1) {\r\n\t\t\tbody = `${body}</${customBody}>`;\r\n\t\t} else {\r\n\t\t\tbody = body.replace(\"</body>\", `</${customBody}>`);\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\trender() {\r\n\t\tthis.emit(emitterEvent.load, true);\r\n\t\tthis.renderHtml();\r\n\t}\r\n\trenderHtml() {\r\n\t\tthis.frame.innerHTML = this.data;\r\n\t\tthis.pagesInit();\r\n\t}\r\n\tpagesInit() {\r\n\t\tthis.isInit = true;\r\n\t\tthis.emit(emitterEvent.load, false);\r\n\t\tthis.emit(emitterEvent.scaleChange, 1);\r\n\t\tconst initPromise = sleep(100);\r\n\t\tinitPromise.then(() => {\r\n\t\t\tthis.pagechanging({\r\n\t\t\t\ttarget: this.frame\r\n\t\t\t} as unknown as Event);\r\n\t\t\tinitPromise.clear();\r\n\t\t});\r\n\t}\r\n\t/**通过文本溯源 */\r\n\ttraceSourceByText(text: string) {\r\n\t\tif (!text) return;\r\n\t\ttext = text.trim();\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\r\n\t\tconst wrap = this.frame;\r\n\t\tconst results: Recordable[] = [];\r\n\t\tfunction getTextNodes(dom: ChildNode, pIndex: any = null) {\r\n\t\t\tfor (let i = 0; i < dom.childNodes.length; i++) {\r\n\t\t\t\tconst node = dom.childNodes[i];\r\n\t\t\t\tlet parentIndex = pIndex || [];\r\n\t\t\t\tparentIndex = pIndex ? parentIndex.concat([i]) : [i];\r\n\t\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\t\tresults.push({\r\n\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\tpIndex: parentIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (node.nodeType === 1) {\r\n\t\t\t\t\tgetTextNodes(node, parentIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetTextNodes(wrap);\r\n\r\n\t\tconst texts = results.map(v => v.node.nodeValue.trim()).join(\"\");\r\n\t\tconst matchIndex = texts.indexOf(text);\r\n\t\tif (matchIndex === -1) {\r\n\t\t\tconsole.log(\"text is not matched\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet total = 0;\r\n\t\tconst items: Recordable[] = [];\r\n\t\tfor (let i = 0; i < results.length; i++) {\r\n\t\t\tconst item = results[i].node.nodeValue.trim();\r\n\t\t\ttotal += item.length;\r\n\t\t\tif (total >= matchIndex && total <= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t} else if (total >= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (items.length) {\r\n\t\t\tconst eles = items.map(v => v.node.parentElement).filter(v => v !== wrap);\r\n\t\t\teles.forEach(v => {\r\n\t\t\t\tv.classList.add(className);\r\n\t\t\t});\r\n\t\t\tconst firstEle = eles[0];\r\n\t\t\tfirstEle?.scrollIntoView(false);\r\n\t\t}\r\n\t}\r\n\t/**通过属性名-属性值溯源 */\r\n\ttraceSourceByProperty(property: string, value: string) {\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\tconst element = this.frame.querySelector(`[${property}=\"${value}\"]`);\r\n\t\tif (!element) return;\r\n\t\telement.classList.add(className);\r\n\t\telement.scrollIntoView(false);\r\n\t}\r\n\t/** 通过xpath溯源 */\r\n\ttraceSourceByXPath(xpath: string[]) {\r\n\t\tif (!Array.isArray(xpath) || !xpath.length) return;\r\n\t\tconst className = \"ifind_xpath_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet _xpath = xpath[0];\r\n\t\t\tif (this.isCustom) {\r\n\t\t\t\t_xpath = xpath[0].replace(/body/g, this.customBody);\r\n\t\t\t}\r\n\t\t\tconst element = document\r\n\t\t\t\t.evaluate(_xpath, this.frame)\r\n\t\t\t\t.iterateNext() as HTMLElement;\r\n\t\t\tif (!element) {\r\n\t\t\t\tconsole.log(\"element is not found, xpath:\", _xpath);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.classList.add(className);\r\n\t\t\telement.scrollIntoView(false);\r\n\t\t} catch (error) {}\r\n\t}\r\n\tpagechanging(e: Event) {\r\n\t\t// const ele = e.target as HTMLElement;\r\n\t\t// const { scrollHeight, scrollTop } = ele;\r\n\t\t// console.log(\"xxxx\", scrollHeight, scrollTop);\r\n\t\t// const pageTotal = Math.ceil(scrollHeight / pageHeight);\r\n\t\t// const page = Math.ceil(scrollTop / pageHeight) + 1;\r\n\t\tthis.emit(emitterEvent.pageScroll, {\r\n\t\t\tpage: 1,\r\n\t\t\tpageTotal: 1\r\n\t\t});\r\n\t}\r\n\tdestroyed() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.frame.removeEventListener(\"scroll\", this.pagechanging);\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t}\r\n\t_replace(nodes: any, reg: RegExp, textNodes: any[]) {\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (node.nodeType === 1 && node.style?.display === \"none\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (node.nodeType === 3 && node.nodeValue?.match(reg)) {\r\n\t\t\t\ttextNodes.push(node);\r\n\t\t\t} else {\r\n\t\t\t\tif (node.childNodes?.length) {\r\n\t\t\t\t\tthis._replace(node.childNodes, reg, textNodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoSearch(query = this.query) {\r\n\t\tif (this.prevQuery) {\r\n\t\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\t\tif (replaceEles.length) {\r\n\t\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (this.query === this.prevQuery || this.query == \"\") return;\r\n\t\tthis.prevQuery = query;\r\n\t\t(this.frame.parentElement as HTMLElement).scrollTop = 0;\r\n\t\tif (this.isInit) {\r\n\t\t\tconst regExp = new RegExp(\r\n\t\t\t\tquery.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"),\r\n\t\t\t\t\"g\"\r\n\t\t\t);\r\n\t\t\tconst textNodes: any[] = [];\r\n\t\t\tthis._replace(this.frame.childNodes, regExp, textNodes);\r\n\t\t\tfor (let i = 0; i < textNodes.length; i++) {\r\n\t\t\t\tconst node = textNodes[i];\r\n\t\t\t\tconst replaceTxet = node.nodeValue.replace(\r\n\t\t\t\t\tregExp,\r\n\t\t\t\t\t'<replace class=\"highlight\">$&</replace>'\r\n\t\t\t\t);\r\n\t\t\t\tif (node.parentElement) {\r\n\t\t\t\t\tnode.parentElement.innerHTML = replaceTxet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.queryDocument();\r\n\t\t\tthis.queryNext(1);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t// 进行搜索匹配结果\r\n\tqueryDocument() {\r\n\t\tconst len = this.frame.querySelectorAll(\"replace\").length;\r\n\t\tconst data = new Array(len);\r\n\t\tthis.emit(emitterEvent.findContent, data);\r\n\t}\r\n\r\n\tcancelSearch() {\r\n\t\tthis.query = \"\";\r\n\t\tthis.prevQuery = \"\";\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync queryNext(index: number) {\r\n\t\tindex = index - 1;\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tconst lastIndex = index - 1 < 0 ? replaceEles.length - 1 : index - 1;\r\n\t\t\tconst nextIndex = index + 1 > replaceEles.length - 1 ? 0 : index + 1;\r\n\t\t\tconst last = replaceEles[lastIndex] as HTMLElement;\r\n\t\t\tconst next = replaceEles[nextIndex] as HTMLElement;\r\n\t\t\tlast.classList.remove(\"selected\");\r\n\t\t\tnext.classList.remove(\"selected\");\r\n\t\t\tconst item = replaceEles[index] as HTMLElement;\r\n\t\t\tif (item) {\r\n\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\titem.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollPageIntoView(pageNumber: number) {}\r\n}\r\n","relevantFile":"<file_path>source/ai_doc/build/proxy.ts\ntype Ret = Record<string, string | ProxyOptions>;\n\nconst ifindCookie: Recordable = {\n\tCookie:\n\t\"v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=10a0480cb400b407420dc068243e1dd42; jgbsessid=77c58b32ec8bb7d2d5a8eba8cbe0e638; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0OTo6Ojo2MDI2MDQ1NzI6MTcxNTkxMTk3Mjo6Ojo4NjQwMDo6MTBhMDQ4MGNiNDAwYjQwNzQyMGRjMDY4MjQzZTFkZDQyOmRlZmF1bHRfMTE6MA%3D%3D; ticket=c2f9846eb17a94022adeba580e80afff; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2\"\n};\nexport function createProxy() {\n\tconst ret: Ret = {\n\t\t\"/standardgwapi\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/standardgwapi/api/ai_doc_service\": {\n\t\t\ttarget: \"http://10.0.16.189:8080\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t},\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://10.0.16.123:8080\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t// },\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://172.19.80.62\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(/\"\"/, \"\")\n\t\t// },\n\t\t\"/thsft/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/gwstatic/static/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,","relevantFileList":[],"filePath":"source/ai_doc/src/utils/HTMLReader.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 匹配\r","deepseek-chat-lite":"表达式","deepseek-chat":"```\n// Start Generation Here\n\t\tconst bodyRegex = /<body[^","copilot":"替换\r\n\t\tbody = body.replace(/<body[^>]*>/, `<${customBody}>`);"}},{"prefix":"import EventEmitter from \"@/utils/EventEmitter\";\nimport sleep from \"@/utils/sleep\";\nenum emitterEvent {\n\tload = \"load\",\n\tpageScroll = \"pageScroll\",\n\tscaleChange = \"scaleChange\",\n\tfindContent = \"findContent\"\n}\nexport default class HTMLReader extends EventEmitter {\n\tframe: HTMLElement;\n\tsearchText: string;\n\tisInit: boolean;\n\tquery: string;\n\tprevQuery: string;\n\tpageHeight: number;\n\tdata: string;\n\tcustomBody: string;\n\tisCustom: boolean;\n\tconstructor({\n\t\tframe,\n\t\tsearchText,\n\t\tdata,\n\t\tisCustom\n\t}: {\n\t\tframe: HTMLElement;\n\t\tsearchText: string;\n\t\tdata: string;\n\t\tisCustom: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.frame = frame;\n\t\tthis.searchText = searchText || \"\";\n\t\tthis.isInit = false;\n\t\tthis.isCustom = isCustom;\n\t\tthis.query = \"\";\n\t\tthis.prevQuery = \"\";\n\t\tthis.customBody = \"custombody\";\n\t\tthis.pageHeight = 600;\n\t\tthis.data = this.handleReplaceBody(data);\n\t\tthis.pagechanging = this.pagechanging.bind(this);\n\t\tthis.frame.addEventListener(\"scroll\", this.pagechanging);\n\t\tconst initPromise = sleep(300);\n\t\tinitPromise.then(() => {\n\t\t\tthis.render();\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\n\thandleReplaceBody(str: string) {\n\t\tif (!this.isCustom) return str;\n\t\tlet body = str;\n\t\tconst customBody = this.customBody;\n\t\tconst index = body.indexOf(\"<body>\");\n\t\tconst index1 = body.indexOf(\"</body>\");\n\t\tif (index === -1) {\n\t\t\tbody = `<${customBody}>${body}</${customBody}>`;\n\t\t} else {\n\t\t\tbody = body.replace(\"<body>\", `<${customBody}>`);\n\t\t}\n\t\tif (index1 === -1) {\n\t\t\tbody = `${body}</${customBody}>`;\n\t\t} else {\n\t\t\tbody = body.replace(\"</body>\", `</${customBody}>`);\n\t\t}\n\t\treturn body;\n\t}\n\t// 将文中的<body>和</body>标签替换成custombody\n\t// <body>可能还有一些属性","infill":"// <body class=\"xxx\"> => <custombody class=\"xxx\">\r\n\t// <body> => <custombody>\r\n\t// </body> => </custombody>\r\n\t// 不存在<body> => <custombody>...</custombody>\r\n\t// 不存在</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\t","suffix":"\r\n\trender() {\r\n\t\tthis.emit(emitterEvent.load, true);\r\n\t\tthis.renderHtml();\r\n\t}\r\n\trenderHtml() {\r\n\t\tthis.frame.innerHTML = this.data;\r\n\t\tthis.pagesInit();\r\n\t}\r\n\tpagesInit() {\r\n\t\tthis.isInit = true;\r\n\t\tthis.emit(emitterEvent.load, false);\r\n\t\tthis.emit(emitterEvent.scaleChange, 1);\r\n\t\tconst initPromise = sleep(100);\r\n\t\tinitPromise.then(() => {\r\n\t\t\tthis.pagechanging({\r\n\t\t\t\ttarget: this.frame\r\n\t\t\t} as unknown as Event);\r\n\t\t\tinitPromise.clear();\r\n\t\t});\r\n\t}\r\n\t/**通过文本溯源 */\r\n\ttraceSourceByText(text: string) {\r\n\t\tif (!text) return;\r\n\t\ttext = text.trim();\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\r\n\t\tconst wrap = this.frame;\r\n\t\tconst results: Recordable[] = [];\r\n\t\tfunction getTextNodes(dom: ChildNode, pIndex: any = null) {\r\n\t\t\tfor (let i = 0; i < dom.childNodes.length; i++) {\r\n\t\t\t\tconst node = dom.childNodes[i];\r\n\t\t\t\tlet parentIndex = pIndex || [];\r\n\t\t\t\tparentIndex = pIndex ? parentIndex.concat([i]) : [i];\r\n\t\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\t\tresults.push({\r\n\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\tpIndex: parentIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (node.nodeType === 1) {\r\n\t\t\t\t\tgetTextNodes(node, parentIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetTextNodes(wrap);\r\n\r\n\t\tconst texts = results.map(v => v.node.nodeValue.trim()).join(\"\");\r\n\t\tconst matchIndex = texts.indexOf(text);\r\n\t\tif (matchIndex === -1) {\r\n\t\t\tconsole.log(\"text is not matched\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet total = 0;\r\n\t\tconst items: Recordable[] = [];\r\n\t\tfor (let i = 0; i < results.length; i++) {\r\n\t\t\tconst item = results[i].node.nodeValue.trim();\r\n\t\t\ttotal += item.length;\r\n\t\t\tif (total >= matchIndex && total <= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t} else if (total >= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (items.length) {\r\n\t\t\tconst eles = items.map(v => v.node.parentElement).filter(v => v !== wrap);\r\n\t\t\teles.forEach(v => {\r\n\t\t\t\tv.classList.add(className);\r\n\t\t\t});\r\n\t\t\tconst firstEle = eles[0];\r\n\t\t\tfirstEle?.scrollIntoView(false);\r\n\t\t}\r\n\t}\r\n\t/**通过属性名-属性值溯源 */\r\n\ttraceSourceByProperty(property: string, value: string) {\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\tconst element = this.frame.querySelector(`[${property}=\"${value}\"]`);\r\n\t\tif (!element) return;\r\n\t\telement.classList.add(className);\r\n\t\telement.scrollIntoView(false);\r\n\t}\r\n\t/** 通过xpath溯源 */\r\n\ttraceSourceByXPath(xpath: string[]) {\r\n\t\tif (!Array.isArray(xpath) || !xpath.length) return;\r\n\t\tconst className = \"ifind_xpath_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet _xpath = xpath[0];\r\n\t\t\tif (this.isCustom) {\r\n\t\t\t\t_xpath = xpath[0].replace(/body/g, this.customBody);\r\n\t\t\t}\r\n\t\t\tconst element = document\r\n\t\t\t\t.evaluate(_xpath, this.frame)\r\n\t\t\t\t.iterateNext() as HTMLElement;\r\n\t\t\tif (!element) {\r\n\t\t\t\tconsole.log(\"element is not found, xpath:\", _xpath);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.classList.add(className);\r\n\t\t\telement.scrollIntoView(false);\r\n\t\t} catch (error) {}\r\n\t}\r\n\tpagechanging(e: Event) {\r\n\t\t// const ele = e.target as HTMLElement;\r\n\t\t// const { scrollHeight, scrollTop } = ele;\r\n\t\t// console.log(\"xxxx\", scrollHeight, scrollTop);\r\n\t\t// const pageTotal = Math.ceil(scrollHeight / pageHeight);\r\n\t\t// const page = Math.ceil(scrollTop / pageHeight) + 1;\r\n\t\tthis.emit(emitterEvent.pageScroll, {\r\n\t\t\tpage: 1,\r\n\t\t\tpageTotal: 1\r\n\t\t});\r\n\t}\r\n\tdestroyed() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.frame.removeEventListener(\"scroll\", this.pagechanging);\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t}\r\n\t_replace(nodes: any, reg: RegExp, textNodes: any[]) {\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (node.nodeType === 1 && node.style?.display === \"none\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (node.nodeType === 3 && node.nodeValue?.match(reg)) {\r\n\t\t\t\ttextNodes.push(node);\r\n\t\t\t} else {\r\n\t\t\t\tif (node.childNodes?.length) {\r\n\t\t\t\t\tthis._replace(node.childNodes, reg, textNodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoSearch(query = this.query) {\r\n\t\tif (this.prevQuery) {\r\n\t\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\t\tif (replaceEles.length) {\r\n\t\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (this.query === this.prevQuery || this.query == \"\") return;\r\n\t\tthis.prevQuery = query;\r\n\t\t(this.frame.parentElement as HTMLElement).scrollTop = 0;\r\n\t\tif (this.isInit) {\r\n\t\t\tconst regExp = new RegExp(\r\n\t\t\t\tquery.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"),\r\n\t\t\t\t\"g\"\r\n\t\t\t);\r\n\t\t\tconst textNodes: any[] = [];\r\n\t\t\tthis._replace(this.frame.childNodes, regExp, textNodes);\r\n\t\t\tfor (let i = 0; i < textNodes.length; i++) {\r\n\t\t\t\tconst node = textNodes[i];\r\n\t\t\t\tconst replaceTxet = node.nodeValue.replace(\r\n\t\t\t\t\tregExp,\r\n\t\t\t\t\t'<replace class=\"highlight\">$&</replace>'\r\n\t\t\t\t);\r\n\t\t\t\tif (node.parentElement) {\r\n\t\t\t\t\tnode.parentElement.innerHTML = replaceTxet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.queryDocument();\r\n\t\t\tthis.queryNext(1);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t// 进行搜索匹配结果\r\n\tqueryDocument() {\r\n\t\tconst len = this.frame.querySelectorAll(\"replace\").length;\r\n\t\tconst data = new Array(len);\r\n\t\tthis.emit(emitterEvent.findContent, data);\r\n\t}\r\n\r\n\tcancelSearch() {\r\n\t\tthis.query = \"\";\r\n\t\tthis.prevQuery = \"\";\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync queryNext(index: number) {\r\n\t\tindex = index - 1;\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tconst lastIndex = index - 1 < 0 ? replaceEles.length - 1 : index - 1;\r\n\t\t\tconst nextIndex = index + 1 > replaceEles.length - 1 ? 0 : index + 1;\r\n\t\t\tconst last = replaceEles[lastIndex] as HTMLElement;\r\n\t\t\tconst next = replaceEles[nextIndex] as HTMLElement;\r\n\t\t\tlast.classList.remove(\"selected\");\r\n\t\t\tnext.classList.remove(\"selected\");\r\n\t\t\tconst item = replaceEles[index] as HTMLElement;\r\n\t\t\tif (item) {\r\n\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\titem.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollPageIntoView(pageNumber: number) {}\r\n}\r\n","relevantFile":"<file_path>source/ai_doc/build/proxy.ts\ntype Ret = Record<string, string | ProxyOptions>;\n\nconst ifindCookie: Recordable = {\n\tCookie:\n\t\"v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=10a0480cb400b407420dc068243e1dd42; jgbsessid=77c58b32ec8bb7d2d5a8eba8cbe0e638; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0OTo6Ojo2MDI2MDQ1NzI6MTcxNTkxMTk3Mjo6Ojo4NjQwMDo6MTBhMDQ4MGNiNDAwYjQwNzQyMGRjMDY4MjQzZTFkZDQyOmRlZmF1bHRfMTE6MA%3D%3D; ticket=c2f9846eb17a94022adeba580e80afff; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2\"\n};\nexport function createProxy() {\n\tconst ret: Ret = {\n\t\t\"/standardgwapi\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/standardgwapi/api/ai_doc_service\": {\n\t\t\ttarget: \"http://10.0.16.189:8080\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t},\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://10.0.16.123:8080\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t// },\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://172.19.80.62\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(/\"\"/, \"\")\n\t\t// },\n\t\t\"/thsft/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/gwstatic/static/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,","relevantFileList":[],"filePath":"source/ai_doc/src/utils/HTMLReader.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"，所以需要替换\r","deepseek-chat-lite":"，需要替换掉","deepseek-chat":"```\n// Start Generation Here\nhandleReplaceBody(str: string) {","copilot":"// <body class=\"xxx\"> => <custombody class=\"xxx\">\r\n\t// <body> => <custombody>\r\n\t// </body> => </custombody>\r\n\t// 不存在<body> => <custombody>...</custombody>\r\n\t// 不存在</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\t"}},{"prefix":"import EventEmitter from \"@/utils/EventEmitter\";\nimport sleep from \"@/utils/sleep\";\nenum emitterEvent {\n\tload = \"load\",\n\tpageScroll = \"pageScroll\",\n\tscaleChange = \"scaleChange\",\n\tfindContent = \"findContent\"\n}\nexport default class HTMLReader extends EventEmitter {\n\tframe: HTMLElement;\n\tsearchText: string;\n\tisInit: boolean;\n\tquery: string;\n\tprevQuery: string;\n\tpageHeight: number;\n\tdata: string;\n\tcustomBody: string;\n\tisCustom: boolean;\n\tconstructor({\n\t\tframe,\n\t\tsearchText,\n\t\tdata,\n\t\tisCustom\n\t}: {\n\t\tframe: HTMLElement;\n\t\tsearchText: string;\n\t\tdata: string;\n\t\tisCustom: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.frame = frame;\n\t\tthis.searchText = searchText || \"\";\n\t\tthis.isInit = false;\n\t\tthis.isCustom = isCustom;\n\t\tthis.query = \"\";\n\t\tthis.prevQuery = \"\";\n\t\tthis.customBody = \"custombody\";\n\t\tthis.pageHeight = 600;\n\t\tthis.data = this.handleReplaceBody(data);\n\t\tthis.pagechanging = this.pagechanging.bind(this);\n\t\tthis.frame.addEventListener(\"scroll\", this.pagechanging);\n\t\tconst initPromise = sleep(300);\n\t\tinitPromise.then(() => {\n\t\t\tthis.render();\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\n\thandleReplaceBody(str: string) {\n\t\tif (!this.isCustom) return str;\n\t\tlet body = str;\n\t\tconst customBody = this.customBody;\n\t\tconst index = body.indexOf(\"<body>\");\n\t\tconst index1 = body.indexOf(\"</body>\");\n\t\tif (index === -1) {\n\t\t\tbody = `<${customBody}>${body}</${customBody}>`;\n\t\t} else {\n\t\t\tbody = body.replace(\"<body>\", `<${customBody}>`);\n\t\t}\n\t\tif (index1 === -1) {\n\t\t\tbody = `${body}</${customBody}>`;\n\t\t} else {\n\t\t\tbody = body.replace(\"</body>\", `</${customBody}>`);\n\t\t}\n\t\treturn body;\n\t}\n\t// 将文中的<body>和</body>标签替换成custombody\n\t// <body>可能还有一些属性\n\t// <body class=\"xxx\"> => <custombody class=\"xxx\">\n\t// <body> => <custombody>\n\t// </body> => </custombody>","infill":"// 不存在<body> => <custombody>...</custombody>\r\n\t// 不存在</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\t// 不存在<body>和</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\treplaceBocy","suffix":"\r\n\trender() {\r\n\t\tthis.emit(emitterEvent.load, true);\r\n\t\tthis.renderHtml();\r\n\t}\r\n\trenderHtml() {\r\n\t\tthis.frame.innerHTML = this.data;\r\n\t\tthis.pagesInit();\r\n\t}\r\n\tpagesInit() {\r\n\t\tthis.isInit = true;\r\n\t\tthis.emit(emitterEvent.load, false);\r\n\t\tthis.emit(emitterEvent.scaleChange, 1);\r\n\t\tconst initPromise = sleep(100);\r\n\t\tinitPromise.then(() => {\r\n\t\t\tthis.pagechanging({\r\n\t\t\t\ttarget: this.frame\r\n\t\t\t} as unknown as Event);\r\n\t\t\tinitPromise.clear();\r\n\t\t});\r\n\t}\r\n\t/**通过文本溯源 */\r\n\ttraceSourceByText(text: string) {\r\n\t\tif (!text) return;\r\n\t\ttext = text.trim();\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\r\n\t\tconst wrap = this.frame;\r\n\t\tconst results: Recordable[] = [];\r\n\t\tfunction getTextNodes(dom: ChildNode, pIndex: any = null) {\r\n\t\t\tfor (let i = 0; i < dom.childNodes.length; i++) {\r\n\t\t\t\tconst node = dom.childNodes[i];\r\n\t\t\t\tlet parentIndex = pIndex || [];\r\n\t\t\t\tparentIndex = pIndex ? parentIndex.concat([i]) : [i];\r\n\t\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\t\tresults.push({\r\n\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\tpIndex: parentIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (node.nodeType === 1) {\r\n\t\t\t\t\tgetTextNodes(node, parentIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetTextNodes(wrap);\r\n\r\n\t\tconst texts = results.map(v => v.node.nodeValue.trim()).join(\"\");\r\n\t\tconst matchIndex = texts.indexOf(text);\r\n\t\tif (matchIndex === -1) {\r\n\t\t\tconsole.log(\"text is not matched\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet total = 0;\r\n\t\tconst items: Recordable[] = [];\r\n\t\tfor (let i = 0; i < results.length; i++) {\r\n\t\t\tconst item = results[i].node.nodeValue.trim();\r\n\t\t\ttotal += item.length;\r\n\t\t\tif (total >= matchIndex && total <= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t} else if (total >= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (items.length) {\r\n\t\t\tconst eles = items.map(v => v.node.parentElement).filter(v => v !== wrap);\r\n\t\t\teles.forEach(v => {\r\n\t\t\t\tv.classList.add(className);\r\n\t\t\t});\r\n\t\t\tconst firstEle = eles[0];\r\n\t\t\tfirstEle?.scrollIntoView(false);\r\n\t\t}\r\n\t}\r\n\t/**通过属性名-属性值溯源 */\r\n\ttraceSourceByProperty(property: string, value: string) {\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\tconst element = this.frame.querySelector(`[${property}=\"${value}\"]`);\r\n\t\tif (!element) return;\r\n\t\telement.classList.add(className);\r\n\t\telement.scrollIntoView(false);\r\n\t}\r\n\t/** 通过xpath溯源 */\r\n\ttraceSourceByXPath(xpath: string[]) {\r\n\t\tif (!Array.isArray(xpath) || !xpath.length) return;\r\n\t\tconst className = \"ifind_xpath_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet _xpath = xpath[0];\r\n\t\t\tif (this.isCustom) {\r\n\t\t\t\t_xpath = xpath[0].replace(/body/g, this.customBody);\r\n\t\t\t}\r\n\t\t\tconst element = document\r\n\t\t\t\t.evaluate(_xpath, this.frame)\r\n\t\t\t\t.iterateNext() as HTMLElement;\r\n\t\t\tif (!element) {\r\n\t\t\t\tconsole.log(\"element is not found, xpath:\", _xpath);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.classList.add(className);\r\n\t\t\telement.scrollIntoView(false);\r\n\t\t} catch (error) {}\r\n\t}\r\n\tpagechanging(e: Event) {\r\n\t\t// const ele = e.target as HTMLElement;\r\n\t\t// const { scrollHeight, scrollTop } = ele;\r\n\t\t// console.log(\"xxxx\", scrollHeight, scrollTop);\r\n\t\t// const pageTotal = Math.ceil(scrollHeight / pageHeight);\r\n\t\t// const page = Math.ceil(scrollTop / pageHeight) + 1;\r\n\t\tthis.emit(emitterEvent.pageScroll, {\r\n\t\t\tpage: 1,\r\n\t\t\tpageTotal: 1\r\n\t\t});\r\n\t}\r\n\tdestroyed() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.frame.removeEventListener(\"scroll\", this.pagechanging);\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t}\r\n\t_replace(nodes: any, reg: RegExp, textNodes: any[]) {\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (node.nodeType === 1 && node.style?.display === \"none\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (node.nodeType === 3 && node.nodeValue?.match(reg)) {\r\n\t\t\t\ttextNodes.push(node);\r\n\t\t\t} else {\r\n\t\t\t\tif (node.childNodes?.length) {\r\n\t\t\t\t\tthis._replace(node.childNodes, reg, textNodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoSearch(query = this.query) {\r\n\t\tif (this.prevQuery) {\r\n\t\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\t\tif (replaceEles.length) {\r\n\t\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (this.query === this.prevQuery || this.query == \"\") return;\r\n\t\tthis.prevQuery = query;\r\n\t\t(this.frame.parentElement as HTMLElement).scrollTop = 0;\r\n\t\tif (this.isInit) {\r\n\t\t\tconst regExp = new RegExp(\r\n\t\t\t\tquery.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"),\r\n\t\t\t\t\"g\"\r\n\t\t\t);\r\n\t\t\tconst textNodes: any[] = [];\r\n\t\t\tthis._replace(this.frame.childNodes, regExp, textNodes);\r\n\t\t\tfor (let i = 0; i < textNodes.length; i++) {\r\n\t\t\t\tconst node = textNodes[i];\r\n\t\t\t\tconst replaceTxet = node.nodeValue.replace(\r\n\t\t\t\t\tregExp,\r\n\t\t\t\t\t'<replace class=\"highlight\">$&</replace>'\r\n\t\t\t\t);\r\n\t\t\t\tif (node.parentElement) {\r\n\t\t\t\t\tnode.parentElement.innerHTML = replaceTxet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.queryDocument();\r\n\t\t\tthis.queryNext(1);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t// 进行搜索匹配结果\r\n\tqueryDocument() {\r\n\t\tconst len = this.frame.querySelectorAll(\"replace\").length;\r\n\t\tconst data = new Array(len);\r\n\t\tthis.emit(emitterEvent.findContent, data);\r\n\t}\r\n\r\n\tcancelSearch() {\r\n\t\tthis.query = \"\";\r\n\t\tthis.prevQuery = \"\";\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync queryNext(index: number) {\r\n\t\tindex = index - 1;\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tconst lastIndex = index - 1 < 0 ? replaceEles.length - 1 : index - 1;\r\n\t\t\tconst nextIndex = index + 1 > replaceEles.length - 1 ? 0 : index + 1;\r\n\t\t\tconst last = replaceEles[lastIndex] as HTMLElement;\r\n\t\t\tconst next = replaceEles[nextIndex] as HTMLElement;\r\n\t\t\tlast.classList.remove(\"selected\");\r\n\t\t\tnext.classList.remove(\"selected\");\r\n\t\t\tconst item = replaceEles[index] as HTMLElement;\r\n\t\t\tif (item) {\r\n\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\titem.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollPageIntoView(pageNumber: number) {}\r\n}\r\n","relevantFile":"<file_path>source/ai_doc/build/proxy.ts\ntype Ret = Record<string, string | ProxyOptions>;\n\nconst ifindCookie: Recordable = {\n\tCookie:\n\t\"v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=10a0480cb400b407420dc068243e1dd42; jgbsessid=77c58b32ec8bb7d2d5a8eba8cbe0e638; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0OTo6Ojo2MDI2MDQ1NzI6MTcxNTkxMTk3Mjo6Ojo4NjQwMDo6MTBhMDQ4MGNiNDAwYjQwNzQyMGRjMDY4MjQzZTFkZDQyOmRlZmF1bHRfMTE6MA%3D%3D; ticket=c2f9846eb17a94022adeba580e80afff; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2\"\n};\nexport function createProxy() {\n\tconst ret: Ret = {\n\t\t\"/standardgwapi\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/standardgwapi/api/ai_doc_service\": {\n\t\t\ttarget: \"http://10.0.16.189:8080\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t},\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://10.0.16.123:8080\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t// },\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://172.19.80.62\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(/\"\"/, \"\")\n\t\t// },\n\t\t\"/thsft/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/gwstatic/static/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,","relevantFileList":[],"filePath":"source/ai_doc/src/utils/HTMLReader.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\nhandleReplaceBody(str: string) {","copilot":"// 不存在<body> => <custombody>...</custombody>\r\n\t// 不存在</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\t// 不存在<body>和</body> => ...</custombody>\r\n\t// 不存在<body>和</body> => <custombody>...</custombody>\r\n\treplaceBocy"}},{"prefix":"interface GetMedalWallParams {\n  uid: number;\n}\n\n// 勋章墙返回数据\ninterface GetMedalWallResult {\n  // 新版勋章墙列表\n  listNew: Array<NewMedalList>;\n  // 老版勋章墙列表\n  listOld: Array<OldMedalList>;\n  // 已获得勋章数量\n  medalNum: number;\n  // 勋章墙详情页地址\n  medalWallInfoUrl: string;\n  // 注册同花顺日期（单位：天）\n  investmentDays: string;\n  // 用户昵称\n  nickname: string;\n  // 用户头像\n  avatar: string;\n  // 佩戴勋章\n  wearMedal: {\n    // 勋章昵称\n    medalName: string;\n    // logo地址\n    logoUrl: string;\n    // 勋章id\n    medalId: number;\n  };\n}\n\n// 勋章墙新版勋章列表\ninterface NewMedalList {\n  // 勋章类别\n  medalCategoryName: string;\n  // 勋章类别描述\n  medalCategoryDescription: string;\n  // 勋章类别id\n  medalCategoryId: number;\n  // 勋章系列列表\n  medalSeriesList: Array<MedalDetailData>\n}\n\n// 勋章墙新版勋章详情\ninterface MedalDetailData {\n  // 勋章昵称\n  medalName: string;\n  // 勋章id\n  medalId: number;\n  // 勋章系列id\n  seriesId: number;\n  // 勋章等级\n  level: number;\n  // 勋章大图logo\n  logoUrl: string;\n  // 是否获取勋章 true：获取 false：未获取\n  hasMedal: boolean;\n  // 是否最新获取 true：最新 false：历史\n  newAcquired: boolean;\n  // 是否佩戴 true：佩戴 false：未佩戴\n  wearMedal: boolean;\n  // 勋章类型 common：普通勋章 activity：活动勋章 history：历史勋章\n  medalType: 'common' | 'activity' | 'history';\n  // 勋章过期时间 单位：秒 0: 永久获取\n  expirationTime: number;\n  // 勋章获取时间 单位：秒 0: 永久获取\n  acqu","infill":"iredTime: number;","suffix":"\n}\n\n// 勋章墙老版勋章列表\ninterface OldMedalList {\n  // 勋章类别\n  medalCategoryName: string;\n  // 勋章类别描述\n  medalCategoryDescription: string;\n  // 勋章系列列表\n  medalSeriesList: Array<OldMedalDetailData>;\n}\n\ninterface OldMedalDetailData {\n  // 勋章id\n  medalId: number;\n  // 勋章昵称\n  medalName: string;\n  // 勋章等级\n  level: number;\n  // 勋章大图logo\n  logoUrl: string;\n  // 勋章类型 history：历史勋章\n  medalType: 'history';\n}\n\n// 勋章墙操作勋章参数\ninterface OperateMedalParams {\n  // 用户id\n  uid: number;\n  // 勋章id\n  medalId: number;\n  // 操作 wear：佩戴 remove：卸下\n  action: 'wear' | 'remove';\n}\n\n// 勋章墙更新勋章参数\ninterface UpdateMedalParams {\n  // 用户id\n  uid: number;\n  // 勋章id\n  medalIdList: string;\n}\n","relevantFile":"<file_path>src/utils/methods/application.ts\n    }\n    return false;\n  }\n\n  /**\n   * 设置发送埋点应用场景 key\n   * @param {string} appKey - APP对应的key\n   */\n  static setConfig(appKey: string): void {\n    if (Application.environment.inPC) {\n      // 获取PC端JS，因为埋点JS依赖PC这个JS判断环境\n      const pcScriptElement = document.createElement('script');\n      pcScriptElement.src = '//s.thsi.cn/cd/b2cweb-fe-common-resource-pod/js/cefApi/1.5.8/cefApi.min.js';\n      pcScriptElement.type = 'text/javascript';\n      document.getElementsByTagName('head')[0].appendChild(pcScriptElement);\n      pcScriptElement.onload = () => {\n        window.weblog && window.weblog.setConfig({\n          appKey,\n        });\n      };\n    } else {\n      window.weblog && window.weblog.setConfig({\n        appKey,\n      });\n    }\n  }\n\n  /**\n   * 添加页面展示隐藏监听函数\n   * @param {NativeListenerType} action - 监听类型\n   * @param {() => void} callback - 回调函数\n   */\n  static registerWebHandler(action: NativeListenerType, callback: (data: unknown) => void): void {\n    commonMobile.registerWebHandler(action, callback);\n  }\n\n  /**\n   * 初始化客户端监听事件\n   */\n  static initNativeNotifyFunction(): void {\n    commonMobile.callNativeHandler(NATIVE_ACTION.NOTIFY_NATIVE_EVENT, '');\n  }\n\n  /**\n   * 获取勋章墙回流地址\n   */\n  static getReflowUrl(): string {\n    return `https://t.10jqka.com.cn/lgt/medal_wall/middle.html?userid=${User.medalWallUserId}`;\n  }\n\n  /**\n   * 勋章墙回流\n   */\n  static outSlideReflow(): boolean {\n    if (Application.environment.inTHS) {\n      return false;\n    }\n    (window as any).backWash.startApp(User.statId);\n    return true;\n  }\n勋章墙请求参数","relevantFileList":[],"filePath":"src/types/service/medal-wall.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" iredTime: number;","deepseek-chat-lite":"isitionTime: number;","deepseek-chat":"```\n// Start Generation Here\n  // 勋章获取时间 单位","copilot":"iredTime: number;"}},{"prefix":"import EventEmitter from \"@/utils/EventEmitter\";\nimport sleep from \"@/utils/sleep\";\nenum emitterEvent {\n\tload = \"load\",\n\tpageScroll = \"pageScroll\",\n\tscaleChange = \"scaleChange\",\n\tfindContent = \"findContent\"\n}\nexport default class HTMLReader extends EventEmitter {\n\tframe: HTMLElement;\n\tsearchText: string;\n\tisInit: boolean;\n\tquery: string;\n\tprevQuery: string;\n\tpageHeight: number;\n\tdata: string;\n\tcustomBody: string;\n\tisCustom: boolean;\n\tconstructor({\n\t\tframe,\n\t\tsearchText,\n\t\tdata,\n\t\tisCustom\n\t}: {\n\t\tframe: HTMLElement;\n\t\tsearchText: string;\n\t\tdata: string;\n\t\tisCustom: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.frame = frame;\n\t\tthis.searchText = searchText || \"\";\n\t\tthis.isInit = false;\n\t\tthis.isCustom = isCustom;\n\t\tthis.query = \"\";\n\t\tthis.prevQuery = \"\";\n\t\tthis.customBody = \"custombody\";\n\t\tthis.pageHeight = 600;\n\t\tthis.data = this.handleReplaceBody(data);\n\t\tthis.pagechanging = this.pagechanging.bind(this);\n\t\tthis.frame.addEventListener(\"scroll\", this.pagechanging);\n\t\tconst initPromise = sleep(300);\n\t\tinitPromise.then(() => {\n\t\t\tthis.render();\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\n\thandleReplaceBody(str: string) {\n\t\tif (!this.isCustom) return str;\n\t\tlet body = str;\n\t\tconst customBody = this.customBody;\n\t\tconst hasBody = body.indexOf(\"</body>\") !== -1;\n\t\tif (hasBody","infill":") {\r\n\r\n\t\t} else {\r\n\t\t\tbody = `<body>${body}</body>`;\r\n\t\t}\r\n\t\t","suffix":"\r\n\t\t// body可能有属性  要使用正则替换 且属性要保留\r\n\t\tbody = body.replace(/<body([^>]*)>/, `<${customBody}$1>`);\r\n\r\n\t\tconst index = body.indexOf(\"<body>\");\r\n\t\tconst index1 = body.indexOf(\"</body>\");\r\n\t\tif (index === -1) {\r\n\t\t\tbody = `<${customBody}>${body}</${customBody}>`;\r\n\t\t} else {\r\n\t\t\tbody = body.replace(\"<body>\", `<${customBody}>`);\r\n\t\t}\r\n\t\tif (index1 === -1) {\r\n\t\t\tbody = `${body}</${customBody}>`;\r\n\t\t} else {\r\n\t\t\tbody = body.replace(\"</body>\", `</${customBody}>`);\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\trender() {\r\n\t\tthis.emit(emitterEvent.load, true);\r\n\t\tthis.renderHtml();\r\n\t}\r\n\trenderHtml() {\r\n\t\tthis.frame.innerHTML = this.data;\r\n\t\tthis.pagesInit();\r\n\t}\r\n\tpagesInit() {\r\n\t\tthis.isInit = true;\r\n\t\tthis.emit(emitterEvent.load, false);\r\n\t\tthis.emit(emitterEvent.scaleChange, 1);\r\n\t\tconst initPromise = sleep(100);\r\n\t\tinitPromise.then(() => {\r\n\t\t\tthis.pagechanging({\r\n\t\t\t\ttarget: this.frame\r\n\t\t\t} as unknown as Event);\r\n\t\t\tinitPromise.clear();\r\n\t\t});\r\n\t}\r\n\t/**通过文本溯源 */\r\n\ttraceSourceByText(text: string) {\r\n\t\tif (!text) return;\r\n\t\ttext = text.trim();\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\r\n\t\tconst wrap = this.frame;\r\n\t\tconst results: Recordable[] = [];\r\n\t\tfunction getTextNodes(dom: ChildNode, pIndex: any = null) {\r\n\t\t\tfor (let i = 0; i < dom.childNodes.length; i++) {\r\n\t\t\t\tconst node = dom.childNodes[i];\r\n\t\t\t\tlet parentIndex = pIndex || [];\r\n\t\t\t\tparentIndex = pIndex ? parentIndex.concat([i]) : [i];\r\n\t\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\t\tresults.push({\r\n\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\tpIndex: parentIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (node.nodeType === 1) {\r\n\t\t\t\t\tgetTextNodes(node, parentIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetTextNodes(wrap);\r\n\r\n\t\tconst texts = results.map(v => v.node.nodeValue.trim()).join(\"\");\r\n\t\tconst matchIndex = texts.indexOf(text);\r\n\t\tif (matchIndex === -1) {\r\n\t\t\tconsole.log(\"text is not matched\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet total = 0;\r\n\t\tconst items: Recordable[] = [];\r\n\t\tfor (let i = 0; i < results.length; i++) {\r\n\t\t\tconst item = results[i].node.nodeValue.trim();\r\n\t\t\ttotal += item.length;\r\n\t\t\tif (total >= matchIndex && total <= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t} else if (total >= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (items.length) {\r\n\t\t\tconst eles = items.map(v => v.node.parentElement).filter(v => v !== wrap);\r\n\t\t\teles.forEach(v => {\r\n\t\t\t\tv.classList.add(className);\r\n\t\t\t});\r\n\t\t\tconst firstEle = eles[0];\r\n\t\t\tfirstEle?.scrollIntoView(false);\r\n\t\t}\r\n\t}\r\n\t/**通过属性名-属性值溯源 */\r\n\ttraceSourceByProperty(property: string, value: string) {\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\tconst element = this.frame.querySelector(`[${property}=\"${value}\"]`);\r\n\t\tif (!element) return;\r\n\t\telement.classList.add(className);\r\n\t\telement.scrollIntoView(false);\r\n\t}\r\n\t/** 通过xpath溯源 */\r\n\ttraceSourceByXPath(xpath: string[]) {\r\n\t\tif (!Array.isArray(xpath) || !xpath.length) return;\r\n\t\tconst className = \"ifind_xpath_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet _xpath = xpath[0];\r\n\t\t\tif (this.isCustom) {\r\n\t\t\t\t_xpath = xpath[0].replace(/body/g, this.customBody);\r\n\t\t\t}\r\n\t\t\tconst element = document\r\n\t\t\t\t.evaluate(_xpath, this.frame)\r\n\t\t\t\t.iterateNext() as HTMLElement;\r\n\t\t\tif (!element) {\r\n\t\t\t\tconsole.log(\"element is not found, xpath:\", _xpath);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.classList.add(className);\r\n\t\t\telement.scrollIntoView(false);\r\n\t\t} catch (error) {}\r\n\t}\r\n\tpagechanging(e: Event) {\r\n\t\t// const ele = e.target as HTMLElement;\r\n\t\t// const { scrollHeight, scrollTop } = ele;\r\n\t\t// console.log(\"xxxx\", scrollHeight, scrollTop);\r\n\t\t// const pageTotal = Math.ceil(scrollHeight / pageHeight);\r\n\t\t// const page = Math.ceil(scrollTop / pageHeight) + 1;\r\n\t\tthis.emit(emitterEvent.pageScroll, {\r\n\t\t\tpage: 1,\r\n\t\t\tpageTotal: 1\r\n\t\t});\r\n\t}\r\n\tdestroyed() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.frame.removeEventListener(\"scroll\", this.pagechanging);\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t}\r\n\t_replace(nodes: any, reg: RegExp, textNodes: any[]) {\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (node.nodeType === 1 && node.style?.display === \"none\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (node.nodeType === 3 && node.nodeValue?.match(reg)) {\r\n\t\t\t\ttextNodes.push(node);\r\n\t\t\t} else {\r\n\t\t\t\tif (node.childNodes?.length) {\r\n\t\t\t\t\tthis._replace(node.childNodes, reg, textNodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoSearch(query = this.query) {\r\n\t\tif (this.prevQuery) {\r\n\t\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\t\tif (replaceEles.length) {\r\n\t\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (this.query === this.prevQuery || this.query == \"\") return;\r\n\t\tthis.prevQuery = query;\r\n\t\t(this.frame.parentElement as HTMLElement).scrollTop = 0;\r\n\t\tif (this.isInit) {\r\n\t\t\tconst regExp = new RegExp(\r\n\t\t\t\tquery.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"),\r\n\t\t\t\t\"g\"\r\n\t\t\t);\r\n\t\t\tconst textNodes: any[] = [];\r\n\t\t\tthis._replace(this.frame.childNodes, regExp, textNodes);\r\n\t\t\tfor (let i = 0; i < textNodes.length; i++) {\r\n\t\t\t\tconst node = textNodes[i];\r\n\t\t\t\tconst replaceTxet = node.nodeValue.replace(\r\n\t\t\t\t\tregExp,\r\n\t\t\t\t\t'<replace class=\"highlight\">$&</replace>'\r\n\t\t\t\t);\r\n\t\t\t\tif (node.parentElement) {\r\n\t\t\t\t\tnode.parentElement.innerHTML = replaceTxet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.queryDocument();\r\n\t\t\tthis.queryNext(1);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t// 进行搜索匹配结果\r\n\tqueryDocument() {\r\n\t\tconst len = this.frame.querySelectorAll(\"replace\").length;\r\n\t\tconst data = new Array(len);\r\n\t\tthis.emit(emitterEvent.findContent, data);\r\n\t}\r\n\r\n\tcancelSearch() {\r\n\t\tthis.query = \"\";\r\n\t\tthis.prevQuery = \"\";\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync queryNext(index: number) {\r\n\t\tindex = index - 1;\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tconst lastIndex = index - 1 < 0 ? replaceEles.length - 1 : index - 1;\r\n\t\t\tconst nextIndex = index + 1 > replaceEles.length - 1 ? 0 : index + 1;\r\n\t\t\tconst last = replaceEles[lastIndex] as HTMLElement;\r\n\t\t\tconst next = replaceEles[nextIndex] as HTMLElement;\r\n\t\t\tlast.classList.remove(\"selected\");\r\n\t\t\tnext.classList.remove(\"selected\");\r\n\t\t\tconst item = replaceEles[index] as HTMLElement;\r\n\t\t\tif (item) {\r\n\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\titem.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollPageIntoView(pageNumber: number) {}\r\n}\r\n","relevantFile":"<file_path>source/ai_doc/build/proxy.ts\ntype Ret = Record<string, string | ProxyOptions>;\n\nconst ifindCookie: Recordable = {\n\tCookie:\n\t\"v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=10a0480cb400b407420dc068243e1dd42; jgbsessid=77c58b32ec8bb7d2d5a8eba8cbe0e638; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0OTo6Ojo2MDI2MDQ1NzI6MTcxNTkxMTk3Mjo6Ojo4NjQwMDo6MTBhMDQ4MGNiNDAwYjQwNzQyMGRjMDY4MjQzZTFkZDQyOmRlZmF1bHRfMTE6MA%3D%3D; ticket=c2f9846eb17a94022adeba580e80afff; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2\"\n};\nexport function createProxy() {\n\tconst ret: Ret = {\n\t\t\"/standardgwapi\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/standardgwapi/api/ai_doc_service\": {\n\t\t\ttarget: \"http://10.0.16.189:8080\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t},\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://10.0.16.123:8080\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t// },\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://172.19.80.62\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(/\"\"/, \"\")\n\t\t// },\n\t\t\"/thsft/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/gwstatic/static/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,","relevantFileList":[],"filePath":"source/ai_doc/src/utils/HTMLReader.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ) {\r","deepseek-chat-lite":") {","deepseek-chat":"```\n// Start Generation Here\n\t\tbody = body.replace(/<","copilot":") {\r\n\r\n\t\t} else {\r\n\t\t\tbody = `<body>${body}</body>`;\r\n\t\t}\r\n\t\t"}},{"prefix":"import EventEmitter from \"@/utils/EventEmitter\";\nimport sleep from \"@/utils/sleep\";\nenum emitterEvent {\n\tload = \"load\",\n\tpageScroll = \"pageScroll\",\n\tscaleChange = \"scaleChange\",\n\tfindContent = \"findContent\"\n}\nexport default class HTMLReader extends EventEmitter {\n\tframe: HTMLElement;\n\tsearchText: string;\n\tisInit: boolean;\n\tquery: string;\n\tprevQuery: string;\n\tpageHeight: number;\n\tdata: string;\n\tcustomBody: string;\n\tisCustom: boolean;\n\tconstructor({\n\t\tframe,\n\t\tsearchText,\n\t\tdata,\n\t\tisCustom\n\t}: {\n\t\tframe: HTMLElement;\n\t\tsearchText: string;\n\t\tdata: string;\n\t\tisCustom: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.frame = frame;\n\t\tthis.searchText = searchText || \"\";\n\t\tthis.isInit = false;\n\t\tthis.isCustom = isCustom;\n\t\tthis.query = \"\";\n\t\tthis.prevQuery = \"\";\n\t\tthis.customBody = \"custombody\";\n\t\tthis.pageHeight = 600;\n\t\tthis.data = this.handleReplaceBody(data);\n\t\tthis.pagechanging = this.pagechanging.bind(this);\n\t\tthis.frame.addEventListener(\"scroll\", this.pagechanging);\n\t\tconst initPromise = sleep(300);\n\t\tinitPromise.then(() => {\n\t\t\tthis.render();\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\n\thandleReplaceBody(str: string) {\n\t\tif (!this.isCustom) return str;\n\t\tlet body = str;\n\t\tconst customBody = this.customBody;\n\t\tconst hasBody = body.indexOf(\"</body>\") !== -1;\n\t\tif (hasBody) {\n\n\t\t} else {","infill":"body = `<body>${body}</body>`;","suffix":"\r\n\t\t}\r\n\t\t\r\n\t\t// body可能有属性  要使用正则替换 且属性要保留\r\n\t\tbody = body.replace(/<body([^>]*)>/, `<${customBody}$1>`);\r\n\r\n\t\tconst index = body.indexOf(\"<body>\");\r\n\t\tconst index1 = body.indexOf(\"</body>\");\r\n\t\tif (index === -1) {\r\n\t\t\tbody = `<${customBody}>${body}</${customBody}>`;\r\n\t\t} else {\r\n\t\t\tbody = body.replace(\"<body>\", `<${customBody}>`);\r\n\t\t}\r\n\t\tif (index1 === -1) {\r\n\t\t\tbody = `${body}</${customBody}>`;\r\n\t\t} else {\r\n\t\t\tbody = body.replace(\"</body>\", `</${customBody}>`);\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\trender() {\r\n\t\tthis.emit(emitterEvent.load, true);\r\n\t\tthis.renderHtml();\r\n\t}\r\n\trenderHtml() {\r\n\t\tthis.frame.innerHTML = this.data;\r\n\t\tthis.pagesInit();\r\n\t}\r\n\tpagesInit() {\r\n\t\tthis.isInit = true;\r\n\t\tthis.emit(emitterEvent.load, false);\r\n\t\tthis.emit(emitterEvent.scaleChange, 1);\r\n\t\tconst initPromise = sleep(100);\r\n\t\tinitPromise.then(() => {\r\n\t\t\tthis.pagechanging({\r\n\t\t\t\ttarget: this.frame\r\n\t\t\t} as unknown as Event);\r\n\t\t\tinitPromise.clear();\r\n\t\t});\r\n\t}\r\n\t/**通过文本溯源 */\r\n\ttraceSourceByText(text: string) {\r\n\t\tif (!text) return;\r\n\t\ttext = text.trim();\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\r\n\t\tconst wrap = this.frame;\r\n\t\tconst results: Recordable[] = [];\r\n\t\tfunction getTextNodes(dom: ChildNode, pIndex: any = null) {\r\n\t\t\tfor (let i = 0; i < dom.childNodes.length; i++) {\r\n\t\t\t\tconst node = dom.childNodes[i];\r\n\t\t\t\tlet parentIndex = pIndex || [];\r\n\t\t\t\tparentIndex = pIndex ? parentIndex.concat([i]) : [i];\r\n\t\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\t\tresults.push({\r\n\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\tpIndex: parentIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (node.nodeType === 1) {\r\n\t\t\t\t\tgetTextNodes(node, parentIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetTextNodes(wrap);\r\n\r\n\t\tconst texts = results.map(v => v.node.nodeValue.trim()).join(\"\");\r\n\t\tconst matchIndex = texts.indexOf(text);\r\n\t\tif (matchIndex === -1) {\r\n\t\t\tconsole.log(\"text is not matched\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet total = 0;\r\n\t\tconst items: Recordable[] = [];\r\n\t\tfor (let i = 0; i < results.length; i++) {\r\n\t\t\tconst item = results[i].node.nodeValue.trim();\r\n\t\t\ttotal += item.length;\r\n\t\t\tif (total >= matchIndex && total <= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t} else if (total >= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (items.length) {\r\n\t\t\tconst eles = items.map(v => v.node.parentElement).filter(v => v !== wrap);\r\n\t\t\teles.forEach(v => {\r\n\t\t\t\tv.classList.add(className);\r\n\t\t\t});\r\n\t\t\tconst firstEle = eles[0];\r\n\t\t\tfirstEle?.scrollIntoView(false);\r\n\t\t}\r\n\t}\r\n\t/**通过属性名-属性值溯源 */\r\n\ttraceSourceByProperty(property: string, value: string) {\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\tconst element = this.frame.querySelector(`[${property}=\"${value}\"]`);\r\n\t\tif (!element) return;\r\n\t\telement.classList.add(className);\r\n\t\telement.scrollIntoView(false);\r\n\t}\r\n\t/** 通过xpath溯源 */\r\n\ttraceSourceByXPath(xpath: string[]) {\r\n\t\tif (!Array.isArray(xpath) || !xpath.length) return;\r\n\t\tconst className = \"ifind_xpath_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet _xpath = xpath[0];\r\n\t\t\tif (this.isCustom) {\r\n\t\t\t\t_xpath = xpath[0].replace(/body/g, this.customBody);\r\n\t\t\t}\r\n\t\t\tconst element = document\r\n\t\t\t\t.evaluate(_xpath, this.frame)\r\n\t\t\t\t.iterateNext() as HTMLElement;\r\n\t\t\tif (!element) {\r\n\t\t\t\tconsole.log(\"element is not found, xpath:\", _xpath);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.classList.add(className);\r\n\t\t\telement.scrollIntoView(false);\r\n\t\t} catch (error) {}\r\n\t}\r\n\tpagechanging(e: Event) {\r\n\t\t// const ele = e.target as HTMLElement;\r\n\t\t// const { scrollHeight, scrollTop } = ele;\r\n\t\t// console.log(\"xxxx\", scrollHeight, scrollTop);\r\n\t\t// const pageTotal = Math.ceil(scrollHeight / pageHeight);\r\n\t\t// const page = Math.ceil(scrollTop / pageHeight) + 1;\r\n\t\tthis.emit(emitterEvent.pageScroll, {\r\n\t\t\tpage: 1,\r\n\t\t\tpageTotal: 1\r\n\t\t});\r\n\t}\r\n\tdestroyed() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.frame.removeEventListener(\"scroll\", this.pagechanging);\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t}\r\n\t_replace(nodes: any, reg: RegExp, textNodes: any[]) {\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (node.nodeType === 1 && node.style?.display === \"none\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (node.nodeType === 3 && node.nodeValue?.match(reg)) {\r\n\t\t\t\ttextNodes.push(node);\r\n\t\t\t} else {\r\n\t\t\t\tif (node.childNodes?.length) {\r\n\t\t\t\t\tthis._replace(node.childNodes, reg, textNodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoSearch(query = this.query) {\r\n\t\tif (this.prevQuery) {\r\n\t\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\t\tif (replaceEles.length) {\r\n\t\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (this.query === this.prevQuery || this.query == \"\") return;\r\n\t\tthis.prevQuery = query;\r\n\t\t(this.frame.parentElement as HTMLElement).scrollTop = 0;\r\n\t\tif (this.isInit) {\r\n\t\t\tconst regExp = new RegExp(\r\n\t\t\t\tquery.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"),\r\n\t\t\t\t\"g\"\r\n\t\t\t);\r\n\t\t\tconst textNodes: any[] = [];\r\n\t\t\tthis._replace(this.frame.childNodes, regExp, textNodes);\r\n\t\t\tfor (let i = 0; i < textNodes.length; i++) {\r\n\t\t\t\tconst node = textNodes[i];\r\n\t\t\t\tconst replaceTxet = node.nodeValue.replace(\r\n\t\t\t\t\tregExp,\r\n\t\t\t\t\t'<replace class=\"highlight\">$&</replace>'\r\n\t\t\t\t);\r\n\t\t\t\tif (node.parentElement) {\r\n\t\t\t\t\tnode.parentElement.innerHTML = replaceTxet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.queryDocument();\r\n\t\t\tthis.queryNext(1);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t// 进行搜索匹配结果\r\n\tqueryDocument() {\r\n\t\tconst len = this.frame.querySelectorAll(\"replace\").length;\r\n\t\tconst data = new Array(len);\r\n\t\tthis.emit(emitterEvent.findContent, data);\r\n\t}\r\n\r\n\tcancelSearch() {\r\n\t\tthis.query = \"\";\r\n\t\tthis.prevQuery = \"\";\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync queryNext(index: number) {\r\n\t\tindex = index - 1;\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tconst lastIndex = index - 1 < 0 ? replaceEles.length - 1 : index - 1;\r\n\t\t\tconst nextIndex = index + 1 > replaceEles.length - 1 ? 0 : index + 1;\r\n\t\t\tconst last = replaceEles[lastIndex] as HTMLElement;\r\n\t\t\tconst next = replaceEles[nextIndex] as HTMLElement;\r\n\t\t\tlast.classList.remove(\"selected\");\r\n\t\t\tnext.classList.remove(\"selected\");\r\n\t\t\tconst item = replaceEles[index] as HTMLElement;\r\n\t\t\tif (item) {\r\n\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\titem.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollPageIntoView(pageNumber: number) {}\r\n}\r\n","relevantFile":"<file_path>source/ai_doc/build/proxy.ts\ntype Ret = Record<string, string | ProxyOptions>;\n\nconst ifindCookie: Recordable = {\n\tCookie:\n\t\"v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=10a0480cb400b407420dc068243e1dd42; jgbsessid=77c58b32ec8bb7d2d5a8eba8cbe0e638; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0OTo6Ojo2MDI2MDQ1NzI6MTcxNTkxMTk3Mjo6Ojo4NjQwMDo6MTBhMDQ4MGNiNDAwYjQwNzQyMGRjMDY4MjQzZTFkZDQyOmRlZmF1bHRfMTE6MA%3D%3D; ticket=c2f9846eb17a94022adeba580e80afff; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2\"\n};\nexport function createProxy() {\n\tconst ret: Ret = {\n\t\t\"/standardgwapi\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/standardgwapi/api/ai_doc_service\": {\n\t\t\ttarget: \"http://10.0.16.189:8080\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t},\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://10.0.16.123:8080\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t// },\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://172.19.80.62\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(/\"\"/, \"\")\n\t\t// },\n\t\t\"/thsft/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/gwstatic/static/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,","relevantFileList":[],"filePath":"source/ai_doc/src/utils/HTMLReader.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\n\t\tbody = `<${customBody}>","copilot":"body = `<body>${body}</body>`;"}},{"prefix":"interface GetMedalWallParams {\n  uid: number;\n}\n\n// 勋章墙返回数据\ninterface GetMedalWallResult {\n  // 新版勋章墙列表\n  listNew: Array<NewMedalList>;\n  // 老版勋章墙列表\n  listOld: Array<OldMedalList>;\n  // 已获得勋章数量\n  medalNum: number;\n  // 勋章墙详情页地址\n  medalWallInfoUrl: string;\n  // 注册同花顺日期（单位：天）\n  investmentDays: string;\n  // 用户昵称\n  nickname: string;\n  // 用户头像\n  avatar: string;\n  // 佩戴勋章\n  wearMedal: {\n    // 勋章昵称\n    medalName: string;\n    // logo地址\n    logoUrl: string;\n    // 勋章id\n    medalId: number;\n  };\n}\n\n// 勋章墙新版勋章列表\ninterface NewMedalList {\n  // 勋章类别\n  medalCategoryName: string;\n  // 勋章类别描述\n  medalCategoryDescription: string;\n  // 勋章类别id\n  medalCategoryId: number;\n  // 勋章系列列表\n  medalSeriesList: Array<MedalDetailData>\n}\n\n// 勋章墙新版勋章详情\ninterface MedalDetailData {\n  // 勋章昵称\n  medalName: string;\n  // 勋章id\n  medalId: number;\n  // 勋章系列id\n  seriesId: number;\n  // 勋章等级\n  level: number;\n  // 勋章大图logo\n  logoUrl: string;\n  // 是否获取勋章 true：获取 false：未获取\n  hasMedal: boolean;\n  // 是否最新获取 true：最新 false：历史\n  newAcquired: boolean;\n  // 是否佩戴 true：佩戴 false：未佩戴\n  wearMedal: boolean;\n  // 勋章类型 common：普通勋章 activity：活动勋章 history：历史勋章\n  medalType: 'common' | 'activity' | 'history';\n  // 勋章过期时间 单位：秒 0: 永久获取\n  expirationTime: number;\n  // ","infill":"勋章获取时间 单位：秒 0: 永久获取","suffix":"\n  acquiredTime: number;\n}\n\n// 勋章墙老版勋章列表\ninterface OldMedalList {\n  // 勋章类别\n  medalCategoryName: string;\n  // 勋章类别描述\n  medalCategoryDescription: string;\n  // 勋章系列列表\n  medalSeriesList: Array<OldMedalDetailData>;\n}\n\ninterface OldMedalDetailData {\n  // 勋章id\n  medalId: number;\n  // 勋章昵称\n  medalName: string;\n  // 勋章等级\n  level: number;\n  // 勋章大图logo\n  logoUrl: string;\n  // 勋章类型 history：历史勋章\n  medalType: 'history';\n}\n\n// 勋章墙操作勋章参数\ninterface OperateMedalParams {\n  // 用户id\n  uid: number;\n  // 勋章id\n  medalId: number;\n  // 操作 wear：佩戴 remove：卸下\n  action: 'wear' | 'remove';\n}\n\n// 勋章墙更新勋章参数\ninterface UpdateMedalParams {\n  // 用户id\n  uid: number;\n  // 勋章id\n  medalIdList: string;\n}\n","relevantFile":"<file_path>src/utils/methods/application.ts\n    }\n    return false;\n  }\n\n  /**\n   * 设置发送埋点应用场景 key\n   * @param {string} appKey - APP对应的key\n   */\n  static setConfig(appKey: string): void {\n    if (Application.environment.inPC) {\n      // 获取PC端JS，因为埋点JS依赖PC这个JS判断环境\n      const pcScriptElement = document.createElement('script');\n      pcScriptElement.src = '//s.thsi.cn/cd/b2cweb-fe-common-resource-pod/js/cefApi/1.5.8/cefApi.min.js';\n      pcScriptElement.type = 'text/javascript';\n      document.getElementsByTagName('head')[0].appendChild(pcScriptElement);\n      pcScriptElement.onload = () => {\n        window.weblog && window.weblog.setConfig({\n          appKey,\n        });\n      };\n    } else {\n      window.weblog && window.weblog.setConfig({\n        appKey,\n      });\n    }\n  }\n\n  /**\n   * 添加页面展示隐藏监听函数\n   * @param {NativeListenerType} action - 监听类型\n   * @param {() => void} callback - 回调函数\n   */\n  static registerWebHandler(action: NativeListenerType, callback: (data: unknown) => void): void {\n    commonMobile.registerWebHandler(action, callback);\n  }\n\n  /**\n   * 初始化客户端监听事件\n   */\n  static initNativeNotifyFunction(): void {\n    commonMobile.callNativeHandler(NATIVE_ACTION.NOTIFY_NATIVE_EVENT, '');\n  }\n\n  /**\n   * 获取勋章墙回流地址\n   */\n  static getReflowUrl(): string {\n    return `https://t.10jqka.com.cn/lgt/medal_wall/middle.html?userid=${User.medalWallUserId}`;\n  }\n\n  /**\n   * 勋章墙回流\n   */\n  static outSlideReflow(): boolean {\n    if (Application.environment.inTHS) {\n      return false;\n    }\n    (window as any).backWash.startApp(User.statId);\n    return true;\n  }\n勋章墙请求参数","relevantFileList":[],"filePath":"src/types/service/medal-wall.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 勋章获取时间 单位：秒","deepseek-chat-lite":"获取时间 单位：秒","deepseek-chat":"```\n// Start Generation Here\n  // 勋章获取时间 单位","copilot":"勋章获取时间 单位：秒 0: 永久获取"}},{"prefix":"import EventEmitter from \"@/utils/EventEmitter\";\nimport sleep from \"@/utils/sleep\";\nenum emitterEvent {\n\tload = \"load\",\n\tpageScroll = \"pageScroll\",\n\tscaleChange = \"scaleChange\",\n\tfindContent = \"findContent\"\n}\nexport default class HTMLReader extends EventEmitter {\n\tframe: HTMLElement;\n\tsearchText: string;\n\tisInit: boolean;\n\tquery: string;\n\tprevQuery: string;\n\tpageHeight: number;\n\tdata: string;\n\tcustomBody: string;\n\tisCustom: boolean;\n\tconstructor({\n\t\tframe,\n\t\tsearchText,\n\t\tdata,\n\t\tisCustom\n\t}: {\n\t\tframe: HTMLElement;\n\t\tsearchText: string;\n\t\tdata: string;\n\t\tisCustom: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.frame = frame;\n\t\tthis.searchText = searchText || \"\";\n\t\tthis.isInit = false;\n\t\tthis.isCustom = isCustom;\n\t\tthis.query = \"\";\n\t\tthis.prevQuery = \"\";\n\t\tthis.customBody = \"custombody\";\n\t\tthis.pageHeight = 600;\n\t\tthis.data = this.handleReplaceBody(data);\n\t\tthis.pagechanging = this.pagechanging.bind(this);\n\t\tthis.frame.addEventListener(\"scroll\", this.pagechanging);\n\t\tconst initPromise = sleep(300);\n\t\tinitPromise.then(() => {\n\t\t\tthis.render();\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\n\thandleReplaceBody(str: string) {\n\t\tif (!this.isCustom) return str;\n\t\tlet body = str;\n\t\tconst customBody = this.customBody;\n\t\tconst hasBody = ","infill":"body.indexOf(\"</body>\") !== -1;","suffix":"\r\n\r\n\t\t// body可能有属性  要使用正则替换 且属性要保留\r\n\t\tbody = body.replace(/<body([^>]*)>/, `<${customBody}$1>`);\r\n\r\n\t\tconst index = body.indexOf(\"<body>\");\r\n\t\tconst index1 = body.indexOf(\"</body>\");\r\n\t\tif (index === -1) {\r\n\t\t\tbody = `<${customBody}>${body}</${customBody}>`;\r\n\t\t} else {\r\n\t\t\tbody = body.replace(\"<body>\", `<${customBody}>`);\r\n\t\t}\r\n\t\tif (index1 === -1) {\r\n\t\t\tbody = `${body}</${customBody}>`;\r\n\t\t} else {\r\n\t\t\tbody = body.replace(\"</body>\", `</${customBody}>`);\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\trender() {\r\n\t\tthis.emit(emitterEvent.load, true);\r\n\t\tthis.renderHtml();\r\n\t}\r\n\trenderHtml() {\r\n\t\tthis.frame.innerHTML = this.data;\r\n\t\tthis.pagesInit();\r\n\t}\r\n\tpagesInit() {\r\n\t\tthis.isInit = true;\r\n\t\tthis.emit(emitterEvent.load, false);\r\n\t\tthis.emit(emitterEvent.scaleChange, 1);\r\n\t\tconst initPromise = sleep(100);\r\n\t\tinitPromise.then(() => {\r\n\t\t\tthis.pagechanging({\r\n\t\t\t\ttarget: this.frame\r\n\t\t\t} as unknown as Event);\r\n\t\t\tinitPromise.clear();\r\n\t\t});\r\n\t}\r\n\t/**通过文本溯源 */\r\n\ttraceSourceByText(text: string) {\r\n\t\tif (!text) return;\r\n\t\ttext = text.trim();\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\r\n\t\tconst wrap = this.frame;\r\n\t\tconst results: Recordable[] = [];\r\n\t\tfunction getTextNodes(dom: ChildNode, pIndex: any = null) {\r\n\t\t\tfor (let i = 0; i < dom.childNodes.length; i++) {\r\n\t\t\t\tconst node = dom.childNodes[i];\r\n\t\t\t\tlet parentIndex = pIndex || [];\r\n\t\t\t\tparentIndex = pIndex ? parentIndex.concat([i]) : [i];\r\n\t\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\t\tresults.push({\r\n\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\tpIndex: parentIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (node.nodeType === 1) {\r\n\t\t\t\t\tgetTextNodes(node, parentIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetTextNodes(wrap);\r\n\r\n\t\tconst texts = results.map(v => v.node.nodeValue.trim()).join(\"\");\r\n\t\tconst matchIndex = texts.indexOf(text);\r\n\t\tif (matchIndex === -1) {\r\n\t\t\tconsole.log(\"text is not matched\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet total = 0;\r\n\t\tconst items: Recordable[] = [];\r\n\t\tfor (let i = 0; i < results.length; i++) {\r\n\t\t\tconst item = results[i].node.nodeValue.trim();\r\n\t\t\ttotal += item.length;\r\n\t\t\tif (total >= matchIndex && total <= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t} else if (total >= matchIndex + text.length) {\r\n\t\t\t\titems.push(results[i]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (items.length) {\r\n\t\t\tconst eles = items.map(v => v.node.parentElement).filter(v => v !== wrap);\r\n\t\t\teles.forEach(v => {\r\n\t\t\t\tv.classList.add(className);\r\n\t\t\t});\r\n\t\t\tconst firstEle = eles[0];\r\n\t\t\tfirstEle?.scrollIntoView(false);\r\n\t\t}\r\n\t}\r\n\t/**通过属性名-属性值溯源 */\r\n\ttraceSourceByProperty(property: string, value: string) {\r\n\t\tconst className = \"ifind_pv_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\tconst element = this.frame.querySelector(`[${property}=\"${value}\"]`);\r\n\t\tif (!element) return;\r\n\t\telement.classList.add(className);\r\n\t\telement.scrollIntoView(false);\r\n\t}\r\n\t/** 通过xpath溯源 */\r\n\ttraceSourceByXPath(xpath: string[]) {\r\n\t\tif (!Array.isArray(xpath) || !xpath.length) return;\r\n\t\tconst className = \"ifind_xpath_trace\";\r\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\r\n\t\tfor (let i = 0; i < traceEles.length; i++) {\r\n\t\t\ttraceEles[i].classList.remove(className);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet _xpath = xpath[0];\r\n\t\t\tif (this.isCustom) {\r\n\t\t\t\t_xpath = xpath[0].replace(/body/g, this.customBody);\r\n\t\t\t}\r\n\t\t\tconst element = document\r\n\t\t\t\t.evaluate(_xpath, this.frame)\r\n\t\t\t\t.iterateNext() as HTMLElement;\r\n\t\t\tif (!element) {\r\n\t\t\t\tconsole.log(\"element is not found, xpath:\", _xpath);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.classList.add(className);\r\n\t\t\telement.scrollIntoView(false);\r\n\t\t} catch (error) {}\r\n\t}\r\n\tpagechanging(e: Event) {\r\n\t\t// const ele = e.target as HTMLElement;\r\n\t\t// const { scrollHeight, scrollTop } = ele;\r\n\t\t// console.log(\"xxxx\", scrollHeight, scrollTop);\r\n\t\t// const pageTotal = Math.ceil(scrollHeight / pageHeight);\r\n\t\t// const page = Math.ceil(scrollTop / pageHeight) + 1;\r\n\t\tthis.emit(emitterEvent.pageScroll, {\r\n\t\t\tpage: 1,\r\n\t\t\tpageTotal: 1\r\n\t\t});\r\n\t}\r\n\tdestroyed() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.frame.removeEventListener(\"scroll\", this.pagechanging);\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t}\r\n\t_replace(nodes: any, reg: RegExp, textNodes: any[]) {\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (node.nodeType === 1 && node.style?.display === \"none\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (node.nodeType === 3 && node.nodeValue?.match(reg)) {\r\n\t\t\t\ttextNodes.push(node);\r\n\t\t\t} else {\r\n\t\t\t\tif (node.childNodes?.length) {\r\n\t\t\t\t\tthis._replace(node.childNodes, reg, textNodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoSearch(query = this.query) {\r\n\t\tif (this.prevQuery) {\r\n\t\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\t\tif (replaceEles.length) {\r\n\t\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (this.query === this.prevQuery || this.query == \"\") return;\r\n\t\tthis.prevQuery = query;\r\n\t\t(this.frame.parentElement as HTMLElement).scrollTop = 0;\r\n\t\tif (this.isInit) {\r\n\t\t\tconst regExp = new RegExp(\r\n\t\t\t\tquery.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"),\r\n\t\t\t\t\"g\"\r\n\t\t\t);\r\n\t\t\tconst textNodes: any[] = [];\r\n\t\t\tthis._replace(this.frame.childNodes, regExp, textNodes);\r\n\t\t\tfor (let i = 0; i < textNodes.length; i++) {\r\n\t\t\t\tconst node = textNodes[i];\r\n\t\t\t\tconst replaceTxet = node.nodeValue.replace(\r\n\t\t\t\t\tregExp,\r\n\t\t\t\t\t'<replace class=\"highlight\">$&</replace>'\r\n\t\t\t\t);\r\n\t\t\t\tif (node.parentElement) {\r\n\t\t\t\t\tnode.parentElement.innerHTML = replaceTxet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.queryDocument();\r\n\t\t\tthis.queryNext(1);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t// 进行搜索匹配结果\r\n\tqueryDocument() {\r\n\t\tconst len = this.frame.querySelectorAll(\"replace\").length;\r\n\t\tconst data = new Array(len);\r\n\t\tthis.emit(emitterEvent.findContent, data);\r\n\t}\r\n\r\n\tcancelSearch() {\r\n\t\tthis.query = \"\";\r\n\t\tthis.prevQuery = \"\";\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync queryNext(index: number) {\r\n\t\tindex = index - 1;\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tconst lastIndex = index - 1 < 0 ? replaceEles.length - 1 : index - 1;\r\n\t\t\tconst nextIndex = index + 1 > replaceEles.length - 1 ? 0 : index + 1;\r\n\t\t\tconst last = replaceEles[lastIndex] as HTMLElement;\r\n\t\t\tconst next = replaceEles[nextIndex] as HTMLElement;\r\n\t\t\tlast.classList.remove(\"selected\");\r\n\t\t\tnext.classList.remove(\"selected\");\r\n\t\t\tconst item = replaceEles[index] as HTMLElement;\r\n\t\t\tif (item) {\r\n\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\titem.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollPageIntoView(pageNumber: number) {}\r\n}\r\n","relevantFile":"<file_path>source/ai_doc/build/proxy.ts\ntype Ret = Record<string, string | ProxyOptions>;\n\nconst ifindCookie: Recordable = {\n\tCookie:\n\t\"v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=10a0480cb400b407420dc068243e1dd42; jgbsessid=77c58b32ec8bb7d2d5a8eba8cbe0e638; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0OTo6Ojo2MDI2MDQ1NzI6MTcxNTkxMTk3Mjo6Ojo4NjQwMDo6MTBhMDQ4MGNiNDAwYjQwNzQyMGRjMDY4MjQzZTFkZDQyOmRlZmF1bHRfMTE6MA%3D%3D; ticket=c2f9846eb17a94022adeba580e80afff; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2\"\n};\nexport function createProxy() {\n\tconst ret: Ret = {\n\t\t\"/standardgwapi\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/standardgwapi/api/ai_doc_service\": {\n\t\t\ttarget: \"http://10.0.16.189:8080\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t},\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://10.0.16.123:8080\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t// },\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://172.19.80.62\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(/\"\"/, \"\")\n\t\t// },\n\t\t\"/thsft/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/gwstatic/static/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,","relevantFileList":[],"filePath":"source/ai_doc/src/utils/HTMLReader.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" body.indexOf(\"<body>\") !== -1;\r","deepseek-chat-lite":"body.includes(\"<body>\");","deepseek-chat":"```\n// Start Generation Here\n\t\tconst hasBody = body.includes(\"<","copilot":"body.indexOf(\"</body>\") !== -1;"}},{"prefix":"import httpRequest from '@overseafront/http-request';\nimport {\n  ProductInfoProps,\n  ProductInfoRes,\n  PaySubscribeRes,\n  PaySubscribeMultipleRes,\n  PaySubscribeReq,\n  PaySubscribeMutipleReq,\n  SubscribeProductInfoResItem,\n  SubscribeProductInfoProps,\n  ProductExistBySkuProps,\n  ProductExistBySkuRes,\n  UserSubscribeStatusBySaleIdProps,\n  GetProductListShowConfigProps,\n  GetProductListThirdIdConfigProps,\n  GetIOSActivitySignatureProps,\n  GetIOSActivitySignatureRes,\n  UserSubscribeStatusBySaleIdV2Res,\n  GetProductListConfigOfSubscriptionProps,\n  AddOperationActivityJoinRecordReq,\n  IGetProductListRes,\n  IGetUserInfo,\n  GetProductListConfigOfProductInfoProps,\n  IGetI18nDataReq,\n  IGetI18nDataRes,\n  IMembershipStatusRes,\n  IMembershipStatusProps,\n  IGetMembershipBenefitConfigRes,\n  GetProductListConfigOfDetainProps,\n} from './interface';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\nimport { IS_DEV, IS_TEST, API_HOST } from '@/config/env';\n\nconst currApiHost = IS_DEV ? '' : API_HOST;\n\nconst baseURL = `${currApiHost}/gw/socialcenter/v1/`;\nconst baseAuthURL = `${currApiHost}/gw/auth/v1/`;\n// 支付产品路径\nconst payURL = `${currApiHost}/gw/b2cweb-mall/d/charge/mallpay/unified/`;\n// 运营中台配置\nconst configUrl = `${currApiHost}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n// 扶摇url\nconst fuyaoUrl = `${currApiHost}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情host\nconst EXT_HOST = IS_TEST ? '//ainvest-extquote.touzime.com' : '//extquota.ainvest.com';\n// 扩展行情host\nconst extSubscriptionUrl = `${IS_DEV ? '' : EXT_HOST}/od/subscription-center-api`;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前订阅状态\nconst getPaySubscribeState = (data: PaySubscribeReq) => {\n  return customFetchAdapter<PaySubscribeRes>({\n    url: baseAuthURL + 'pay/verify',\n    method: 'get',\n    data,\n  });\n};\n\n// 批量获取用户当前订阅状态（暂时无用）\nconst getPaySubscribeMutipleState = (data: PaySubscribeMutipleReq) => {\n  return customFetchAdapter<PaySubscribeMultipleRes[]>({\n    url: baseAuthURL + 'pay/getPermission',\n    method: 'get',\n    data,\n  });\n};\n\n// 商品列表详情V2(常规)\nconst getProductInfoBySidV2 = (data: ProductInfoProps) => {\n  return customFetchAdapter<ProductInfoRes>({\n    url: payURL + 'product/v2/info',\n    method: 'get',\n    data,\n  });\n};\n\n// 活动商品列表详情\nconst getSubscribeProductInfoBySid = (data: SubscribeProductInfoProps) => {\n  return customFetchAdapter<SubscribeProductInfoResItem[]>({\n    url: payURL + 'product/subscribe/v1/info',\n    method: 'get',\n    data,\n  });\n};\n\n// 检查商品是否存在\nconst checkProductExistBySku = (data: ProductExistBySkuProps) => {\n  return customFetchAdapter<ProductExistBySkuRes>({\n    url: payURL + 'product/third/v1/check',\n    method: 'get',\n    data,\n  });\n};\n\n// 获取用户活动是否可参与（需登录）\nconst getUserSubscribeStatusBySaleIdV2 = (data: UserSubscribeStatusBySaleIdProps) => {\n  return customFetchAdapter<UserSubscribeStatusBySaleIdV2Res>({\n    url: payURL + 'user/subscribe/v2/check',\n    method: 'get',\n    data,\n  });\n};\n\n// *******************************************************************************\n\n// 获取运营中台配置的商品列表信息\nconst getProductListShowConfig = () => {\n  return customFetchAdapter<GetProductListShowConfigProps>({\n    url: configUrl + 'levelactivityconfiguration',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息\nconst getProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'biiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（订阅中心）\nconst getProductListConfigOfSubscription = () => {\n  return customFetchAdapter<GetProductListConfigOfSubscriptionProps>({\n    url: configUrl + 'Subscriptioncenteractivity',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（订阅中心）\nconst getProductListConfigOfDetain = () => {\n  return customFetchAdapter<GetProductListConfigOfDetainProps>({\n    url: configUrl + 'Retepopupactivity',\n    method: 'get',\n  });\n};\n\n// ************************************************************************************************\n\n// ios折扣签名获取\nconst getIOSActivitySignature = (data: GetIOSActivitySignatureProps) => {\n  return customFetchAdapter<GetIOSActivitySignatureRes>({\n    url: payURL + 'payment/subscribe/promotion/sign/v1/iap',\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n// ************************************************************************************************\n\n// 添加运营活动参与标记\nconst addOperationActivityJoinRecord = (data: AddOperationActivityJoinRecordReq) => {\n  return customFetchAdapter({\n    url: baseURL + 'activity/addJoinRecord',\n    method: 'post',\n    data,\n  });\n};\n\n// ************************************************************************************************\n\n// 请求商品列表 - 订阅中心\nconst getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${extSubscriptionUrl}/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      // Cookie: 'userid=1000000695;sessionid=163139c43ec3a27463f21cf458f7715a0',\n      // 'X-Auth-Type': 'ths',\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// 请求文章列表\nconst getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) => {\n  return customFetchAdapter({\n    data,\n    url: baseURL + 'edu/article/userArticles',\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n};\n\n// 请求用户信息（昵称）\nconst getUserInfo = () => {\n  return customFetchAdapter<IGetUserInfo>({\n    url: baseAuthURL + 'user/v2/getUserInfo',\n    method: 'post',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（商品信息）\nconst getProductListConfigOfProductInfo = () => {\n  return customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n};\n\n// 获取多语言内容\nconst getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'g","infill":"oupon = (data: IGet","suffix":"\r\n\r\n\r\nexport {\r\n  getPaySubscribeState,\r\n  getPaySubscribeMutipleState,\r\n  getProductInfoBySidV2,\r\n  getSubscribeProductInfoBySid,\r\n  checkProductExistBySku,\r\n  getProductListShowConfig,\r\n  getIOSActivitySignature,\r\n  getUserSubscribeStatusBySaleIdV2,\r\n  getProductListThirdIdConfig,\r\n  getProductListConfigOfSubscription,\r\n  addOperationActivityJoinRecord,\r\n  getProductListOfSubscription,\r\n  getUserArticle,\r\n  getUserInfo,\r\n  getProductListConfigOfProductInfo,\r\n  getI18nData,\r\n  getProductListConfigOfDetain,\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/request/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"et',\r","deepseek-chat-lite":"et',\r","deepseek-chat":"```\n// Start Generation Here\nconst getMembershipBenefitConfig = () =>","copilot":"oupon = (data: IGet"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    description: string;\n    large_image: string;\n    small_white_image: s","infill":"================================================================================================================\r\n\r\n// 优惠券查询\r\nexport interface IGetUserCouponProps {\r\n  sid: string;\r\n}\r\n","suffix":"\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// 请求文章列表\nconst getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) => {\n  return customFetchAdapter({\n    data,\n    url: baseURL + 'edu/article/userArticles',\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n};\n\n// 请求用户信息（昵称）\nconst getUserInfo = () => {\n  return customFetchAdapter<IGetUserInfo>({\n    url: baseAuthURL + 'user/v2/getUserInfo',\n    method: 'post',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（商品信息）\nconst getProductListConfigOfProductInfo = () => {\n  return customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n};\n\n// 获取多语言内容\nconst getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" tring;","deepseek-chat-lite":"tring;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IProductInfo {\n  goods","copilot":"================================================================================================================\r\n\r\n// 优惠券查询\r\nexport interface IGetUserCouponProps {\r\n  sid: string;\r\n}\r\n"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface ","infill":";\r\n  // femyu\r\n  startId?: string;","suffix":"\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n};\n\n// 获取运营中台配置的商品列表信息（订阅中心）\nconst getProductListConfigOfDetain = () => {\n  return customFetchAdapter<GetProductListConfigOfDetainProps>({\n    url: configUrl + 'Retepopupactivity',\n    method: 'get',\n  });\n};\n\n// ************************************************************************************************\n\n// ios折扣签名获取\nconst getIOSActivitySignature = (data: GetIOSActivitySignatureProps) => {\n  return customFetchAdapter<GetIOSActivitySignatureRes>({\n    url: payURL + 'payment/subscribe/promotion/sign/v1/iap',\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n// ************************************************************************************************\n\n// 添加运营活动参与标记\nconst addOperationActivityJoinRecord = (data: AddOperationActivityJoinRecordReq) => {\n  return customFetchAdapter({\n    url: baseURL + 'activity/addJoinRecord',\n    method: 'post',\n    data,\n  });\n};\n\n// ************************************************************************************************\n\n// 请求商品列表 - 订阅中心\nconst getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${extSubscriptionUrl}/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      // Cookie: 'userid=1000000695;sessionid=163139c43ec3a27463f21cf458f7715a0',\n      // 'X-Auth-Type': 'ths',\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// 请求文章列表\nconst getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) => {","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" AddOperationActivityJoinRecordRes {\r","deepseek-chat-lite":"AddOperationActivityJoinRecordRes {","deepseek-chat":"```\n// Start Generation Here\nexport interface GetUserArticleProps {\n ","copilot":";\r\n  // femyu\r\n  startId?: string;"}},{"prefix":"import httpRequest from '@overseafront/http-request';\nimport {\n  ProductInfoProps,\n  ProductInfoRes,\n  PaySubscribeRes,\n  PaySubscribeMultipleRes,\n  PaySubscribeReq,\n  PaySubscribeMutipleReq,\n  SubscribeProductInfoResItem,\n  SubscribeProductInfoProps,\n  ProductExistBySkuProps,\n  ProductExistBySkuRes,\n  UserSubscribeStatusBySaleIdProps,\n  GetProductListShowConfigProps,\n  GetProductListThirdIdConfigProps,\n  GetIOSActivitySignatureProps,\n  GetIOSActivitySignatureRes,\n  UserSubscribeStatusBySaleIdV2Res,\n  GetProductListConfigOfSubscriptionProps,\n  AddOperationActivityJoinRecordReq,\n  IGetProductListRes,\n  IGetUserInfo,\n  GetProductListConfigOfProductInfoProps,\n  IGetI18nDataReq,\n  IGetI18nDataRes,\n  IMembershipStatusRes,\n  IMembershipStatusProps,\n  IGetMembershipBenefitConfigRes,\n  GetProductListConfigOfDetainProps,\n} from './interface';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\nimport { IS_DEV, IS_TEST, API_HOST } from '@/config/env';\n\nconst currApiHost = IS_DEV ? '' : API_HOST;\n\nconst baseURL = `${currApiHost}/gw/socialcenter/v1/`;\nconst baseAuthURL = `${currApiHost}/gw/auth/v1/`;\n// 支付产品路径\nconst payURL = `${currApiHost}/gw/b2cweb-mall/d/charge/mallpay/unified/`;\n// 运营中台配置\nconst configUrl = `${currApiHost}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n// 扶摇url\nconst fuyaoUrl = `${currApiHost}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情host\nconst EXT_HOST = IS_TEST ? '//ainvest-extquote.touzime.com' : '//extquota.ainvest.com';\n// 扩展行情host\nconst extSubscriptionUrl = `${IS_DEV ? '' : EXT_HOST}/od/subscription-center-api`;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前订阅状态\nconst getPaySubscribeState = (data: PaySubscribeReq) => {\n  return customFetchAdapter<PaySubscribeRes>({\n    url: baseAuthURL + 'pay/verify',\n    method: 'get',\n    data,\n  });\n};\n\n// 批量获取用户当前订阅状态（暂时无用）\nconst getPaySubscribeMutipleState = (data: PaySubscribeMutipleReq) => {\n  return customFetchAdapter<PaySubscribeMultipleRes[]>({\n    url: baseAuthURL + 'pay/getPermission',\n    method: 'get',\n    data,\n  });\n};\n\n// 商品列表详情V2(常规)\nconst getProductInfoBySidV2 = (data: ProductInfoProps) => {\n  return customFetchAdapter<ProductInfoRes>({\n    url: payURL + 'product/v2/info',\n    method: 'get',\n    data,\n  });\n};\n\n// 活动商品列表详情\nconst getSubscribeProductInfoBySid = (data: SubscribeProductInfoProps) => {\n  return customFetchAdapter<SubscribeProductInfoResItem[]>({\n    url: payURL + 'product/subscribe/v1/info',\n    method: 'get',\n    data,\n  });\n};\n\n// 检查商品是否存在\nconst checkProductExistBySku = (data: ProductExistBySkuProps) => {\n  return customFetchAdapter<ProductExistBySkuRes>({\n    url: payURL + 'product/third/v1/check',\n    method: 'get',\n    data,\n  });\n};\n\n// 获取用户活动是否可参与（需登录）\nconst getUserSubscribeStatusBySaleIdV2 = (data: UserSubscribeStatusBySaleIdProps) => {\n  return customFetchAdapter<UserSubscribeStatusBySaleIdV2Res>({\n    url: payURL + 'user/subscribe/v2/check',\n    method: 'get',\n    data,\n  });\n};\n\n// *******************************************************************************\n\n// 获取运营中台配置的商品列表信息\nconst getProductListShowConfig = () => {\n  return customFetchAdapter<GetProductListShowConfigProps>({\n    url: configUrl + 'levelactivityconfiguration',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息\nconst getProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'biiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（订阅中心）\nconst getProductListConfigOfSubscription = () => {\n  return customFetchAdapter<GetProductListConfigOfSubscriptionProps>({\n    url: configUrl + 'Subscriptioncenteractivity',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（订阅中心）\nconst getProductListConfigOfDetain = () => {\n  return customFetchAdapter<GetProductListConfigOfDetainProps>({\n    url: configUrl + 'Retepopupactivity',\n    method: 'get',\n  });\n};\n\n// ************************************************************************************************\n\n// ios折扣签名获取\nconst getIOSActivitySignature = (data: GetIOSActivitySignatureProps) => {\n  return customFetchAdapter<GetIOSActivitySignatureRes>({\n    url: payURL + 'payment/subscribe/promotion/sign/v1/iap',\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n// ************************************************************************************************\n\n// 添加运营活动参与标记\nconst addOperationActivityJoinRecord = (data: AddOperationActivityJoinRecordReq) => {\n  return customFetchAdapter({\n    url: baseURL + 'activity/addJoinRecord',\n    method: 'post',\n    data,\n  });\n};\n\n// ************************************************************************************************\n\n// 请求商品列表 - 订阅中心\nconst getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${extSubscriptionUrl}/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      // Cookie: 'userid=1000000695;sessionid=163139c43ec3a27463f21cf458f7715a0',\n      // 'X-Auth-Type': 'ths',\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// 请求文章列表\nconst getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) => {\n  return customFetchAdapter({\n    data,\n    url: baseURL + 'edu/article/userArticles',\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n};\n\n// 请求用户信息（昵称）\nconst getUserInfo = () => {\n  return customFetchAdapter<IGetUserInfo>({\n    url: baseAuthURL + 'user/v2/getUserInfo',\n    method: 'post',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（商品信息）\nconst getProductListConfigOfProductInfo = () => {\n  return customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n};\n\n// 获取多语言内容\nconst getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'g","infill":"// =================================================================================================\r\n\r\n// 优惠券查询\r\nexport const queryUser\r\n","suffix":"\r\n\r\nexport {\r\n  getPaySubscribeState,\r\n  getPaySubscribeMutipleState,\r\n  getProductInfoBySidV2,\r\n  getSubscribeProductInfoBySid,\r\n  checkProductExistBySku,\r\n  getProductListShowConfig,\r\n  getIOSActivitySignature,\r\n  getUserSubscribeStatusBySaleIdV2,\r\n  getProductListThirdIdConfig,\r\n  getProductListConfigOfSubscription,\r\n  addOperationActivityJoinRecord,\r\n  getProductListOfSubscription,\r\n  getUserArticle,\r\n  getUserInfo,\r\n  getProductListConfigOfProductInfo,\r\n  getI18nData,\r\n  getProductListConfigOfDetain,\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/request/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"et',\r","deepseek-chat-lite":"et',","deepseek-chat":"```\n// Start Generation Here\nconst getMembershipBenefitConfig = () =>","copilot":"// =================================================================================================\r\n\r\n// 优惠券查询\r\nexport const queryUser\r\n"}},{"prefix":"import httpRequest from '@overseafront/http-request';\nimport {\n  ProductInfoProps,\n  ProductInfoRes,\n  PaySubscribeRes,\n  PaySubscribeMultipleRes,\n  PaySubscribeReq,\n  PaySubscribeMutipleReq,\n  SubscribeProductInfoResItem,\n  SubscribeProductInfoProps,\n  ProductExistBySkuProps,\n  ProductExistBySkuRes,\n  UserSubscribeStatusBySaleIdProps,\n  GetProductListShowConfigProps,\n  GetProductListThirdIdConfigProps,\n  GetIOSActivitySignatureProps,\n  GetIOSActivitySignatureRes,\n  UserSubscribeStatusBySaleIdV2Res,\n  GetProductListConfigOfSubscriptionProps,\n  AddOperationActivityJoinRecordReq,\n  IGetProductListRes,\n  IGetUserInfo,\n  GetProductListConfigOfProductInfoProps,\n  IGetI18nDataReq,\n  IGetI18nDataRes,\n  IMembershipStatusRes,\n  IMembershipStatusProps,\n  IGetMembershipBenefitConfigRes,\n  GetProductListConfigOfDetainProps,\n} from './interface';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\nimport { IS_DEV, IS_TEST, API_HOST } from '@/config/env';\n\nconst currApiHost = IS_DEV ? '' : API_HOST;\n\nconst baseURL = `${currApiHost}/gw/socialcenter/v1/`;\nconst baseAuthURL = `${currApiHost}/gw/auth/v1/`;\n// 支付产品路径\nconst payURL = `${currApiHost}/gw/b2cweb-mall/d/charge/mallpay/unified/`;\n// 运营中台配置\nconst configUrl = `${currApiHost}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n// 扶摇url\nconst fuyaoUrl = `${currApiHost}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情host\nconst EXT_HOST = IS_TEST ? '//ainvest-extquote.touzime.com' : '//extquota.ainvest.com';\n// 扩展行情host\nconst extSubscriptionUrl = `${IS_DEV ? '' : EXT_HOST}/od/subscription-center-api`;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前订阅状态\nconst getPaySubscribeState = (data: PaySubscribeReq) => {\n  return customFetchAdapter<PaySubscribeRes>({\n    url: baseAuthURL + 'pay/verify',\n    method: 'get',\n    data,\n  });\n};\n\n// 批量获取用户当前订阅状态（暂时无用）\nconst getPaySubscribeMutipleState = (data: PaySubscribeMutipleReq) => {\n  return customFetchAdapter<PaySubscribeMultipleRes[]>({\n    url: baseAuthURL + 'pay/getPermission',\n    method: 'get',\n    data,\n  });\n};\n\n// 商品列表详情V2(常规)\nconst getProductInfoBySidV2 = (data: ProductInfoProps) => {\n  return customFetchAdapter<ProductInfoRes>({\n    url: payURL + 'product/v2/info',\n    method: 'get',\n    data,\n  });\n};\n\n// 活动商品列表详情\nconst getSubscribeProductInfoBySid = (data: SubscribeProductInfoProps) => {\n  return customFetchAdapter<SubscribeProductInfoResItem[]>({\n    url: payURL + 'product/subscribe/v1/info',\n    method: 'get',\n    data,\n  });\n};\n\n// 检查商品是否存在\nconst checkProductExistBySku = (data: ProductExistBySkuProps) => {\n  return customFetchAdapter<ProductExistBySkuRes>({\n    url: payURL + 'product/third/v1/check',\n    method: 'get',\n    data,\n  });\n};\n\n// 获取用户活动是否可参与（需登录）\nconst getUserSubscribeStatusBySaleIdV2 = (data: UserSubscribeStatusBySaleIdProps) => {\n  return customFetchAdapter<UserSubscribeStatusBySaleIdV2Res>({\n    url: payURL + 'user/subscribe/v2/check',\n    method: 'get',\n    data,\n  });\n};\n\n// *******************************************************************************\n\n// 获取运营中台配置的商品列表信息\nconst getProductListShowConfig = () => {\n  return customFetchAdapter<GetProductListShowConfigProps>({\n    url: configUrl + 'levelactivityconfiguration',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息\nconst getProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'biiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（订阅中心）\nconst getProductListConfigOfSubscription = () => {\n  return customFetchAdapter<GetProductListConfigOfSubscriptionProps>({\n    url: configUrl + 'Subscriptioncenteractivity',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（订阅中心）\nconst getProductListConfigOfDetain = () => {\n  return customFetchAdapter<GetProductListConfigOfDetainProps>({\n    url: configUrl + 'Retepopupactivity',\n    method: 'get',\n  });\n};\n\n// ************************************************************************************************\n\n// ios折扣签名获取\nconst getIOSActivitySignature = (data: GetIOSActivitySignatureProps) => {\n  return customFetchAdapter<GetIOSActivitySignatureRes>({\n    url: payURL + 'payment/subscribe/promotion/sign/v1/iap',\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n// ************************************************************************************************\n\n// 添加运营活动参与标记\nconst addOperationActivityJoinRecord = (data: AddOperationActivityJoinRecordReq) => {\n  return customFetchAdapter({\n    url: baseURL + 'activity/addJoinRecord',\n    method: 'post',\n    data,\n  });\n};\n\n// ************************************************************************************************\n\n// 请求商品列表 - 订阅中心\nconst getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${extSubscriptionUrl}/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      // Cookie: 'userid=1000000695;sessionid=163139c43ec3a27463f21cf458f7715a0',\n      // 'X-Auth-Type': 'ths',\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// 请求文章列表\nconst getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) => {\n  return customFetchAdapter({\n    data,\n    url: baseURL + 'edu/article/userArticles',\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n};\n\n// 请求用户信息（昵称）\nconst getUserInfo = () => {\n  return customFetchAdapter<IGetUserInfo>({\n    url: baseAuthURL + 'user/v2/getUserInfo',\n    method: 'post',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（商品信息）\nconst getProductListConfigOfProductInfo = () => {\n  return customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n};\n\n// 获取多语言内容\nconst getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'g","infill":"return customFetchAdapter<IGetUserCouponRes>({\r\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\r\n    method: 'get',\r\n    noEncrypt: true,\r\n    data,\r\n    transmissionToNative: {\r\n      gateway: 'gms',\r\n    },","suffix":"\r\n  });\r\n\r\n}\r\n\r\n\r\nexport {\r\n  getPaySubscribeState,\r\n  getPaySubscribeMutipleState,\r\n  getProductInfoBySidV2,\r\n  getSubscribeProductInfoBySid,\r\n  checkProductExistBySku,\r\n  getProductListShowConfig,\r\n  getIOSActivitySignature,\r\n  getUserSubscribeStatusBySaleIdV2,\r\n  getProductListThirdIdConfig,\r\n  getProductListConfigOfSubscription,\r\n  addOperationActivityJoinRecord,\r\n  getProductListOfSubscription,\r\n  getUserArticle,\r\n  getUserInfo,\r\n  getProductListConfigOfProductInfo,\r\n  getI18nData,\r\n  getProductListConfigOfDetain,\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/request/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"et',\r","deepseek-chat-lite":"et',","deepseek-chat":"```\n// Start Generation Here\nconst getMembershipBenefitConfig = () =>","copilot":"return customFetchAdapter<IGetUserCouponRes>({\r\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\r\n    method: 'get',\r\n    noEncrypt: true,\r\n    data,\r\n    transmissionToNative: {\r\n      gateway: 'gms',\r\n    },"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":" string;","suffix":"\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IMembershipStatusProps {\n ","copilot":" string;"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"export interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;","suffix":"\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IMembershipStatusProps {\n ","copilot":"export interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"查询的起始id","suffix":"\r\n  startId?: string;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IMembershipStatusProps {\n ","copilot":"查询的起始id"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":";\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n","suffix":"\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":";\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // ","suffix":"\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // "}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"Desc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // ","suffix":"\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"Desc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // "}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"奖品价值\r\n  rewardWorth: string;\r\n  // 可索取jie","suffix":"\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"奖品价值\r\n  rewardWorth: string;\r\n  // 可索取jie"}},{"prefix":"import EventEmitter from \"@/utils/EventEmitter\";\nimport sleep from \"@/utils/sleep\";\nenum emitterEvent {\n\tload = \"load\",\n\tpageScroll = \"pageScroll\",\n\tscaleChange = \"scaleChange\",\n\tfindContent = \"findContent\"\n}\nexport default class HTMLReader extends EventEmitter {\n\tframe: HTMLElement;\n\tsearchText: string;\n\tisInit: boolean;\n\tquery: string;\n\tprevQuery: string;\n\tpageHeight: number;\n\tdata: string;\n\tcustomBody: string;\n\tisCustom: boolean;\n\tconstructor({\n\t\tframe,\n\t\tsearchText,\n\t\tdata,\n\t\tisCustom\n\t}: {\n\t\tframe: HTMLElement;\n\t\tsearchText: string;\n\t\tdata: string;\n\t\tisCustom: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.frame = frame;\n\t\tthis.searchText = searchText || \"\";\n\t\tthis.isInit = false;\n\t\tthis.isCustom = isCustom;\n\t\tthis.query = \"\";\n\t\tthis.prevQuery = \"\";\n\t\tthis.customBody = \"custombody\";\n\t\tthis.pageHeight = 600;\n\t\tthis.data = this.handleReplaceBody(data || \"\");\n\t\tthis.pagechanging = this.pagechanging.bind(this);\n\t\tthis.frame.addEventListener(\"scroll\", this.pagechanging);\n\t\tconst initPromise = sleep(300);\n\t\tinitPromise.then(() => {\n\t\t\tthis.render();\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\n\thandleReplaceBody(str: string) {\n\t\tif (!this.isCustom) return str;\n\t\tlet body = str;\n\t\tconst customBody = this.customBody;\n\t\tconst hasBody = body.indexOf(\"</body>\") !== -1;\n\t\tif (hasBody) {\n\t\t\tbody = body.replace(/<body([^>]*)>/, `<${customBody}$1>`);\n\t\t\tbody = body.replace(\"</body>\", `</${customBody}>`);\n\t\t} else {\n\t\t\tbody = `<${customBody}>${body}</${customBody}>`;\n\t\t}\n\t\treturn body;\n\t}\n\trender() {\n\t\tthis.emit(emitterEvent.load, true);\n\t\tthis.renderHtml();\n\t}\n\trenderHtml() {\n\t\tthis.frame.innerHTML = this.data;\n\t\tthis.pagesInit();\n\t}\n\tpagesInit() {\n\t\tthis.isInit = true;\n\t\tthis.emit(emitterEvent.load, false);\n\t\tthis.emit(emitterEvent.scaleChange, 1);\n\t\tconst initPromise = sleep(100);\n\t\tinitPromise.then(() => {\n\t\t\tthis.pagechanging({\n\t\t\t\ttarget: this.frame\n\t\t\t} as unknown as Event);\n\t\t\tinitPromise.clear();\n\t\t});\n\t}\n\t/**通过文本溯源 */\n\ttraceSourceByText(text: string) {\n\t\tif (!text) return;\n\t\ttext = text.trim();\n\t\tconst className = \"ifind_pv_trace\";\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\n\t\tfor (let i = 0; i < traceEles.length; i++) {\n\t\t\ttraceEles[i].classList.remove(className);\n\t\t}\n\n\t\tconst wrap = this.frame;\n\t\tconst results: Recordable[] = [];\n\t\tfunction getTextNodes(dom: ChildNode, pIndex: any = null) {\n\t\t\tfor (let i = 0; i < dom.childNodes.length; i++) {\n\t\t\t\tconst node = dom.childNodes[i];\n\t\t\t\tlet parentIndex = pIndex || [];\n\t\t\t\tparentIndex = pIndex ? parentIndex.concat([i]) : [i];\n\t\t\t\tif (node.nodeType === 3) {\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tpIndex: parentIndex\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\tgetTextNodes(node, parentIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgetTextNodes(wrap);\n\n\t\tconst texts = results.map(v => v.node.nodeValue.trim()).join(\"\");\n\t\tconst matchIndex = texts.indexOf(text);\n\t\tif (matchIndex === -1) {\n\t\t\tconsole.log(\"text is not matched\");\n\t\t\treturn;\n\t\t}\n\t\tlet total = 0;\n\t\tconst items: Recordable[] = [];\n\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\tconst item = results[i].node.nodeValue.trim();\n\t\t\ttotal += item.length;\n\t\t\tif (total >= matchIndex && total <= matchIndex + text.length) {\n\t\t\t\titems.push(results[i]);\n\t\t\t} else if (total >= matchIndex + text.length) {\n\t\t\t\titems.push(results[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (items.length) {\n\t\t\tconst eles = items.map(v => v.node.parentElement).filter(v => v !== wrap);\n\t\t\teles.forEach(v => {\n\t\t\t\tv.classList.add(className);\n\t\t\t});\n\t\t\tconst firstEle = eles[0];\n\t\t\tfirstEle?.scrollIntoView(false);\n\t\t}\n\t}\n\t/**通过属性名-属性值溯源 */\n\ttraceSourceByProperty(property: string, value: string) {\n\t\tconst className = \"ifind_pv_trace\";\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\n\t\tfor (let i = 0; i < traceEles.length; i++) {\n\t\t\ttraceEles[i].classList.remove(className);\n\t\t}\n\t\tconst element = this.frame.querySelector(`[${property}=\"${value}\"]`);\n\t\tif (!element) return;\n\t\telement.classList.add(className);\n\t\telement.scrollIntoView(false);\n\t}\n\t/** 通过xpath溯源 */\n\ttraceSourceByXPath(xpath: string[]) {\n\t\tif (!Array.isArray(xpath) || !xpath.length) return;\n\t\tconst className = \"ifind_xpath_trace\";\n\t\tconst traceEles = this.frame.querySelectorAll(`.${className}`);\n\t\tfor (let i = 0; i < traceEles.length; i++) {\n\t\t\ttraceEles[i].classList.remove(className);\n\t\t}\n\t\ttry {\n\t\t\tlet _xpath = xpath[0];\n\t\t\tif (this.isCustom) {\n\t\t\t\t// 替换第一个出现的body 其他的不替换\n\t\t\t\t_xpath = ","infill":"_xpath.replace(/\\/\\/body/, `/${this.customBody}`);","suffix":"\r\n\r\n\r\n\t\t\t\t// _xpath = xpath[0].replace(/body/g, this.customBody);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tconst element = document\r\n\t\t\t\t.evaluate(_xpath, this.frame)\r\n\t\t\t\t.iterateNext() as HTMLElement;\r\n\t\t\tif (!element) {\r\n\t\t\t\tconsole.log(\"element is not found, xpath:\", _xpath);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.classList.add(className);\r\n\t\t\telement.scrollIntoView(false);\r\n\t\t} catch (error) {}\r\n\t}\r\n\tpagechanging(e: Event) {\r\n\t\t// const ele = e.target as HTMLElement;\r\n\t\t// const { scrollHeight, scrollTop } = ele;\r\n\t\t// console.log(\"xxxx\", scrollHeight, scrollTop);\r\n\t\t// const pageTotal = Math.ceil(scrollHeight / pageHeight);\r\n\t\t// const page = Math.ceil(scrollTop / pageHeight) + 1;\r\n\t\tthis.emit(emitterEvent.pageScroll, {\r\n\t\t\tpage: 1,\r\n\t\t\tpageTotal: 1\r\n\t\t});\r\n\t}\r\n\tdestroyed() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.frame.removeEventListener(\"scroll\", this.pagechanging);\r\n\t\t\tresolve(null);\r\n\t\t});\r\n\t}\r\n\t_replace(nodes: any, reg: RegExp, textNodes: any[]) {\r\n\t\tfor (let i = 0; i < nodes.length; i++) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (node.nodeType === 1 && node.style?.display === \"none\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (node.nodeType === 3 && node.nodeValue?.match(reg)) {\r\n\t\t\t\ttextNodes.push(node);\r\n\t\t\t} else {\r\n\t\t\t\tif (node.childNodes?.length) {\r\n\t\t\t\t\tthis._replace(node.childNodes, reg, textNodes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdoSearch(query = this.query) {\r\n\t\tif (this.prevQuery) {\r\n\t\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\t\tif (replaceEles.length) {\r\n\t\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.query = query;\r\n\t\tif (this.query === this.prevQuery || this.query == \"\") return;\r\n\t\tthis.prevQuery = query;\r\n\t\t(this.frame.parentElement as HTMLElement).scrollTop = 0;\r\n\t\tif (this.isInit) {\r\n\t\t\tconst regExp = new RegExp(\r\n\t\t\t\tquery.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"),\r\n\t\t\t\t\"g\"\r\n\t\t\t);\r\n\t\t\tconst textNodes: any[] = [];\r\n\t\t\tthis._replace(this.frame.childNodes, regExp, textNodes);\r\n\t\t\tfor (let i = 0; i < textNodes.length; i++) {\r\n\t\t\t\tconst node = textNodes[i];\r\n\t\t\t\tconst replaceTxet = node.nodeValue.replace(\r\n\t\t\t\t\tregExp,\r\n\t\t\t\t\t'<replace class=\"highlight\">$&</replace>'\r\n\t\t\t\t);\r\n\t\t\t\tif (node.parentElement) {\r\n\t\t\t\t\tnode.parentElement.innerHTML = replaceTxet;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.queryDocument();\r\n\t\t\tthis.queryNext(1);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject();\r\n\t\t}\r\n\t}\r\n\t// 进行搜索匹配结果\r\n\tqueryDocument() {\r\n\t\tconst len = this.frame.querySelectorAll(\"replace\").length;\r\n\t\tconst data = new Array(len);\r\n\t\tthis.emit(emitterEvent.findContent, data);\r\n\t}\r\n\r\n\tcancelSearch() {\r\n\t\tthis.query = \"\";\r\n\t\tthis.prevQuery = \"\";\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tfor (let i = 0; i < replaceEles.length; i++) {\r\n\t\t\t\tconst item = replaceEles[i] as HTMLElement;\r\n\t\t\t\titem.outerHTML = item.innerHTML;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync queryNext(index: number) {\r\n\t\tindex = index - 1;\r\n\t\tconst replaceEles = this.frame.querySelectorAll(\"replace\");\r\n\t\tif (replaceEles.length) {\r\n\t\t\tconst lastIndex = index - 1 < 0 ? replaceEles.length - 1 : index - 1;\r\n\t\t\tconst nextIndex = index + 1 > replaceEles.length - 1 ? 0 : index + 1;\r\n\t\t\tconst last = replaceEles[lastIndex] as HTMLElement;\r\n\t\t\tconst next = replaceEles[nextIndex] as HTMLElement;\r\n\t\t\tlast.classList.remove(\"selected\");\r\n\t\t\tnext.classList.remove(\"selected\");\r\n\t\t\tconst item = replaceEles[index] as HTMLElement;\r\n\t\t\tif (item) {\r\n\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\titem.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tscrollPageIntoView(pageNumber: number) {}\r\n}\r\n","relevantFile":"<file_path>source/ai_doc/build/proxy.ts\ntype Ret = Record<string, string | ProxyOptions>;\n\nconst ifindCookie: Recordable = {\n\tCookie:\n\t\"v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=1e0468cb7ae5d973e3646676ce9b21b5f; jgbsessid=fa4fc6aea63be87bd37d23775e7e1ee1; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0Njo6Ojo2MDI2MDQ1NzI6MTcxNjE3MTY4MTo6Ojo4NjQwMDo6MWUwNDY4Y2I3YWU1ZDk3M2UzNjQ2Njc2Y2U5YjIxYjVmOmRlZmF1bHRfMTE6MA%3D%3D; ticket=877be76495ecdb621900a8cf54cd95c0; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2\"\n};\nexport function createProxy() {\n\tconst ret: Ret = {\n\t\t\"/standardgwapi\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/standardgwapi/api/ai_doc_service\": {\n\t\t\ttarget: \"http://10.0.16.189:8080\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t},\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://10.0.16.123:8080\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(\"/standardgwapi/api\", \"\")\n\t\t// },\n\t\t// \"/standardgwapi/api\": {\n\t\t// \ttarget: \"http://172.19.80.62\",\n\t\t// \tchangeOrigin: true,\n\t\t// \theaders: {\n\t\t// \t\tCookie: ifindCookie.Cookie\n\t\t// \t},\n\t\t// \tws: true,\n\t\t// \trewrite: path => path.replace(/\"\"/, \"\")\n\t\t// },\n\t\t\"/thsft/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,\n\t\t\trewrite: path => path.replace(/\"\"/, \"\")\n\t\t},\n\t\t\"/gwstatic/static/\": {\n\t\t\ttarget: \"http://172.19.80.62\",\n\t\t\tchangeOrigin: true,\n\t\t\theaders: {\n\t\t\t\tCookie: ifindCookie.Cookie\n\t\t\t},\n\t\t\tws: true,","relevantFileList":[],"filePath":"source/ai_doc/src/utils/HTMLReader.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" xpath[0].replace(/body/g, this.customBody);\r","deepseek-chat-lite":"_xpath.replace(/body/g, this.customBody);\r","deepseek-chat":"```\n// Start Generation Here\n_xpath = xpath[0].replace","copilot":"_xpath.replace(/\\/\\/body/, `/${this.customBody}`);"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  re","suffix":"\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  re"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"STATE {\r\n  INIT = 'INIT',\r\n  CLAIMING = 'CLAIMING',\r\n  EXPORE\r\n}","suffix":"\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: \r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport enum COUPON_STATE {\n","copilot":"STATE {\r\n  INIT = 'INIT',\r\n  CLAIMING = 'CLAIMING',\r\n  EXPORE\r\n}"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"= 'EXPIRED',\r\n  DISTRIBUTED = 'DISTRIBUTED',","suffix":"\r\n}\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: \r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport enum COUPON_STATE {\n","copilot":"= 'EXPIRED',\r\n  DISTRIBUTED = 'DISTRIBUTED',"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"string;\r\n  // 可索取截至时间\r\n  deadline","suffix":"\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"string;\r\n  // 可索取截至时间\r\n  deadline"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"'CLAIMING',\r\n  EXPIRED = 'EXPIRED',\r\n  DISTRIBUTED = 'DISTRIBUTED',","suffix":"\r\n}\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: \r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"'CLAIMING',\r\n  EXPIRED = 'EXPIRED',\r\n  DISTRIBUTED = 'DISTRIBUTED',"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":" = 'DISTRIBUTED',","suffix":"\r\n}\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE,\r\n  \r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport interface IMembershipStatusProps {\n ","copilot":" = 'DISTRIBUTED',"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"YEAR = 'YEAR',","suffix":"\r\n}\r\n\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE,\r\n  // 订单id\r\n  orderId: string;\r\n  // \r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: SID_TIME_TYPE\r\n  // \r\n  \r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport interface IMembershipStatusProps {\n ","copilot":"YEAR = 'YEAR',"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    description: string;\n    large_image: string;\n    small_white_image: s","infill":"export interface IGetUserCouponProps {\r\n  sid: string;\r","suffix":"\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// 请求文章列表\nconst getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) => {\n  return customFetchAdapter({\n    data,\n    url: baseURL + 'edu/article/userArticles',\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n};\n\n// 请求用户信息（昵称）\nconst getUserInfo = () => {\n  return customFetchAdapter<IGetUserInfo>({\n    url: baseAuthURL + 'user/v2/getUserInfo',\n    method: 'post',\n  });\n};\n\n// 获取运营中台配置的商品列表信息（商品信息）\nconst getProductListConfigOfProductInfo = () => {\n  return customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n};\n\n// 获取多语言内容\nconst getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" tring;","deepseek-chat-lite":"tring;","deepseek-chat":"```\n// Start Generation Here\nexport interface IProductInfo {\n  goods","copilot":"export interface IGetUserCouponProps {\r\n  sid: string;\r"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"'MONTH',\r\n  QUARTER = 'QUARTER',\r\n  SEMI_YEAR = 'SEMI_YEAR',\r\n  ","suffix":"\r\n}\r\n\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE,\r\n  // 订单id\r\n  orderId: string;\r\n  // \r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: \r\n\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport interface IMembershipStatusProps {\n ","copilot":"'MONTH',\r\n  QUARTER = 'QUARTER',\r\n  SEMI_YEAR = 'SEMI_YEAR',\r\n  "}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"= 'QUARTER',\r\n  SEMI_YEAR = 'SEMI_YEAR',\r\n  YEAR = 'YEAR',","suffix":"\r\n}\r\n\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE,\r\n  // 订单id\r\n  orderId: string;\r\n  // \r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: SID_TIME_TYPE\r\n  // \r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport interface IMembershipStatusProps {\n ","copilot":"= 'QUARTER',\r\n  SEMI_YEAR = 'SEMI_YEAR',\r\n  YEAR = 'YEAR',"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"SEMI_YEAR',\r\n  YEAR = 'YEAR',","suffix":"\r\n}\r\n\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE,\r\n  // 订单id\r\n  orderId: string;\r\n  // \r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: SID_TIME_TYPE\r\n  // \r\n  \r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport interface IMembershipStatusProps {\n ","copilot":"SEMI_YEAR',\r\n  YEAR = 'YEAR',"}},{"prefix":"const env = window.__oversea_ainvest__.ENV;\nexport const isDev = env === 'development';\n\n//红涨绿跌统一处理\nexport const codeModeFormat = (baseValue, value, stockCodeMode) => {\n  //0 绿涨红跌\n  const redFlag = 1;\n  const greenFlag = 0;\n  const normalFlag = 2;\n  let _value = value;\n  if (typeof _value !== 'number') {\n    _value = parseFloat(value);\n  }\n  if (_value === null || _value === undefined) {\n    return normalFlag;\n  }\n  if (Number(stockCodeMode)) {\n    if (_value - Number(baseValue) > 0) {\n      return redFlag;\n    } else if (_value - Number(baseValue) < 0) {\n      return greenFlag;\n    } else {\n      return normalFlag;\n    }\n  } else {\n    if (_value - Number(baseValue) < 0) {\n      return redFlag;\n    } else if (_value - Number(baseValue) > 0) {\n      return greenFlag;\n    } else {\n      return normalFlag;\n    }\n  }\n};\n\nconst CHART_PX_RATIO = 2;\nexport function calcEchartPx(px) {\n  const newPx = window.parseInt(px);\n  if (Number.isNaN(newPx)) {\n    return 0;\n  } else {\n    return newPx / CHART_PX_RATIO;\n  }\n}\n\n// 可视化图表禁止外层容器touch事件\nexport const preventChartCrossScroll = el => {\n  const chartBox = el;\n  const mouse = {\n    x: 0,\n    y: 0,\n  };\n  const touchStartFn = e => {\n    mouse.x = e.zrX;\n    mouse.y = e.zrY;\n  };\n  const touchEndFn = e => {\n    const valX = Math.abs(mouse.x - e.zrX);\n    const valY = Math.abs(mouse.y - e.zrY);\n    if (valX > valY) {\n      window.console.log('禁止----');\n      e.preventDefault();\n    }\n  };\n  chartBox.addEventListener('touchstart', touchStartFn);\n  chartBox.addEventListener('touchmove', touchEndFn);\n  return () => {\n    el.removeEventListener('touchstart', touchStartFn);\n    el.removeEventListener('touchmove', touchEndFn);\n  };\n};\n\n//dom尺寸变化钩子函数\nexport const domResizeObserver = (dom, fn) => {\n  const resizeObserver = new ResizeObserver(() => {\n    fn();\n    resizeObserver.unobserve(dom);\n  });\n  resizeObserver.observe(dom);\n};\n\nexport const debounce","infill":" = (fn, delay) => {\r\n  let timer:any = null;\r\n  return function () {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(() => {\r\n      fn.apply(this, arguments);\r\n    }, delay);\r\n  };\r\n}","suffix":"","relevantFile":"<file_path>packages/grid-card/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/grid-card/src/api/index.ts\n    },\n  });\n};\n\n/**\n * 保存宫格数据\n */\nfunction saveGridData(data:any) {\n  // 缓存数据\n  try {\n    fl.setStorageSync(storageKey, data);\n  } catch (e) {\n    window.console.error('+++onStorageGet grid Error+++', e);\n  }\n}\n\n/**\n * 填入多语言数据\n */\nasync function fillGridI18NData(gridData = []) {\n  try {\n    const keys = gridData.map((item:any) => item?.namemultilang);\n    if (keys.length) {\n      const res:any = await getI18nData({\n        app_id: appId,\n        template_name: keys,\n      });\n\n      window.console.info('----- 多语言数据获取成功', res);\n      if (res?.data) {\n        gridData.forEach((item:any) => {\n          item.titleObj = res.data[item.namemultilang];\n        });\n      }\n    }\n    return gridData;\n  } catch (e) {\n    window.console.error('------ 多语言数据接口异常', e);\n    return gridData;\n  }\n}\n\n/**\n * 请求宫格数据\n */\nexport async function getGridData() {\n  const res:any = await getDynamicConfig(gridKey);\n  window.console.info('------- 宫格数据请求成功', res);\n  const data = res?.[gridKey];\n \n  // 获取多语言的数据\n  const list = fillGridI18NData(data);\n  saveGridData(list);\n  return list;\n}\n\n/**\n * 获取宫格缓存\n */\nexport function getDefaultGridData() {","relevantFileList":[],"filePath":"packages/grid-card/src/utils/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  = (fn, delay) => {","deepseek-chat-lite":" = (fn, wait) => {","deepseek-chat":"```\n// Start Generation Here\nexport const debounce = (func, wait","copilot":" = (fn, delay) => {\r\n  let timer:any = null;\r\n  return function () {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(() => {\r\n      fn.apply(this, arguments);\r\n    }, delay);\r\n  };\r\n}"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"string;\r\n  // 状态\r\n  ","suffix":"\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;\r","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"string;\r\n  // 状态\r\n  "}},{"prefix":"export default function en() {\n  return {\n    提醒设置: 'Notice setting',\n    监控报告: 'Monitoring report',\n    帮助文档: 'Help document',\n    监控成员: 'Monitor members',\n    报价异动: 'Quotation change',\n    成交异动: 'Transaction transaction',\n    舆情预警: 'Public opinion warning',\n    重要事件: 'Important Events',\n    评级变动: 'Rating changes',\n    一级发行: 'Primary issue',\n    实时成交: 'Real-time transaction',\n    离岸报价: 'Offshore quotation',\n    // 全部: 'All',\n    // 经纪商行情: 'Brokerage Quotes',\n    // 上证固收: 'SSE Fixed Income',\n    // 竞价系统: 'Bidding system',3\n    只看有行情债券: 'Just look at market bonds',\n    异动设置: 'Change settings',\n    快速筛选: 'Quick filter',\n    简易: 'Easy',\n    列表: 'List',\n    估值偏离: 'Valuation deviation',\n    昨收偏离: 'Deviated yesterday',\n    笔: 'Count',\n    切换: 'Toggle',\n    板块管理: 'Sector management',\n    默认排序: 'Default sort',\n    价格异动: 'Price change',\n    新债发行: 'New bond issuance',\n    负面舆情: 'Negative public opinion',\n    今日: 'Today',\n    近一周: 'Nearly a week',\n    债券简称: 'Abbreviation',\n    债券代码: 'Bond Code',\n    成交走势: 'Trend',\n    成交价: 'Price',\n    指标编辑: 'Indicator edit',\n    基础指标: 'Basic indicators',\n    行情指标: 'Market indicators',\n    境内债券: 'Domestic bonds',","infill":"\r\n}\r\n","suffix":"","relevantFile":"<file_path>src/components/BasicChart/index.tsx\n      dataToChartOption();\n      updateChart();\n    }\n    /** 叠加改变 */\n    function handleOverlayChange(v: OverlayType) {\n      context.emit('overlayChange', v);\n      updateChartSeries();\n      updateChart(true);\n    }\n    /** 指标改变 */\n    function handleIndexChange() {\n      dataToChartOption();\n      updateChart();\n    }\n    function resizeChart() {\n      echartsIns?.resize();\n    }\n\n    function dataToChartOption() {\n      seriesMap[OverlayType.deal].data = [];\n      seriesMap[OverlayType.bid].data = [];\n      seriesMap[OverlayType.ofr].data = [];\n\n      const xAxis: any[] = [];\n      dataStore[curIndex.value].forEach(it => {\n        if (props.type === 'deal' /* && it[OverlayType.deal] !== null */) {\n          seriesMap[OverlayType.deal].data.push({\n            value: [it.time, it[OverlayType.deal]],\n            payload: { dealType: it.dealType }, // 额外数据，用于tooltip中展示\n          });\n          xAxis.push(it.time);\n        } else if (props.type === 'quote' /* && (it[OverlayType.bid] !== null || it[OverlayType.ofr] !== null) */) {\n          seriesMap[OverlayType.bid].data.push(it[OverlayType.bid]);\n          seriesMap[OverlayType.ofr].data.push(it[OverlayType.ofr]);\n          xAxis.push(it.time);\n        }\n      });\n      optionCreator.setXAxisData(xAxis);\n      if (curOverlay.value) {\n        const valuationData = valuationStore[curIndex.value];\n        seriesMap[curOverlay.value].data = new Array(xAxis.length).fill(valuationData[curOverlay.value]);\n      }\n    }\n\n    function updateChartSeries() {\n      let seriesArr = [];\n      if (props.type === 'deal') {\n        seriesArr = [seriesMap[OverlayType.deal]];\n      } else {\n        seriesArr = [seriesMap[OverlayType.bid], seriesMap[OverlayType.ofr]];\n      }\n      if (curOverlay.value) {\n        seriesArr.push(seriesMap[curOverlay.value]);\n      }\n      optionCreator.setSeries(seriesArr);\n    }\n\n    function updateChart(notMerge = false) {\n      // console.time(props.type + ',echarts渲染耗时');\n      if (optionCreator.option.series.every((it: any) => it.data?.length === 0)) {\n<file_path>src/components/BasicChart/store/todayOverlayIndicator.ts\n            // abort\n            this.unresolved.add(resolve);\n            // 等待10秒后，如果还没被resolve 就reject\n            window.setTimeout(() => {\n              reject();\n              this.unresolved.delete(resolve);\n            }, 10_000);\n          } else {\n            reject(err);\n          }\n        });\n      if (!data) return;\n      const todayData = data[0];\n      overlayIndicatorId.forEach(id => {\n        this.todayOverlayIndicatorCacheIds.add(id);\n      });\n\n      this.mergeCache(todayData);\n\n      const result = { ...this.todayOverlayIndicatorCache };\n\n      resolve(result);\n      //被abort的请求也resolve\n      if (this.unresolved.size) {\n        this.unresolved.forEach(rsv => rsv(result));\n        this.unresolved.clear();\n      }\n    });\n  }\n  /** 合并缓存 */\n  private mergeCache(todayData: OverlayIndicator) {\n    for (const key in todayData) {\n      type keyType = keyof OverlayIndicator;\n      const val = todayData[key as keyType];\n      if (!isEmptyValue(val)) {\n        this.todayOverlayIndicatorCache[key as keyType] = val as any;\n      }\n    }\n  }\n\n  /**\n   * 检查缓存\n   * @return 返回没有缓存的id\n   */\n  private checkCacheId(overlayIndicatorId: OverlayIndicatorId[]) {\n    const notCachedIds = new Set<OverlayIndicatorId>();\n    overlayIndicatorId.forEach(newId => {\n      if (!this.todayOverlayIndicatorCacheIds.has(newId)) {\n        notCachedIds.add(newId);\n      } /* else {\n        console.log(`叠加曲线${newId}，缓存命中。`);\n      } */\n    });\n    return [...notCachedIds];\n  }\n}\n\n/** 今日叠加曲线缓存 经纪商*/\nexport const todayOverlayIndicatorStoreForBrokerage = new TodayOverlayIndicatorStore(window.lastTradeDate);\n<file_path>src/utils/index.ts\nconst cbAuth_10 = window.cbAuth.includes('10');\nconst cbAuth_19 = window.cbAuth.includes('19');\nconst csiAuth = window.csiAuth === '1';\n\n/** 债券类型代码判断是否利率债 */\nconst isInterestRateBondRegs = [/^640001/, /^640004001001$/, /^640004001002$/, /^640004001003$/, /^640002/];\n\n/** 判断是否是利率债，否则就是信用债 */\nexport function isInterestRateBond(bondTypeCode: string) {\n  return isInterestRateBondRegs.some(reg => reg.test(bondTypeCode));\n}\n\n/**\n * 判断是否为空值\n * - null\n * - undefined\n * - \"--\"\n * - \"\"\n */\nexport function isEmptyValue(value: unknown): boolean {\n  return value === null || value === undefined || value === '--' || value === '';\n}\n\n/**\n * 中债中证权限判断\n * authType 1-不需要权限 2-中债权限 3-中债隐含评级权限 4-中证权限 5-中债和中证权限\n */\nexport function checkCbCsiAuth(authType: number, data: { chargeId: string; isCbHistory: string }) {\n  if (authType === 1) return true;\n  const { chargeId, isCbHistory } = data || {};\n  if (authType === 2) {\n    return !chargeId || isEmptyValue(isCbHistory) || (isCbHistory === '0' && cbAuth_19) || (isCbHistory === '1' && window.cbAuth.includes(chargeId));\n  }\n  if (authType === 3 && cbAuth_10) return true;\n  if (authType === 4 && csiAuth) return true;\n  if (authType === 5) {\n    return (\n      !chargeId ||\n      isEmptyValue(isCbHistory) ||\n      (isCbHistory === '0' && cbAuth_19) ||\n      (isCbHistory === '1' && window.cbAuth.includes(chargeId) && csiAuth)\n    );\n  }\n  return false;\n}\n<file_path>src/components/BasicChart/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { API_TIME_FMT } from '@/utils/const';\nimport dayjs from 'dayjs';\nimport { DealAndQuote, DealAndQuoteParams } from './types';\n\n/** 增量轮询用 */\nlet preRequestTime = dayjs(window.curDate).valueOf();\n/**\n * 今日成交，今日报价\n * @param {boolean} increment 增量\n */\nexport function getTodayDealAndQuote(increment = false, params: Partial<DealAndQuoteParams> = {}) {\n  const requestTime = Date.now() + window.timeErr - 1000; // -1s修正误差\n  return http\n    .get<DealAndQuote[]>(apiList.brokerageQuotes.getDealAndQuote, {\n      params: {\n        date: dayjs(window.marketDate).format(API_TIME_FMT),\n        preRequestTime: increment ? preRequestTime : undefined,\n        ...params,\n      } as DealAndQuoteParams,\n    })\n    .then(data => {\n      preRequestTime = requestTime;\n      return data;\n    });\n}","relevantFileList":[],"filePath":"src/locale/en.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\n    债券类型: 'Bond Type',\n","copilot":"\r\n}\r\n"}},{"prefix":"export default function en() {\n  return {\n    提醒设置: 'Notice setting',\n    监控报告: 'Monitoring report',\n    帮助文档: 'Help document',\n    监控成员: 'Monitor members',\n    报价异动: 'Quotation change',\n    成交异动: 'Transaction transaction',\n    舆情预警: 'Public opinion warning',\n    重要事件: 'Important Events',\n    评级变动: 'Rating changes',\n    一级发行: 'Primary issue',\n    实时成交: 'Real-time transaction',\n    离岸报价: 'Offshore quotation',\n    // 全部: 'All',\n    // 经纪商行情: 'Brokerage Quotes',\n    // 上证固收: 'SSE Fixed Income',\n    // 竞价系统: 'Bidding system',3\n    只看有行情债券: 'Just look at market bonds',\n    异动设置: 'Change settings',\n    快速筛选: 'Quick filter',\n    简易: 'Easy',\n    列表: 'List',\n    估值偏离: 'Valuation deviation',\n    昨收偏离: 'Deviated yesterday',\n    笔: 'Count',\n    切换: 'Toggle',\n    板块管理: 'Sector management',\n    默认排序: 'Default sort',\n    价格异动: 'Price change',\n    新债发行: 'New bond issuance',\n    负面舆情: 'Negative public opinion',\n    今日: 'Today',\n    近一周: 'Nearly a week',\n    债券简称: 'Abbreviation',\n    债券代码: 'Bond Code',\n    成交走势: 'Trend',\n    成交价: 'Price',\n    指标编辑: 'Indicator edit',\n    基础指标: 'Basic indicators',\n    行情指标: 'Market indicators',\n    境内债券: 'Domestic bonds',","infill":": 'Exclude outliers',","suffix":"\r\n  };\r\n}\r\n","relevantFile":"<file_path>src/components/BasicChart/index.tsx\n      dataToChartOption();\n      updateChart();\n    }\n    /** 叠加改变 */\n    function handleOverlayChange(v: OverlayType) {\n      context.emit('overlayChange', v);\n      updateChartSeries();\n      updateChart(true);\n    }\n    /** 指标改变 */\n    function handleIndexChange() {\n      dataToChartOption();\n      updateChart();\n    }\n    function resizeChart() {\n      echartsIns?.resize();\n    }\n\n    function dataToChartOption() {\n      seriesMap[OverlayType.deal].data = [];\n      seriesMap[OverlayType.bid].data = [];\n      seriesMap[OverlayType.ofr].data = [];\n\n      const xAxis: any[] = [];\n      dataStore[curIndex.value].forEach(it => {\n        if (props.type === 'deal' /* && it[OverlayType.deal] !== null */) {\n          seriesMap[OverlayType.deal].data.push({\n            value: [it.time, it[OverlayType.deal]],\n            payload: { dealType: it.dealType }, // 额外数据，用于tooltip中展示\n          });\n          xAxis.push(it.time);\n        } else if (props.type === 'quote' /* && (it[OverlayType.bid] !== null || it[OverlayType.ofr] !== null) */) {\n          seriesMap[OverlayType.bid].data.push(it[OverlayType.bid]);\n          seriesMap[OverlayType.ofr].data.push(it[OverlayType.ofr]);\n          xAxis.push(it.time);\n        }\n      });\n      optionCreator.setXAxisData(xAxis);\n      if (curOverlay.value) {\n        const valuationData = valuationStore[curIndex.value];\n        seriesMap[curOverlay.value].data = new Array(xAxis.length).fill(valuationData[curOverlay.value]);\n      }\n    }\n\n    function updateChartSeries() {\n      let seriesArr = [];\n      if (props.type === 'deal') {\n        seriesArr = [seriesMap[OverlayType.deal]];\n      } else {\n        seriesArr = [seriesMap[OverlayType.bid], seriesMap[OverlayType.ofr]];\n      }\n      if (curOverlay.value) {\n        seriesArr.push(seriesMap[curOverlay.value]);\n      }\n      optionCreator.setSeries(seriesArr);\n    }\n\n    function updateChart(notMerge = false) {\n      // console.time(props.type + ',echarts渲染耗时');\n      if (optionCreator.option.series.every((it: any) => it.data?.length === 0)) {\n<file_path>src/components/BasicChart/store/todayOverlayIndicator.ts\n            // abort\n            this.unresolved.add(resolve);\n            // 等待10秒后，如果还没被resolve 就reject\n            window.setTimeout(() => {\n              reject();\n              this.unresolved.delete(resolve);\n            }, 10_000);\n          } else {\n            reject(err);\n          }\n        });\n      if (!data) return;\n      const todayData = data[0];\n      overlayIndicatorId.forEach(id => {\n        this.todayOverlayIndicatorCacheIds.add(id);\n      });\n\n      this.mergeCache(todayData);\n\n      const result = { ...this.todayOverlayIndicatorCache };\n\n      resolve(result);\n      //被abort的请求也resolve\n      if (this.unresolved.size) {\n        this.unresolved.forEach(rsv => rsv(result));\n        this.unresolved.clear();\n      }\n    });\n  }\n  /** 合并缓存 */\n  private mergeCache(todayData: OverlayIndicator) {\n    for (const key in todayData) {\n      type keyType = keyof OverlayIndicator;\n      const val = todayData[key as keyType];\n      if (!isEmptyValue(val)) {\n        this.todayOverlayIndicatorCache[key as keyType] = val as any;\n      }\n    }\n  }\n\n  /**\n   * 检查缓存\n   * @return 返回没有缓存的id\n   */\n  private checkCacheId(overlayIndicatorId: OverlayIndicatorId[]) {\n    const notCachedIds = new Set<OverlayIndicatorId>();\n    overlayIndicatorId.forEach(newId => {\n      if (!this.todayOverlayIndicatorCacheIds.has(newId)) {\n        notCachedIds.add(newId);\n      } /* else {\n        console.log(`叠加曲线${newId}，缓存命中。`);\n      } */\n    });\n    return [...notCachedIds];\n  }\n}\n\n/** 今日叠加曲线缓存 经纪商*/\nexport const todayOverlayIndicatorStoreForBrokerage = new TodayOverlayIndicatorStore(window.lastTradeDate);\n<file_path>src/utils/index.ts\nconst cbAuth_10 = window.cbAuth.includes('10');\nconst cbAuth_19 = window.cbAuth.includes('19');\nconst csiAuth = window.csiAuth === '1';\n\n/** 债券类型代码判断是否利率债 */\nconst isInterestRateBondRegs = [/^640001/, /^640004001001$/, /^640004001002$/, /^640004001003$/, /^640002/];\n\n/** 判断是否是利率债，否则就是信用债 */\nexport function isInterestRateBond(bondTypeCode: string) {\n  return isInterestRateBondRegs.some(reg => reg.test(bondTypeCode));\n}\n\n/**\n * 判断是否为空值\n * - null\n * - undefined\n * - \"--\"\n * - \"\"\n */\nexport function isEmptyValue(value: unknown): boolean {\n  return value === null || value === undefined || value === '--' || value === '';\n}\n\n/**\n * 中债中证权限判断\n * authType 1-不需要权限 2-中债权限 3-中债隐含评级权限 4-中证权限 5-中债和中证权限\n */\nexport function checkCbCsiAuth(authType: number, data: { chargeId: string; isCbHistory: string }) {\n  if (authType === 1) return true;\n  const { chargeId, isCbHistory } = data || {};\n  if (authType === 2) {\n    return !chargeId || isEmptyValue(isCbHistory) || (isCbHistory === '0' && cbAuth_19) || (isCbHistory === '1' && window.cbAuth.includes(chargeId));\n  }\n  if (authType === 3 && cbAuth_10) return true;\n  if (authType === 4 && csiAuth) return true;\n  if (authType === 5) {\n    return (\n      !chargeId ||\n      isEmptyValue(isCbHistory) ||\n      (isCbHistory === '0' && cbAuth_19) ||\n      (isCbHistory === '1' && window.cbAuth.includes(chargeId) && csiAuth)\n    );\n  }\n  return false;\n}\n<file_path>src/components/BasicChart/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { API_TIME_FMT } from '@/utils/const';\nimport dayjs from 'dayjs';\nimport { DealAndQuote, DealAndQuoteParams } from './types';\n\n/** 增量轮询用 */\nlet preRequestTime = dayjs(window.curDate).valueOf();\n/**\n * 今日成交，今日报价\n * @param {boolean} increment 增量\n */\nexport function getTodayDealAndQuote(increment = false, params: Partial<DealAndQuoteParams> = {}) {\n  const requestTime = Date.now() + window.timeErr - 1000; // -1s修正误差\n  return http\n    .get<DealAndQuote[]>(apiList.brokerageQuotes.getDealAndQuote, {\n      params: {\n        date: dayjs(window.marketDate).format(API_TIME_FMT),\n        preRequestTime: increment ? preRequestTime : undefined,\n        ...params,\n      } as DealAndQuoteParams,\n    })\n    .then(data => {\n      preRequestTime = requestTime;\n      return data;\n    });\n}","relevantFileList":[],"filePath":"src/locale/en.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\n    债券类型: 'Bond Type',\n","copilot":": 'Exclude outliers',"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"d: string;\r\n  // \r\n  sid: SID_TYPE;\r\n  // ","suffix":"\r\n\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"d: string;\r\n  // \r\n  sid: SID_TYPE;\r\n  // "}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureProps {\n  bundle_id: string;\n  key_id: string;\n  product_id: string;\n  offer_id: string;\n  application_username: string;\n  nonce: string;\n  timestamp: string;\n}\n\n// 获取ios活动签名\nexport interface GetIOSActivitySignatureRes {\n  signature: string;\n}\n\n// 添加运营活动参与标记\nexport interface AddOperationActivityJoinRecordReq {\n  // 运营活动id\n  activityId: string;\n}\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    descri","infill":"TYPE {\r\n  MONTH = 'MONTH',\r\n  QUARTER \r\n}\r\n","suffix":"\r\n\r\n// \r\nexport interface IUserCouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE,\r\n  // 订单id\r\n  orderId: string;\r\n  // \r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: \r\n\r\n}\r\n\r\n// 优惠券查询res\r\nexport interface IGetUserCouponRes {\r\n  list: IUserCouponItem[];\r\n  total: number;\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/request/index.ts\n    },\n  });\n\n// =================================================================================================\n// 获取会员状态\nexport const getMembershipSubscirptionStatus = (data: IMembershipStatusProps) => {\n  return customFetchAdapter<IMembershipStatusRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/subscription/v1/status`,\n    method: 'get',\n    noEncrypt: true,\n    data,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/user/coupon/v1/list`,\n    method: 'get',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ption: string;\r","deepseek-chat-lite":"ption: string;","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserCouponItem {\n","copilot":"TYPE {\r\n  MONTH = 'MONTH',\r\n  QUARTER \r\n}\r\n"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":"// 优惠券领取res\r\nexport interface IRedeemCouponByCodeRes {\r\n  \r\n}","suffix":"\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 运营中台 - 配置信息\r","deepseek-chat-lite":"用户订阅支付方式类型","deepseek-chat":"```\n// Start Generation Here\n// 优惠券查询请求参数\ninterface","copilot":"// 优惠券领取res\r\nexport interface IRedeemCouponByCodeRes {\r\n  \r\n}"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":"IRedeemCouponByCodeRes {\r\n\r\n}","suffix":"\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 运营中台 - 配置信息\r","deepseek-chat-lite":"用户订阅支付方式类型","deepseek-chat":"```\n// Start Generation Here\n// 优惠券查询请求参数\ninterface","copilot":"IRedeemCouponByCodeRes {\r\n\r\n}"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":"OUND = 'MASK_CODE_NOT_FOUND',\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  REWARD","suffix":"\r\n}\r\n\r\n// 优惠券领取res\r\nexport interface IRedeemCouponByCodeRes {\r\n\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 优惠券领取req\r","deepseek-chat-lite":"优惠券领取req\r","deepseek-chat":"```\n// Start Generation Here\n// 优惠券领取res\nexport interface","copilot":"OUND = 'MASK_CODE_NOT_FOUND',\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  REWARD"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":"= 'CHECK_LIMITED',\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  ","suffix":"\r\n}\r\n\r\n// 优惠券领取res\r\nexport interface IRedeemCouponByCodeRes {\r\n\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 优惠券领取req\r","deepseek-chat-lite":"优惠券领取req\r","deepseek-chat":"```\n// Start Generation Here\n// 优惠券领取res\nexport interface","copilot":"= 'CHECK_LIMITED',\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  "}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":" = 'SUCCESS',\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  CHECK_LIMIT\r\n}\r\n\r\n// 优惠券领取res\r\n","suffix":"export interface IRedeemCouponByCodeRes {\r\n\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 优惠券兑换接口\r","deepseek-chat-lite":"获取优惠码兑换信息请求参数","deepseek-chat":"```\n// Start Generation Here\nexport interface IGetUserCouponProps {","copilot":" = 'SUCCESS',\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  CHECK_LIMIT\r\n}\r\n\r\n// 优惠券领取res\r\n"}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: string;\n    background: string;\n    topicPrompt: string;\n    searchKey: string;\n    orgids: ","infill":"string;\r\n    ","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" string[];","deepseek-chat-lite":"string[];","deepseek-chat":"```\n// Start Generation Here\n    orgids: string[];\n    related","copilot":"string;\r\n    "}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ","infill":"ListResponse = {\r\n    total: number;\r\n    list: ListItem[];\r\n}","suffix":"","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse } from './response';\n\nconst prefix = '/plugingwapi';\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse[]>(prefix + '/list', params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(prefix + '/list/edit', data, config);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" List = {","deepseek-chat-lite":"ListResponse = {","deepseek-chat":"```\n// Start Generation Here\nexport type ListResponse = {\n  code","copilot":"ListResponse = {\r\n    total: number;\r\n    list: ListItem[];\r\n}"}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total","infill":": number;\r\n    list: ListItem[];","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse } from './response';\n\nconst prefix = '/plugingwapi';\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse[]>(prefix + '/list', params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(prefix + '/list/edit', data, config);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" : number;\r","deepseek-chat-lite":": number;\r","deepseek-chat":"```\n// Start Generation Here\n    total: number;\n    list:","copilot":": number;\r\n    list: ListItem[];"}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;","infill":"list: ListItem[];","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse,  } from './response';\n\nconst prefix = '/plugingwapi';\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse[]>(prefix + '/list', params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(prefix + '/list/edit', data, config);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat":"```\n// Start Generation Here\n    list: ListItem[];\n// End","copilot":"list: ListItem[];"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":"FOUND = 'REWARD_NOT_FOUND',\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  ","suffix":"\r\n}\r\n\r\n// 优惠券领取res\r\nexport interface IRedeemCouponByCodeRes {\r\n\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 优惠券领取req\r","deepseek-chat-lite":"优惠券领取req\r","deepseek-chat":"```\n// Start Generation Here\n// 优惠券领取res\nexport interface","copilot":"FOUND = 'REWARD_NOT_FOUND',\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  "}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":"ED = 'PLARFORM_LIMITED',\r\n  USER_ID_NOT_FOUND = ","suffix":"\r\n}\r\n\r\n// 优惠券领取res\r\nexport interface IRedeemCouponByCodeRes {\r\n\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 优惠券领取req\r","deepseek-chat-lite":"优惠券领取req\r","deepseek-chat":"```\n// Start Generation Here\n// 优惠券查询res\nexport interface","copilot":"ED = 'PLARFORM_LIMITED',\r\n  USER_ID_NOT_FOUND = "}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":"USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',","suffix":"\r\n}\r\n\r\n// 优惠券领取res\r\nexport interface IRedeemCouponByCodeRes {\r\n\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 优惠券领取req\r","deepseek-chat-lite":"优惠券领取req\r","deepseek-chat":"```\n// Start Generation Here\n// 优惠券领取res\nexport interface","copilot":"USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',"}},{"prefix":"import { ControlShowProductListParams, ProductListThirdIdConfigItem } from '@/config/interface';\nimport { PAY_CHANNEL_ID_TYPE, ACTIVITY_TYPE, SID_TYPE } from '@/config/productConfig';\n\n// 获取产品信息请求参数\ninterface ProductInfoProps {\n  sid: string;\n}\n\nexport interface ClientLocalPriceObj {\n  // 显示价格\n  formattedPrice: string;\n  // 币种单位（formattedPrice去掉数字和小数点，使用price代替）\n  currencyUnitStr: string;\n  // 真实价格\n  realPrice: number;\n  // 货币地区码（USD/JPY/JPN，两端不一样）\n  currencyCode: string;\n}\n\n// 产品套餐信息V2\ninterface ProductSkuInfo {\n  id?: string;\n  day: number;\n  month: number;\n  amount: number;\n  // google使用\n  base_plan_id: string;\n  // 当前活动数据(活动才有)\n  saleData?: SubscribeProductInfoItem;\n  // 所有活动数据(活动才有)\n  saleDataArr?: SubscribeProductInfoItem[];\n  // 三方商品id\n  productThirdId?: string;\n  // 由于多SID,需要补充作为标识\n  sid: string;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// 产品信息V2\ninterface ProductInfoRes {\n  sid: number;\n  sid_name: string;\n  memo: string;\n  sku_list: ProductSkuInfo[];\n}\n\ninterface PaySubscribeReq {\n  sid: SID_TYPE;\n}\n\ninterface PaySubscribeMutipleReq {\n  sid: string;\n}\n\n// 支付订阅信息\ninterface PaySubscribeRes {\n  authenticate: boolean;\n  queryState: string;\n}\n\n// 支付订阅信息 批量\ninterface PaySubscribeMultipleRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ************************************************************************************************\n\n// 支付方式类型\nexport enum PAY_MODE_TYPE {\n  IOS = '37',\n  GOOGLE = '50',\n  STRIPE = '51',\n}\n\n// 活动 - 续费产品信息详情参数\ninterface SubscribeProductInfoProps {\n  sid: string;\n  mode_id: PAY_MODE_TYPE;\n  // 是否有效，1表示有效活动，不传or传0表示包括过期活动\n  is_valid: number;\n  // 是否存在活动id，1表示存在，0表示不存在\n  sale_id_exist: number;\n}\n\n// 活动用户类型\nexport enum ACTIVITY_USER_TYPE {\n  // 新用户\n  NEW = 1,\n  // 老用户\n  OLD = 2,\n  // 新、老用户（google活动，新老用户均可参加）\n  NEW_AND_OLD = 3,\n}\n\n// 活动 - 续费产品信息详情item\ninterface SubscribeProductInfoItem {\n  sid: string;\n  // 首次续费时间及价格\n  first_month: number;\n  first_day: number;\n  first_amount: number;\n  // 正常续费时间及价格\n  renew_amount: number;\n  renew_month: number;\n  // 没配置过促销售卖，sale_id=0的是非促销，常规的售卖\n  sale_id: string;\n  // 活动类型（1/2/3/4/5）\n  renewal_type: ACTIVITY_TYPE;\n  // 折扣周期，\n  discount_period: number;\n  // 该活动可参加的用户类型\n  user_type: ACTIVITY_USER_TYPE;\n\n  // 活动总天数 - 计算得出\n  totalFirstDays: number;\n  // 活动月均价 - 计算得出\n  averageMonthAmount: number;\n  // 新增客户端获取价格\n  clientLocalPrice?: ClientLocalPriceObj;\n}\n\n// ************************************************************************************************\n\n// 用户订阅支付方式类型\nexport enum USER_SUBSCRIBE_PAY_MODE_TYPE {\n  IOS = 'iap',\n  GOOGLE = 'google',\n  STRIPE = 'stripe',\n}\n\n// 用户对应活动订阅状态查询props\ninterface UserSubscribeStatusBySaleIdProps {\n  // sid\n  sid: string;\n  // 支付方式\n  paymode: USER_SUBSCRIBE_PAY_MODE_TYPE;\n  // 活动id，即saleId（可为空，可批量使用逗号隔开）\n  ac_id?: string;\n  // channelId\n  channel_id: PAY_CHANNEL_ID_TYPE;\n}\n\n// 用户对应活动是否可购买\nexport enum User_SALE_CAN_SUBSCRIBE {\n  YES = 1,\n  NO = 0,\n}\n\ninterface UserSubscribeStatusBySaleIdItem {\n  // 活动id\n  ac_id: string;\n  // 1表示可购买，0表示不可购买\n  check_result: User_SALE_CAN_SUBSCRIBE;\n}\n\n// 用户对应活动订阅状态查询res\ninterface UserSubscribeStatusBySaleIdV2Res {\n  list: UserSubscribeStatusBySaleIdItem[];\n}\n\n// ************************************************************************************************\n\n// 活动 - 续费产品信息详情返回值item\ninterface SubscribeProductInfoResItem extends SubscribeProductInfoItem {}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuProps {\n  // ios即三方id，安卓需thirdSid + '-' + basePlanId\n  third_sku: string;\n}\n\n// 检查商品sku是否存在（可购买）\ninterface ProductExistBySkuRes {\n  exist: boolean;\n}\n\n// ************************************************************************************************\n\n// 运营中台 - 控制显示接口\nexport interface GetProductListShowConfigProps {\n  levelactivityconfiguration: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（订阅中心）\nexport interface GetProductListConfigOfSubscriptionProps {\n  Subscriptioncenteractivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 控制显示接口（挽留弹窗）\nexport interface GetProductListConfigOfDetainProps {\n  Retepopupactivity: ControlShowProductListParams[];\n}\n\n// 运营中台 - 三方id配置接口\nexport interface GetProductListThirdIdConfigProps {\n  biiofpaidproducts?: ProductListThirdIdConfigItem[];\n  memberbiiofpaidproducts?: ProductListThirdIdConfigItem[];\n}\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\n// 挽留弹窗配置内容\nexport interface IDetainPopup {\n  button: string;\n  buttonmultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  display: '0' | '1';\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n  // 挽留弹窗配置内容\n  retepopup: IDetainPopup;\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// *****************************************************************\n\n// ","infill":"OR = 'SYSTEM_ERROR',","suffix":"\r\n}\r\n\r\n// 优惠券领取res\r\nexport interface IRedeemCouponByCodeRes {\r\n\r\n}\r\n\r\n\r\nexport type {\r\n  ProductInfoProps,\r\n  ProductSkuInfo,\r\n  ProductInfoRes,\r\n  PaySubscribeReq,\r\n  PaySubscribeMutipleReq,\r\n  PaySubscribeRes,\r\n  PaySubscribeMultipleRes,\r\n  SubscribeProductInfoProps,\r\n  SubscribeProductInfoItem,\r\n  SubscribeProductInfoResItem,\r\n  UserSubscribeStatusBySaleIdProps,\r\n  UserSubscribeStatusBySaleIdV2Res,\r\n  ProductExistBySkuProps,\r\n  ProductExistBySkuRes,\r\n};\r\n","relevantFile":"<file_path>src/config/env.ts\n// 定义环境变量\nexport const ENV_DATA = import.meta.env;\n\nexport const IS_DEV = ENV_DATA.VITE_APP_CURRENTMODE === 'development';\n\nexport const IS_TEST = ENV_DATA.VITE_APP_CURRENTMODE === 'test';\n\nexport const IS_PRE = ENV_DATA.VITE_APP_CURRENTMODE === 'pre';\n\nexport const IS_RELEASE = ENV_DATA.VITE_APP_CURRENTMODE === 'production';\n\nexport const API_HOST = ENV_DATA.VITE_APP_API_HOST;\n\nexport const BASE_HOST = ENV_DATA.VITE_APP_BASE_HOST;\n\nexport const FORMER_HOST = ENV_DATA.VITE_APP_FORMER_BASE_HOST;\n\nexport const EXTQUOTE_API_HOST = ENV_DATA.VITE_APP_EXTQUOTE_API_HOST\n<file_path>src/request/index.ts\n    },\n  });\n};\n\n// 获取运营中台配置的商品列表三方id信息（会员）\nexport const getMembershipProductListThirdIdConfig = () => {\n  return customFetchAdapter<GetProductListThirdIdConfigProps>({\n    url: configUrl + 'memberbiiofpaidproducts',\n    method: 'get',\n  });\n};\n\n// 获取运营中台配置的会员权益列表\nexport const getMembershipBenefitConfig = () => {\n  return customFetchAdapter<IGetMembershipBenefitConfigRes>({\n    url: configUrl + 'MemberBenefitsDescription',\n    method: 'get',\n  });\n};\n\n// =================================================================================================\n\n// 优惠券查询\nexport const getUserCoupon = (data: IGetUserCouponProps) => {\n  return customFetchAdapter<IGetUserCouponRes>({\n    url: `${baseSocialcenterURL}/activity/queryUserRewardRedeem`,\n    method: 'get',\n    data,\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<IRedeemCouponByCodeRes>({\n    url: `${baseSocialcenterURL}/activity/redeemByCode`,\n    method: 'post',\n    data,\n  });\n};\n\nexport {\n  getPaySubscribeState,\n  getPaySubscribeMutipleState,\n  getProductInfoBySidV2,\n  getSubscribeProductInfoBySid,\n  checkProductExistBySku,\n  getProductListShowConfig,\n  getIOSActivitySignature,\n  getUserSubscribeStatusBySaleIdV2,\n  getProductListThirdIdConfig,\n  getProductListConfigOfSubscription,\n  addOperationActivityJoinRecord,\n  getProductListOfSubscription,\n  getUserArticle,\n  getUserInfo,\n  getProductListConfigOfProductInfo,\n  getI18nData,\n  getProductListConfigOfDetain,\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 优惠券领取req\r","deepseek-chat-lite":"优惠券领取req\r","deepseek-chat":"```\n// Start Generation Here\n// 优惠券查询res\nexport interface","copilot":"OR = 'SYSTEM_ERROR',"}},{"prefix":"export type Item = {\n    eventId: string","infill":";\r\n    title: string;\r\n    date: string;\r\n    background: string;\r\n    topicPrompt: ","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ,\r","deepseek-chat-lite":";","deepseek-chat":"```\n// Start Generation Here\n    eventName: string;\n    event","copilot":";\r\n    title: string;\r\n    date: string;\r\n    background: string;\r\n    topicPrompt: "}},{"prefix":"import type { ListItem } from '../http/response';\nexport default [\n  {\n    url: '/plugingwapi/list',\n    method: 'get',\n    timeout: 500,\n    response: () => {\n      return {\n        code: 1,\n        data: {\n          total: 9987,\n          list: [\n            {\n              event: {","infill":"eventId: '1',\r\n                title: 'title',\r\n                date: '2021-10-10',\r\n                background: 'background',\r\n                topicPrompt: 'topicPrompt',\r\n                searchKey: ['searchKey'],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: ['tags'],\r\n                online: 1,\r\n                status: 1,\r\n                isvalid: 1,\r\n ","suffix":"             },\r\n\t\t\t  views: [\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    },\r\n  },\r\n];\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/plugingwapi';\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(prefix + '/list', params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(prefix + '/list/edit', data, config);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/mock/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat":"```\n// Start Generation Here\n                eventId: '1234","copilot":"eventId: '1',\r\n                title: 'title',\r\n                date: '2021-10-10',\r\n                background: 'background',\r\n                topicPrompt: 'topicPrompt',\r\n                searchKey: ['searchKey'],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: ['tags'],\r\n                online: 1,\r\n                status: 1,\r\n                isvalid: 1,\r\n "}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: string;\n    background: string;\n    topicPrompt: ","infill":"string;\r\n    searchKey: string;\r\n    orgIds","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" string;","deepseek-chat-lite":"string;\r","deepseek-chat":"```\n// Start Generation Here\n    string;\n    contentPrompt: string","copilot":"string;\r\n    searchKey: string;\r\n    orgIds"}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: string;\n    background: string;\n    topicPrompt: string;\n    searchKey: ","infill":"string;\r\n    orgids: string;\r\n    ","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" string;","deepseek-chat-lite":"string;","deepseek-chat":"```\n// Start Generation Here\n    string;\n    relatedEvents: {","copilot":"string;\r\n    orgids: string;\r\n    "}},{"prefix":"import { getDataSourceList, getOptionsConfig, getLogicalList } from '@/common/api';\nimport { Datasource, Options } from '@/common/api/interface';\nimport { CascaderData } from '@/components/Common/interface';\n\nimport { ref } from 'vue';\n\nconst allTableData = ref<Datasource[]>([]);   // 所有数据表\nconst noParamsTableData = ref<Datasource[]>([]);  // 无参数据表\nconst parameterlessTable = ref<CascaderData[]>([]);  // 无参数据表级联数据\nconst allTable = ref<CascaderData[]>([]); // ","infill":"所有数据表级联数据","suffix":"\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n      };\n    });\n  };\n  const initAllTable = () => {\n    allTable.value = allTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n      };\n    });\n  };\n  return {\n    initTableData,\n    allTableData,\n    noParamsTableData,\n    parameterlessTable,\n    optionConfig,\n    allTable,\n  };\n};\n","relevantFile":"<file_path>types/data-source.ts\n}\n\nexport interface IFieldMapping {\n  /**\n   *  数据源名称,给前端用，可以自定义，后端不管内容是什么，只做保存\n   *  此处的表是有参数据源表\n   */\n  sourceFieldName: string;\n  /**\n   * 数据源key，格式`$_表id_protocalFormat.key`\n   * 此处的表是有参数据源表\n   */\n  sourceFieldKey: string;\n  /**\n   * 无参数据源的出参，无参表名.fileldList中的某个数据。给前端用，可以自定义，后端不管内容是什么，只做保存\n   */\n  inputFieldName: string; //输入字段名称\n  /**\n   * 无参数据源的出参，格式为：$_无参表id_fileldList中的某个数据\n   */\n  inputFieldKey: string[]; // string[]类型为了适配级联类型数据\n  inputFieldValue: string; //输入测试案例\n  placeholder: string; // 级联默认展示内容\n}\n\n/**\n * 用于展示的数据源\n */\nexport interface IDataSourceConfigForDisplay {\n  id: string;\n  data: {\n    dataSourceId: string;\n    dataSourceName: string;\n    fieldMappings: IFieldMapping[];\n  };\n}\n\n\n/**\n * 条件1\n */\nexport interface IPrecondition {\n  flag: ConditionFlag;\n  id: string; // 注：前端展示用，和最终的数据无关\n  conditionList: IConditionForDisplay[];\n}\n\nexport interface IConditionGroupForDisplay {\n  id: string; // 前端展示用，和最终数据无关\n  flag: ConditionFlag;\n  conditionList: IConditionForDisplay[];\n}\n\n/**\n * 执行条件，前端展示用数据格式\n */\nexport interface IConditionForDisplay {\n  flag: ConditionFlag;\n  id: string; // 注：前端展示用，和最终的数据无关\n  conditions: {\n<file_path>src/components/Middle/interface/index.ts\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: Object;\n  id: string;\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  // regionType?: string[];\n  // region?: string[];\n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}\n<file_path>src/hooks/useRegionData.ts\nimport { ComponentConfig } from '@/common/api/interface';\nimport { getComponentList } from '@/common/api/index';\nimport { RegionComponent, RegionConfig, AreaConfig, areaMap } from '@/components/Middle/interface';\nimport loadScript from 'load-script';\nimport { ref } from 'vue';\nimport { cloneDeep } from 'lodash';\nimport { nextTick } from 'vue';\nconst components = ref<Record<string, { name: string; component: ComponentConfig[] }>>({});\n\nconst descriptEnum: Record<keyof typeof areaMap, string> = {\n  TITLE: '标题',\n  SUMMARY: '摘要',\n  CONTENT: '正文',\n};\nlet regions = ref<RegionConfig[]>([\n  {\n    area: areaMap.TITLE,\n    description: '标题',\n    components: [],\n  },\n  {\n    area: areaMap.SUMMARY,\n    description: '摘要',\n    components: [],\n  },\n  {\n    area: areaMap.CONTENT,\n    description: '正文',\n    areaConfig: {\n      polishStyle: '不润色',\n      aiConfig: {\n        model: '',\n        temperature: 0,\n        maxToken: 0,\n        account: '',\n        business: '',\n        translateType: 'text',\n      },\n      prompt: '',\n    },\n    components: [],\n  },\n]);\nconst regionDataLoading = ref<Record<areaMap, boolean>>({\n  TITLE: false,\n  SUMMARY: false,\n  CONTENT: false,\n});\nexport const useRegionData = () => {\n  const addRegionData = (\n    regionData: RegionConfig,\n    component: ComponentConfig,\n    dragEndIndex: number | null\n  ) => {\n    const { area } = regionData;\n    const { type, resultPath, editorPath, id, key, region, icon, name } = component;\n\n    // 智能文本组件的组件默认初始配置\n    const textComponentConfig = {\n      executeConfig: {","relevantFileList":[],"filePath":"src/hooks/useTriggerData.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 所有数据表级联数据","deepseek-chat-lite":"所有数据表级联数据","deepseek-chat":"```\n// Start Generation Here\nconst filteredTableData = ref<Datasource","copilot":"所有数据表级联数据"}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: string;\n    background: string;\n    topicPrompt: string;\n    searchKey: string[];\n    orgIds: string[];\n    startDate: string;\n    endD","infill":"ate: string;\r\n    tags: string[];\r\n    online: 0 | 1;\r\n    status: 0 | 1 | 2;\r\n    isb","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ate: string;","deepseek-chat-lite":"ate: string;\r","deepseek-chat":"```\n// Start Generation Here\n    endDate: string;\n    status","copilot":"ate: string;\r\n    tags: string[];\r\n    online: 0 | 1;\r\n    status: 0 | 1 | 2;\r\n    isb"}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views:","infill":" ViewItem[];","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  ViewItem[];","deepseek-chat-lite":" ViewItem[];","deepseek-chat":"```\n// Start Generation Here\n    views: ViewItem[];\n// End","copilot":" ViewItem[];"}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: ","infill":"string;\r\n    background: string;\r\n    topicPrompt: string;\r\n    ","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" string;","deepseek-chat-lite":"string;\r","deepseek-chat":"```\n// Start Generation Here\n    string;\n    description: string;","copilot":"string;\r\n    background: string;\r\n    topicPrompt: string;\r\n    "}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: string;\n    background","infill":": string;\r\n    topicPrompt: string;\r\n    search","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" Color: string;","deepseek-chat-lite":"Color: string;\r","deepseek-chat":"```\n// Start Generation Here\n    color: string;\n    imageUrl","copilot":": string;\r\n    topicPrompt: string;\r\n    search"}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: string;\n    background: string;\n    topicPrompt: string;\n    searchKey: string[];\n    orgIds: string[];\n    startDate: string;\n    endDate: string;\n    tags: string","infill":"[];\r\n    online: 0 | 1;\r\n    status: 0 | 1 | 2;\r\n    isvalid: 0 | 1;\r\n    ","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" [];","deepseek-chat-lite":"[];\r","deepseek-chat":"```\n// Start Generation Here\n    description: string;\n    status:","copilot":"[];\r\n    online: 0 | 1;\r\n    status: 0 | 1 | 2;\r\n    isvalid: 0 | 1;\r\n    "}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: string;\n    background: string;\n    topicPrompt: string;\n    searchKey: string[];\n    orgIds: string[];\n    startDate: string;\n    endDate: string;\n    tags: string[];\n    online: 0 | 1;\n    status: ","infill":"0 | 1 | 2;\r\n    isvalid: 0 | 1;\r\n    ","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 0 | 1;","deepseek-chat-lite":"0 | 1;\r","deepseek-chat":"```\n// Start Generation Here\n        \"pending\" | \"approved\" |","copilot":"0 | 1 | 2;\r\n    isvalid: 0 | 1;\r\n    "}},{"prefix":"export type Item = {\n    eventId: string;\n    title: string;\n    date: string;\n    background: string;\n    topicPrompt: string;\n    searchKey: string[];\n    orgIds: string[];\n    startDate: string;\n    endDate: string;\n    tags: string[];\n    online: 0 | 1;\n    status: 0 | 1 | 2;\n    isvalid: 0","infill":" | 1;\r\n    ","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  | 1;","deepseek-chat-lite":" | 1;\r","deepseek-chat":"```\n// Start Generation Here\n    isvalid: 0 | 1","copilot":" | 1;\r\n    "}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: ","infill":"number;","suffix":"\r\n    }[];\r\n  }[];\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\nimport axios, {\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from \"./index\";\n\nexport const getHomeTabsApi = () => {\n\treturn http.get<Tabs[]>(ApiUrl.tabsApi);\n};\nexport const getEventApi = (params: Recordable) => {\n\treturn http.get<Events>(ApiUrl.eventsApi, params);\n};\n\nexport const getDetailCommonApi = (params: Recordable) => {\n\treturn http.get<DetailCommon>(ApiUrl.detailCommonApi, params);\n};\n\nexport const getDetailDataApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\n};\n\nexport const renderImageApi = (\n\tdata: Recordable,\n\tconfig = {\n\t\theaders: {\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}\n) => {\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\n};\n\nexport const chatHitoryApi = (params: Recordable) => {\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\n};\n\nexport const startChatApi = (data: Recordable) => {\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\n};\n\nexport const getDownloadUrlsApi = (data: Recordable) => {\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" number;\r","deepseek-chat-lite":"number;","deepseek-chat":"```\n// Start Generation Here\n      seq: number;\n      style:","copilot":"number;"}},{"prefix":"export interface ","infill":"ICard {\n  btnTitle?: string;\n}","suffix":"","relevantFile":"<file_path>packages/screener-aime-card/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/grid-card%20copy/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/screener-aime-card/src/vue-shime.d.ts\ndeclare module '*.vue' {\n  import { defineComponent, App } from '@vue/runtime-core'\n  const component: ReturnType<typeof defineComponent> & {\n    install(app: App): void\n  }\n  export default component\n}\n<file_path>packages/screener-aime-card/index.ts\nimport screenerAimeCard from './src/index.vue';\n\nscreenerAimeCard.install = (App): void => {\n  App.component(screenerAimeCard.name, screenerAimeCard)\n}\nexport default screenerAimeCard","relevantFileList":[],"filePath":"packages/screener-aime-card/src/utils/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" IUser {","deepseek-chat-lite":"IUser {","deepseek-chat":"```\n// Start Generation Here\nexport interface ApiResponse<T> {\n","copilot":"ICard {\n  btnTitle?: string;\n}"}},{"prefix":"export interface ICard {\n  btnTitle?:","infill":" string;","suffix":"\n}","relevantFile":"<file_path>packages/screener-aime-card/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/grid-card%20copy/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/screener-aime-card/src/vue-shime.d.ts\ndeclare module '*.vue' {\n  import { defineComponent, App } from '@vue/runtime-core'\n  const component: ReturnType<typeof defineComponent> & {\n    install(app: App): void\n  }\n  export default component\n}\n<file_path>packages/screener-aime-card/index.ts\nimport screenerAimeCard from './src/index.vue';\n\nscreenerAimeCard.install = (App): void => {\n  App.component(screenerAimeCard.name, screenerAimeCard)\n}\nexport default screenerAimeCard","relevantFileList":[],"filePath":"packages/screener-aime-card/src/utils/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  string;","deepseek-chat-lite":" string;","deepseek-chat":"```\n// Start Generation Here\n    string;\n  btnIcon?: string","copilot":" string;"}},{"prefix":"import { http } from \"./index\";\nimport type { ListItem } from \"./response\"\n\nconst prefix = ","infill":"\"/plugingwapi\";\r\n","suffix":"\r\nexport const getListData = (params: Recordable) => {\r\n\treturn http.get<ListItem[]>(prefix + \"/list\", params);\r\n};\r\n\r\n\r\nexport const getDetailDataApi = (\r\n\tdata: Recordable,\r\n\tconfig = {\r\n\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\r\n\t\t}\r\n\t}\r\n) => {\r\n\treturn http.post<DetailPoints>(ApiUrl.detailDataApi, data, config);\r\n};\r\n\r\nexport const renderImageApi = (\r\n\tdata: Recordable,\r\n\tconfig = {\r\n\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded\"\r\n\t\t}\r\n\t}\r\n) => {\r\n\treturn http.post<ImageData>(ApiUrl.renderImageApi, data, config);\r\n};\r\n\r\nexport const chatHitoryApi = (params: Recordable) => {\r\n\treturn http.get<ChatItem[]>(ApiUrl.chatHistoryApi, params);\r\n};\r\n\r\nexport const startChatApi = (data: Recordable) => {\r\n\treturn http.post<ChatItem>(ApiUrl.startChatApi, data);\r\n};\r\n\r\nexport const getDownloadUrlsApi = (data: Recordable) => {\r\n\treturn http.post<DownloadUrl[]>(ApiUrl.downloadUrlsApi, data);\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \"/api/v1\";\r","deepseek-chat-lite":"\"/api\";","deepseek-chat":"```\n// Start Generation Here\nconst prefix = \"/api/v1\";","copilot":"\"/plugingwapi\";\r\n"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.searchKey.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'arcoblue' }, () => item);\n      }","infill":");","suffix":"\r\n    },\r\n    ellipsis: true,\r\n  },\r\n  {\r\n    title: '研报日期（开始）',\r\n    dataIndex: 'startDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '研报日期（结束）',\r\n    dataIndex: 'endDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '事件标签',\r\n    dataIndex: 'tags',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '上线状态',\r\n    dataIndex: 'online',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '是否有效',\r\n    dataIndex: 'isvalid',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\n            {\n              event: {\n                eventId: '1',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: ['tags'],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":");","deepseek-chat-lite":");","deepseek-chat":"```\n// Start Generation Here\n      );\n    },\n    ellipsis:","copilot":");"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.searchKey.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'arcoblue' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报日期（开始）',\n    dataIndex: 'startDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '研报日期（结束）',\n    dataIndex: 'endDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '事件标签',\n    dataIndex: 'tags',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.tags.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'orange' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '上线状态',\n    dataIndex: 'online',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.online === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: '是否有效',\n    dataIndex: 'isvalid',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.isvalid === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: '解析状态',\n    dataIndex: 'status',\n    align: 'left',\n    fixed: 'right',\n    width: 84,\n    render","infill":"({ record }) {\r\n      return record.status === 0 ? '未解析' : record.status === 1 ? '解析中' : '已解析';\r\n    },","suffix":"\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    fixed: 'right',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"({ record }) {","deepseek-chat-lite":"({ record }) {\r","deepseek-chat":"```\n// Start Generation Here\n({ record }) {\n  const statusMap","copilot":"({ record }) {\r\n      return record.status === 0 ? '未解析' : record.status === 1 ? '解析中' : '已解析';\r\n    },"}},{"prefix":"import type { ListItem } from \"../http/","infill":"response\";","suffix":"\r\nexport default [\r\n\t{\r\n\t\turl: \"/plugingwapi/list\",\r\n\t\tmethod: \"get\",\r\n\t\ttimeout: 500,\r\n\t\tresponse: () => {\r\n\t\t\treturn {\r\n\t\t\t\tcode: 1,\r\n\t\t\t\tdata: {\r\n                    total: 9987,\r\n                    list: [{\r\n                        event: {\r\n                            \r\n                        }\r\n                    }]\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n];\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/node_modules/.pnpm/thsc-design-vue%400.1.8_vue%403.3.4/node_modules/thsc-design-vue/es/pagination/interface.d.ts\nimport { CSSProperties } from 'vue';\nimport { Size } from '../_utils/constant';\nimport { SelectProps } from '../select';\nexport declare const PAGE_ITEM_TYPES: readonly [\"page\", \"more\", \"previous\", \"next\"];\nexport declare type PageItemType = typeof PAGE_ITEM_TYPES[number];\nexport declare const PAGE_ALIEN_TYPE: readonly [\"left\", \"right\"];\nexport declare type PageAlignType = typeof PAGE_ALIEN_TYPE[number];\nexport interface PaginationProps {\n    total?: number;\n    current?: number;\n    defaultCurrent?: number;\n    pageSize?: number;\n    defaultPageSize?: number;\n    disabled?: boolean;\n    hideOnSinglePage?: boolean;\n    simple?: boolean;\n    showTotal?: boolean;\n    showMore?: boolean;\n    showJumper?: boolean;\n    showPageSize?: boolean;\n    pageSizeOptions?: number[];\n    pageSizeProps?: SelectProps;\n    size?: Size;\n    pageItemStyle?: CSSProperties;\n    activePageItemStyle?: CSSProperties;\n    baseSize?: number;\n    bufferSize?: number;\n    align: PageAlignType;\n}\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/plugingwapi';\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(prefix + '/list', params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(prefix + '/list/edit', data, config);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/mock/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"types\";\r","deepseek-chat-lite":"mock/data\";\r","deepseek-chat":"```\n// Start Generation Here\nimport type { ListItem, EventItem,","copilot":"response\";"}},{"prefix":"import type { ListItem } from '../http/response';\nexport default [\n  {\n    url: '/plugingwapi/list',\n    method: 'get',\n    timeout: 500,\n    response: () => {\n      return {\n        code: 1,\n        data: {\n          total: 9987,\n          list: [\n            {\n              event: {\n                eventId: '1',\n                title: 'title',\n                date: '2021-10-10',\n                background: 'background',\n                topicPrompt: 'topicPrompt',\n                searchKey: ['searchKey'],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: ['tags'],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n\t\t\t  views:","infill":" [\r\n\t\t\t\t{\r\n\t\t\t\t  view: 'view',\r\n\t\t\t\t  lists: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  content: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t  text: 'text',\r\n\t\t\t\t\t\t  seq: 1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t  ],\r\n\t\t\t\t\t},\r\n\t\t\t  ]","suffix":"\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    },\r\n  },\r\n];\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/plugingwapi';\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(prefix + '/list', params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(prefix + '/list/edit', data, config);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/mock/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 100,\r","deepseek-chat-lite":" 1,\r","deepseek-chat":"```\n// Start Generation Here\n[\n  {\n    view: '","copilot":" [\r\n\t\t\t\t{\r\n\t\t\t\t  view: 'view',\r\n\t\t\t\t  lists: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  content: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t  text: 'text',\r\n\t\t\t\t\t\t  seq: 1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t  ],\r\n\t\t\t\t\t},\r\n\t\t\t  ]"}},{"prefix":"import User from '@/utils/methods/user';\n\n// 埋点方法\nexport default class Weblog {\n  // 埋点全局前缀\n  static idPrefix = 'ths_sns_medalPage';\n\n  /**\n   * ","infill":"埋点\n   * @param action 埋点动作\n   * @param id 埋点ID\n   * @param data 埋点数据","suffix":"\n   */\n  static log(action: 'show' | 'click', id?: string, data?: Record<string, unknown>): void {\n    window.weblog && window.weblog.report({\n      id: `${Weblog.idPrefix}${id}`,\n      action: action,\n      logmap: {\n        showType: User.selfView ? 'my' : 'visitor',\n        ...data,\n      },\n    });\n  }\n}\n","relevantFile":"","relevantFileList":[],"filePath":"src/weblog.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 埋点","deepseek-chat-lite":"埋点上报","deepseek-chat":"```\n// Start Generation Here\n  /**\n   * Logs an event with","copilot":"埋点\n   * @param action 埋点动作\n   * @param id 埋点ID\n   * @param data 埋点数据"}},{"prefix":"import User from '@/utils/methods/user';\n\n// 埋点方法\nexport default class Weblog {\n  // 埋点全局前缀\n  static idPrefix = 'ths_sns_medalPage';\n\n  /**\n   * 埋点\n   * @param action 埋点动作\n   * @param id 埋点ID\n   * ","infill":"@param data 埋点数据","suffix":"\n   */\n  static log(action: 'show' | 'click', id?: string, data?: Record<string, unknown>): void {\n    window.weblog && window.weblog.report({\n      id: `${Weblog.idPrefix}${id}`,\n      action: action,\n      logmap: {\n        showType: User.selfView ? 'my' : 'visitor',\n        ...data,\n      },\n    });\n  }\n}\n","relevantFile":"","relevantFileList":[],"filePath":"src/weblog.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" @param data 埋点数据<file_sep> /src/utils/methods/weblog.ts","deepseek-chat-lite":"@param data 埋点数据","deepseek-chat":"```\n// Start Generation Here\n  /**\n   * 埋点\n","copilot":"@param data 埋点数据"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from \"thsc-design-vue\"\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    // slotName: 'partySlot',\n    minWidth: 295,\n    render","infill":"({ record }) {\r\n      // 是使用tag组件\r\n      return h(\r\n    }","suffix":"\r\n  },\r\n  {\r\n    title: '研报日期（开始）',\r\n    dataIndex: 'startDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '研报日期（结束）',\r\n    dataIndex: 'endDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '事件标签',\r\n    dataIndex: 'tags',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '上线状态',\r\n    dataIndex: 'online',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '是否有效',\r\n    dataIndex: 'isvalid',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\nimport type { ListItem } from '../http/response';\nexport default [\n  {\n    url: '/plugingwapi/list',\n    method: 'get',\n    timeout: 500,\n    response: () => {\n      return {\n        code: 1,\n        data: {\n          total: 9987,\n          list: [\n            {\n              event: {\n                eventId: '1',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background: '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: ['searchKey'],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: ['tags'],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"({ record }) {","deepseek-chat-lite":"({ record }) {","deepseek-chat":"```\n// Start Generation Here\n    ({ record }) => {\n      return","copilot":"({ record }) {\r\n      // 是使用tag组件\r\n      return h(\r\n    }"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from \"thsc-design-vue\"\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      // searchKey是数组 遍历使用tag组件\n      return ","infill":"record.searchKey.map((item: string) => {\r\n        return h(Tag, { style: { margin: '2px' }, color: 'red' }, () => item);\r\n      }\r\n      );","suffix":"\r\n    },\r\n    ellipsis: true,\r\n  },\r\n  {\r\n    title: '研报日期（开始）',\r\n    dataIndex: 'startDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '研报日期（结束）',\r\n    dataIndex: 'endDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '事件标签',\r\n    dataIndex: 'tags',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '上线状态',\r\n    dataIndex: 'online',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '是否有效',\r\n    dataIndex: 'isvalid',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\n            {\n              event: {\n                eventId: '1',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: ['tags'],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" record.searchKey.map((item: string) => {\r","deepseek-chat-lite":"record.searchKey.map((item: string) => {","deepseek-chat":"```\n// Start Generation Here\n      return record.searchKey.map((","copilot":"record.searchKey.map((item: string) => {\r\n        return h(Tag, { style: { margin: '2px' }, color: 'red' }, () => item);\r\n      }\r\n      );"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.searchKey.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'arcoblue' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报日期（开始）',\n    dataIndex: 'startDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '研报日期（结束）',\n    dataIndex: 'endDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '事件标签',\n    dataIndex: 'tags',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.tags.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'orange' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '上线状态',\n    dataIndex: 'online',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.online === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: ","infill":"({ record }) {\r\n      return record.isvalid === 1 ? '是' : '否';\r\n    },","suffix":"\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    fixed: \"right\",\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" '事件类型',","deepseek-chat-lite":"'操作',","deepseek-chat":"```\n// Start Generation Here\n    title: '事件状态',\n   ","copilot":"({ record }) {\r\n      return record.isvalid === 1 ? '是' : '否';\r\n    },"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.searchKey.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'arcoblue' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报日期（开始）',\n    dataIndex: 'startDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '研报日期（结束）',\n    dataIndex: 'endDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '事件标签',\n    dataIndex: 'tags',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.tags.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'orange' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '上线状态',\n    dataIndex: 'online',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.online === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: '是否有效',\n    dataIndex: 'isvalid',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.isvalid === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: '解析状态',\n    dataIndex: 'status',\n    align: 'left',\n    fixed: 'right',\n    width: 84,\n    render({","infill":"if (status === 0) {\r\n        color = 'red';\r\n        text = '未解析';\r\n      } else if (status === 1) {\r\n        color = 'orange';\r\n        text = '解析中';\r\n      } else if (status === 2) {\r\n        color = 'green';\r\n        text = '计息完成';","suffix":"\r\n      }\r\n      return h(Tag, { color }, () => text);\r\n    },\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    fixed: 'right',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  record }) {","deepseek-chat-lite":" record }) {","deepseek-chat":"```\n// Start Generation Here\n      record,\n    }) {\n     ","copilot":"if (status === 0) {\r\n        color = 'red';\r\n        text = '未解析';\r\n      } else if (status === 1) {\r\n        color = 'orange';\r\n        text = '解析中';\r\n      } else if (status === 2) {\r\n        color = 'green';\r\n        text = '计息完成';"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.searchKey.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'arcoblue' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报日期（开始）',\n    dataIndex: 'startDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '研报日期（结束）',\n    dataIndex: 'endDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '事件标签',\n    dataIndex: 'tags',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.tags.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'orange' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '上线状态',\n    dataIndex: 'online',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.online === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: '是否有效',\n    dataIndex: 'isvalid',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.isvalid === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: '解析状态',\n    dataIndex: 'status',\n    align: 'left',\n    fixed: 'right',\n    width: 84,\n    render({ record }) {\n      // 使用tag组件\n ","infill":"return h(Tag, { color }, () => text);","suffix":"\r\n    },\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    fixed: 'right',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"      return h(Tag, { color: record.status === 1 ? 'green' : 'red' }, () => record.status === 1 ? '成功' : '失败');\r","deepseek-chat-lite":"     return record.status === 1 ? '已解析' : '未解析';\r","deepseek-chat":"```\n// Start Generation Here\n      const statusMap = {\n        0","copilot":"return h(Tag, { color }, () => text);"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h","infill":"('span', { title: record.title }, record.title);","suffix":"\r\n    },\r\n  },\r\n  {\r\n    title: '事件背景',\r\n    dataIndex: 'background',\r\n    align: 'left',\r\n    width: 200,\r\n    render({ record }) {\r\n      return record.background || '--';\r\n    },\r\n    ellipsis: true,\r\n  },\r\n  {\r\n    title: 'prompt',\r\n    dataIndex: 'topicPrompt',\r\n    align: 'left',\r\n    width: 200,\r\n    render({ record }) {\r\n      return record.topicPrompt || '--';\r\n    },\r\n    ellipsis: true,\r\n  },\r\n  {\r\n    title: '研报关键词',\r\n    dataIndex: 'searchKey',\r\n    align: 'left',\r\n    slotName: 'partySlot',\r\n    minWidth: 295,\r\n  },\r\n  {\r\n    title: '研报日期（开始）',\r\n    dataIndex: 'startDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '研报日期（结束）',\r\n    dataIndex: 'endDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '事件标签',\r\n    dataIndex: 'tags',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '上线状态',\r\n    dataIndex: 'online',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '是否有效',\r\n    dataIndex: 'isvalid',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\nimport type { ListItem } from '../http/response';\nexport default [\n  {\n    url: '/plugingwapi/list',\n    method: 'get',\n    timeout: 500,\n    response: () => {\n      return {\n        code: 1,\n        data: {\n          total: 9987,\n          list: [\n            {\n              event: {\n                eventId: '1',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background: '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: ['searchKey'],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: ['tags'],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" (\r","deepseek-chat-lite":"('span', { style: 'color: #1890ff' }, record.title || '--');","deepseek-chat":"```\n// Start Generation Here\n        h('div', {\n          style","copilot":"('span', { title: record.title }, record.title);"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', {","infill":" title: record.title }, record.title);","suffix":"\r\n    },\r\n  },\r\n  {\r\n    title: '事件背景',\r\n    dataIndex: 'background',\r\n    align: 'left',\r\n    width: 200,\r\n    render({ record }) {\r\n      return record.background || '--';\r\n    },\r\n    ellipsis: true,\r\n  },\r\n  {\r\n    title: 'prompt',\r\n    dataIndex: 'topicPrompt',\r\n    align: 'left',\r\n    width: 200,\r\n    render({ record }) {\r\n      return record.topicPrompt || '--';\r\n    },\r\n    ellipsis: true,\r\n  },\r\n  {\r\n    title: '研报关键词',\r\n    dataIndex: 'searchKey',\r\n    align: 'left',\r\n    slotName: 'partySlot',\r\n    minWidth: 295,\r\n  },\r\n  {\r\n    title: '研报日期（开始）',\r\n    dataIndex: 'startDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '研报日期（结束）',\r\n    dataIndex: 'endDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '事件标签',\r\n    dataIndex: 'tags',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '上线状态',\r\n    dataIndex: 'online',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '是否有效',\r\n    dataIndex: 'isvalid',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\ttype AxiosInstance,\n\ttype AxiosRequestConfig,\n\ttype InternalAxiosRequestConfig,\n\ttype AxiosResponse,\n\tAxiosError\n} from \"axios\";\n\n// 创建 Axios 实例\nconst instance: AxiosInstance = axios.create({\n\tbaseURL: import.meta.env.VITE_API_BASE || \"/\"\n});\n\n// 记录正在进行的请求\nconst pendingRequests: Map<string, () => void> = new Map();\n\n// 取消重复请求\nconst cancelPendingRequest = (key: string) => {\n\tif (pendingRequests.has(key)) {\n\t\tpendingRequests.get(key)?.();\n\t\tpendingRequests.delete(key);\n\t}\n};\nwindow.handleCancelPendingRequest = function (key: string) {\n\tcancelPendingRequest(key);\n};\n// 请求拦截器\ninstance.interceptors.request.use(\n\t(config: InternalAxiosRequestConfig & { noCancel?: boolean }) => {\n\t\t// 在发送请求之前做些处理，例如添加 token、请求头等\n\t\t// 生成唯一标识符（用于取消请求）\n\t\tconst requestKey = config.url + \"&\" + config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\tconfig.cancelToken = new axios.CancelToken(cancel => {\n\t\t\t!config.noCancel && pendingRequests.set(requestKey, cancel);\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\nimport type { ListItem } from '../http/response';\nexport default [\n  {\n    url: '/plugingwapi/list',\n    method: 'get',\n    timeout: 500,\n    response: () => {\n      return {\n        code: 1,\n        data: {\n          total: 9987,\n          list: [\n            {\n              event: {\n                eventId: '1',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background: '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: ['searchKey'],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: ['tags'],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat-lite":" style: 'color: #1890ff' }, record.title);","deepseek-chat":"```\n// Start Generation Here\n        class: 'event-title',\n","copilot":" title: record.title }, record.title);"}},{"prefix":"\nimport LgtShare from '../../packages/lgt-content-component/src/components/lgt-share/lgt-share.vue';\n// More on default export: https://storybook.js.org/docs/vue/writing-stories/introduction#default-export\nexport default {\n  title: '内容流/teemo-lgt-share',\n  component: LgtShare,\n  parameters: {\n    layout: 'fullscreen',\n  },\n};\n\nconst Template = (args, { argTypes }) => ({\n  props: Object.keys(argTypes),\n  components: { LgtShare },\n  template: '<lgt-share v-bind=\"$props\"/>',\n});\n\n// export const Primary = Template.bind({});\n// Primary.args = {\n//   // 正文\n//   shareData: {\n//     shareType: 3,\n//     bizId: 'xxx',\n//     displayInfo: {\n//       title: '1111表头的组件',\n//       subTitle: '子标题',\n//       content: '组件',\n//       type: '2',\n//       data: '123123',\n//       dataDesc: '为什么涨这么多',\n//       cornerMark: '表头',\n//       // image: \"http://u.thsi.cn/testingimgsrc/sns/a71a46d8434c54a698693a5f85a25d85_828_1792.jpg\",\n//       // image_night: \"http://u.thsi.cn/testingimgsrc/sns/a71a46d8434c54a698693a5f85a25d85_828_1792.jpg\"\n//     },\n//   },\n// };\n\nexport const DrawLine = Template.bind({});\nDrawLine.args = {\n  // 正文\n  shareData: {\n    pid: 2020025349,\n    bizId: '55574844864893061_55574844855455876_USZA|300033',\n    url: '',\n    shareType: 7,\n    displayInfo: {\n      type: '7',\n      cornerMark: '截图未经编辑截图未经编辑',\n      title: '分时画线分享-2',\n      image: 'http://frontend.myhexin.com/design-resource/file/UED-14741_UI/preview/icons/%E8%B5%84%E4%BA%A7%E5%8B%8B%E7%AB%A0-0627-4-%E5%8F%91%E5%B8%83%E5%99%A8.png?1716175274127',\n      cornerMarkLogo: 'http://i.thsi.cn/sns/circle/wapcircle/post-components-lib/bg_yh_dark.png',\n    },\n    ext: '',\n  },\n  full","infill":"Screen: false,","suffix":"\n};\n","relevantFile":"","relevantFileList":[],"filePath":"apps/stories/lgt-share.stories.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" Screen: true,","deepseek-chat-lite":"Screen: true,","deepseek-chat":"```\n// Start Generation Here\nDrawLine.args.shareData.display","copilot":"Screen: false,"}},{"prefix":"import {\n  ACTION_KEY_DELETE,\n  ACTION_KEY_OPEN,\n  ACTION_KEY_RENAME,\n} from \"@/assets/constants/actionKey\";\n\nexport const WRITING_TEMPLATE_MENU = [\n  {\n    title: window.$t(\"个基研究报告\"),\n    desc: window.$t(\"支持生成不同类型基金投资分析报告\"),\n    icon: \"base-research-report\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(247, 164, 82, 0.06) 0%, rgba(247, 164, 82, 0) 100%\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n  {\n    title: window.$t(\"个基诊断点评\"),\n    desc: window.$t(\"依托同花顺基金评价体系输出基金诊断点评\"),\n    icon: \"individual-diagnostic-reviews\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(57, 178, 255, 0.06) 0%, rgba(57, 178, 255, 0) 100%)\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n  {\n    title: window.$t(\"基金经理研究报告\"),\n    desc: window.$t(\"基金经理研究，报告一键生成\"),\n    icon: \"fund-manager-research-report\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(247, 82, 82, 0.06) 0%, rgba(247, 82, 82, 0) 100%)\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n];\n\nexport const TOOLS = [\n  {\n    icon: \"fund-f9\",\n    label: window.$t(\"基金F9\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"manager-f9\",\n    label: window.$t(\"经理F9\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"manager-map\",\n    label: window.$t(\"经理图谱\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"diagnosis\",\n    label: window.$t(\"全景诊断\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"browser\",\n    label: window.$t(\"数据浏览器\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"statistics\",\n    label: window.$t(\"基金专题\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-pool\",\n    label: window.$t(\"基金池\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-information\",\n    label: window.$t(\"基金资讯\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-research\",\n    label: window.$t(\"基金研报\"),\n    jumpUrl: \"\",\n  },\n];\n\nexport const VIEW_BUTTON_GROUP = [\n  {\n    icon: \"list\",\n    key: \"0\",\n  },\n  {\n    icon: \"view\",\n    key: \"1\",\n  },\n];\n\nexport const MATERIAL_FILTER_ALL = \"all\";\n\nexport const MATERIAL_FILTER_WORD = \"word\";\n\nexport const MATERIAL_FILTER_PDF = \"pdf\";\n\nexport const MATERIAL_FILTER_IMG = \"img\";\n\nexport const MATERIAL_TREE_DATA = [\n  {\n    title: window.$t(\"全部类型\"),\n    key: MATERIAL_FILTER_ALL,\n    children: [\n      {\n        title: window.$t(\"Word文档\"),\n        key: MATERIAL_FILTER_WORD,\n      },\n      {\n        title: window.$t(\"PDF文档\"),\n        key: MATERIAL_FILTER_PDF,\n      },\n      {\n        title: window.$t(\"图片\"),\n        key: MATERIAL_FILTER_IMG,\n      },\n    ],\n  },\n];\n\nexport const MATERIAL_ACTION_SHEET = [\n  {\n    icon: \"open\",\n    label: window.$t(\"打开\"),\n    key: ACTION_KEY_OPEN,\n  },\n  {\n    icon: \"edit\",\n    label: window.$t(\"重命名\"),\n    key: ACTION_KEY_RENAME,\n  },\n  {\n    icon: \"delete\",\n    label: window.$t(\"删除\"),\n    key: ACTION_KEY_DELETE,\n    slot: \"footer\",\n  },\n];\n\nexport const CREATE_TYPE = {\n  HOT: 'hot',","infill":"INVESTMENT: 'investment',\r\n  CLOSING: 'closing',\r\n  PERIODIC: 'periodic',\r\n  SHORT_VIDEO: 'short-video',\r\n","suffix":"};\r\n\r\nexport const CREATION_TREE_DATA = [\r\n  {\r\n    title: window.$t(\"全部类型\"),\r\n    key: MATERIAL_FILTER_ALL,\r\n    children: [\r\n      {\r\n        title: window.$t(\"热点解读\"),\r\n        key: CREATE_TYPE.HOT,\r\n      },\r\n      {\r\n        title: window.$t(\"投资早报\"),\r\n        key: MATERIAL_FILTER_PDF,\r\n      },\r\n      {\r\n        title: window.$t(\"收盘点评\"),\r\n        key: MATERIAL_FILTER_IMG,\r\n      },\r\n      {\r\n        title: window.$t(\"周期报告\"),\r\n        key: MATERIAL_FILTER_IMG,\r\n      },\r\n      {\r\n        title: window.$t(\"短视频脚本\"),\r\n        key: MATERIAL_FILTER_IMG,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","relevantFile":"","relevantFileList":[],"filePath":"source/fund-writing-platform/src/assets/constants/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat":"```\n// Start Generation Here\nexport const CREATE_TYPE = {\n ","copilot":"INVESTMENT: 'investment',\r\n  CLOSING: 'closing',\r\n  PERIODIC: 'periodic',\r\n  SHORT_VIDEO: 'short-video',\r\n"}},{"prefix":"export const ACTION_KEY_OPEN = \"ACTION_KEY_OPEN\"; // 打开\n\nexport const ACTION_KEY_RENAME = \"ACTION_KEY_RENAME\"; // 重命名\n\nexport const ACTION_KEY_DELETE = \"ACTION_KEY_DELETE\"; // 删除","infill":"export const ACTION_KEY_EXPORT = \"ACTION_KEY_EXPORT\"; // 导出文档\r\n\r\n","suffix":"\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/assets/constants/index.ts\n    label: window.$t(\"基金研报\"),\n    jumpUrl: \"\",\n  },\n];\n\nexport const VIEW_BUTTON_GROUP = [\n  {\n    icon: \"list\",\n    key: \"0\",\n  },\n  {\n    icon: \"view\",\n    key: \"1\",\n  },\n];\n\nexport const MATERIAL_FILTER_ALL = \"all\";\n\nexport const MATERIAL_FILTER_WORD = \"word\";\n\nexport const MATERIAL_FILTER_PDF = \"pdf\";\n\nexport const MATERIAL_FILTER_IMG = \"img\";\n\nexport const MATERIAL_TREE_DATA = [\n  {\n    title: window.$t(\"全部类型\"),\n    key: MATERIAL_FILTER_ALL,\n    children: [\n      {\n        title: window.$t(\"Word文档\"),\n        key: MATERIAL_FILTER_WORD,\n      },\n      {\n        title: window.$t(\"PDF文档\"),\n        key: MATERIAL_FILTER_PDF,\n      },\n      {\n        title: window.$t(\"图片\"),\n        key: MATERIAL_FILTER_IMG,\n      },\n    ],\n  },\n];\n\nexport const MATERIAL_ACTION_SHEET = [\n  {\n    icon: \"open\",\n    label: window.$t(\"打开\"),\n    key: ACTION_KEY_OPEN,\n  },\n  {\n    icon: \"edit\",\n    label: window.$t(\"重命名\"),\n    key: ACTION_KEY_RENAME,\n  },\n  {\n    icon: \"delete\",\n    label: window.$t(\"删除\"),\n    key: ACTION_KEY_DELETE,","relevantFileList":[],"filePath":"source/fund-writing-platform/src/assets/constants/actionKey.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\nexport const ACTION_KEY_DOWNLOAD =","copilot":"export const ACTION_KEY_EXPORT = \"ACTION_KEY_EXPORT\"; // 导出文档\r\n\r\n"}},{"prefix":"import { getDataSourceList, getOptionsConfig, getLogicalList } from '@/common/api';\nimport { Datasource, Options } from '@/common/api/interface';\nimport { CascaderData } from '@/components/Common/interface';\n\nimport { ref } from 'vue';\n\nconst allTableData = ref<Datasource[]>([]);   // 所有数据表\nconst noParamsTableData = ref<Datasource[]>([]);  // 无参数据表\nconst parameterlessTable = ref<CascaderData[]>([]);  // 无参数据表级联数据\nconst allTable = ref<CascaderData[]>([]); // 所有数据表级联数据\nconst dataSourceConfigForDisplay = ref<IDataSourceConfigForDisplay[]>([","infill":"]); // 数据源配置","suffix":"\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n      };\n    });\n  };\n  const initAllTable = () => {\n    allTable.value = allTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n      };\n    });\n  };\n  return {\n    initTableData,\n    allTableData,\n    noParamsTableData,\n    parameterlessTable,\n    optionConfig,\n    allTable,\n  };\n};\n","relevantFile":"<file_path>src/common/utils/dataSource.ts\nimport {IDataSourceConfig,IDataSourceConfigForDisplay } from 'types/data-source'\n\n/**\n * 把服务端格式的数据源转成前端展示所需格式\n * 由于平台传递数据进行初始化时，会触发store变化，一些数据可能此时还不存在，所以需要进行兼容处理\n * @param dataSourceConfig\n * @returns\n */\nexport const dataSourceConfig2Display = (\n  dataSourceConfig: IDataSourceConfig[]\n): IDataSourceConfigForDisplay[] => {\n  const dataSourceConfigForDisplay: IDataSourceConfigForDisplay[] = dataSourceConfig.map(ele => {\n    const list = ele.fieldMappings?.map(d => {\n      const keys = d.inputFieldKey.split('_');\n      return {\n        sourceFieldName: d.sourceFieldName,\n        sourceFieldKey: d.sourceFieldKey,\n        inputFieldName: d.inputFieldName,\n        inputFieldKey: [keys[1], keys[2]],\n        inputFieldValue: d.inputFieldValue,\n        placeholder: '',\n      };\n    });\n\n    return {\n      id: uuid(),\n      data: {\n        dataSourceId: ele.dataSourceId,\n        dataSourceName: ele.dataSourceName,\n        fieldMappings: list || [],\n      },\n    };\n  });\n\n  return dataSourceConfigForDisplay;\n};\n<file_path>types/data-source.ts\n}\n\nexport interface IFieldMap {\n  sourceFieldName: string; //数据源字段展示名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  sourceFieldKey: string; //数据源字段传参标识\n  inputFieldName: string; //输入字段名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  inputFieldKey: string; //输入字段标识\n  inputFieldValue: string; //输入测试案例\n}\n\nexport interface IDataSourceConfig {\n  dataSourceId: string; //数据源id\n  dataSourceName: string; //数据源名称\n  fieldMappings: IFieldMap[];\n}\n\nexport interface IFieldMapping {\n  /**\n   *  数据源名称,给前端用，可以自定义，后端不管内容是什么，只做保存\n   *  此处的表是有参数据源表\n   */\n  sourceFieldName: string;\n  /**\n   * 数据源key，格式`$_表id_protocalFormat.key`\n   * 此处的表是有参数据源表\n   */\n  sourceFieldKey: string;\n  /**\n   * 无参数据源的出参，无参表名.fileldList中的某个数据。给前端用，可以自定义，后端不管内容是什么，只做保存\n   */\n  inputFieldName: string; //输入字段名称\n  /**\n   * 无参数据源的出参，格式为：$_无参表id_fileldList中的某个数据\n   */\n  inputFieldKey: string[]; // string[]类型为了适配级联类型数据\n  inputFieldValue: string; //输入测试案例\n  placeholder: string; // 级联默认展示内容\n}\n\n/**\n * 用于展示的数据源\n */\nexport interface IDataSourceConfigForDisplay {\n  id: string;\n  data: {\n    dataSourceId: string;\n    dataSourceName: string;\n    fieldMappings: IFieldMapping[];\n  };\n}\n\n\n/**\n * 条件1\n */\nexport interface IPrecondition {\n  flag: ConditionFlag;\n  id: string; // 注：前端展示用，和最终的数据无关\n  conditionList: IConditionForDisplay[];\n}","relevantFileList":[],"filePath":"src/hooks/useTriggerData.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ]); // 触发器数据源配置","deepseek-chat-lite":"]); // 用于显示的数据源配置","deepseek-chat":"```\n// Start Generation Here\n  {\n    id: '1',","copilot":"]); // 数据源配置"}},{"prefix":"\nimport {ref} from 'vue';\nexport default function () {\n  const themeData = ref(window.__oversea_ainvest__?.ainvestTheme || {});\n  window.EventBus.$on('theme.__oversea_ainvest__', (res) => {","infill":"themeData.value = res","suffix":"\n  })\n  return themeData;\n}\n","relevantFile":"<file_path>packages/screener-aime-card/index.ts\nimport screenerAimeCard from './src/index.vue';\n\nscreenerAimeCard.install = (App): void => {\n  App.component(screenerAimeCard.name, screenerAimeCard)\n}\nexport default screenerAimeCard\n<file_path>packages/screener-aime-card/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/grid-card%20copy/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/common/hooks/useAssets.ts\n\nimport \nexport default function () {\n  const { ainvestTheme = {} } = window.__oversea_ainvest__ || {};\n  const isDark = ref(ainvestTheme.theme === 'dark');\n\n  /**\n   * 使用src/assets/images图片静态资源路径，自动根据当前黑白模式来匹配对应图片\n   * @param lightUrl 白天模式路径\n   * @param darkUrl 黑夜模式路径（默认为白天路径_dark）\n   * @param imgType 图片类型（默认为png）\n   * @returns\n   */\n  const useAssetsImg = (\n    lightUrl: string,\n    darkUrl: string = `${lightUrl}_dark`,\n    imgType: string = 'png',\n  ) => new URL(`../assets/images/${isDark.value ? darkUrl : lightUrl}.${imgType}`, import.meta.url).href;\n\n  return {\n    useAssetsImg,\n  };\n}","relevantFileList":[],"filePath":"packages/common/hooks/useTheme.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\n    themeData.value = res.ain","copilot":"themeData.value = res"}},{"prefix":"import {IDataSourceConfig,IDataSourceConfigForDisplay } from 'types/data-source'\nimport {","infill":" v4 as uuid } from 'uuid'; ","suffix":"\n/**\n * 把服务端格式的数据源转成前端展示所需格式\n * 由于平台传递数据进行初始化时，会触发store变化，一些数据可能此时还不存在，所以需要进行兼容处理\n * @param dataSourceConfig\n * @returns\n */\nexport const dataSourceConfig2Display = (\n  dataSourceConfig: IDataSourceConfig[]\n): IDataSourceConfigForDisplay[] => {\n  const dataSourceConfigForDisplay: IDataSourceConfigForDisplay[] = dataSourceConfig.map(ele => {\n    const list = ele.fieldMappings?.map(d => {\n      const keys = d.inputFieldKey.split('_');\n      return {\n        sourceFieldName: d.sourceFieldName,\n        sourceFieldKey: d.sourceFieldKey,\n        inputFieldName: d.inputFieldName,\n        inputFieldKey: [keys[1], keys[2]],\n        inputFieldValue: d.inputFieldValue,\n        placeholder: '',\n      };\n    });\n\n    return {\n      id: uuid(),\n      data: {\n        dataSourceId: ele.dataSourceId,\n        dataSourceName: ele.dataSourceName,\n        fieldMappings: list || [],\n      },\n    };\n  });\n\n  return dataSourceConfigForDisplay;\n};","relevantFile":"<file_path>src/common/api/interface.ts\n}\n\nexport interface BaseConfig {\n  source: string;\n  author: string;\n  codeSettings: {};\n  classesSettings: {};\n  additionalSettings: {};\n  resultConditionGroup: {\n    // 输出结果自测校验\n    input: string; // 校验范围\n    express: string;\n    value: string;\n  }[];\n}\n\nexport interface AdvanceConfig {\n  uniqueSettings: {};\n  forceUpdateSettings: {};\n  ignoreUpdatePatterns: string[];\n}\n\nexport interface DistributeConfig {\n  sceneChannel: string[];\n  emails: string[];\n  personChannel: string[];\n}\n\nexport interface articleConfigConfig {\n  dataSourceConfig: {}[];\n  executeConfig: {};\n  conditionGroup: {};\n}\n\nexport interface articleConfig {\n  type: string;\n  articleConfigConfig: articleConfigConfig;\n  name: string;\n}\nexport interface ArticleConfig {\n  triggerConfig: TriggerConfig;\n  baseConfig: BaseConfig;\n  advanceConfig: AdvanceConfig;\n  distributeConfig: DistributeConfig;\n}\nexport interface TemplateData extends IExecutorBaseData {\n  // status: string;\n  chainVisualInfo?: string; // flow执行器的配置\n  articleConfig: ArticleConfig;\n  areaComponents?: RegionConfig[];\n}\n\n//  所有的配置，铺平到一个新的对象中，仅作前端使用\nexport interface IAllArticleConfig\n  extends TriggerConfig,\n    BaseConfig,\n    AdvanceConfig,\n    DistributeConfig {}\n\n// 模板（flow链）执行器的基础信息\n<file_path>src/hooks/useTriggerData.ts\nimport { IDataSourceConfigForDisplay } from 'types/data-source'\n\nimport { ref } from 'vue';\n\nconst allTableData = ref<Datasource[]>([]);   // 所有数据表\nconst noParamsTableData = ref<Datasource[]>([]);  // 无参数据表\nconst parameterlessTable = ref<CascaderData[]>([]);  // 无参数据表级联数据\nconst allTable = ref<CascaderData[]>([]); // 所有数据表级联数据\nconst dataSourceConfigForDisplay = ref<IDataSourceConfigForDisplay[]>([]); // 用于展示的数据源\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n      };\n<file_path>types/data-source.ts\n}\n\nexport interface IFieldMap {\n  sourceFieldName: string; //数据源字段展示名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  sourceFieldKey: string; //数据源字段传参标识\n  inputFieldName: string; //输入字段名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  inputFieldKey: string; //输入字段标识\n  inputFieldValue: string; //输入测试案例\n}\n\nexport interface IDataSourceConfig {\n  dataSourceId: string; //数据源id\n  dataSourceName: string; //数据源名称\n  fieldMappings: IFieldMap[];\n}\n\nexport interface IFieldMapping {\n  /**\n   *  数据源名称,给前端用，可以自定义，后端不管内容是什么，只做保存\n   *  此处的表是有参数据源表\n   */\n  sourceFieldName: string;\n  /**\n   * 数据源key，格式`$_表id_protocalFormat.key`\n   * 此处的表是有参数据源表\n   */\n  sourceFieldKey: string;\n  /**\n   * 无参数据源的出参，无参表名.fileldList中的某个数据。给前端用，可以自定义，后端不管内容是什么，只做保存\n   */\n  inputFieldName: string; //输入字段名称\n  /**\n   * 无参数据源的出参，格式为：$_无参表id_fileldList中的某个数据\n   */\n  inputFieldKey: string[]; // string[]类型为了适配级联类型数据\n  inputFieldValue: string; //输入测试案例\n  placeholder: string; // 级联默认展示内容\n}\n\n/**\n * 用于展示的数据源\n */\nexport interface IDataSourceConfigForDisplay {\n  id: string;\n  data: {\n    dataSourceId: string;\n    dataSourceName: string;\n    fieldMappings: IFieldMapping[];\n  };\n}\n\n\n/**\n * 条件1\n */\nexport interface IPrecondition {\n  flag: ConditionFlag;\n  id: string; // 注：前端展示用，和最终的数据无关\n  conditionList: IConditionForDisplay[];\n}","relevantFileList":[],"filePath":"src/common/utils/dataSource.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" v4 as uuid} from 'uuid'","deepseek-chat-lite":" v4 as uuid } from 'uuid';","deepseek-chat":"```\n// Start Generation Here\nimport { v4 as uuid } from '","copilot":" v4 as uuid } from 'uuid'; "}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from \"thsc-design-vue\"\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    // slotName: 'partySlot',\n    minWidth: 295,\n    render({ record }) {\n      // 是使用tag组件\n      return h","infill":"(Tag, { color: 'blue' }, record.searchKey);","suffix":"\r\n    }\r\n  },\r\n  {\r\n    title: '研报日期（开始）',\r\n    dataIndex: 'startDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '研报日期（结束）',\r\n    dataIndex: 'endDate',\r\n    align: 'left',\r\n    width: 140,\r\n  },\r\n  {\r\n    title: '事件标签',\r\n    dataIndex: 'tags',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '上线状态',\r\n    dataIndex: 'online',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '是否有效',\r\n    dataIndex: 'isvalid',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\nimport type { ListItem } from '../http/response';\nexport default [\n  {\n    url: '/plugingwapi/list',\n    method: 'get',\n    timeout: 500,\n    response: () => {\n      return {\n        code: 1,\n        data: {\n          total: 9987,\n          list: [\n            {\n              event: {\n                eventId: '1',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background: '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: ['searchKey'],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: ['tags'],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"('span', { title: record.searchKey }, record.searchKey);\r","deepseek-chat-lite":"('div', {}, record.searchKey.map((item: string) => {","deepseek-chat":"```\n// Start Generation Here\n        (record.searchKey || []).","copilot":"(Tag, { color: 'blue' }, record.searchKey);"}},{"prefix":"/**\n * 删除对象中参数为空的节点，注意会修改原对象\n * @param {Object} obj 要修改的对象\n * @returns 返回的对象\n */\nexport const delEmptyQueryNodes = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    value && typeof value === 'object' && delEmptyQueryNodes(value);\n    (value === '' || value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) && delete obj[key];\n  });\n  return obj;\n};\n\n/**\n * 深拷贝对象\n * @param {Object} obj 要拷贝的对象\n * @returns 返回的对象\n */","infill":"export const cloneDeep = (obj) => {\n  return JSON.parse(JSON.stringify(obj));\n};\n","suffix":"","relevantFile":"<file_path>src/store/constant.ts\n    name: '买卖建议',\n  },\n  {\n    id: '基本数据',\n    name: '基本数据',\n  },\n  {\n    id: '业绩分析',\n    name: '业绩分析',\n  },\n  {\n    id: '原因分析',\n    name: '原因分析',\n  },\n  {\n    id: '配置观点',\n    name: '配置观点',\n  },\n  {\n    id: '大势研判',\n    name: '大势研判',\n  },\n  {\n    id: '板块分析',\n    name: '板块分析',\n  },\n  {\n    id: '标的诊选',\n    name: '标的诊选',\n  },\n  {\n    id: '交易策略',\n    name: '交易策略',\n  },\n  {\n    id: '账户分析',\n    name: '账户分析',\n  },\n  {\n    id: '资产配置',\n    name: '资产配置',\n  },\n];\n\nexport const WITH_IMAGE = [\n  {\n    id: null,\n    name: '全部',\n  },\n  {\n    id: true,\n    name: '有图',\n  },\n];\n\nexport const OPERATE_STATUS = [\n  {\n    id: 1,\n    name: '置顶',\n    value: {","relevantFileList":[],"filePath":"src/utils/object.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\nexport const deepCopy = (obj) =>","copilot":"export const cloneDeep = (obj) => {\n  return JSON.parse(JSON.stringify(obj));\n};\n"}},{"prefix":"/**\n * 删除对象中参数为空的节点，注意会修改原对象\n * @param {Object} obj 要修改的对象\n * @returns 返回的对象\n */\nexport const delEmptyQueryNodes = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    value && typeof value === 'object' && delEmptyQueryNodes(value);\n    (value === '' || value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) && delete obj[key];\n  });\n  return obj;\n};\n\n/**\n * 深拷贝对象或数组\n * ","infill":"@param {Object|Array} obj 要拷贝的对象或数组\n * @returns 返回拷贝的对象或数组\n  */\nexport const  = (obj) => {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  const newObj = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach((key) => {\n    newObj[key] = deepClone(obj[key]);\n  });\n  return newObj;\n};\n","suffix":"\n","relevantFile":"<file_path>src/store/constant.ts\n    name: '买卖建议',\n  },\n  {\n    id: '基本数据',\n    name: '基本数据',\n  },\n  {\n    id: '业绩分析',\n    name: '业绩分析',\n  },\n  {\n    id: '原因分析',\n    name: '原因分析',\n  },\n  {\n    id: '配置观点',\n    name: '配置观点',\n  },\n  {\n    id: '大势研判',\n    name: '大势研判',\n  },\n  {\n    id: '板块分析',\n    name: '板块分析',\n  },\n  {\n    id: '标的诊选',\n    name: '标的诊选',\n  },\n  {\n    id: '交易策略',\n    name: '交易策略',\n  },\n  {\n    id: '账户分析',\n    name: '账户分析',\n  },\n  {\n    id: '资产配置',\n    name: '资产配置',\n  },\n];\n\nexport const WITH_IMAGE = [\n  {\n    id: null,\n    name: '全部',\n  },\n  {\n    id: true,\n    name: '有图',\n  },\n];\n\nexport const OPERATE_STATUS = [\n  {\n    id: 1,\n    name: '置顶',\n    value: {","relevantFileList":[],"filePath":"src/utils/object.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" @param {Object|Array} obj 拷贝对象","deepseek-chat-lite":"@param {Object|Array} obj 要拷贝的对象或数组","deepseek-chat":"```\n// Start Generation Here\n/**\n * 深拷贝对象","copilot":"@param {Object|Array} obj 要拷贝的对象或数组\n * @returns 返回拷贝的对象或数组\n  */\nexport const  = (obj) => {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  const newObj = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach((key) => {\n    newObj[key] = deepClone(obj[key]);\n  });\n  return newObj;\n};\n"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail","infill":": prefix + '/list/detail',","suffix":"\r\n};\r\nexport const getListDataApi = (params: Recordable) => {\r\n  return http.get<ListResponse>(apis.list, params);\r\n};\r\n\r\nexport const editListDataApi = (\r\n  data: Recordable,\r\n  config = {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n    },\r\n  }\r\n) => {\r\n  return http.post<ListItem>(apis.edit, data, config);\r\n};\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(apis.detail, params);\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/typings/global.d.ts\nimport { MessageMethod } from \"thsc-design-vue/es/message\";\nimport type { LangTypes } from \"@/locale/lang/en\";\nimport type { Binding } from \"@/directive/taPoint\";\ndeclare global {\n\tinterface ViteEnv {\n\t\tVITE_PUBLIC_PATH: string;\n\t\tVITE_APP_TITLE: string;\n\t\tVITE_VISUALIZER: boolean;\n\t\tVITE_HOST: string;\n\t\tVITE_PORT: number;\n\t}\n\ttype Recordable<T = any> = Record<string, T>;\n\n\ttype ObjKeysToUnion<T, P extends string = \"\"> = T extends object\n\t\t? {\n\t\t\t\t[K in keyof T]: ObjKeysToUnion<\n\t\t\t\t\tT[K],\n\t\t\t\t\tP extends \"\" ? `${K & string}` : `${P}.${K & string}`\n\t\t\t\t>;\n\t\t  }[keyof T]\n\t\t: P;\n\n\ttype FlattenArray<T> = T extends Array<infer U> ? U : T;\n\n\tinterface ImportMetaEnv extends ViteEnv {\n\t\t__: unknown;\n\t}\n\n\n\tinterface Window {\n\t\tlang: any;\n\t\t$t(key: ObjKeysToUnion<LangTypes>): string;\n\t\t$message: MessageMethod;\n\t\tQRCode: any;\n\t\topenPageForStar(params: Recordable): void;\n\t\tAPI: any;\n\t\tTA: any;\n\t\t$ta(params: Binding): void;\n\t\tMoveBall: any;\n\t\thandleCancelPendingRequest: (url: string) => void;\n\t\tcancelPendingRequest: (url: string) => void;\n\t}\n\n\ttype NumberAndString = string | number;\n}\n<file_path>src/main/resources/websource/financial_hots/src/constants/columns.ts\nimport type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    fixed: 'left',\n    width: 80,\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 96,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 320,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" : prefix + '/list/detail',","deepseek-chat-lite":": prefix + '/list/detail',","deepseek-chat":"```\n// Start Generation Here\n  : prefix + '/list/detail',","copilot":": prefix + '/list/detail',"}},{"prefix":"import type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    width: 100,\n    fixed: 'left',\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 100,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 400,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报关键词',\n    dataIndex: 'searchKey',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.searchKey.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'arcoblue' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '研报日期（开始）',\n    dataIndex: 'startDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '研报日期（结束）',\n    dataIndex: 'endDate',\n    align: 'center',\n    width: 140,\n  },\n  {\n    title: '事件标签',\n    dataIndex: 'tags',\n    align: 'left',\n    minWidth: 295,\n    render({ record }) {\n      return record.tags.map((item: string) => {\n        return h(Tag, { style: { margin: '2px' }, color: 'orange' }, () => item);\n      });\n    },\n    ellipsis: true,\n  },\n  {\n    title: '上线状态',\n    dataIndex: 'online',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.online === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: '是否有效',\n    dataIndex: 'isvalid',\n    align: 'center',\n    width: 84,\n    render({ record }) {\n      return record.isvalid === 1 ? '是' : '否';\n    },\n  },\n  {\n    title: '解析状态',\n    dataIndex: 'status',\n    align: 'left',\n    fixed: 'right',\n    width: 84,\n    render({","infill":"nst status = record.status;\r\n      let color = '';\r\n      let text = '';\r\n      if (status === 0) {\r\n        color = 'red';\r\n        text = '未解析';\r\n      } else if (status === 1) {\r\n        color = 'green';\r\n        text = '已解析';\r\n      } else if (status === 2) {\r\n        color = 'orange';\r\n        text = '解析中';\r\n      }\r\n      return h(Tag, { color }, () => text);\r\n","suffix":"    },\r\n  },\r\n  {\r\n    title: '操作',\r\n    dataIndex: 'judgeResult',\r\n    align: 'left',\r\n    fixed: 'right',\r\n    width: 200,\r\n    slotName: 'judgeResultSlot',\r\n    // render({ record }) {\r\n    // \treturn record.judgeResult || \"--\";\r\n    // }\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\nimport { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n    },\n  },\n});\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n<file_path>src/main/resources/websource/financial_hots/mock/index.ts\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      };\n    },\n  },\n];","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/constants/columns.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  record }) {\r","deepseek-chat-lite":" record }) {\r","deepseek-chat":"```\n// Start Generation Here\n      record,\n    }) {\n     ","copilot":"nst status = record.status;\r\n      let color = '';\r\n      let text = '';\r\n      if (status === 0) {\r\n        color = 'red';\r\n        text = '未解析';\r\n      } else if (status === 1) {\r\n        color = 'green';\r\n        text = '已解析';\r\n      } else if (status === 2) {\r\n        color = 'orange';\r\n        text = '解析中';\r\n      }\r\n      return h(Tag, { color }, () => text);\r\n"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/plugingwapi';\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(prefix + '/list', params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(prefix + '/list/edit', data, config);\n};\n\nexport const getDatailDataApi = ","infill":"(params: Recordable) => {\r\n  return http.get<ListItem>(prefix + '/list/detail', params);\r\n};\r\n","suffix":"","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/constants/columns.ts\nimport type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    fixed: 'left',\n    width: 80,\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 96,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 320,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n\t\t});\n\t\treturn config;\n\t},\n\t(error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\t// 在响应数据之前做些处理\n\t\tconst requestKey = response.config.url + \"&\" + response.config.method;\n\t\tcancelPendingRequest(requestKey); // 取消重复请求\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\t// 如果请求被取消，不执行任何操作\n\t\tif (axios.isCancel(error)) {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport interface Result<T = unknown> {\n\tcode: number;\n\tmessage?: string | number;\n\tsubCode?: string;\n\tdata: T;\n\terror?: string;\n\t[key: string]: any;\n}\n\nexport const API_PREFIX = \"\";\n\nexport const http = {\n\tget<T = any>(\n\t\turl: string,\n\t\tparams?: Recordable,\n\t\tconfig?: Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.get<T, AxiosResponse<Result<T>>>(`${API_PREFIX}${url}`, {\n\t\t\tparams,\n\t\t\t...(config || {})\n\t\t});\n\t},\n\tpost<T = any>(\n\t\turl: string,\n\t\tdata?: any,\n\t\tconfig?: AxiosRequestConfig | Recordable\n\t): Promise<AxiosResponse<Result<T>>> {\n\t\treturn instance.post<T, AxiosResponse<Result<T>>>(\n\t\t\t`${API_PREFIX}${url}`,\n\t\t\tdata,\n\t\t\tconfig\n\t\t);\n\t}\n};\nexport default instance;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" (params: Recordable) => {","deepseek-chat-lite":"(params: Recordable) => {","deepseek-chat":"```\n// Start Generation Here\n(params: Recordable) => {\n","copilot":"(params: Recordable) => {\r\n  return http.get<ListItem>(prefix + '/list/detail', params);\r\n};\r\n"}},{"prefix":"\n\nexport default function () {\n  const { ainvestTheme = {} } = window.__oversea_ainvest__ || {};\n  const","infill":" isDark = ref(ainvestTheme.theme === 'dark');","suffix":"\n\n  /**\n   * 使用src/assets/images图片静态资源路径，自动根据当前黑白模式来匹配对应图片\n   * @param lightUrl 白天模式路径\n   * @param darkUrl 黑夜模式路径（默认为白天路径_dark）\n   * @param imgType 图片类型（默认为png）\n   * @returns\n   */\n  const useAssetsImg = (\n    lightUrl: string,\n    darkUrl: string = `${lightUrl}_dark`,\n    imgType: string = 'png',\n  ) => new URL(`../assets/images/${isDark.value ? darkUrl : lightUrl}.${imgType}`, import.meta.url).href;\n\n  return {\n    useAssetsImg,\n  };\n}\n","relevantFile":"<file_path>packages/screener-aime-card/index.ts\nimport screenerAimeCard from './src/index.vue';\n\nscreenerAimeCard.install = (App): void => {\n  App.component(screenerAimeCard.name, screenerAimeCard)\n}\nexport default screenerAimeCard\n<file_path>packages/screener-aime-card/src/utils/i18n.ts\nimport en from '../assets/lang/en.json';\nimport fr from '../assets/lang/fr.json';\nimport de from '../assets/lang/de.json';\nimport zhHans from '../assets/lang/zh-hans.json';\nimport es from '../assets/lang/es.json';\nimport zhHant from '../assets/lang/zh-hant.json';\n\nconst langMap = {\n  en,\n  fr,\n  de,\n  es,\n  'zh-hans': zhHans,\n  zh: zhHans,\n  'zh-hant': zhHant,\n};\n\nexport const getI18n = key => {\n  const ainvestWindow = window.__oversea_ainvest__ || {};\n  const lang = ainvestWindow.lang || 'en';\n  const langJson = langMap[lang] || en;\n  return langJson[key];\n};\n\nexport function getLanguage() {\n  const ainvestWindow = window.__oversea_ainvest__ || {};\n  const lang = ainvestWindow.lang || 'en';\n  return lang === 'zh' ? 'zh-hans' : lang;\n}\n<file_path>packages/screener-aime-card/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/grid-card%20copy/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}","relevantFileList":[],"filePath":"packages/common/hooks/useAssets.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  isDark = ref(ainvestTheme.isDark);","deepseek-chat-lite":" { isDark = false } = ainvestTheme;","deepseek-chat":"```\n// Start Generation Here\n  const isDark = computed(() => ain","copilot":" isDark = ref(ainvestTheme.theme === 'dark');"}},{"prefix":"\nimport {ref} from 'vue';\nexport default function () {\n  const themeData = ref(","infill":"window.__oversea_ainvest__?.ainvestTheme || {});","suffix":"\n\n  /**\n   * 使用src/assets/images图片静态资源路径，自动根据当前黑白模式来匹配对应图片\n   * @param lightUrl 白天模式路径\n   * @param darkUrl 黑夜模式路径（默认为白天路径_dark）\n   * @param imgType 图片类型（默认为png）\n   * @returns\n   */\n  const useAssetsImg = (\n    lightUrl: string,\n    darkUrl: string = `${lightUrl}_dark`,\n    imgType: string = 'png',\n  ) => new URL(`../assets/images/${isDark.value ? darkUrl : lightUrl}.${imgType}`, import.meta.url).href;\n\n  return {\n    useAssetsImg,\n  };\n}\n","relevantFile":"<file_path>packages/screener-aime-card/src/utils/interface.ts\nexport interface ICard {\n  btnTitle?: string;\n  queryTitle: string;\n}\n<file_path>packages/common/hooks/useAssets.ts\n\n\nexport default function () {\n  const { ainvestTheme = {} } = window.__oversea_ainvest__ || {};\n  const isDark = ref(ainvestTheme.theme === 'dark');\n\n  /**\n   * 使用src/assets/images图片静态资源路径，自动根据当前黑白模式来匹配对应图片\n   * @param lightUrl 白天模式路径\n   * @param darkUrl 黑夜模式路径（默认为白天路径_dark）\n   * @param imgType 图片类型（默认为png）\n   * @returns\n   */\n  const useAssetsImg = (\n    lightUrl: string,\n    darkUrl: string = `${lightUrl}_dark`,\n    imgType: string = 'png',\n  ) => new URL(`../assets/images/${isDark.value ? darkUrl : lightUrl}.${imgType}`, import.meta.url).href;\n\n  return {\n    useAssetsImg,\n  };\n}\n<file_path>packages/screener-aime-card/src/vue-shime.d.ts\ndeclare module '*.vue' {\n  import { defineComponent, App } from '@vue/runtime-core'\n  const component: ReturnType<typeof defineComponent> & {\n    install(app: App): void\n  }\n  export default component\n}\n<file_path>packages/screener-aime-card/index.ts\nimport screenerAimeCard from './src/index.vue';\n\nscreenerAimeCard.install = (App): void => {\n  App.component(screenerAimeCard.name, screenerAimeCard)\n}\nexport default screenerAimeCard","relevantFileList":[],"filePath":"packages/common/hooks/useTheme.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"{","deepseek-chat-lite":"{","deepseek-chat":"```\n// Start Generation Here\n    window.__oversea_ainvest__","copilot":"window.__oversea_ainvest__?.ainvestTheme || {});"}},{"prefix":"\nimport {ref} ","infill":"from 'vue';","suffix":"\nexport default function () {\n  const themeData = ref(window.__oversea_ainvest__?.ainvestTheme || {});\n\n  const useAssetsImg = (;\n\n  return {\n    useAssetsImg,\n  };\n}\n","relevantFile":"<file_path>packages/common/hooks/useAssets.ts\n\n\nexport default function () {\n  const { ainvestTheme = {} } = window.__oversea_ainvest__ || {};\n  const isDark = ref(ainvestTheme.theme === 'dark');\n\n  /**\n   * 使用src/assets/images图片静态资源路径，自动根据当前黑白模式来匹配对应图片\n   * @param lightUrl 白天模式路径\n   * @param darkUrl 黑夜模式路径（默认为白天路径_dark）\n   * @param imgType 图片类型（默认为png）\n   * @returns\n   */\n  const useAssetsImg = (\n    lightUrl: string,\n    darkUrl: string = `${lightUrl}_dark`,\n    imgType: string = 'png',\n  ) => new URL(`../assets/images/${isDark.value ? darkUrl : lightUrl}.${imgType}`, import.meta.url).href;\n\n  return {\n    useAssetsImg,\n  };\n}","relevantFileList":[],"filePath":"packages/common/hooks/useTheme.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" from 'vue';","deepseek-chat-lite":"from 'vue';","deepseek-chat":"```\n// Start Generation Here\nimport { ref } from 'vue';\n","copilot":"from 'vue';"}},{"prefix":"import {\n  ACTION_KEY_DELETE,\n  ACTION_KEY_OPEN,\n  ACTION_KEY_RENAME,\n} from \"@/assets/constants/actionKey\";\n\nexport const WRITING_TEMPLATE_MENU = [\n  {\n    title: window.$t(\"个基研究报告\"),\n    desc: window.$t(\"支持生成不同类型基金投资分析报告\"),\n    icon: \"base-research-report\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(247, 164, 82, 0.06) 0%, rgba(247, 164, 82, 0) 100%\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n  {\n    title: window.$t(\"个基诊断点评\"),\n    desc: window.$t(\"依托同花顺基金评价体系输出基金诊断点评\"),\n    icon: \"individual-diagnostic-reviews\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(57, 178, 255, 0.06) 0%, rgba(57, 178, 255, 0) 100%)\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n  {\n    title: window.$t(\"基金经理研究报告\"),\n    desc: window.$t(\"基金经理研究，报告一键生成\"),\n    icon: \"fund-manager-research-report\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(247, 82, 82, 0.06) 0%, rgba(247, 82, 82, 0) 100%)\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n];\n\nexport const TOOLS = [\n  {\n    icon: \"fund-f9\",\n    label: window.$t(\"基金F9\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"manager-f9\",\n    label: window.$t(\"经理F9\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"manager-map\",\n    label: window.$t(\"经理图谱\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"diagnosis\",\n    label: window.$t(\"全景诊断\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"browser\",\n    label: window.$t(\"数据浏览器\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"statistics\",\n    label: window.$t(\"基金专题\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-pool\",\n    label: window.$t(\"基金池\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-information\",\n    label: window.$t(\"基金资讯\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-research\",\n    label: window.$t(\"基金研报\"),\n    jumpUrl: \"\",\n  },\n];\n\nexport const VIEW_BUTTON_GROUP = [\n  {\n    icon: \"list\",\n    key: \"0\",\n  },\n  {\n    icon: \"view\",\n    key: \"1\",\n  },\n];\n\nexport const MATERIAL_FILTER_ALL = \"all\";\n\nexport const MATERIAL_FILTER_WORD = \"word\";\n\nexport const MATERIAL_FILTER_PDF = \"pdf\";\n\nexport const MATERIAL_FILTER_IMG = \"img\";\n\nexport const MATERIAL_TREE_DATA = [\n  {\n    title: window.$t(\"全部类型\"),\n    key: MATERIAL_FILTER_ALL,\n    children: [\n      {\n        title: window.$t(\"Word文档\"),\n        key: MATERIAL_FILTER_WORD,\n      },\n      {\n        title: window.$t(\"PDF文档\"),\n        key: MATERIAL_FILTER_PDF,\n      },\n      {\n        title: window.$t(\"图片\"),\n        key: MATERIAL_FILTER_IMG,\n      },\n    ],\n  },\n];\n\nexport const MATERIAL_ACTION_SHEET = [\n  {\n    icon: \"open\",\n    label: window.$t(\"打开\"),\n    key: ACTION_KEY_OPEN,\n  },\n  {\n    icon: \"edit\",\n    label: window.$t(\"重命名\"),\n    key: ACTION_KEY_RENAME,\n  },\n  {\n    icon: \"delete\",\n    label: window.$t(\"删除\"),\n    key: ACTION_KEY_DELETE,\n    slot: \"footer\",\n  },\n];\n\nexport const CREATE_TYPE = {\n  HOT: 'hot',\n  INVESTMENT: 'investment',\n  CLOSING: 'closing',","infill":"PERIODIC: 'periodic',\r\n  SHORT_VIDEO: 'short-video',","suffix":"\r\n};\r\n\r\nexport const CREATION_TREE_DATA = [\r\n  {\r\n    title: window.$t(\"全部类型\"),\r\n    key: MATERIAL_FILTER_ALL,\r\n    children: [\r\n      {\r\n        title: window.$t(\"热点解读\"),\r\n        key: CREATE_TYPE.HOT,\r\n      },\r\n      {\r\n        title: window.$t(\"投资早报\"),\r\n        key: CREATE_TYPE.INVESTMENT,\r\n      },\r\n      {\r\n        title: window.$t(\"收盘点评\"),\r\n        key: CREATE_TYPE.,\r\n      },\r\n      {\r\n        title: window.$t(\"周期报告\"),\r\n        key: MATERIAL_FILTER_IMG,\r\n      },\r\n      {\r\n        title: window.$t(\"短视频脚本\"),\r\n        key: MATERIAL_FILTER_IMG,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","relevantFile":"","relevantFileList":[],"filePath":"source/fund-writing-platform/src/assets/constants/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat":"```\n// Start Generation Here\n  PERIODIC: 'periodic',\n","copilot":"PERIODIC: 'periodic',\r\n  SHORT_VIDEO: 'short-video',"}},{"prefix":"import {\n  ACTION_KEY_DELETE,\n  ACTION_KEY_OPEN,\n  ACTION_KEY_RENAME,\n} from \"@/assets/constants/actionKey\";\n\nexport const WRITING_TEMPLATE_MENU = [\n  {\n    title: window.$t(\"个基研究报告\"),\n    desc: window.$t(\"支持生成不同类型基金投资分析报告\"),\n    icon: \"base-research-report\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(247, 164, 82, 0.06) 0%, rgba(247, 164, 82, 0) 100%\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n  {\n    title: window.$t(\"个基诊断点评\"),\n    desc: window.$t(\"依托同花顺基金评价体系输出基金诊断点评\"),\n    icon: \"individual-diagnostic-reviews\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(57, 178, 255, 0.06) 0%, rgba(57, 178, 255, 0) 100%)\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n  {\n    title: window.$t(\"基金经理研究报告\"),\n    desc: window.$t(\"基金经理研究，报告一键生成\"),\n    icon: \"fund-manager-research-report\",\n    // styles: {\n    //   backgroundImage:\n    //     \"linear-gradient(180deg, rgba(247, 82, 82, 0.06) 0%, rgba(247, 82, 82, 0) 100%)\",\n    //   boxShadow:\n    //     \"inset 0 1px 0 0 rgba(255, 255, 255, 1), 0 0 6px 0 rgba(41, 41, 51, 0.16), 0 2px 6px 0 rgba(41, 41, 51, 0.08)\",\n    // },\n  },\n];\n\nexport const TOOLS = [\n  {\n    icon: \"fund-f9\",\n    label: window.$t(\"基金F9\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"manager-f9\",\n    label: window.$t(\"经理F9\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"manager-map\",\n    label: window.$t(\"经理图谱\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"diagnosis\",\n    label: window.$t(\"全景诊断\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"browser\",\n    label: window.$t(\"数据浏览器\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"statistics\",\n    label: window.$t(\"基金专题\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-pool\",\n    label: window.$t(\"基金池\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-information\",\n    label: window.$t(\"基金资讯\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-research\",\n    label: window.$t(\"基金研报\"),\n    jumpUrl: \"\",\n  },\n];\n\nexport const VIEW_BUTTON_GROUP = [\n  {\n    icon: \"list\",\n    key: \"0\",\n  },\n  {\n    icon: \"view\",\n    key: \"1\",\n  },\n];\n\nexport const MATERIAL_FILTER_ALL = \"all\";\n\nexport const MATERIAL_FILTER_WORD = \"word\";\n\nexport const MATERIAL_FILTER_PDF = \"pdf\";\n\nexport const MATERIAL_FILTER_IMG = \"img\";\n\nexport const MATERIAL_TREE_DATA = [\n  {\n    title: window.$t(\"全部类型\"),\n    key: MATERIAL_FILTER_ALL,\n    children: [\n      {\n        title: window.$t(\"Word文档\"),\n        key: MATERIAL_FILTER_WORD,\n      },\n      {\n        title: window.$t(\"PDF文档\"),\n        key: MATERIAL_FILTER_PDF,\n      },\n      {\n        title: window.$t(\"图片\"),\n        key: MATERIAL_FILTER_IMG,\n      },\n    ],\n  },\n];\n\nexport const MATERIAL_ACTION_SHEET = [\n  {\n    icon: \"open\",\n    label: window.$t(\"打开\"),\n    key: ACTION_KEY_OPEN,\n  },\n  {\n    icon: \"edit\",\n    label: window.$t(\"重命名\"),\n    key: ACTION_KEY_RENAME,\n  },\n  {\n    icon: \"delete\",\n    label: window.$t(\"删除\"),\n    key: ACTION_KEY_DELETE,\n    slot: \"footer\",\n  },\n];\n\nexport const CREATE_TYPE = {\n  HOT: 'hot',\n  INVESTMENT: 'investment',\n  CLOSING: 'closing',\n  PERIODIC: 'periodic',","infill":"SHORT_VIDEO: 'short-video',","suffix":"\r\n};\r\n\r\nexport const CREATION_TREE_DATA = [\r\n  {\r\n    title: window.$t(\"全部类型\"),\r\n    key: MATERIAL_FILTER_ALL,\r\n    children: [\r\n      {\r\n        title: window.$t(\"热点解读\"),\r\n        key: CREATE_TYPE.HOT,\r\n      },\r\n      {\r\n        title: window.$t(\"投资早报\"),\r\n        key: CREATE_TYPE.INVESTMENT,\r\n      },\r\n      {\r\n        title: window.$t(\"收盘点评\"),\r\n        key: CREATE_TYPE.CLOSING,\r\n      },\r\n      {\r\n        title: window.$t(\"周期报告\"),\r\n        key: MATERIAL_FILTER_IMG,\r\n      },\r\n      {\r\n        title: window.$t(\"短视频脚本\"),\r\n        key: MATERIAL_FILTER_IMG,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","relevantFile":"","relevantFileList":[],"filePath":"source/fund-writing-platform/src/assets/constants/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat-lite":"\r","deepseek-chat":"```\n// Start Generation Here\n  PERIODIC: 'periodic',\n","copilot":"SHORT_VIDEO: 'short-video',"}},{"prefix":"                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 0,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              event: {\n                eventId: '3',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 2,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              event: {\n                eventId: '4',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 0,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              event: {\n                eventId: '13',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              event: {\n                eventId: '5',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n           ","infill":"method: \"get\",\r\n    timeout: 1000,\r\n    response: () => {\r\n      return {\r\n        code: 1,\r\n        data: {\r\n          total: 9987,\r\n          list: [\r\n            {\r\n              event: {\r\n                eventId: '1',\r\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\r\n                date: '2021-10-10',\r\n                background:\r\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n                searchKey: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                  '中国建筑',\r\n                  '中国中铁',\r\n                  '中国中车',\r\n                  '中国中冶',\r\n                  '中国中化',\r\n                  '中国中兵',\r\n                  '中国中航',\r\n                  '中国中电',\r\n                  '中国中煤',\r\n                  '中国中铝',\r\n                  '中国中钢',\r\n                ],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                ],\r\n                online: 1,\r\n                status: 1,\r\n                isvalid: 1,\r\n              },\r\n              views: [\r\n                {\r\n                  view: 'view',\r\n                  lists: [\r\n                    {\r\n                      content: [\r\n                        {\r\n                          text: 'text',\r\n                          seq: 1,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              event: {\r\n                eventId: '2',\r\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\r\n                date: '2021-10-10',\r\n                background:\r\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n                searchKey: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                  '中国建筑',\r\n                  '中国中铁',\r\n                  '中国中车',\r\n                  '中国中冶',\r\n                  '中国中化',\r\n                  '中国中兵',\r\n                  '中国中航',\r\n                  '中国中电',\r\n                  '中国中煤',\r\n                  '中国中铝',\r\n                  '中国中钢',\r\n                ],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                ],\r\n                online: 1,\r\n                status: 0,\r\n                isvalid: 1,\r\n              },\r\n              views: [\r\n                {\r\n                  view: 'view',\r\n                  lists: [\r\n                    {\r\n                      content: [\r\n                        {\r\n                          text: 'text',\r\n                          seq: 1,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              event: {\r\n                eventId: '3',\r\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\r\n                date: '2021-10-10',\r\n                background:\r\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n                searchKey: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                  '中国建筑',\r\n                  '中国中铁',\r\n                  '中国中车',\r\n                  '中国中冶',\r\n                  '中国中化',\r\n                  '中国中兵',\r\n                  '中国中航',\r\n                  '中国中电',\r\n                  '中国中煤',\r\n                  '中国中铝',\r\n                  '中国中钢',\r\n                ],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                ],\r\n                online: 1,\r\n                status: 2,\r\n                isvalid: 1,\r\n              },\r\n              views: [\r\n                {\r\n                  view: 'view',\r\n                  lists: [\r\n                    {\r\n                      content: [\r\n                        {\r\n                          text: 'text',\r\n                          seq: 1,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              event: {\r\n                eventId: '4',\r\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\r\n                date: '2021-10-10',\r\n                background:\r\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n                searchKey: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                  '中国建筑',\r\n                  '中国中铁',\r\n                  '中国中车',\r\n                  '中国中冶',\r\n                  '中国中化',\r\n                  '中国中兵',\r\n                  '中国中航',\r\n                  '中国中电',\r\n                  '中国中煤',\r\n                  '中国中铝',\r\n                  '中国中钢',\r\n                ],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                ],\r\n                online: 0,\r\n                status: 1,\r\n                isvalid: 1,\r\n              },\r\n              views: [\r\n                {\r\n                  view: 'view',\r\n                  lists: [\r\n                    {\r\n                      content: [\r\n                        {\r\n                          text: 'text',\r\n                          seq: 1,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              event: {\r\n                eventId: '13',\r\n                title: '美联储“预期管","suffix":"\r\n  }\r\n];\r\n","relevantFile":"","relevantFileList":[],"template":"typescript","multiRes":{"CodeQwen1.5-7B":"      ],","deepseek-chat-lite":"     ],","deepseek-chat":"```\n// Start Generation Here\n                ],\n                orgIds: ['org","copilot":"method: \"get\",\r\n    timeout: 1000,\r\n    response: () => {\r\n      return {\r\n        code: 1,\r\n        data: {\r\n          total: 9987,\r\n          list: [\r\n            {\r\n              event: {\r\n                eventId: '1',\r\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\r\n                date: '2021-10-10',\r\n                background:\r\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n                searchKey: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                  '中国建筑',\r\n                  '中国中铁',\r\n                  '中国中车',\r\n                  '中国中冶',\r\n                  '中国中化',\r\n                  '中国中兵',\r\n                  '中国中航',\r\n                  '中国中电',\r\n                  '中国中煤',\r\n                  '中国中铝',\r\n                  '中国中钢',\r\n                ],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                ],\r\n                online: 1,\r\n                status: 1,\r\n                isvalid: 1,\r\n              },\r\n              views: [\r\n                {\r\n                  view: 'view',\r\n                  lists: [\r\n                    {\r\n                      content: [\r\n                        {\r\n                          text: 'text',\r\n                          seq: 1,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              event: {\r\n                eventId: '2',\r\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\r\n                date: '2021-10-10',\r\n                background:\r\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n                searchKey: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                  '中国建筑',\r\n                  '中国中铁',\r\n                  '中国中车',\r\n                  '中国中冶',\r\n                  '中国中化',\r\n                  '中国中兵',\r\n                  '中国中航',\r\n                  '中国中电',\r\n                  '中国中煤',\r\n                  '中国中铝',\r\n                  '中国中钢',\r\n                ],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                ],\r\n                online: 1,\r\n                status: 0,\r\n                isvalid: 1,\r\n              },\r\n              views: [\r\n                {\r\n                  view: 'view',\r\n                  lists: [\r\n                    {\r\n                      content: [\r\n                        {\r\n                          text: 'text',\r\n                          seq: 1,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              event: {\r\n                eventId: '3',\r\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\r\n                date: '2021-10-10',\r\n                background:\r\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n                searchKey: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                  '中国建筑',\r\n                  '中国中铁',\r\n                  '中国中车',\r\n                  '中国中冶',\r\n                  '中国中化',\r\n                  '中国中兵',\r\n                  '中国中航',\r\n                  '中国中电',\r\n                  '中国中煤',\r\n                  '中国中铝',\r\n                  '中国中钢',\r\n                ],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                ],\r\n                online: 1,\r\n                status: 2,\r\n                isvalid: 1,\r\n              },\r\n              views: [\r\n                {\r\n                  view: 'view',\r\n                  lists: [\r\n                    {\r\n                      content: [\r\n                        {\r\n                          text: 'text',\r\n                          seq: 1,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              event: {\r\n                eventId: '4',\r\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\r\n                date: '2021-10-10',\r\n                background:\r\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n                searchKey: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                  '中国建筑',\r\n                  '中国中铁',\r\n                  '中国中车',\r\n                  '中国中冶',\r\n                  '中国中化',\r\n                  '中国中兵',\r\n                  '中国中航',\r\n                  '中国中电',\r\n                  '中国中煤',\r\n                  '中国中铝',\r\n                  '中国中钢',\r\n                ],\r\n                orgIds: ['orgIds'],\r\n                startDate: '2021-10-10',\r\n                endDate: '2021-10-10',\r\n                tags: [\r\n                  '同花顺',\r\n                  '中信证券',\r\n                  '贵州茅台',\r\n                  '中国平安',\r\n                  '招商银行',\r\n                  '中国石化',\r\n                  '中国石油',\r\n                  '中国银行',\r\n                ],\r\n                online: 0,\r\n                status: 1,\r\n                isvalid: 1,\r\n              },\r\n              views: [\r\n                {\r\n                  view: 'view',\r\n                  lists: [\r\n                    {\r\n                      content: [\r\n                        {\r\n                          text: 'text',\r\n                          seq: 1,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              event: {\r\n                eventId: '13',\r\n                title: '美联储“预期管"}},{"prefix":"export const ACTION_KEY_OPEN = \"ACTION_KEY_OPEN\"; // 打开\n\nexport const ACTION_KEY_RENAME = \"ACTION_KEY_RENAME\"; // 重命名\n\nexport const ACTION_KEY_DELETE = \"ACTION_KEY_DELETE\"; // 删除\n\nexport const ACTION_KEY_EXPORT = \"ACTION_KEY_EXPORT\"; // 导出文档","infill":"export const ACTION_KEY_DOWNLOAD = \"ACTION_KEY_DOWNLOAD\"; // 下载","suffix":"","relevantFile":"<file_path>source/fund-writing-platform/src/assets/constants/index.ts\n    label: window.$t(\"基金研报\"),\n    jumpUrl: \"\",\n  },\n];\n\nexport const VIEW_BUTTON_GROUP = [\n  {\n    icon: \"list\",\n    key: \"0\",\n  },\n  {\n    icon: \"view\",\n    key: \"1\",\n  },\n];\n\nexport const MATERIAL_FILTER_ALL = \"all\";\n\nexport const MATERIAL_FILTER_WORD = \"word\";\n\nexport const MATERIAL_FILTER_PDF = \"pdf\";\n\nexport const MATERIAL_FILTER_IMG = \"img\";\n\nexport const MATERIAL_TREE_DATA = [\n  {\n    title: window.$t(\"全部类型\"),\n    key: MATERIAL_FILTER_ALL,\n    children: [\n      {\n        title: window.$t(\"Word文档\"),\n        key: MATERIAL_FILTER_WORD,\n      },\n      {\n        title: window.$t(\"PDF文档\"),\n        key: MATERIAL_FILTER_PDF,\n      },\n      {\n        title: window.$t(\"图片\"),\n        key: MATERIAL_FILTER_IMG,\n      },\n    ],\n  },\n];\n\nexport const MATERIAL_ACTION_SHEET = [\n  {\n    icon: \"open\",\n    label: window.$t(\"打开\"),\n    key: ACTION_KEY_OPEN,\n  },\n  {\n    icon: \"edit\",\n    label: window.$t(\"重命名\"),\n    key: ACTION_KEY_RENAME,\n  },\n  {\n    icon: \"delete\",\n    label: window.$t(\"删除\"),\n    key: ACTION_KEY_DELETE,","relevantFileList":[],"filePath":"source/fund-writing-platform/src/assets/constants/actionKey.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\nexport const ACTION_KEY_SHARE =","copilot":"export const ACTION_KEY_DOWNLOAD = \"ACTION_KEY_DOWNLOAD\"; // 下载"}},{"prefix":"\nimport {ref} from 'vue';\nexport default function () {\n  const themeData = ref(window.__oversea_ainvest__?.ainvestTheme || {});\n  window.EventBus.$on('theme.__oversea","infill":"_ainvest__', (res) => {\n    themeData.value = res\n  })","suffix":"\n  return themeData;\n}\n","relevantFile":"<file_path>packages/screener-aime-card/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/grid-card%20copy/src/api/config.ts\nconst httpRequest = window.httpRequestV2;\nexport const env = window.__oversea_ainvest__ && window.__oversea_ainvest__.ENV;\nexport const IS_RELEASE = env === 'production';\nexport const host = IS_RELEASE ? 'https://api.ainvest.com' : 'https://api-ainvest.myhexin.com';\n/**\n * 请求适配器\n */\nexport default function fetchAdapter<Res>(config:any) {\n  return new Promise<Res>((resolve, reject) => {\n    const sendConfig = { ...config };\n    httpRequest.send(sendConfig)\n      .then(res => {\n        const { data } = res;\n        resolve(data?.data);\n      })\n      .catch(error => {\n        reject(error?.response?.data || error);\n      });\n  });\n}\n<file_path>packages/screener-aime-card/index.ts\nimport screenerAimeCard from './src/index.vue';\n\nscreenerAimeCard.install = (App): void => {\n  App.component(screenerAimeCard.name, screenerAimeCard)\n}\nexport default screenerAimeCard\n<file_path>packages/common/hooks/useAssets.ts\n\n\nexport default function () {\n  const { ainvestTheme = {} } = window.__oversea_ainvest__ || {};\n  const isDark = ref(ainvestTheme.theme === 'dark');\n\n  /**\n   * 使用src/assets/images图片静态资源路径，自动根据当前黑白模式来匹配对应图片\n   * @param lightUrl 白天模式路径\n   * @param darkUrl 黑夜模式路径（默认为白天路径_dark）\n   * @param imgType 图片类型（默认为png）\n   * @returns\n   */\n  const useAssetsImg = (\n    lightUrl: string,\n    darkUrl: string = `${lightUrl}_dark`,\n    imgType: string = 'png',\n  ) => new URL(`../assets/images/${isDark.value ? darkUrl : lightUrl}.${imgType}`, import.meta.url).href;\n\n  return {\n    useAssetsImg,\n  };\n}","relevantFileList":[],"filePath":"packages/common/hooks/useTheme.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" _ainvest__', (data) => {","deepseek-chat-lite":"_ainvest__', (data) => {","deepseek-chat":"```\n// Start Generation Here\n  window.EventBus.$on('theme","copilot":"_ainvest__', (res) => {\n    themeData.value = res\n  })"}},{"prefix":"/**\n * 删除对象中参数为空的节点，注意会修改原对象\n * @param {Object} obj 要修改的对象\n * @returns 返回的对象\n */\nexport const delEmptyQueryNodes = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    value && typeof value === 'object' && delEmptyQueryNodes(value);\n    (value === '' || value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) && delete obj[key];\n  });\n  return obj;\n};\n\n/**\n * 深拷贝","infill":"对象\n * @param {Object} obj 要拷贝的对象\n * @returns 返回的对象","suffix":"\n */\nexport const cloneDeep = (obj) => {\n  return JSON.parse(JSON.stringify(obj));\n  ","relevantFile":"<file_path>src/store/constant.ts\n    name: '买卖建议',\n  },\n  {\n    id: '基本数据',\n    name: '基本数据',\n  },\n  {\n    id: '业绩分析',\n    name: '业绩分析',\n  },\n  {\n    id: '原因分析',\n    name: '原因分析',\n  },\n  {\n    id: '配置观点',\n    name: '配置观点',\n  },\n  {\n    id: '大势研判',\n    name: '大势研判',\n  },\n  {\n    id: '板块分析',\n    name: '板块分析',\n  },\n  {\n    id: '标的诊选',\n    name: '标的诊选',\n  },\n  {\n    id: '交易策略',\n    name: '交易策略',\n  },\n  {\n    id: '账户分析',\n    name: '账户分析',\n  },\n  {\n    id: '资产配置',\n    name: '资产配置',\n  },\n];\n\nexport const WITH_IMAGE = [\n  {\n    id: null,\n    name: '全部',\n  },\n  {\n    id: true,\n    name: '有图',\n  },\n];\n\nexport const OPERATE_STATUS = [\n  {\n    id: 1,\n    name: '置顶',\n    value: {","relevantFileList":[],"filePath":"src/utils/object.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 对象","deepseek-chat-lite":"对象","deepseek-chat":"```\n// Start Generation Here\n/**\n * 深拷贝\n","copilot":"对象\n * @param {Object} obj 要拷贝的对象\n * @returns 返回的对象"}},{"prefix":"/**\n * 删除对象中参数为空的节点，注意会修改原对象\n * @param {Object} obj 要修改的对象\n * @returns 返回的对象\n */\nexport const delEmptyQueryNodes = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    value && typeof value === 'object' && delEmptyQueryNodes(value);\n    (value === '' || value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) && delete obj[key];\n  });\n  return obj;\n};\n\n/**\n * 深拷贝对象\n * @param {Object} obj 要拷贝的对象\n * ","infill":"@returns 返回的对象","suffix":"\n */\nexport const cloneDeep = (obj) => {\n  return JSON.parse(JSON.stringify(obj));\n}\n","relevantFile":"<file_path>src/store/constant.ts\n    name: '买卖建议',\n  },\n  {\n    id: '基本数据',\n    name: '基本数据',\n  },\n  {\n    id: '业绩分析',\n    name: '业绩分析',\n  },\n  {\n    id: '原因分析',\n    name: '原因分析',\n  },\n  {\n    id: '配置观点',\n    name: '配置观点',\n  },\n  {\n    id: '大势研判',\n    name: '大势研判',\n  },\n  {\n    id: '板块分析',\n    name: '板块分析',\n  },\n  {\n    id: '标的诊选',\n    name: '标的诊选',\n  },\n  {\n    id: '交易策略',\n    name: '交易策略',\n  },\n  {\n    id: '账户分析',\n    name: '账户分析',\n  },\n  {\n    id: '资产配置',\n    name: '资产配置',\n  },\n];\n\nexport const WITH_IMAGE = [\n  {\n    id: null,\n    name: '全部',\n  },\n  {\n    id: true,\n    name: '有图',\n  },\n];\n\nexport const OPERATE_STATUS = [\n  {\n    id: 1,\n    name: '置顶',\n    value: {","relevantFileList":[],"filePath":"src/utils/object.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" @returns 拷贝后的对象","deepseek-chat-lite":"@returns 返回的拷贝对象","deepseek-chat":"```\n// Start Generation Here\n/**\n * 深拷贝对象","copilot":"@returns 返回的对象"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n  activ\n}\n\ninterface MedalItem {\n  // 勋章logo\n  logoUrl: string;\n  // 勋章id\n  medalId: number;\n  // 勋章名称\n  medalName: string;\n  // 勋章类型\n  medalType: string;\n  // 勋章过期时间，按","infill":"秒计算 0：永久","suffix":"\n  expirationTime: number;\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 秒计算","deepseek-chat-lite":"秒计算","deepseek-chat":"```\n// Start Generation Here\ninterface MedalItem {\n  // 勋","copilot":"秒计算 0：永久"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  // 用户勋章信息\n  userWearMedal?: MedalInfo,\n}\n\ninterface MedalInfo {\n  // 通用勋章\n  commonMedal?: MedalItem;\n  // 活动勋章\n  activi","infill":"tyMedal?: MedalItem;","suffix":"\n}\n\ninterface MedalItem {\n  // 勋章logo\n  logoUrl: string;\n  // 勋章id\n  medalId: number;\n  // 勋章名称\n  medalName: string;\n  // 勋章类型\n  medalType: string;\n  // 勋章过期时间，按秒计算 0：永久\n  expirationTime: number;\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" tyMedal?: Array<MedalItem>,","deepseek-chat-lite":"tyMedal?: MedalItem;","deepseek-chat":"```\n// Start Generation Here\ninterface MedalInfo {\n  // 通用","copilot":"tyMedal?: MedalItem;"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  // 用户勋章信息\n  userWearMedal?: MedalInfo,\n}\n\ninterface MedalInfo {\n  // 通用勋章\n  commonMedal?: MedalItem;\n  // ","infill":"活动勋章","suffix":"\n  activityMedal?: MedalItem;\n}\n\ninterface MedalItem {\n  // 勋章logo\n  logoUrl: string;\n  // 勋章id\n  medalId: number;\n  // 勋章名称\n  medalName: string;\n  // 勋章类型\n  medalType: string;\n  // 勋章过期时间，按秒计算 0：永久\n  expirationTime: number;\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 直播勋章","deepseek-chat-lite":"平台勋章","deepseek-chat":"```\n// Start Generation Here\n  // 活动勋章\n  activity","copilot":"活动勋章"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  // 用户勋章信息\n  userWearMedal?: MedalInfo,\n}\n\ninterface MedalInfo {\n  // 通用勋章\n  commonMedal?: MedalItem;\n  // 活动勋章\n  activityMedal?: MedalItem;\n  // 用户id\n  userId: ","infill":"number;","suffix":"\n}\n\ninterface MedalItem {\n  // 勋章logo\n  logoUrl: string;\n  // 勋章id\n  medalId: number;\n  // 勋章名称\n  medalName: string;\n  // 勋章类型\n  medalType: string;\n  // 勋章过期时间，按秒计算 0：永久\n  expirationTime: number;\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" number,","deepseek-chat-lite":"number;","deepseek-chat":"```\n// Start Generation Here\n  userId: number;\n  // ","copilot":"number;"}},{"prefix":"import { IDataSource, ICascaderData } from 'types/data-source'\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: Object;\n  id: string;\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  // regionType?: string[];\n  // region?: string[];\n  dataSource: {\n    sele","infill":"ctedDataSource: IDataSource;\n    selectedData","suffix":"\n  }\n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}\n","relevantFile":"<file_path>src/hooks/useTriggerData.ts\nimport { CascaderData } from '@/components/Common/interface';\nimport { IDataSourceConfigForDisplay } from 'types/data-source'\n\nimport { ref } from 'vue';\n\nconst allTableData = ref<Datasource[]>([]);   // 所有数据表\nconst noParamsTableData = ref<Datasource[]>([]);  // 无参数据表\nconst parameterlessTable = ref<CascaderData[]>([]);  // 无参数据表级联数据\nconst allTable = ref<CascaderData[]>([]); // 所有数据表级联数据\n// const dataSourceConfigForDisplay = ref<IDataSourceConfigForDisplay[]>([]); // 用于展示的数据源\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n<file_path>types/data-source.ts\n\n\n/**\n * 数据源\n */\nexport interface IDataSource {\n  id: number;\n  name: string;\n  key: string;\n  type: number;\n  status: number;\n  fieldList: string[];\n  protocolFormat: { key: string; value: string; description: string; varName: string }[];\n}\n\n/**级联数据（根据无参数据源进行处理获取） */\nexport interface ICascaderData {\n  value: string;\n  label: string;\n  isLeaf?: boolean;\n  loading?: boolean;\n  children?: ICascaderData[];\n}\n\nexport interface IFieldMap {\n  sourceFieldName: string; //数据源字段展示名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  sourceFieldKey: string; //数据源字段传参标识\n  inputFieldName: string; //输入字段名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  inputFieldKey: string; //输入字段标识\n  inputFieldValue: string; //输入测试案例\n}\n\nexport interface IDataSourceConfig {\n  dataSourceId: string; //数据源id\n  dataSourceName: string; //数据源名称\n  fieldMappings: IFieldMap[];\n}\n\nexport interface IFieldMapping {\n  /**\n   *  数据源名称,给前端用，可以自定义，后端不管内容是什么，只做保存\n   *  此处的表是有参数据源表\n   */\n  sourceFieldName: string;\n  /**\n   * 数据源key，格式`$_表id_protocalFormat.key`\n   * 此处的表是有参数据源表\n   */\n  sourceFieldKey: string;\n  /**\n   * 无参数据源的出参，无参表名.fileldList中的某个数据。给前端用，可以自定义，后端不管内容是什么，只做保存\n   */\n  inputFieldName: string; //输入字段名称\n  /**\n   * 无参数据源的出参，格式为：$_无参表id_fileldList中的某个数据\n   */\n  inputFieldKey: string[]; // string[]类型为了适配级联类型数据\n  inputFieldValue: string; //输入测试案例\n  placeholder: string; // 级联默认展示内容\n}\n<file_path>src/hooks/useRegionData.ts\n    area: areaMap.TITLE,\n    description: '标题',\n    components: [],\n  },\n  {\n    area: areaMap.SUMMARY,\n    description: '摘要',\n    components: [],\n  },\n  {\n    area: areaMap.CONTENT,\n    description: '正文',\n    areaConfig: {\n      polishStyle: '不润色',\n      aiConfig: {\n        model: '',\n        temperature: 0,\n        maxToken: 0,\n        account: '',\n        business: '',\n        translateType: 'text',\n      },\n      prompt: '',\n    },\n    components: [],\n  },\n]);\nconst regionDataLoading = ref<Record<areaMap, boolean>>({\n  TITLE: false,\n  SUMMARY: false,\n  CONTENT: false,\n});\nexport const useRegionData = () => {\n  const addRegionData = (\n    regionData: RegionConfig,\n    component: ComponentConfig,\n    dragEndIndex: number | null\n  ) => {\n    const { area } = regionData;\n    const { type, resultPath, editorPath, id, key, region, icon, name } = component;\n\n    // 智能文本组件的组件默认初始配置\n    const textComponentConfig = {\n      executeConfig: {\n        // 标题或者摘要区域，默认不开启【内容单独成段】\n        singleParagraph: area === 'CONTENT' ? 1 : 0,\n      }\n    }\n\n    const addComponent = () => {\n      const config = {\n        type,\n        name: '',\n        editorPath,\n        id: id!,\n        key,\n        resultPath,\n        componentCode: window[key]?.default,\n        componentConfig: type === 'TEXT' ? textComponentConfig : {},\n        extraData: {","relevantFileList":[],"filePath":"src/components/Middle/interface/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ct: IDataSource;","deepseek-chat-lite":"cted: IDataSource[];","deepseek-chat":"```\n// Start Generation Here\n    selectedDataSource: IDataSource | null;","copilot":"ctedDataSource: IDataSource;\n    selectedData"}},{"prefix":"import { IDataSource, ICascaderData } from 'types/data-source'\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: Object;\n  id: string;\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  // regionType?: string[];\n  // region?: string[];\n  dataSource: {\n    selectedDataSource: IDataSource;  // 选中的数据源\n    selectedDataSourceCascaderDa","infill":"ta: ICascaderData[];  // 选中的数据源级联数据","suffix":"\n  }\n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}\n","relevantFile":"<file_path>src/hooks/useTriggerData.ts\nimport { CascaderData } from '@/components/Common/interface';\nimport { IDataSourceConfigForDisplay } from 'types/data-source'\n\nimport { ref } from 'vue';\n\nconst allTableData = ref<Datasource[]>([]);   // 所有数据表\nconst noParamsTableData = ref<Datasource[]>([]);  // 无参数据表\nconst parameterlessTable = ref<CascaderData[]>([]);  // 无参数据表级联数据\nconst allTable = ref<CascaderData[]>([]); // 所有数据表级联数据\n// const dataSourceConfigForDisplay = ref<IDataSourceConfigForDisplay[]>([]); // 用于展示的数据源\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n<file_path>types/data-source.ts\n\n\n/**\n * 数据源\n */\nexport interface IDataSource {\n  id: number;\n  name: string;\n  key: string;\n  type: number;\n  status: number;\n  fieldList: string[];\n  protocolFormat: { key: string; value: string; description: string; varName: string }[];\n}\n\n/**级联数据（根据无参数据源进行处理获取） */\nexport interface ICascaderData {\n  value: string;\n  label: string;\n  isLeaf?: boolean;\n  loading?: boolean;\n  children?: ICascaderData[];\n}\n\nexport interface IFieldMap {\n  sourceFieldName: string; //数据源字段展示名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  sourceFieldKey: string; //数据源字段传参标识\n  inputFieldName: string; //输入字段名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  inputFieldKey: string; //输入字段标识\n  inputFieldValue: string; //输入测试案例\n}\n\nexport interface IDataSourceConfig {\n  dataSourceId: string; //数据源id\n  dataSourceName: string; //数据源名称\n  fieldMappings: IFieldMap[];\n}\n\nexport interface IFieldMapping {\n  /**\n   *  数据源名称,给前端用，可以自定义，后端不管内容是什么，只做保存\n   *  此处的表是有参数据源表\n   */\n  sourceFieldName: string;\n  /**\n   * 数据源key，格式`$_表id_protocalFormat.key`\n   * 此处的表是有参数据源表\n   */\n  sourceFieldKey: string;\n  /**\n   * 无参数据源的出参，无参表名.fileldList中的某个数据。给前端用，可以自定义，后端不管内容是什么，只做保存\n   */\n  inputFieldName: string; //输入字段名称\n  /**\n   * 无参数据源的出参，格式为：$_无参表id_fileldList中的某个数据\n   */\n  inputFieldKey: string[]; // string[]类型为了适配级联类型数据\n  inputFieldValue: string; //输入测试案例\n  placeholder: string; // 级联默认展示内容\n}\n<file_path>src/hooks/useRegionData.ts\n    area: areaMap.TITLE,\n    description: '标题',\n    components: [],\n  },\n  {\n    area: areaMap.SUMMARY,\n    description: '摘要',\n    components: [],\n  },\n  {\n    area: areaMap.CONTENT,\n    description: '正文',\n    areaConfig: {\n      polishStyle: '不润色',\n      aiConfig: {\n        model: '',\n        temperature: 0,\n        maxToken: 0,\n        account: '',\n        business: '',\n        translateType: 'text',\n      },\n      prompt: '',\n    },\n    components: [],\n  },\n]);\nconst regionDataLoading = ref<Record<areaMap, boolean>>({\n  TITLE: false,\n  SUMMARY: false,\n  CONTENT: false,\n});\nexport const useRegionData = () => {\n  const addRegionData = (\n    regionData: RegionConfig,\n    component: ComponentConfig,\n    dragEndIndex: number | null\n  ) => {\n    const { area } = regionData;\n    const { type, resultPath, editorPath, id, key, region, icon, name } = component;\n\n    // 智能文本组件的组件默认初始配置\n    const textComponentConfig = {\n      executeConfig: {\n        // 标题或者摘要区域，默认不开启【内容单独成段】\n        singleParagraph: area === 'CONTENT' ? 1 : 0,\n      }\n    }\n\n    const addComponent = () => {\n      const config = {\n        type,\n        name: '',\n        editorPath,\n        id: id!,\n        key,\n        resultPath,\n        componentCode: window[key]?.default,\n        componentConfig: type === 'TEXT' ? textComponentConfig : {},\n        extraData: {","relevantFileList":[],"filePath":"src/components/Middle/interface/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ta: ICascaderData[];  // 树形数据源","deepseek-chat-lite":"ta: ICascaderData[]; // 数据源级联数据","deepseek-chat":"```\n// Start Generation Here\ntaSourceCascaderData: ICasc","copilot":"ta: ICascaderData[];  // 选中的数据源级联数据"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  // 用户勋章信息\n  userWearMedal?: MedalInfo,\n}\n\n// 用户勋章信息\ninterface MedalInfo {\n  // 通用勋章\n  commonMedal?: MedalItem;\n  // 活动勋章\n  activityMedal?: MedalItem;\n  // 用户id\n  userId: number;\n}\n\n// 勋章信息\ninterface MedalItem {\n  // 勋章logo\n  logoUrl: string;\n  // 勋章id\n  medalId: number;\n  // 勋章名称\n  medalName: string;\n  // 勋章类型 ","infill":"common：通用 activity：活动 history：历史","suffix":"\n  medalType: 'common' | 'activity' | 'history';\n  // 勋章过期时间，按秒计算 0：永久\n  expirationTime: number;\n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" common：通用，activity：活动，history：历史","deepseek-chat-lite":"历史勋章","deepseek-chat":"```\n// Start Generation Here\n  // 勋章类型\n  medal","copilot":"common：通用 activity：活动 history：历史"}},{"prefix":"export const ACTION_KEY_OPEN = \"ACTION_KEY_OPEN\"; // 打开\n\nexport const ACTION_KEY_RENAME = \"ACTION_KEY_RENAME\"; // 重命名\n\nexport const ACTION_KEY_DELETE = \"ACTION_KEY_DELETE\"; // 删除\n\nexport const ACTION_KEY_EXPORT_WORD = \"ACTION_KEY_EXPORT_WORD\"; // 导出文档","infill":"export const ACTION_KEY_PUBLISH = \"ACTION_KEY_PUBLISH\"; // 同步推广","suffix":"\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/assets/constants/index.ts\n  SHORT_VIDEO: 'short-video',\n};\n\nexport const CREATION_TREE_DATA = [\n  {\n    title: window.$t(\"全部类型\"),\n    key: MATERIAL_FILTER_ALL,\n    children: [\n      {\n        title: window.$t(\"热点解读\"),\n        key: CREATE_TYPE.HOT,\n      },\n      {\n        title: window.$t(\"投资早报\"),\n        key: CREATE_TYPE.INVESTMENT,\n      },\n      {\n        title: window.$t(\"收盘点评\"),\n        key: CREATE_TYPE.CLOSING,\n      },\n      {\n        title: window.$t(\"周期报告\"),\n        key: CREATE_TYPE.PERIODIC,\n      },\n      {\n        title: window.$t(\"短视频脚本\"),\n        key: CREATE_TYPE.SHORT_VIDEO,\n      },\n    ],\n  },\n];\n\nexport const MATERIAL_ACTION_SHEET = [\n>>>>>>> Stashed changes\n  {\n    icon: \"open\",\n    label: window.$t(\"打开\"),\n    key: ACTION_KEY_OPEN,\n  },\n  {\n    icon: \"edit\",\n    label: window.$t(\"重命名\"),\n    key: ACTION_KEY_RENAME,\n  },\n  {\n<<<<<<< Updated upstream\n    icon: \"export-word\",\n    label: window.$t(\"导出文档\"),\n    key: ACTION_KEY_EXPORT_WORD,\n  },\n  {\n=======\n>>>>>>> Stashed changes\n    icon: \"delete\",\n    label: window.$t(\"删除\"),\n    key: ACTION_KEY_DELETE,\n    slot: \"footer\",\n  },\n];","relevantFileList":[],"filePath":"source/fund-writing-platform/src/assets/constants/actionKey.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\nexport const ACTION_KEY_SHARE =","copilot":"export const ACTION_KEY_PUBLISH = \"ACTION_KEY_PUBLISH\"; // 同步推广"}},{"prefix":"                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              event: {\n                eventId: '2',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 0,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              event: {\n                eventId: '3',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 1,\n                status: 2,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              event: {\n                eventId: '4',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n                  '中国中钢',\n                ],\n                orgIds: ['orgIds'],\n                startDate: '2021-10-10',\n                endDate: '2021-10-10',\n                tags: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                ],\n                online: 0,\n                status: 1,\n                isvalid: 1,\n              },\n              views: [\n                {\n                  view: 'view',\n                  lists: [\n                    {\n                      content: [\n                        {\n                          text: 'text',\n                          seq: 1,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              event: {\n                eventId: '13',\n                title: '美联储“预期管理”进入新阶段：不排除暂停加息，保留加息选项，驳斥降息预期',\n                date: '2021-10-10',\n                background:\n                  '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\n                topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\n                searchKey: [\n                  '同花顺',\n                  '中信证券',\n                  '贵州茅台',\n                  '中国平安',\n                  '招商银行',\n                  '中国石化',\n                  '中国石油',\n                  '中国银行',\n                  '中国建筑',\n                  '中国中铁',\n                  '中国中车',\n                  '中国中冶',\n                  '中国中化',\n                  '中国中兵',\n                  '中国中航',\n                  '中国中电',\n                  '中国中煤',\n                  '中国中铝',\n ","infill":"10:10:10","suffix":"',\r\n            background:\r\n              '中央金融工作会议10月30日至31日在北京举行，延续了此前对金融工作的定位，强调坚定不移走中国特色金融发展之路，加快建设中国特色现代金融体系。我们不妨从统筹“发展与安全”出发，多个维度理解中国特色的现代金融体系。在发展方面，会',\r\n            topicPrompt: '请问下美联储xxxxx大撒大撒大撒啊大大撒旦',\r\n            searchKey: [\r\n              '同花顺',\r\n              '中信证券',\r\n              '贵州茅台',\r\n              '中国平安',\r\n              '招商银行',\r\n              '中国石化',\r\n              '中国石油',\r\n              '中国银行',\r\n              '中国建筑',\r\n              '中国中铁',\r\n              '中国中车',\r\n              '中国中冶',\r\n              '中国中化',\r\n              '中国中兵',\r\n              '中国中航',\r\n              '中国中电',\r\n              '中国中煤',\r\n              '中国中铝',\r\n              '中国中钢',\r\n            ],\r\n            orgIds: ['orgIds'],\r\n            startDate: '2021-10-10',\r\n            endDate: '2021-10-10',\r\n            tags: [\r\n              '同花顺',\r\n              '中信证券',\r\n              '贵州茅台',\r\n              '中国平安',\r\n              '招商银行',\r\n              '中国石化',\r\n              '中国石油',\r\n              '中国银行',\r\n            ],\r\n            online: 1,\r\n            status: 1,\r\n            isvalid: 1,\r\n          },\r\n          views: [\r\n            {\r\n              view: 'view',\r\n              lists: [\r\n                {\r\n                  content: [\r\n                    {\r\n                      text: 'text',\r\n                      seq: 1,\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    },\r\n  },\r\n];\r\n","relevantFile":"","relevantFileList":[],"template":"typescript","multiRes":{"CodeQwen1.5-7B":"                  '中国中钢',","deepseek-chat-lite":"                 '中国中钢',","deepseek-chat":"```\n// Start Generation Here\n{\n  event: {\n    event","copilot":"10:10:10"}},{"prefix":"/**\n * 删除对象中参数为空的节点，注意会修改原对象\n * @param {Object} obj 要修改的对象\n * @returns 返回的对象\n */\nexport const delEmptyQueryNodes = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    value && typeof value === 'object' && delEmptyQueryNodes(value);\n    (value === '' || value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) && delete obj[key];\n  });\n  return obj;\n};\n\n/**\n * 深拷贝对象或数组\n * ","infill":"@param {Object} obj 要拷贝的对象\n * @returns 返回的对象\n */\n","suffix":"\n","relevantFile":"<file_path>src/store/constant.ts\n    name: '买卖建议',\n  },\n  {\n    id: '基本数据',\n    name: '基本数据',\n  },\n  {\n    id: '业绩分析',\n    name: '业绩分析',\n  },\n  {\n    id: '原因分析',\n    name: '原因分析',\n  },\n  {\n    id: '配置观点',\n    name: '配置观点',\n  },\n  {\n    id: '大势研判',\n    name: '大势研判',\n  },\n  {\n    id: '板块分析',\n    name: '板块分析',\n  },\n  {\n    id: '标的诊选',\n    name: '标的诊选',\n  },\n  {\n    id: '交易策略',\n    name: '交易策略',\n  },\n  {\n    id: '账户分析',\n    name: '账户分析',\n  },\n  {\n    id: '资产配置',\n    name: '资产配置',\n  },\n];\n\nexport const WITH_IMAGE = [\n  {\n    id: null,\n    name: '全部',\n  },\n  {\n    id: true,\n    name: '有图',\n  },\n];\n\nexport const OPERATE_STATUS = [\n  {\n    id: 1,\n    name: '置顶',\n    value: {","relevantFileList":[],"filePath":"src/utils/object.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" @param {Object|Array} obj 拷贝对象","deepseek-chat-lite":"@param {Object|Array} obj 要拷贝的对象或数组","deepseek-chat":"```\n// Start Generation Here\n/**\n * 深拷贝对象","copilot":"@param {Object} obj 要拷贝的对象\n * @returns 返回的对象\n */\n"}},{"prefix":"/**\n * 删除对象中参数为空的节点，注意会修改原对象\n * @param {Object} obj 要修改的对象\n * @returns 返回的对象\n */\nexport const delEmptyQueryNodes = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    value && typeof value === 'object' && delEmptyQueryNodes(value);\n    (value === '' || value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) && delete obj[key];\n  });\n  return obj;\n};\n\n/**\n * 深拷贝\n * @param {Object} obj 要拷贝的对象\n * ","infill":"@returns 返回的对象\n */\n","suffix":"\n","relevantFile":"<file_path>src/store/constant.ts\n    name: '买卖建议',\n  },\n  {\n    id: '基本数据',\n    name: '基本数据',\n  },\n  {\n    id: '业绩分析',\n    name: '业绩分析',\n  },\n  {\n    id: '原因分析',\n    name: '原因分析',\n  },\n  {\n    id: '配置观点',\n    name: '配置观点',\n  },\n  {\n    id: '大势研判',\n    name: '大势研判',\n  },\n  {\n    id: '板块分析',\n    name: '板块分析',\n  },\n  {\n    id: '标的诊选',\n    name: '标的诊选',\n  },\n  {\n    id: '交易策略',\n    name: '交易策略',\n  },\n  {\n    id: '账户分析',\n    name: '账户分析',\n  },\n  {\n    id: '资产配置',\n    name: '资产配置',\n  },\n];\n\nexport const WITH_IMAGE = [\n  {\n    id: null,\n    name: '全部',\n  },\n  {\n    id: true,\n    name: '有图',\n  },\n];\n\nexport const OPERATE_STATUS = [\n  {\n    id: 1,\n    name: '置顶',\n    value: {","relevantFileList":[],"filePath":"src/utils/object.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" @returns 拷贝后的对象","deepseek-chat-lite":"@returns 拷贝后的对象","deepseek-chat":"```\n// Start Generation Here\n/**\n * 深拷贝\n","copilot":"@returns 返回的对象\n */\n"}},{"prefix":"/**\n * 删除对象中参数为空的节点，注意会修改原对象\n * @param {Object} obj 要修改的对象\n * @returns 返回的对象\n */\nexport const delEmptyQueryNodes = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    const value = obj[key];\n    value && typeof value === 'object' && delEmptyQueryNodes(value);\n    (value === '' || value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) && delete obj[key];\n  });\n  return obj;\n};\n\n/**\n * 深拷贝对象或数组\n * @param {Object|Array} obj 要拷贝的对象或数组\n * @returns 返回拷贝的对象或数组\n  */\nexport const cloneDeep = (obj) => {","infill":"if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  const newObj = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach((key) => {\n    newObj[key] = cloneDeep(obj[key]);\n  });\n  return newObj;\n};\n","suffix":"\n","relevantFile":"<file_path>src/store/constant.ts\n    name: '买卖建议',\n  },\n  {\n    id: '基本数据',\n    name: '基本数据',\n  },\n  {\n    id: '业绩分析',\n    name: '业绩分析',\n  },\n  {\n    id: '原因分析',\n    name: '原因分析',\n  },\n  {\n    id: '配置观点',\n    name: '配置观点',\n  },\n  {\n    id: '大势研判',\n    name: '大势研判',\n  },\n  {\n    id: '板块分析',\n    name: '板块分析',\n  },\n  {\n    id: '标的诊选',\n    name: '标的诊选',\n  },\n  {\n    id: '交易策略',\n    name: '交易策略',\n  },\n  {\n    id: '账户分析',\n    name: '账户分析',\n  },\n  {\n    id: '资产配置',\n    name: '资产配置',\n  },\n];\n\nexport const WITH_IMAGE = [\n  {\n    id: null,\n    name: '全部',\n  },\n  {\n    id: true,\n    name: '有图',\n  },\n];\n\nexport const OPERATE_STATUS = [\n  {\n    id: 1,\n    name: '置顶',\n    value: {","relevantFileList":[],"filePath":"src/utils/object.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\n  if (obj === null || obj ===","copilot":"if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  const newObj = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach((key) => {\n    newObj[key] = cloneDeep(obj[key]);\n  });\n  return newObj;\n};\n"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',","infill":"edit: prefix + '/list/edit',\r\n  detail: prefix + '/list/detail',","suffix":"\r\n};\r\nexport const getListDataApi = (params: Recordable) => {\r\n  return http.get<ListResponse>(apis.list, params);\r\n};\r\n\r\nexport const editListDataApi = (\r\n  data: Recordable,\r\n  config = {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n    },\r\n  }\r\n) => {\r\n  return http.post<ListItem>(apis, data, config);\r\n};\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(prefix + '/list/detail', params);\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/typings/global.d.ts\nimport { MessageMethod } from \"thsc-design-vue/es/message\";\nimport type { LangTypes } from \"@/locale/lang/en\";\nimport type { Binding } from \"@/directive/taPoint\";\ndeclare global {\n\tinterface ViteEnv {\n\t\tVITE_PUBLIC_PATH: string;\n\t\tVITE_APP_TITLE: string;\n\t\tVITE_VISUALIZER: boolean;\n\t\tVITE_HOST: string;\n\t\tVITE_PORT: number;\n\t}\n\ttype Recordable<T = any> = Record<string, T>;\n\n\ttype ObjKeysToUnion<T, P extends string = \"\"> = T extends object\n\t\t? {\n\t\t\t\t[K in keyof T]: ObjKeysToUnion<\n\t\t\t\t\tT[K],\n\t\t\t\t\tP extends \"\" ? `${K & string}` : `${P}.${K & string}`\n\t\t\t\t>;\n\t\t  }[keyof T]\n\t\t: P;\n\n\ttype FlattenArray<T> = T extends Array<infer U> ? U : T;\n\n\tinterface ImportMetaEnv extends ViteEnv {\n\t\t__: unknown;\n\t}\n\n\n\tinterface Window {\n\t\tlang: any;\n\t\t$t(key: ObjKeysToUnion<LangTypes>): string;\n\t\t$message: MessageMethod;\n\t\tQRCode: any;\n\t\topenPageForStar(params: Recordable): void;\n\t\tAPI: any;\n\t\tTA: any;\n\t\t$ta(params: Binding): void;\n\t\tMoveBall: any;\n\t\thandleCancelPendingRequest: (url: string) => void;\n\t\tcancelPendingRequest: (url: string) => void;\n\t}\n\n\ttype NumberAndString = string | number;\n}\n<file_path>src/main/resources/websource/financial_hots/src/constants/columns.ts\nimport type { TableColumnData } from 'thsc-design-vue/es/table';\nimport { h } from 'vue';\nimport { Tag } from 'thsc-design-vue';\n\nexport interface Column extends TableColumnData {\n  minWidth?: number;\n}\nconst columns: Column[] = [\n  {\n    title: '事件ID',\n    dataIndex: 'eventId',\n    align: 'center',\n    fixed: 'left',\n    width: 80,\n    render({ record }) {\n      return record.eventId || '--';\n    },\n  },\n  {\n    title: '事件日期',\n    dataIndex: 'date',\n    align: 'center',\n    fixed: 'left',\n    width: 96,\n    render({ record }) {\n      return record.date || '--';\n    },\n  },\n  {\n    title: '事件标题',\n    dataIndex: 'title',\n    align: 'left',\n    fixed: 'left',\n    width: 320,\n    ellipsis: true,\n    render({ record }) {\n      return h('span', { title: record.title }, record.title);\n    },\n  },\n  {\n    title: '事件背景',\n    dataIndex: 'background',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.background }, record.background);\n    },\n    ellipsis: true,\n  },\n  {\n    title: 'prompt',\n    dataIndex: 'topicPrompt',\n    align: 'left',\n    width: 200,\n    render({ record }) {\n      return h('span', { title: record.topicPrompt }, record.topicPrompt);\n    },\n    ellipsis: true,\n  },\n  {\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\n  detail: prefix + '/detail',\n","copilot":"edit: prefix + '/list/edit',\r\n  detail: prefix + '/list/detail',"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: ","infill":"MedalItem,","suffix":"\n}\n\ninterface MedalItem {\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" Array<MedalItem>,","deepseek-chat-lite":"MedalItem,","deepseek-chat":"```\n// Start Generation Here\n  commonMedal: {\n    //","copilot":"MedalItem,"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId: number;\n  medalName: string;\n  medalType: string","infill":";\n  acquisitionCriteri","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ,","deepseek-chat-lite":",","deepseek-chat":"```\n// Start Generation Here\ninterface MedalItem {\n  logoUrl:","copilot":";\n  acquisitionCriteri"}},{"prefix":"import { FrameAnimation } from '..';\nimport { ActionConfig, AnimationConfig, AnimationType, Point } from '../../types';\nimport { generateId, getNodeById, handleActionToAnimation, mergeAction } from '../../utils';\n\nconst getControlPoint = (sourcePoint: Point, targetPoint: Point, offset: number): Point => {\n  let middleX = (sourcePoint[0] + targetPoint[0]) / 2;\n  let middleY = (sourcePoint[1] + targetPoint[1]) / 2;\n  return [middleX, middleY + offset];\n};\n/**\n * @param config\n *\n * config","infill":"入参格式：","suffix":"\r\n *  {\r\n *  type: AnimationType.Bezier,\r\n *  config: {\r\n *   nodes:[\r\n *     {\r\n *        id:'',\r\n *        targetPosition:[x,y],\r\n *        duration: 持续时间,默认1s, 会占用后续时间\r\n *        offset: 0, y轴偏移量 默认0  往上-10 往下10\r\n *     }\r\n *   ]\r\n *  }\r\n * }\r\n * @returns\r\n */\r\nexport function bezierAnimation({\r\n  action,\r\n  time,\r\n  context,\r\n}: {\r\n  action: ActionConfig;\r\n  context: FrameAnimation;\r\n  time: number;\r\n}): AnimationConfig[] {\r\n  const { config } = action;\r\n  const { nodes } = config;\r\n  //time为key,处理后的actions为value\r\n  let final = {};\r\n  for (let nodeConfig of nodes) {\r\n    const { targetPosition, offset = 0, duration = 1000, id } = nodeConfig;\r\n    const oriNode = getNodeById(id, context.allNodes);\r\n    if (oriNode && targetPosition) {\r\n      //获取中间控制点\r\n      const controlPoint = getControlPoint(oriNode.position, targetPosition, offset);\r\n      \r\n      let key = generateId(id);\r\n      let beforeConfig = {\r\n        id,\r\n        moveAlongTheCurve: {\r\n          key,\r\n          point1: oriNode.position,\r\n          point2: targetPosition,\r\n          cpoint: controlPoint,\r\n          percent: 0,\r\n        },\r\n      };\r\n      let afterConfig = {\r\n        id,\r\n        moveAlongTheCurve: {\r\n          key,\r\n          point1: oriNode.position,\r\n          point2: targetPosition,\r\n          cpoint: controlPoint,\r\n          percent: 1,\r\n        },\r\n      };\r\n      mergeAction(final, time, beforeConfig, AnimationType.BezierThrough);\r\n      mergeAction(final, time + duration, afterConfig, AnimationType.BezierThrough);\r\n    }\r\n  }\r\n  return handleActionToAnimation(final);\r\n}\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/treeDeleteNode.ts\nimport { ActionConfig, AnimationConfig, AnimationType } from \"../../types\";\nimport { NodeBase } from \"../../Node\";\nimport {\n  deleteLineKey,\n  handleActionToAnimation,\n  mergeAction,\n} from \"../../utils\";\n\n/**\n * 处理  treeDeleteNode animation  不同于普通动画  需要修改动画配置list\n * @param animationList\n * @returns animationList \n * 主要处理 树delete节点动画 主要处理线  基于(fade实现 1-0 ),会占用后续时间,请自动计算时间\n * 会在node的data里面塞入一个deleteLine属性, 在最后应用动画到节点时会判断该属性,删除node的line,\n * 后续如果触发treeAddNode动画 去删除deleteLine 属性 \n  配置同add 尽量相同\n  * {\n        type: AnimationType.TreeDeleteNode,\n        //不需要value\n        config: {},\n          {\n            nodes:[\n              {\n              node, // node实例 \n            fadeTime:500// 隐藏时间\n              }\n            ]\n       \n          },\n        }\n    },\n */\n\nexport function treeDeleteNodeAnimation({\n  action,\n  time,\n}:{action:ActionConfig,time:number}): AnimationConfig[] {\n  let final = {};\n  const { config } = action;\n  const { nodes } = config;\n\n  for (let nodeConfig of nodes) {\n    const { node, fadeTime = 500 }: { node: NodeBase; fadeTime: number } =\n      nodeConfig as unknown as { node: NodeBase; fadeTime: number };\n    node.data[deleteLineKey] = true;\n    let configTime = time;\n    let beforeConfig = {\n      value: 1,\n      id: node.id,\n      onlyLine: true,\n    };\n    mergeAction(final, configTime, beforeConfig, AnimationType.Fade);\n    configTime = time + fadeTime;\n\n    let afterConfig = {\n      value: 0,\n      id: node.id,\n      onlyLine: true,\n    };\n    mergeAction(final, configTime, afterConfig, AnimationType.Fade);\n<file_path>src/core/Animation/animationImpl/lottie.ts\nimport { FrameAnimation } from '..';\nimport { ActionConfig, AnimationConfig } from '../../types';\nimport { getNodeById } from '../../utils';\n/**\n * @param\n *  独立动画 建议配在已有动画的action里面,  不走正常的动画时间线\n *  lottie动画 直接塞到node,不返回内容\n *\n *  action入参格式：\n *  {\n *  type: AnimationType.Lottie,\n *  config: {\n *   nodes:[\n *     {\n *        id:'',\n *        暂时简化,2种场景\n *            1)从time1[从头开始]播放到time2暂停;  times:[2400,5400]\n *            2)从头开始[从time3]开始播,播完为止;   times:[3000]\n *        times:[],\n *        data: json  //lottie数据\n *        keep:boolean        // 用于lottie动画在结尾是否保留\n *        setIgnore:boolean //  用于初始帧添加ignore了,后续设置ignore为false\n *     }\n *   ]\n *  }\n * }\n * @returns\n */\nexport function lottieAnimation({\n  action,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n}): AnimationConfig[] {\n  const { config } = action;\n  const { nodes } = config;\n  for (let nodeConfig of nodes) {\n    const { times, id, data, keep = true, setIgnore = false } = nodeConfig;\n    const oriNode = getNodeById(id, context.allNodes);\n    if (oriNode && times && data) {\n      if (times.length === 1) {\n        // 从头开始[从time3]开始播,播完为止;   times:[3000]\n        let animationPlay = {\n          time: 0,\n          lottie: [\n            {\n              key: id,\n              data,\n              keep,\n              atTime: times[0],\n              action: 'goToAndStop',\n            },\n          ],\n        };\n        let animationPause = {\n          time: 1,\n          lottie: [\n            {\n              key: id,\n<file_path>src/core/Animation/animationImpl/blink.ts\nimport { ActionConfig, AnimationConfig, AnimationType } from '../../types';\nimport { handleActionToAnimation, mergeAction } from '../../utils';\n\n/**\n * 处理 blink animation  高级动画\n * @param animationList\n * @returns animationList\n *\n * 闪烁动画须知 闪烁动画的time 是动画开始的时间\n * 闪n次 就产生2n+1次时间 如间隔100ms 闪2次 即500(配置时间)-600-700-800-900\n * 基于fade实现 根据repeatCount 和 interval 会占用后续时间,请自动计算时间\n * \n * config入参格式：\n * {\n        type: AnimationType.Blink,\n        config: {\n          nodes: [\n            {\n              id: \"gk-main-node\",\n              //{repeatCount = 2, interval = 225, opacity = 0.2 }\n            },\n          ],\n        },\n    },\n */\n\nexport function blinkAnimation({\n  action,\n  time,\n}: {\n  action: ActionConfig;\n  time: number;\n}): AnimationConfig[] {\n  const final = {};\n  const { config } = action;\n  const { nodes } = config;\n\n  for (const nodeConfig of nodes) {\n    // 默认闪烁2次 间隔100ms 从1(暂时写死 简化逻辑)变化到传入的透明度 默认0.2\n    const { repeatCount = 2, interval = 225, opacity = 0.2, id } = nodeConfig;\n    const count = 2 * repeatCount + 1;\n    // 遍历每个动画次数\n    for (let index = 0; index < count; index++) {\n      const configTime = time + interval * index;\n      // 创建动作配置\n      const actionConfig = {\n        id,\n        value: index % 2 === 0 ? 1 : opacity,\n        withLine: false,\n      };\n      // 如果索引不是第一个也不是最后一个，则不参与其他节点的动画序列，需要对于其他节点忽略\n      const shouldIgnore = index !== 0 && index !== count - 1;\n      mergeAction(final, configTime, actionConfig, AnimationType.Fade, shouldIgnore);\n    }\n  }\n  return handleActionToAnimation(final);\n}\n<file_path>src/core/Animation/animationImpl/treeMove.ts\nimport { FrameAnimation } from '..';\nimport {\n  ActionConfig,\n  AnimationConfig,\n  AnimationType,\n  NodesActionConfig,\n  Point,\n} from '../../types';\nimport { getNodeById, handleActionToAnimation, mergeAction } from '../../utils';\n\nconst handlePoint = ({\n  oriNode,\n  mainValue,\n  targetValue,\n}: {\n  oriNode: NodeBase;\n  mainValue: Point;\n  targetValue: Point;\n}) => {\n  const linePoints = oriNode.line.lineRender.render.opts.shape.points;\n  const getPointsInTreeMove = (oriPoints: number[][], value: Point) => [\n    [oriPoints[0][0] + value[0], oriPoints[0][1] + value[1]],\n    [oriPoints[1][0] + value[0], oriPoints[1][1] + value[1]],\n    [oriPoints[2][0] + targetValue[0], oriPoints[2][1] + targetValue[1]],\n    [oriPoints[3][0] + targetValue[0], oriPoints[3][1] + targetValue[1]],\n  ];\n  return getPointsInTreeMove(linePoints, mainValue);\n};\n\n/**\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n *  // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n  time: number;","relevantFileList":[],"filePath":"src/core/Animation/animationImpl/preBezier.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" :<file_sep> /src/animation/index.ts","deepseek-chat-lite":": {\r","deepseek-chat":"```\n// Start Generation Here\n/**\n * 处理 Bezier animation  ","copilot":"入参格式："}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem,\n}\n\ninterface MedalItem {\n  logoUrl","infill":": string,\n","suffix":"\n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number;\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" : string,","deepseek-chat-lite":": string,","deepseek-chat":"```\n// Start Generation Here\n  logoUrl: string;\n  name","copilot":": string,\n"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId:","infill":" number;\n  medalName: string;\n  medalType: string;\n  acqui","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" number;","deepseek-chat-lite":" number;","deepseek-chat":"```\n// Start Generation Here\n  logoUrl: string;\n  medal","copilot":" number;\n  medalName: string;\n  medalType: string;\n  acqui"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId: number;\n  medalName:","infill":" string;\n  medalType: string;\n  acquisitio","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" string;","deepseek-chat-lite":" string;","deepseek-chat":"```\n// Start Generation Here\n  medalName: string;\n  level","copilot":" string;\n  medalType: string;\n  acquisitio"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId: number;\n  medalName: string;\n  medalType: string;\n  acquisitionCriteria:","infill":" string;\n  acquisitionTime: string;\n  buttonText: string;\n  buttonRed","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" string;","deepseek-chat-lite":" string;","deepseek-chat":"```\n// Start Generation Here\n    acquisitionCriteria: string;\n    acquisition","copilot":" string;\n  acquisitionTime: string;\n  buttonText: string;\n  buttonRed"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId: number;\n  medalName: string;\n  medalType: string;\n  acquisitionCriteria: string;\n  acq","infill":"uisitionTime: string;\n  buttonText: string;\n  buttonRedirectUrl: string;\n  l","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" uisitionTime?: number;","deepseek-chat-lite":"uisitionTime?: string,","deepseek-chat":"```\n// Start Generation Here\ninterface MedalItem {\n  logoUrl:","copilot":"uisitionTime: string;\n  buttonText: string;\n  buttonRedirectUrl: string;\n  l"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId: number;\n  medalName: string;\n  medalType: string;\n  acquisitionCriteria: string;\n  acquisitionTime: string;\n  buttonTe","infill":"xt: string;\n  buttonRedirectUrl: string;\n  level: number;\n  expira","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" xt?: string,","deepseek-chat-lite":"xt?: string;","deepseek-chat":"```\n// Start Generation Here\ninterface MedalItem {\n  logoUrl:","copilot":"xt: string;\n  buttonRedirectUrl: string;\n  level: number;\n  expira"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId: number;\n  medalName: string;\n  medalType: string;\n  acquisitionCriteria: string;\n  acquisitionTime: string;\n  buttonText: string;\n  buttonRed","infill":"irectUrl: string;\n  level: number;\n  expirationTime: number;","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" Point?: boolean,","deepseek-chat-lite":"irectUrl?: string,","deepseek-chat":"```\n// Start Generation Here\ninterface MedalItem {\n  logoUrl:","copilot":"irectUrl: string;\n  level: number;\n  expirationTime: number;"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId: number;\n  medalName: string;\n  medalType: string;\n  acquisitionCriteria: string;\n  acquisitionTime: string;\n  buttonText: string;\n  buttonRedirectUrl: string;\n  level:","infill":" number;\n  expirationTime: number;","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  number;","deepseek-chat-lite":" number;","deepseek-chat":"```\n// Start Generation Here\n  level: number;\n  levelName","copilot":" number;\n  expirationTime: number;"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  logoUrl: string;\n  medalId: number;\n  medalName: string;\n  medalType: string;\n  acquisitionCriteria: string;\n  acquisitionTime: string;\n  buttonText: string;\n  buttonRedirectUrl: string;\n  level: number;\n  expira","infill":"tionTime: number;","suffix":"\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" tionTime?: number,","deepseek-chat-lite":"tionTime?: string,","deepseek-chat":"```\n// Start Generation Here\ninterface MedalItem {\n  logoUrl:","copilot":"tionTime: number;"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  // 勋章logo\n  logoUrl: string;\n  // ","infill":"勋章id","suffix":"\n  medalId: number;\n  // 勋章名称\n  medalName: string;\n  // 勋章类型\n  medalType: string;\n  // 勋章过期时间 \n  expirationTime: number;\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 勋章id","deepseek-chat-lite":"勋章id","deepseek-chat":"```\n// Start Generation Here\n  // 勋章等级\n  level","copilot":"勋章id"}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  userWearMedal: MedalInfo,\n}\n\ninterface MedalInfo {\n  commonMedal: MedalItem;\n}\n\ninterface MedalItem {\n  // 勋章logo\n  logoUrl: string;\n  // 勋章id\n  medalId: number;\n  // 勋章名称\n  medalName: string;\n  // 勋章类型\n  medalType: string;\n  // ","infill":"勋章过期时间 按  0：永久 ","suffix":"\n  expirationTime: number;\n  \n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 勋章等级","deepseek-chat-lite":"勋章描述","deepseek-chat":"```\n// Start Generation Here\n  // 勋章等级\n  level","copilot":"勋章过期时间 按  0：永久 "}},{"prefix":"interface UserInformationByUidParams {\n  // 用户 uid\n  uid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 通过 fid 请求用户信息请求参数\ninterface UserInformationByFidParams {\n  // 用户 uid\n  fid: number,\n  // 是否需要获取审核中信息\n  isAudit?: boolean,\n}\n\n// 请求用户信息返回数据\ninterface UserInformationResult {\n  // 用户 userId\n  userId: number,\n  // 用户名\n  nickname: string,\n  // 头像\n  avatar: string,\n  // 审核通过头像\n  passAuditAvatar: string,\n  // 简介\n  description: string,\n  // 粉丝数\n  fansCount: number,\n  // 关注数\n  followsCount: number,\n  // 动态数\n  postCount: number,\n  // 关注状态 0：否 1：是 2：互相关注 3：被关注\n  followStatus: 0 | 1 | 2 | 3,\n  // 认证类型 0：无认证 1：个人认证 2：机构认证\n  verifyType: 0 | 1 | 2,\n  // 头像审核状态 0：待审核 1：已审核\n  avatarStatus: 0 | 1,\n  // 是否默认头像\n  defaultAvatar: boolean,\n  // 同顺号标识\n  fid?: number,\n  // 认证信息\n  identity?: string,\n  // 模拟提交数\n  analogCount?: number,\n  // 拉黑状态 0：没有拉黑关系 1：被拉黑 2：拉黑 3：相互拉黑\n  blackStatus?: 0 | 1 | 2 | 3,\n  // 直播状态 0：未直播 1：直播中\n  showStatus?: 0 | 1,\n  // 直播跳转地址\n  showUrl?: string,\n  // 生日\n  birthday?: string,\n  // 省\n  province?: number,\n  // 市\n  city?: number,\n  // 昵称审核状态 0：待审核 1：已审核\n  nicknameStatus?: number,\n  // 审核中的名字\n  selfName?: string,\n  // 审核中的简介\n  selfDescription?: string,\n  // 简介审核状态 0：待审核 1：已审核\n  descriptionStatus?: number,\n  // 性别 0：男 1：女 2：未知\n  sex?: 0 | 1 | 2,\n  // 上市公司股票信息\n  stockInfo?: StockInfo,\n  // 用户封禁信息\n  banUser?: BanUserInfo,\n  // ip地址信息\n  ipLocation?: IpLocationInfo,\n  // 主页背景\n  background?: BackgroundInfo,\n  // 直播信息\n  liveShow?: ShowInfo,\n  // 置顶数据\n  contents?: Array<AllListData>,\n  // 用户勋章信息\n  userWearMedal?: MedalInfo,\n}\n\n// 用户勋章信息\ninterface MedalInfo {\n  // 通用勋章\n  commonMedal?: MedalItem;\n  // 活动勋章\n  activityMedal?: MedalItem;\n  // 用户id\n  userId: number;\n}\n\n// 勋章信息\ninterface MedalItem {\n  // 勋章logo\n  logoUrl: string;\n  // 勋章id\n  medalId: number;\n  // 勋章名称\n  medalName: string;\n  // 勋章类型\n  medalType: 'common","infill":"' | 'activity';","suffix":"\n  // 勋章过期时间，按秒计算 0：永久\n  expirationTime: number;\n}\n\n// 上市公司股票信息\ninterface StockInfo {\n  // 股票标识\n  fid: number,\n  // 市场标识\n  marketId: number,\n  // 市场简称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n}\n\n// 用户封禁信息\ninterface BanUserInfo {\n  // 用户uid\n  userId: number,\n  // 是否被封禁\n  ban: boolean,\n  // 封禁类型 0：正常 1：期限封禁 2：永久封禁\n  banType?: 0 | 1 | 2,\n  // 解封时间，秒\n  banExpireTime?: number,\n}\n\n// ip地址信息\ninterface IpLocationInfo {\n  // 是否为内网IP 0：否 1：是\n  isInner: number,\n  // 地区码 CN 为中国大陆，其余为境外\n  areaCode?: string,\n  // 地区名称\n  areaName?: string,\n  // 大陆省份 ID\n  provinceId?: string,\n  // 大陆省份名称\n  provinceName?: string,\n}\n\n// 主页背景信息\ninterface BackgroundInfo {\n  // 审核通过，他人视角使用\n  inAudit?: BackgroundImage,\n  // 审核中，个人视角使用\n  passAudit?: BackgroundImage,\n}\n\n// 背景图片信息\ninterface BackgroundImage {\n  // 背景对象id\n  id: number,\n  // 用户id\n  userId: number,\n  // 文件类型，pic:  图片，video：视频\n  fileType: string,\n  // 文件地址\n  fileUrl: string,\n  // 文件状态，'in_audit'：审核中 'pass_audit'：审核上线\n  auditStatus: 'in_audit' | 'pass_audit',\n  // 是否为默认背景图片\n  defaultBg: boolean,\n}\n\n// 直播信息\ninterface ShowInfo {\n  // 直播间号\n  sid: number,\n  // 直播类型：1：图文直播，2：视频直播\n  type?: 1 | 2,\n  // 直播标题\n  title?: string,\n  // 回访时长\n  replayDuration?: number,\n  // 预约状态\n  appointment?: number,\n  // 预约开始时间\n  planTime?: number,\n  // 0：预告，1：直播中，2：已结束\n  status: 0 | 1 | 2,\n  // 封面图\n  cover?: string,\n  // 热度\n  hot?: number,\n  // 0：横屏，1：竖屏\n  screenMode: 0 | 1,\n  // h5地址\n  h5Url?: string,\n  // 客户端地址\n  clientUrl?: string,\n  // 预约地址\n  appointUrl?: string,\n  // 弹幕数\n  bulletChatCount?: number,\n}\n\n// 更新用户背景图请求参数\ninterface UpdateUserBackgroundParams {\n  // 背景图地址\n  fileUrl: string,\n  // 背景图类型，pic:  图片，video：视频\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n  account: string;\n  // 个性签名（原来的简介）\n  signature: string;\n  // 开户的年份，默认为0\n  stocktime: number;\n  // 已经审核通过的值（sex、account固定为通过）\n  auditPassed: Array<string>;\n  // 审核中的昵称，如果没有则为空字符串\n  auditNickname: string;\n  // 审核中的签名，如果没有则为空字符串\n  auditSignature: string;\n  statusCode: number;\n  statusMsg: string;\n}\n\n// 获取检查拉黑状态请求参数\ninterface CheckBlackStatusParams {\n  // 用户 uid\n  blackedId: number,\n}\n\n// 获取操作拉黑状态请求参数\ninterface OperateBlackStatusParam {\n  // 用户 uid\n  blackedId: number,\n  // 操作类型，add：添加黑名单，cancel：取消黑名单\n  operate: 'add' | 'cancel',\n}\n\n// 封禁状态接口的请求参数\ninterface GetAppealTypeParam {\n  // 1: 内容申诉 2.账号申诉\n  appealType: 1 | 2;\n  // 申诉对象ID\n  keyId?: string;\n}\n\n// 封禁状态接口的返回值\n interface GetAppealTypeResult {\n  // 账号是否封禁\n  accoutBanned: boolean;\n  // 内容是否下线\n  contentBanned?: boolean;\n  // 账号是否申诉中\n  accountInAppeal?: boolean;\n  // 内容是否申诉中\n  contentInAppeal?: boolean;\n  // 账号申诉提交时间，当为是秒\n  accountAppealTime?: number;\n  // 内容申诉提交时间，当为是秒\n  contentAppealTime?: number;\n }\n\n // 获取用户交流群信息请求参数\n interface GetGroupCountParam {\n  // 用户 uid\n  ownerid: number;\n }\n\n// 获取用户开户信息请求参数\ninterface GetOpenAccountInfoParam {\n  // 用户 uid\n  uid: number;\n}\n\n// 获取用户开户信息返回数据\ninterface GetOpenAccountInfoResult {\n  brokerName: string;\n  type: 1 | 2 | 3;\n  action?: string;\n  iosAction?: string;\n  androidAction?: string;\n}","relevantFile":"","relevantFileList":[],"filePath":"src/types/service/user-information.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ' | 'activity',","deepseek-chat-lite":"' | 'activity';","deepseek-chat":"```\n// Start Generation Here\nfunction getUserInformation(params: UserInformation","copilot":"' | 'activity';"}},{"prefix":"import { Point } from '../types';\nimport { doTail } from '../utils/tail';\n\ninterface RenderOption {\n  update: Function;\n  render: Function;\n}\n//渲染管理器\nexport class RenderManager {\n  private _renderMap = new Map<string, RenderOption>();\n  private _renderInstanceMap = new Map<string, BaseRender>();\n\n  //type key后续有用\n  constructor(public key = 'type') {}\n\n  //注册有哪些渲染配置\n  register(type: string, render: BaseRender) {\n    this._renderInstanceMap.set(type, render);\n    this._renderMap.set(type, render.render());\n    return this;\n  }\n\n  get renderMap() {\n    return this._renderMap;\n  }\n  get renderInstanceMap() {\n    return this._renderInstanceMap;\n  }\n}\n\ninterface TailOption {\n  id: string;\n  offset?: number[];\n}\n\nexport const generateRender = (render: RenderManager) => {\n  const getCustomRenderHandler = (node: any) => {\n    let result: RenderOption = {\n      render: () => '',\n      update: () => '',\n    };\n    //根据节点的","infill":"option中的key值找到对应的渲染器","suffix":"\r\n    const option = node.getOption();\r\n    const { renderMap } = render;\r\n    for (const [key, value] of renderMap) {\r\n      if (key === option?.data[render.key]) {\r\n        result = value;\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  //提供给底层渲染库\r\n  return (_relationGraphs: any, _node: any, _option: any) => {\r\n    const handler = getCustomRenderHandler(_node);\r\n    if (_option.update) {\r\n      handler.update(_relationGraphs, _node, _option);\r\n    } else {\r\n      handler.render(_relationGraphs, _node, _option);\r\n    }\r\n  };\r\n};\r\n\r\n//基础渲染器\r\nexport abstract class BaseRender {\r\n  protected nodes: any = {};\r\n  protected zrender: any = {};\r\n  protected helper: any = {};\r\n  private isEnableTail: boolean = false;\r\n  private enableIds: TailOption[] = [];\r\n  constructor(zrender: any, helper: any) {\r\n    this.zrender = zrender;\r\n    this.helper = helper;\r\n  }\r\n  render() {\r\n    return {\r\n      render: this.getRender(),\r\n      update: this.getUpdate(),\r\n    };\r\n  }\r\n\r\n  getRender() {\r\n    return (_relationGraphs: any, node: any) => {\r\n      this.customRender(_relationGraphs, node);\r\n      this.addToGroupAndSetAnimation(_relationGraphs, node);\r\n      if (this.isEnableTail) {\r\n        const { id, offset = [0, 0] } = this.getTailConfig(node.id);\r\n        if (id) {\r\n          doTail(node, this.zrender, offset);\r\n        }\r\n      }\r\n    };\r\n  }\r\n  abstract customRender(_relationGraphs: any, node: any): void;\r\n  protected getUpdate() {\r\n    return () => '';\r\n  }\r\n  addToGroupAndSetAnimation(relationGraphs: any, node: any) {\r\n    const option = node.getOption();\r\n    Object.entries(this.nodes).forEach(([name, config]) => {\r\n      const { shape, opts } = config as {\r\n        shape: string;\r\n        opts: any;\r\n      };\r\n      const ele = new this.zrender[shape](opts);\r\n      ele.name = name;\r\n      this.eleAddToGroupPreHook(ele);\r\n      node.group.add(ele);\r\n      const animations = option.animation;\r\n      // 还是使用老的实现设置子元素的透明度 现在只涉及透明度\r\n      const realWhen = animations.when.map(v => ({\r\n        time: v.time,\r\n        value: {\r\n          style: {\r\n            //动画未设置透明度 使用节点本身默认透明度\r\n            opacity: v.value?.style?.opacity ?? option.data.opacity,\r\n          },\r\n        },\r\n      }));\r\n      this.helper.animation.setElementAnimation(relationGraphs, ele, {\r\n        when: realWhen,\r\n      });\r\n    });\r\n  }\r\n\r\n  /** tail */\r\n  getTailConfig(id: string): { id: string; offset?: Point } {\r\n    const result: any = {};\r\n    for (const item of this.enableIds) {\r\n      if (item.id === id) {\r\n        result.id = id;\r\n        if (item.offset) {\r\n          result.offset = item.offset;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  public enableTail(ids: TailOption[]) {\r\n    this.enableIds = ids;\r\n    this.isEnableTail = true;\r\n  }\r\n\r\n  //子节点加在group之前需要特殊处理的 //比如图片圆角\r\n  protected eleAddToGroupPreHook(ele) {\r\n    //  需要处理时进行重写\r\n  }\r\n}\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/fade.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { renderConfig } from '../../config';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线之间有重叠，优先展示不透明的节点\n    z = 1;\n  } else {\n    const color = renderConfig.getCorrespondingColor(stroke, false);\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n<file_path>src/core/Animation/animationImpl/move.ts\nimport { FrameAnimation } from '..';\nimport { NodesActionConfig, Point } from '../../types';\nimport { getNodeById, handleLine, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/**\n * config入参格式：\n      {\n*         value: [x,y], //x,y 坐标改变\n*         id: string,\n*         addEasing:boolean,  //该次位移是否需要缓动 默认true\n*      },\n */\n\nexport function moveAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  //新流程 直接改node位置\n  const { id, value, ignoreLine = false, addEasing = true } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    handleNode(node, value, handleLine, ignoreLine);\n    setAnimationToNode(node, time, { withLine: ignoreLine ? false : true, addEasing });\n    //子节点适配\n    if (node.child) {\n      let childNode = node.child;\n      handleNode(childNode, value, childHandleLine, false);\n      setAnimationToNode(node.child, time, { addEasing });\n    }\n  }\n}\n\nfunction handleNode(oriNode: NodeBase, value, handleLineFun, ignoreLine) {\n  let nowPosition = oriNode.position;\n  //节点移动后的位置\n  let nodeMovePosition: Point = [nowPosition[0] + value[0], nowPosition[1] + value[1]];\n  oriNode.position = nodeMovePosition;\n\n  let moveLinePoints;\n  //节点变化后 如果有线，线需要挪动的位置\n  if (oriNode.hasLine) {\n    let points = oriNode.line.lineRender.render.opts.shape.points;\n    if (points) {\n      moveLinePoints = handleLineFun(points, value, oriNode);\n    }\n  }\n  // 如果线不需要忽略，就同步改动线的位置\n  if (moveLinePoints && !ignoreLine) {\n    oriNode.line.lineRender.render.opts.shape.points = moveLinePoints;\n  }\n<file_path>src/core/Animation/animationImpl/scale.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/**\n * 缩放动画\n *config入参格式：\n *  {\n *   type: AnimationType.Scale,\n *   config: {\n *     nodes: [\n *       {\n *         id: string,\n *         value: [x,y], *x,y  缩放倍率\n *       },\n *     ],\n *   },\n * },\n */\n\nexport function scaleAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    node.scale = value;\n    setAnimationToNode(node, time);\n  }\n}\n<file_path>src/core/Animation/index.ts\n    let nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig> = new Map();\n    let allTimeLine = [0];\n    let ignoreTimeNodes: { [key: number]: string[] } = {};\n\n    for (let item of realAnimationList) {\n      const { time, action } = item;\n      allTimeLine.push(time);\n      for (let actionItem of action) {\n        const { type, ignore = false, config } = actionItem;\n        const { nodes } = config;\n        if (ignore) {\n          //ignore定义当前动作只对自己id生效\n          let ignoreNodeList = ignoreTimeNodes[time];\n          if (ignoreNodeList) {\n            ignoreTimeNodes[time] = ignoreNodeList.concat(nodes.map(v => v.id));\n          } else {\n            ignoreTimeNodes[time] = nodes.map(v => v.id);\n          }\n        }\n        for (let nodeConfig of nodes) {\n          const { id } = nodeConfig;\n          let timeAction;\n          //基础动画同一类型在同一时间只做一个动作 不同type可以同时出现比如点的位移和线的位移\n          //--- 现有一种场景 node blink ,node的line修改透明度,就存在同一时间点,同时执行fade方法,\n          //而且两者理论上不冲突,但是现在line和node的fade都是通过fade来实现,需要兼容下,同时出现相同的type\n          // 后续解决办法,node和line的fade分开,但是会导致配置项变复杂,存在大量node和线一起变透明度的场景\n          if (nodeTimeActionMap.has(id)) {\n            let tempTimeAction = nodeTimeActionMap.get(id)!;\n            let nodeAction = tempTimeAction[time];\n            if (nodeAction) {\n              // 同一node 不同type\n              if (nodeAction[type]) {\n                //相同type兼容\n                nodeAction[type] = [...nodeAction[type], nodeConfig];\n              } else {\n                nodeAction[type] = [nodeConfig];\n              }\n            } else {\n              nodeAction = { [type]: [nodeConfig] };\n            }\n            tempTimeAction[time] = nodeAction;\n            timeAction = tempTimeAction;\n          } else {\n            let nodeAction = { [type]: [nodeConfig] };\n\n            timeAction = { [time]: nodeAction };\n          }\n          nodeTimeActionMap.set(id, timeAction);\n        }\n      }\n    }\n    return {\n      nodeTimeActionMap,\n      allTimeLine,\n      ignoreTimeNodes,\n    };\n  }\n\n  /**\n   * 预处理 处理闪烁  树 add/delete节点","relevantFileList":[],"filePath":"src/core/Render/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" type 找到对应的渲染配置\r","deepseek-chat-lite":"类型获取渲染配置\r","deepseek-chat":"```\n// Start Generation Here\n    const option = node.getOption();","copilot":"option中的key值找到对应的渲染器"}},{"prefix":"import { Point } from '../types';\nimport { doTail } from '../utils/tail';\n\ninterface RenderOption {\n  update: Function;\n  render: Function;\n}\n//渲染管理器\nexport class RenderManager {\n  private _renderMap = new Map<string, RenderOption>();\n  private _renderInstanceMap = new Map<string, BaseRender>();\n\n  //type key后续有用\n  constructor(public key = 'type') {}\n\n  //注册有哪些渲染配置\n  register(type: string, render: BaseRender) {\n    this._renderInstanceMap.set(type, render);\n    this._renderMap.set(type, render.render());\n    return this;\n  }\n\n  get renderMap() {\n    return this._renderMap;\n  }\n  get renderInstanceMap() {\n    return this._renderInstanceMap;\n  }\n}\n\ninterface TailOption {\n  id: string;\n  offset?: number[];\n}\n\nexport const generateRender = (render: RenderManager) => {\n  const getCustomRenderHandler = (node: any) => {\n    let result: RenderOption = {\n      render: () => '',\n      update: () => '',\n    };\n    //根据节点的option中的key值找到对应的渲染器\n    const option = node.getOption();\n    const { renderMap } = render;\n    for (const [key, value] of renderMap) {\n      if (key === option?.data[render.key]) {\n        result = va","infill":"基础渲染器","suffix":"\r\nexport abstract class BaseRender {\r\n  protected nodes: any = {};\r\n  protected zrender: any = {};\r\n  protected helper: any = {};\r\n  private isEnableTail: boolean = false;\r\n  private enableIds: TailOption[] = [];\r\n  constructor(zrender: any, helper: any) {\r\n    this.zrender = zrender;\r\n    this.helper = helper;\r\n  }\r\n  render() {\r\n    return {\r\n      render: this.getRender(),\r\n      update: this.getUpdate(),\r\n    };\r\n  }\r\n\r\n  getRender() {\r\n    return (_relationGraphs: any, node: any) => {\r\n      this.customRender(_relationGraphs, node);\r\n      this.addToGroupAndSetAnimation(_relationGraphs, node);\r\n      if (this.isEnableTail) {\r\n        const { id, offset = [0, 0] } = this.getTailConfig(node.id);\r\n        if (id) {\r\n          doTail(node, this.zrender, offset);\r\n        }\r\n      }\r\n    };\r\n  }\r\n  //子类实现 实际的渲染逻辑\r\n  abstract customRender(_relationGraphs: any, node: any): void;\r\n  protected getUpdate() {\r\n    return () => '';\r\n  }\r\n  // \r\n  addToGroupAndSetAnimation(relationGraphs: any, node: any) {\r\n    const option = node.getOption();\r\n    Object.entries(this.nodes).forEach(([name, config]) => {\r\n      const { shape, opts } = config as {\r\n        shape: string;\r\n        opts: any;\r\n      };\r\n      const ele = new this.zrender[shape](opts);\r\n      ele.name = name;\r\n      this.eleAddToGroupPreHook(ele);\r\n      node.group.add(ele);\r\n      const animations = option.animation;\r\n      // 还是使用老的实现设置子元素的透明度 现在只涉及透明度\r\n      const realWhen = animations.when.map(v => ({\r\n        time: v.time,\r\n        value: {\r\n          style: {\r\n            //动画未设置透明度 使用节点本身默认透明度\r\n            opacity: v.value?.style?.opacity ?? option.data.opacity,\r\n          },\r\n        },\r\n      }));\r\n      this.helper.animation.setElementAnimation(relationGraphs, ele, {\r\n        when: realWhen,\r\n      });\r\n    });\r\n  }\r\n\r\n  /** tail */\r\n  getTailConfig(id: string): { id: string; offset?: Point } {\r\n    const result: any = {};\r\n    for (const item of this.enableIds) {\r\n      if (item.id === id) {\r\n        result.id = id;\r\n        if (item.offset) {\r\n          result.offset = item.offset;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  public enableTail(ids: TailOption[]) {\r\n    this.enableIds = ids;\r\n    this.isEnableTail = true;\r\n  }\r\n\r\n  //子节点加在group之前需要特殊处理的 //比如图片圆角\r\n  protected eleAddToGroupPreHook(ele) {\r\n    //  需要处理时进行重写\r\n  }\r\n}\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/treeAddNode.ts\n *                                另一种 mode:'extend' 逐渐延伸,逐渐修改线的坐标,会占用后续时间,请自动计算时间\n * \n * 位置计算: 默认以当前的节点位置计算 但是对于节点在中间会变化的场景等,支持自定义位置作为终点\n * \n * action格式：\n * {\n        type: AnimationType.TreeAddNode,\n        不取value的值\n        config:{}\n           {\n          tree, //树的实例\n          node, //node实例\n          option:{\n            position:[x,y] 传了x,y;连线点以position为准,  (新版已同步修改节点位置,所以暂时可以不用)(可能还需要用到,因为节点执行顺序不确定,刚变完位置,立马执行treeaddnode,可能获取到老位置)\n            mode:'fade'|| 'extend' \n            duration:1000// 动画时间  默认1000 \n            opacity:1,  //add的时候的颜色 \n            mainPosition:[x,y],\n            childPosition: [x,y]; fade模式下 子节点的连线需要指定位置时用\n            lineWidth:number, 线的宽度\n            lineYOffset: 0,// 添加线的时候 计算出来的y坐标的偏移量,主要兼容节点的上下边距是一个动态变化过程\n          },\n        }\n    },\n */\n\nexport function treeAddNodeAnimation({\n  action,\n  time,\n}: {\n  action: ActionConfig;\n  time: number;\n}): AnimationConfig[] {\n  let final = {};\n  const { config } = action;\n  const { nodes } = config;\n  for (let nodeConfig of nodes) {\n    const {\n      node,\n      tree,\n      option = {},\n    }: { node: NodeBase; tree: Tree; option: TreeAddNodeOption } = nodeConfig as unknown as {\n      node: NodeBase;\n      tree: Tree;\n      option: TreeAddNodeOption;\n    };\n    const {\n      position,\n      mode = 'fade',\n      duration = 1000,\n      opacity = 1,\n      lineWidth,\n      childPosition,\n      mainPosition,\n    } = option;\n    let isFade = mode === 'fade';\n    if (node.data[deleteLineKey]) {\n      // 前面设置过treeDeleteNode  那么需要删掉\n      delete node.data[deleteLineKey];\n    }\n<file_path>src/core/Animation/animationImpl/scale.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/**\n * 缩放动画\n *config入参格式：\n *  {\n *   type: AnimationType.Scale,\n *   config: {\n *     nodes: [\n *       {\n *         id: string,\n *         value: [x,y], *x,y  缩放倍率\n *       },\n *     ],\n *   },\n * },\n */\n\nexport function scaleAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    node.scale = value;\n    setAnimationToNode(node, time);\n  }\n}\n<file_path>src/core/Animation/animationImpl/fade.ts\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线之间有重叠，优先展示不透明的节点\n    z = 1;\n  } else {\n    const color = renderConfig.getCorrespondingColor(stroke, false);\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n    }\n    node.line.lineRender.render.opts.style.opacity = value;\n  }\n  node.line.lineRender.render.opts.z = z;\n<file_path>src/core/Animation/index.ts\n    let nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig> = new Map();\n    let allTimeLine = [0];\n    let ignoreTimeNodes: { [key: number]: string[] } = {};\n\n    for (let item of realAnimationList) {\n      const { time, action } = item;\n      allTimeLine.push(time);\n      for (let actionItem of action) {\n        const { type, ignore = false, config } = actionItem;\n        const { nodes } = config;\n        if (ignore) {\n          //ignore定义当前动作只对自己id生效\n          let ignoreNodeList = ignoreTimeNodes[time];\n          if (ignoreNodeList) {\n            ignoreTimeNodes[time] = ignoreNodeList.concat(nodes.map(v => v.id));\n          } else {\n            ignoreTimeNodes[time] = nodes.map(v => v.id);\n          }\n        }\n        for (let nodeConfig of nodes) {\n          const { id } = nodeConfig;\n          let timeAction;\n          //基础动画同一类型在同一时间只做一个动作 不同type可以同时出现比如点的位移和线的位移\n          //--- 现有一种场景 node blink ,node的line修改透明度,就存在同一时间点,同时执行fade方法,\n          //而且两者理论上不冲突,但是现在line和node的fade都是通过fade来实现,需要兼容下,同时出现相同的type\n          // 后续解决办法,node和line的fade分开,但是会导致配置项变复杂,存在大量node和线一起变透明度的场景\n          if (nodeTimeActionMap.has(id)) {\n            let tempTimeAction = nodeTimeActionMap.get(id)!;\n            let nodeAction = tempTimeAction[time];\n            if (nodeAction) {\n              // 同一node 不同type\n              if (nodeAction[type]) {\n                //相同type兼容\n                nodeAction[type] = [...nodeAction[type], nodeConfig];\n              } else {\n                nodeAction[type] = [nodeConfig];\n              }\n            } else {\n              nodeAction = { [type]: [nodeConfig] };\n            }\n            tempTimeAction[time] = nodeAction;\n            timeAction = tempTimeAction;\n          } else {\n            let nodeAction = { [type]: [nodeConfig] };\n\n            timeAction = { [time]: nodeAction };\n          }\n          nodeTimeActionMap.set(id, timeAction);\n        }\n      }\n    }\n    return {\n      nodeTimeActionMap,\n      allTimeLine,\n      ignoreTimeNodes,\n    };\n  }\n\n  /**\n   * 预处理 处理闪烁  树 add/delete节点","relevantFileList":[],"filePath":"src/core/Render/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" lue;\r","deepseek-chat-lite":"lue;","deepseek-chat":"```\n// Start Generation Here\n        result = value;\n        break;","copilot":"基础渲染器"}},{"prefix":"import { Point } from '../types';\nimport { doTail } from '../utils/tail';\n\ninterface RenderOption {\n  update: Function;\n  render: Function;\n}\n//渲染管理器\nexport class RenderManager {\n  private _renderMap = new Map<string, RenderOption>();\n  private _renderInstanceMap = new Map<string, BaseRender>();\n\n  //type key后续有用\n  constructor(public key = 'type') {}\n\n  //注册有哪些渲染配置\n  register(type: string, render: BaseRender) {\n    this._renderInstanceMap.set(type, render);\n    this._renderMap.set(type, render.render());\n    return this;\n  }\n\n  get renderMap() {\n    return this._rende","infill":"子节点加在group之前需要特殊处理的 //比如图片圆角","suffix":"\r\n      this.eleAddToGroupPreHook(ele);\r\n      node.group.add(ele);\r\n      const animations = option.animation;\r\n      // 还是使用老的实现设置子元素的透明度 现在只涉及透明度\r\n      const realWhen = animations.when.map(v => ({\r\n        time: v.time,\r\n        value: {\r\n          style: {\r\n            //动画未设置透明度 使用节点本身默认透明度\r\n            opacity: v.value?.style?.opacity ?? option.data.opacity,\r\n          },\r\n        },\r\n      }));\r\n      this.helper.animation.setElementAnimation(relationGraphs, ele, {\r\n        when: realWhen,\r\n      });\r\n    });\r\n  }\r\n\r\n  /** tail config */\r\n  getTailConfig(id: string): { id: string; offset?: Point } {\r\n    const result: any = {};\r\n    for (const item of this.enableIds) {\r\n      if (item.id === id) {\r\n        result.id = id;\r\n        if (item.offset) {\r\n          result.offset = item.offset;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  //开启尾巴\r\n  public enableTail(ids: TailOption[]) {\r\n    this.enableIds = ids;\r\n    this.isEnableTail = true;\r\n  }\r\n\r\n  //子节点加在group之前需要特殊处理的 //比如图片圆角\r\n  protected eleAddToGroupPreHook(ele) {\r\n    //  需要处理时进行重写\r\n  }\r\n}\r\n","relevantFile":"<file_path>src/core/Animation/index.ts\nimport { easingFunction } from '../config';\nimport { defaultAnimation } from './animationImpl/default';\n\ninterface TypeWithNodeActionConfig {\n  [type: number]: NodesActionConfig[];\n}\ninterface TimeWithTypeNodeActionConfig {\n  [time: number]: TypeWithNodeActionConfig;\n}\n\ninterface AnimationHandlerMap {\n  [key: string]: Function;\n}\n\ninterface MiddleType {\n  nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig>;\n  allTimeLine: number[];\n  ignoreTimeNodes: { [key: number]: string[] };\n}\nexport class FrameAnimation {\n  private trees: Tree[];\n  private nodes: NodeBase[];\n  private animationHandlers: AnimationHandlerMap;\n  private root!: GlobalObject;\n  //首帧动画对透明度为0的进行忽略,后续帧的不需要忽略\n  private hasDoneNodeIgnored: boolean = false;\n  constructor({ trees, nodes }: { trees?: Tree[]; nodes?: NodeBase[] }) {\n    this.trees = trees ?? [];\n    this.nodes = nodes ?? [];\n    this.animationHandlers = {};\n    // 注册支持的动画\n    this.registerAnimation();\n  }\n  //注册动画\n  registerAnimation() {\n    this.registerAnimationHandler(String(AnimationType.Fade), fadeAnimation);\n    this.registerAnimationHandler(String(AnimationType.Move), moveAnimation);\n    this.registerAnimationHandler(String(AnimationType.Scale), scaleAnimation);\n    this.registerAnimationHandler(String(AnimationType.Line), lineAnimation);\n    this.registerAnimationHandler(String(AnimationType.BezierThrough), bezierThroughAnimation);\n  }\n  registerAnimationHandler(key: string, func: Function) {\n    this.animationHandlers[key] = func;\n  }\n\n  reset({ trees, nodes }: { trees: Tree[]; nodes: NodeBase[] }) {\n    if (trees) {\n      this.trees = trees;\n    }\n    if (nodes) {\n      this.nodes = nodes;\n    }\n  }\n  //已做去重处理\n  get allNodes(): NodeBase[] {\n    const nodes = new Set<NodeBase>();\n    for (const node of this.nodes) {\n      nodes.add(node);\n    }\n    for (const tree of this.trees) {\n<file_path>src/core/config.ts\n// 默认的树形渲染配置\nconst defaultConfig: TreeRenderConfig = {\n  lineInnerHeight: 12,\n  lineOuterHeight: 9,\n  lineBaseWidth: 100,\n  lineWidth: 1,\n  upColor: '#12b287',\n  upDisableColor: '#c5e5dd',\n  downColor: '#165dff',\n  downDisableColor: '#c6d4f5',\n};\n\nclass RenderConfig {\n  //实际使用的树形渲染配置\n  private config: TreeRenderConfig;\n  //存储颜色映射\n  private colorMap = {};\n  constructor() {\n    this.config = defaultConfig;\n    this.resetColorMap();\n  }\n  // 重置颜色映射\n  private resetColorMap() {\n    const { upColor, upDisableColor, downColor, downDisableColor } = this.config;\n    this.colorMap = {\n      [upColor]: upDisableColor,\n      [downColor]: downDisableColor,\n    };\n  }\n  // 返回当前配置\n  public getConfig(): TreeRenderConfig {\n    return this.config;\n  }\n  // 设置配置\n  public setConfig(config: TreeRenderConfig): void {\n    this.config = { ...defaultConfig, ...config };\n    this.resetColorMap();\n  }\n\n  //根据当前颜色,获取对应状态的颜色\n  public getCorrespondingColor(color: string, isDisable = false): string | null {\n    // 获取0.2透明度和1透明度的互相颜色映射\n    for (let [key, value] of Object.entries(this.colorMap)) {\n      if (key === color) {\n        return isDisable ? String(value) : key;\n      }\n      if (value === color) {\n        return isDisable ? value : key;\n      }\n    }\n    // 没找到\n    return null;\n  }\n}\n\nexport const renderConfig = new RenderConfig();\n\n//默认缓动函数\nexport const easingFunction = 'sinusoidalInOut';\n<file_path>src/core/Animation/animationImpl/fade.ts\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线之间有重叠，优先展示不透明的节点\n    z = 1;\n  } else {\n    const color = renderConfig.getCorrespondingColor(stroke, false);\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n    }\n    node.line.lineRender.render.opts.style.opacity = value;\n  }\n  node.line.lineRender.render.opts.z = z;\n<file_path>src/core/Animation/animationImpl/move.ts\n * @returns\n */\n/**\n * config入参格式：\n      {\n*         value: [x,y], //x,y 坐标改变\n*         id: string,\n*         addEasing:boolean,  //该次位移是否需要缓动 默认true\n*      },\n */\n\nexport function moveAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  //新流程 直接改node位置\n  const { id, value, ignoreLine = false, addEasing = true } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    handleNode(node, value, handleLine, ignoreLine);\n    setAnimationToNode(node, time, { withLine: ignoreLine ? false : true, addEasing });\n    //子节点适配\n    if (node.child) {\n      let childNode = node.child;\n      handleNode(childNode, value, childHandleLine, false);\n      setAnimationToNode(node.child, time, { addEasing });\n    }\n  }\n}\n\nfunction handleNode(oriNode: NodeBase, value, handleLineFun, ignoreLine) {\n  let nowPosition = oriNode.position;\n  //节点移动后的位置\n  let nodeMovePosition: Point = [nowPosition[0] + value[0], nowPosition[1] + value[1]];\n  oriNode.position = nodeMovePosition;\n\n  let moveLinePoints;\n  //节点变化后 如果有线，线需要挪动的位置\n  if (oriNode.hasLine) {\n    let points = oriNode.line.lineRender.render.opts.shape.points;\n    if (points) {\n      moveLinePoints = handleLineFun(points, value, oriNode);\n    }\n  }\n  // 如果线不需要忽略，就同步改动线的位置\n  if (moveLinePoints && !ignoreLine) {\n    oriNode.line.lineRender.render.opts.shape.points = moveLinePoints;\n  }\n}\n\n// 移动后子节点的线的位置 比父节点线的简单，只需要加上移动值\nconst childHandleLine = (points, value) => {\n  return [\n    [points[0][0] + value[0], points[0][1] + value[1]],\n    [points[1][0] + value[0], points[1][1] + value[1]],","relevantFileList":[],"filePath":"src/core/Render/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"rMap;\r","deepseek-chat-lite":"rMap;","deepseek-chat":"```\n// Start Generation Here\n  get renderMap() {\n    return","copilot":"子节点加在group之前需要特殊处理的 //比如图片圆角"}},{"prefix":"import { easingFunction, renderConfig } from '../config';\nimport { Line, NodeBase } from '../Node';\nimport { AnimationConfig, Point, ProcessAnimationValue } from '../types';\nimport { clearEffect } from './format';\n\n//","infill":" 用于deleteLine的标识","suffix":"\r\nexport const deleteLineKey = 'deleteLine';\r\n\r\n//line默认配置，线的颜色，透明度，线宽，给底层库\r\nexport const getLineConfig = (\r\n  points: Point[],\r\n  lineColor: string,\r\n  opacity: number = 1,\r\n  lineWidth: number = renderConfig.getConfig().lineWidth\r\n) => ({\r\n  render: {\r\n    shape: 'Polyline',\r\n    opts: {\r\n      shape: {\r\n        points,\r\n      },\r\n      style: {\r\n        lineWidth,\r\n        stroke: lineColor,\r\n        opacity,\r\n      },\r\n      z: 2,\r\n    },\r\n  },\r\n  animation: {\r\n    when: [],\r\n  },\r\n});\r\n//node默认配置，位置，透明度，给底层库\r\nexport const getNodeConfig = (node: NodeBase) => {\r\n  const render = {\r\n    shape: 'Rect',\r\n    opts: {\r\n      position: node.position,\r\n    },\r\n    z: 2,\r\n  };\r\n  const base = {\r\n    id: node.id,\r\n    data: node.data,\r\n    // animation: node.animation,\r\n    render,\r\n  };\r\n  if (node.lottieW && node.lottieH) {\r\n    base.render.opts['shape'] = {\r\n      width: node.lottieW,\r\n      height: node.lottieH,\r\n    };\r\n  }\r\n  return deepClone(base);\r\n};\r\n\r\n//获取线的初始配置\r\nexport function getLineInitByNode(node: NodeBase) {\r\n  return deepClone({\r\n    source: node.line.source,\r\n    target: node.line.target,\r\n    line: node.line.lineRender,\r\n  });\r\n}\r\n\r\n// 需要进行时间判定,会有相同时间的不同type进行\r\n// 需要兼容 贝塞尔曲线动画\r\nexport function setAnimationToNode(\r\n  node: NodeBase,\r\n  time: number,\r\n  option?: {\r\n    onlyLine?: boolean;\r\n    withLine?: boolean;\r\n    addEasing?: boolean;\r\n  }\r\n) {\r\n  const { onlyLine = false, withLine = true, addEasing = false } = option ?? {};\r\n  if (!onlyLine) {\r\n    animationHandleNode(node, time, addEasing);\r\n  }\r\n  if (withLine && node.hasLine) {\r\n    animationHandleLine(node, time, addEasing);\r\n  }\r\n}\r\nfunction animationHandleNode(node: NodeBase, time: number, addEasing: boolean) {\r\n  let valNode: ProcessAnimationValue = deepClone({\r\n    time,\r\n    value: {\r\n      position: node.position,\r\n      style: {\r\n        opacity: node.data.opacity,\r\n      },\r\n      scale: node.scale,\r\n    },\r\n  });\r\n  if (node.moveAlongTheCurve) {\r\n    valNode.moveAlongTheCurve = node.moveAlongTheCurve;\r\n    const percent = node.moveAlongTheCurve.percent;\r\n    if (percent === 1) {\r\n      node.moveAlongTheCurve = null;\r\n    }\r\n  }\r\n  if (addEasing) {\r\n    valNode.easing = easingFunction;\r\n  }\r\n\r\n  let lastIndex = node.animation.when.length - 1;\r\n  let lastAnimationWhen = node.animation.when[lastIndex];\r\n  if (lastAnimationWhen) {\r\n    if (lastAnimationWhen.time === time) {\r\n      node.animation.when[lastIndex] = valNode;\r\n    } else {\r\n      node.animation.when = [...node.animation.when, valNode];\r\n    }\r\n  } else {\r\n    node.animation.when = [valNode];\r\n  }\r\n}\r\n\r\nfunction animationHandleLine(node: NodeBase, time: number, addEasing: boolean) {\r\n  let valLine: ProcessAnimationValue;\r\n\r\n  valLine = deepClone({\r\n    time,\r\n    value: node.line.lineRender.render.opts,\r\n  });\r\n  if (addEasing) {\r\n    valLine.easing = easingFunction;\r\n  }\r\n  let lastIndex = node.line.lineRender.animation.when.length - 1;\r\n\r\n  let lastAnimationWhen = node.line.lineRender.animation.when[lastIndex];\r\n  if (lastAnimationWhen) {\r\n    if (lastAnimationWhen.time === time) {\r\n      node.line.lineRender.animation.when[lastIndex] = valLine;\r\n    } else {\r\n      node.line.lineRender.animation.when = [...node.line.lineRender.animation.when, valLine];\r\n    }\r\n  } else {\r\n    node.line.lineRender.animation.when = [valLine];\r\n  }\r\n}\r\n\r\nexport function deepClone<T>(obj: T): T {\r\n  if (!obj) return obj;\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\n/**\r\n * 生成一个基于原始id和时间戳的唯一id\r\n * @param {string} id - 原始id\r\n * @returns {string} - 生成的唯一id\r\n */\r\n\r\nexport function generateId(id: string) {\r\n  /**\r\n   * 获取当前时间戳的后6位作为时间戳标识\r\n   */\r\n  const timestamp = Date.now().toString().slice(-6);\r\n  /**\r\n   * 获取4位随机数作为随机数标识\r\n   */\r\n  const randomNumber = Math.random().toString(36).substring(2, 6);\r\n  /**\r\n   * 拼接最终id\r\n   */\r\n  return `${id}_${timestamp}_${randomNumber}`;\r\n}\r\n\r\n/**\r\n * 节点平移-处理线\r\n * @param points\r\n * @param value\r\n * @returns\r\n */\r\nexport function handleLine(points: number[][], value: number[], node: NodeBase) {\r\n  const _points = deepClone(points);\r\n  // 先实现4点折线的平移\r\n  if (value[0]) {\r\n    //x轴\r\n    _points[2][0] = _points[2][0] + value[0];\r\n    _points[3][0] = _points[3][0] + value[0];\r\n  }\r\n  if (value[1]) {\r\n    // y轴的移动 对于超过 1段线的情况 需要特殊处理\r\n    //折线,动作默认朝上\r\n    let lineDirectionUp = true;\r\n    let animationDirectionUp = true;\r\n    //最外层的一段高度\r\n    const outOffset = _points[3][1] - _points[2][1];\r\n    if (outOffset > 0) {\r\n      //线朝下\r\n      lineDirectionUp = false;\r\n    }\r\n    if (value[1] > 0) {\r\n      //动作朝下\r\n      animationDirectionUp = false;\r\n    }\r\n    // y轴移动的绝对值\r\n    const absValueY = Math.abs(value[1]);\r\n    // 最外层的一段高度的绝对值\r\n    const outDistance = Math.abs(outOffset);\r\n    /** 特殊场景 子节点不适用\r\n     * 如果动画移动方向和线原有方向不一致  且y轴移动比一段线更多,意味着线的方向要开始变化\r\n     */\r\n    if (lineDirectionUp !== animationDirectionUp && absValueY > outDistance) {\r\n      // 节点高度\r\n      const nodeHeight = node.getBottomDistance() + node.getTopDistance();\r\n      // 节点高度 + 最外层的一段高度\r\n      const judgeHeight = outDistance + nodeHeight;\r\n      changeDirection(judgeHeight, absValueY, animationDirectionUp, _points);\r\n    } else {\r\n      // 默认 y轴坐标移动\r\n      _points[3][1] = _points[3][1] + value[1];\r\n    }\r\n  }\r\n  return _points;\r\n}\r\n\r\nconst changeDirection = (\r\n  judgeHeight: number,\r\n  absValueY: number,\r\n  animationDirectionUp: boolean,\r\n  _points: number[][]\r\n) => {\r\n  if (absValueY <= judgeHeight) {\r\n    // 如果y轴移动距离小于判断距离 即线与节点重合 线的末尾段应该是水平的\r\n    _points[3][1] = _points[2][1];\r\n  } else if (absValueY >= judgeHeight) {\r\n    // 如果y轴移动距离大于等于判断距离  即需要发生方向上的变化\r\n    let offset = absValueY - judgeHeight;\r\n    if (animationDirectionUp) {\r\n      offset = -offset;\r\n    }\r\n    // 方向变化要减去节点高度  如折线原本位于节点上方,现在会处于节点下方\r\n    _points[3][1] = _points[2][1] + offset;\r\n  }\r\n};\r\n\r\nexport function getNodeById(id: string, nodes: NodeBase[]) {\r\n  for (let node of nodes) {\r\n    if (node.id === id) {\r\n      return node;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 初始化所有节点\r\n * 1. 清空所有动画 2.初始化init状态 3.进行deleteline的副作用\r\n * @param nodes\r\n */\r\nexport function resetAllNodes(nodes: NodeBase[]) {\r\n  for (const node of nodes) {\r\n    clearEffect(node);\r\n\r\n    node.animation.when = [];\r\n\r\n    const nodeInit = getNodeConfig(node);\r\n    node.initStatus.nodeInit = nodeInit;\r\n    if (node.hasLine) {\r\n      const lineInit = getLineInitByNode(node);\r\n      node.initStatus.lineInit = lineInit;\r\n    } else {\r\n      node.initStatus.lineInit = null;\r\n    }\r\n\r\n    if (node.hasLine && node.line.lineRender.animation) {\r\n      node.line.lineRender.animation.when = [];\r\n    }\r\n  }\r\n}\r\n\r\n// 2个节点确定一条折线\r\nexport function generateLine({\r\n  sourceNode,\r\n  targetNode,\r\n  opacity,\r\n  targetPosition,\r\n  lineWidth,\r\n  sourcePosition,\r\n}: {\r\n  sourceNode: NodeBase;\r\n  targetNode: NodeBase;\r\n  opacity?: number;\r\n  targetPosition?: Point;\r\n  sourcePosition?: Point;\r\n  lineWidth?: number;\r\n}): Line {\r\n  const { lineInnerHeight, upColor, downColor } = renderConfig.getConfig();\r\n  // 首先判断方向 默认从源节点上部出发\r\n  let isUp = true;\r\n\r\n  const targetY = targetPosition ? targetPosition[1] : targetNode.y;\r\n  const targetX = targetPosition ? targetPosition[0] : targetNode.x;\r\n  const sourceY = sourcePosition ? sourcePosition[1] : sourceNode.y;\r\n  const sourceX = sourcePosition ? sourcePosition[0] : sourceNode.x;\r\n  const targetUpY = targetY - targetNode.getTopDistance();\r\n\r\n  const targetBottomY = targetY + targetNode.getBottomDistance();\r\n\r\n  //坐标相等 也要上部出发\r\n  if (targetY > sourceY) {\r\n    isUp = false;\r\n  }\r\n\r\n  const startY = sourceY + (isUp ? -sourceNode.getTopDistance() : sourceNode.getBottomDistance());\r\n\r\n  //第一个","relevantFile":"<file_path>src/core/Animation/animationImpl/global.ts\nimport { easingFunction } from '@/core/config';\nimport { FrameAnimation } from '..';\nimport { ActionConfig, AnimationConfig } from '../../types';\n/**\n * @param\n *  独立动画 建议配在已有动画的action里面,  不走正常的动画时间线\n *  全局缩放 直接塞到Animation实例,不返回内容\n *\n *  ation入参格式：\n *  {\n *  type: AnimationType.GlobalScale,\n *    config: {\n *      独立动画 单独配置时间\n *      time: number,\n *      zoom:[{zoom:0.75,zoomX:'50%',zoomY:'25%'},{duration:10000}];\n *  }\n * }\n * @returns\n */\nexport function globalAnimation({\n  action,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n}): AnimationConfig[] {\n  const { config } = action;\n  const { zoom, time } = config;\n  const [zoomScale, option] = zoom;\n\n  //全局动画 统一添加ease\n  option.easing = easingFunction;\n  //设置了zoom 缩放，就添加到全局动画\n  if (zoom && time) {\n    context.addRoot({\n      time,\n      zoomTo: [zoomScale, option],\n    });\n  }\n  return [];\n}\n<file_path>src/core/Animation/animationImpl/treeAddNode.ts\nimport { ActionConfig, AnimationConfig, AnimationType, Point } from '../../types';\nimport { Line, NodeBase, Tree } from '../../Node';\nimport {\n  deepClone,\n  deleteLineKey,\n  generateLine,\n  getExtendByLine,\n  getTimeLineByPoint,\n  handleActionToAnimation,\n  mergeAction,\n} from '../../utils';\n\ninterface TreeAddNodeOption {\n  position?: Point;\n  mainPosition?: Point;\n  mode?: string;\n  duration?: number;\n  opacity?: number;\n  childPosition?: Point;\n  lineWidth?: number;\n}\n\nconst doFadeMode = (\n  node: NodeBase,\n  final: Object,\n  {\n    time,\n    duration,\n    opacity,\n    childPosition,\n  }: { time: number; duration: number; opacity: number; childPosition: Point | undefined }\n) => {\n  //add线的情况 要保证最初也是有线的\n  if (!node.initStatus.lineInit) {\n    node.initStatus.lineInit = deepClone({\n      source: node.line.source,\n      target: node.line.target,\n      line: node.line.lineRender,\n    });\n  }\n  let configTime = time;\n  //前后fade动画的配置\n  let beforeConfig = {\n    value: 0,\n    id: node.id,\n    onlyLine: true,\n  };\n  mergeAction(final, configTime, beforeConfig, AnimationType.Fade);\n\n  configTime = time + duration;\n  let afterConfig = {\n    value: opacity,\n    id: node.id,\n    onlyLine: true,\n  };\n  mergeAction(final, configTime, afterConfig, AnimationType.Fade);\n\n  //fade 模式下需要支持node的child\n  let child = node.child;\n  if (child) {\n<file_path>src/core/Animation/animationImpl/treeMove.ts\nimport { NodeBase, Tree } from '@/core/Node';\nimport { FrameAnimation } from '..';\nimport {\n  ActionConfig,\n  AnimationConfig,\n  AnimationType,\n  NodesActionConfig,\n  Point,\n} from '../../types';\nimport { getNodeById, handleActionToAnimation, mergeAction } from '../../utils';\n\n//根据主节点的位移,计算子节点的位移\nconst handlePoint = ({\n  oriNode,\n  mainValue,\n  targetValue,\n}: {\n  oriNode: NodeBase;\n  mainValue: Point;\n  targetValue: Point;\n}) => {\n  const linePoints = oriNode.line.lineRender.render.opts.shape.points;\n  const getPointsInTreeMove = (oriPoints: number[][], value: Point) => [\n    [oriPoints[0][0] + value[0], oriPoints[0][1] + value[1]],\n    [oriPoints[1][0] + value[0], oriPoints[1][1] + value[1]],\n    [oriPoints[2][0] + targetValue[0], oriPoints[2][1] + targetValue[1]],\n    [oriPoints[3][0] + targetValue[0], oriPoints[3][1] + targetValue[1]],\n  ];\n  return getPointsInTreeMove(linePoints, mainValue);\n};\n\n/**\n * 高级动画\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n * // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * action格式：\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n<file_path>src/core/Animation/index.ts\nimport { NodeBase, Tree } from '../Node';\nimport {\n  AnimationConfig,\n  AnimationType,\n  GlobalConfig,\n  GlobalObject,\n  NodesActionConfig,\n} from '../types';\nimport { resetAllNodes } from '../utils';\nimport { outputData } from '../utils/format';\nimport { fadeAnimation } from './animationImpl/fade';\nimport { scaleAnimation } from './animationImpl/scale';\nimport { moveAnimation } from './animationImpl/move';\nimport { lineAnimation } from './animationImpl/line';\nimport { bezierThroughAnimation } from './animationImpl/bezier';\nimport { processAnimationList } from './preProcess';\nimport { easingFunction } from '../config';\nimport { defaultAnimation } from './animationImpl/default';\n\ninterface TypeWithNodeActionConfig {\n  [type: number]: NodesActionConfig[];\n}\ninterface TimeWithTypeNodeActionConfig {\n  [time: number]: TypeWithNodeActionConfig;\n}\n\ninterface AnimationHandlerMap {\n  [key: string]: Function;\n}\n\ninterface MiddleType {\n  nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig>;\n  allTimeLine: number[];\n  ignoreTimeNodes: { [key: number]: string[] };\n}\nexport class FrameAnimation {\n  private trees: Tree[];\n  private nodes: NodeBase[];\n  private animationHandlers: AnimationHandlerMap;\n  private root!: GlobalObject;\n  //首帧动画对透明度为0的进行忽略,后续帧的不需要忽略\n  private hasDoneNodeIgnored: boolean = false;\n  constructor({ trees, nodes }: { trees?: Tree[]; nodes?: NodeBase[] }) {\n    this.trees = trees ?? [];\n    this.nodes = nodes ?? [];\n    this.animationHandlers = {};\n    // 注册支持的动画\n    this.registerAnimation();\n  }\n  //注册动画\n  registerAnimation() {\n    this.registerAnimationHandler(String(AnimationType.Fade), fadeAnimation);\n    this.registerAnimationHandler(String(AnimationType.Move), moveAnimation);\n    this.registerAnimationHandler(String(AnimationType.Scale), scaleAnimation);\n    this.registerAnimationHandler(String(AnimationType.Line), lineAnimation);\n    this.registerAnimationHandler(String(AnimationType.BezierThrough), bezierThroughAnimation);\n  }\n  registerAnimationHandler(key: string, func: Function) {\n    this.animationHandlers[key] = func;\n  }","relevantFileList":[],"filePath":"src/core/utils/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 节点初始化\r","deepseek-chat-lite":" 动画处理函数","deepseek-chat":"```\n// Start Generation Here\n/**\n * 处理动画动作并将其","copilot":" 用于deleteLine的标识"}},{"prefix":"import { easingFunction, renderConfig } from '../config';\nimport { Line, NodeBase } from '../Node';\nimport { AnimationConfig, Point, ProcessAnimationValue } from '../types';\nimport { clearEffect } from './format';\n\n// 用于deleteL","infill":"ine的标识","suffix":"\r\nexport const deleteLineKey = 'deleteLine';\r\n\r\n//line默认配置，线的颜色，透明度，线宽，给底层库\r\nexport const getLineConfig = (\r\n  points: Point[],\r\n  lineColor: string,\r\n  opacity: number = 1,\r\n  lineWidth: number = renderConfig.getConfig().lineWidth\r\n) => ({\r\n  render: {\r\n    shape: 'Polyline',\r\n    opts: {\r\n      shape: {\r\n        points,\r\n      },\r\n      style: {\r\n        lineWidth,\r\n        stroke: lineColor,\r\n        opacity,\r\n      },\r\n      z: 2,\r\n    },\r\n  },\r\n  animation: {\r\n    when: [],\r\n  },\r\n});\r\n//node默认配置，位置，透明度，给底层库\r\nexport const getNodeConfig = (node: NodeBase) => {\r\n  const render = {\r\n    shape: 'Rect',\r\n    opts: {\r\n      position: node.position,\r\n    },\r\n    z: 2,\r\n  };\r\n  const base = {\r\n    id: node.id,\r\n    data: node.data,\r\n    // animation: node.animation,\r\n    render,\r\n  };\r\n  if (node.lottieW && node.lottieH) {\r\n    base.render.opts['shape'] = {\r\n      width: node.lottieW,\r\n      height: node.lottieH,\r\n    };\r\n  }\r\n  return deepClone(base);\r\n};\r\n\r\n//获取线的初始配置\r\nexport function getLineInitByNode(node: NodeBase) {\r\n  return deepClone({\r\n    source: node.line.source,\r\n    target: node.line.target,\r\n    line: node.line.lineRender,\r\n  });\r\n}\r\n\r\n// 需要进行时间判定,会有相同时间的不同type进行\r\n// 需要兼容 贝塞尔曲线动画\r\nexport function setAnimationToNode(\r\n  node: NodeBase,\r\n  time: number,\r\n  option?: {\r\n    onlyLine?: boolean;\r\n    withLine?: boolean;\r\n    addEasing?: boolean;\r\n  }\r\n) {\r\n  const { onlyLine = false, withLine = true, addEasing = false } = option ?? {};\r\n  if (!onlyLine) {\r\n    animationHandleNode(node, time, addEasing);\r\n  }\r\n  if (withLine && node.hasLine) {\r\n    animationHandleLine(node, time, addEasing);\r\n  }\r\n}\r\n//\r\nfunction animationHandleNode(node: NodeBase, time: number, addEasing: boolean) {\r\n  let valNode: ProcessAnimationValue = deepClone({\r\n    time,\r\n    value: {\r\n      position: node.position,\r\n      style: {\r\n        opacity: node.data.opacity,\r\n      },\r\n      scale: node.scale,\r\n    },\r\n  });\r\n  if (node.moveAlongTheCurve) {\r\n    valNode.moveAlongTheCurve = node.moveAlongTheCurve;\r\n    const percent = node.moveAlongTheCurve.percent;\r\n    if (percent === 1) {\r\n      node.moveAlongTheCurve = null;\r\n    }\r\n  }\r\n  if (addEasing) {\r\n    valNode.easing = easingFunction;\r\n  }\r\n\r\n  let lastIndex = node.animation.when.length - 1;\r\n  let lastAnimationWhen = node.animation.when[lastIndex];\r\n  if (lastAnimationWhen) {\r\n    if (lastAnimationWhen.time === time) {\r\n      node.animation.when[lastIndex] = valNode;\r\n    } else {\r\n      node.animation.when = [...node.animation.when, valNode];\r\n    }\r\n  } else {\r\n    node.animation.when = [valNode];\r\n  }\r\n}\r\n\r\nfunction animationHandleLine(node: NodeBase, time: number, addEasing: boolean) {\r\n  let valLine: ProcessAnimationValue;\r\n\r\n  valLine = deepClone({\r\n    time,\r\n    value: node.line.lineRender.render.opts,\r\n  });\r\n  if (addEasing) {\r\n    valLine.easing = easingFunction;\r\n  }\r\n  let lastIndex = node.line.lineRender.animation.when.length - 1;\r\n\r\n  let lastAnimationWhen = node.line.lineRender.animation.when[lastIndex];\r\n  if (lastAnimationWhen) {\r\n    if (lastAnimationWhen.time === time) {\r\n      node.line.lineRender.animation.when[lastIndex] = valLine;\r\n    } else {\r\n      node.line.lineRender.animation.when = [...node.line.lineRender.animation.when, valLine];\r\n    }\r\n  } else {\r\n    node.line.lineRender.animation.when = [valLine];\r\n  }\r\n}\r\n\r\nexport function deepClone<T>(obj: T): T {\r\n  if (!obj) return obj;\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\n/**\r\n * 生成一个基于原始id和时间戳的唯一id\r\n * @param {string} id - 原始id\r\n * @returns {string} - 生成的唯一id\r\n */\r\n\r\nexport function generateId(id: string) {\r\n  /**\r\n   * 获取当前时间戳的后6位作为时间戳标识\r\n   */\r\n  const timestamp = Date.now().toString().slice(-6);\r\n  /**\r\n   * 获取4位随机数作为随机数标识\r\n   */\r\n  const randomNumber = Math.random().toString(36).substring(2, 6);\r\n  /**\r\n   * 拼接最终id\r\n   */\r\n  return `${id}_${timestamp}_${randomNumber}`;\r\n}\r\n\r\n/**\r\n * 节点平移-处理线\r\n * @param points\r\n * @param value\r\n * @returns\r\n */\r\nexport function handleLine(points: number[][], value: number[], node: NodeBase) {\r\n  const _points = deepClone(points);\r\n  // 先实现4点折线的平移\r\n  if (value[0]) {\r\n    //x轴\r\n    _points[2][0] = _points[2][0] + value[0];\r\n    _points[3][0] = _points[3][0] + value[0];\r\n  }\r\n  if (value[1]) {\r\n    // y轴的移动 对于超过 1段线的情况 需要特殊处理\r\n    //折线,动作默认朝上\r\n    let lineDirectionUp = true;\r\n    let animationDirectionUp = true;\r\n    //最外层的一段高度\r\n    const outOffset = _points[3][1] - _points[2][1];\r\n    if (outOffset > 0) {\r\n      //线朝下\r\n      lineDirectionUp = false;\r\n    }\r\n    if (value[1] > 0) {\r\n      //动作朝下\r\n      animationDirectionUp = false;\r\n    }\r\n    // y轴移动的绝对值\r\n    const absValueY = Math.abs(value[1]);\r\n    // 最外层的一段高度的绝对值\r\n    const outDistance = Math.abs(outOffset);\r\n    /** 特殊场景 子节点不适用\r\n     * 如果动画移动方向和线原有方向不一致  且y轴移动比一段线更多,意味着线的方向要开始变化\r\n     */\r\n    if (lineDirectionUp !== animationDirectionUp && absValueY > outDistance) {\r\n      // 节点高度\r\n      const nodeHeight = node.getBottomDistance() + node.getTopDistance();\r\n      // 节点高度 + 最外层的一段高度\r\n      const judgeHeight = outDistance + nodeHeight;\r\n      changeDirection(judgeHeight, absValueY, animationDirectionUp, _points);\r\n    } else {\r\n      // 默认 y轴坐标移动\r\n      _points[3][1] = _points[3][1] + value[1];\r\n    }\r\n  }\r\n  return _points;\r\n}\r\n\r\nconst changeDirection = (\r\n  judgeHeight: number,\r\n  absValueY: number,\r\n  animationDirectionUp: boolean,\r\n  _points: number[][]\r\n) => {\r\n  if (absValueY <= judgeHeight) {\r\n    // 如果y轴移动距离小于判断距离 即线与节点重合 线的末尾段应该是水平的\r\n    _points[3][1] = _points[2][1];\r\n  } else if (absValueY >= judgeHeight) {\r\n    // 如果y轴移动距离大于等于判断距离  即需要发生方向上的变化\r\n    let offset = absValueY - judgeHeight;\r\n    if (animationDirectionUp) {\r\n      offset = -offset;\r\n    }\r\n    // 方向变化要减去节点高度  如折线原本位于节点上方,现在会处于节点下方\r\n    _points[3][1] = _points[2][1] + offset;\r\n  }\r\n};\r\n\r\nexport function getNodeById(id: string, nodes: NodeBase[]) {\r\n  for (let node of nodes) {\r\n    if (node.id === id) {\r\n      return node;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 初始化所有节点\r\n * 1. 清空所有动画 2.初始化init状态 3.进行deleteline的副作用\r\n * @param nodes\r\n */\r\nexport function resetAllNodes(nodes: NodeBase[]) {\r\n  for (const node of nodes) {\r\n    clearEffect(node);\r\n\r\n    node.animation.when = [];\r\n\r\n    const nodeInit = getNodeConfig(node);\r\n    node.initStatus.nodeInit = nodeInit;\r\n    if (node.hasLine) {\r\n      const lineInit = getLineInitByNode(node);\r\n      node.initStatus.lineInit = lineInit;\r\n    } else {\r\n      node.initStatus.lineInit = null;\r\n    }\r\n\r\n    if (node.hasLine && node.line.lineRender.animation) {\r\n      node.line.lineRender.animation.when = [];\r\n    }\r\n  }\r\n}\r\n\r\n// 2个节点确定一条折线\r\nexport function generateLine({\r\n  sourceNode,\r\n  targetNode,\r\n  opacity,\r\n  targetPosition,\r\n  lineWidth,\r\n  sourcePosition,\r\n}: {\r\n  sourceNode: NodeBase;\r\n  targetNode: NodeBase;\r\n  opacity?: number;\r\n  targetPosition?: Point;\r\n  sourcePosition?: Point;\r\n  lineWidth?: number;\r\n}): Line {\r\n  const { lineInnerHeight, upColor, downColor } = renderConfig.getConfig();\r\n  // 首先判断方向 默认从源节点上部出发\r\n  let isUp = true;\r\n\r\n  const targetY = targetPosition ? targetPosition[1] : targetNode.y;\r\n  const targetX = targetPosition ? targetPosition[0] : targetNode.x;\r\n  const sourceY = sourcePosition ? sourcePosition[1] : sourceNode.y;\r\n  const sourceX = sourcePosition ? sourcePosition[0] : sourceNode.x;\r\n  const targetUpY = targetY - targetNode.getTopDistance();\r\n\r\n  const targetBottomY = targetY + targetNode.getBottomDistance();\r\n\r\n  //坐标相等 也要上部出发\r\n  if (targetY > sourceY) {\r\n    isUp = false;\r\n  }\r\n\r\n  const startY = sourceY + (isUp ? -sourceNode.getTopDistance() : sourceNode.getBottomDistance());\r\n\r\n ","relevantFile":"<file_path>src/core/Animation/animationImpl/global.ts\nimport { easingFunction } from '@/core/config';\nimport { FrameAnimation } from '..';\nimport { ActionConfig, AnimationConfig } from '../../types';\n/**\n * @param\n *  独立动画 建议配在已有动画的action里面,  不走正常的动画时间线\n *  全局缩放 直接塞到Animation实例,不返回内容\n *\n *  ation入参格式：\n *  {\n *  type: AnimationType.GlobalScale,\n *    config: {\n *      独立动画 单独配置时间\n *      time: number,\n *      zoom:[{zoom:0.75,zoomX:'50%',zoomY:'25%'},{duration:10000}];\n *  }\n * }\n * @returns\n */\nexport function globalAnimation({\n  action,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n}): AnimationConfig[] {\n  const { config } = action;\n  const { zoom, time } = config;\n  const [zoomScale, option] = zoom;\n\n  //全局动画 统一添加ease\n  option.easing = easingFunction;\n  //设置了zoom 缩放，就添加到全局动画\n  if (zoom && time) {\n    context.addRoot({\n      time,\n      zoomTo: [zoomScale, option],\n    });\n  }\n  return [];\n}\n<file_path>src/core/Animation/animationImpl/treeAddNode.ts\nimport { ActionConfig, AnimationConfig, AnimationType, Point } from '../../types';\nimport { Line, NodeBase, Tree } from '../../Node';\nimport {\n  deepClone,\n  deleteLineKey,\n  generateLine,\n  getExtendByLine,\n  getTimeLineByPoint,\n  handleActionToAnimation,\n  mergeAction,\n} from '../../utils';\n\ninterface TreeAddNodeOption {\n  position?: Point;\n  mainPosition?: Point;\n  mode?: string;\n  duration?: number;\n  opacity?: number;\n  childPosition?: Point;\n  lineWidth?: number;\n}\n\nconst doFadeMode = (\n  node: NodeBase,\n  final: Object,\n  {\n    time,\n    duration,\n    opacity,\n    childPosition,\n  }: { time: number; duration: number; opacity: number; childPosition: Point | undefined }\n) => {\n  //add线的情况 要保证最初也是有线的\n  if (!node.initStatus.lineInit) {\n    node.initStatus.lineInit = deepClone({\n      source: node.line.source,\n      target: node.line.target,\n      line: node.line.lineRender,\n    });\n  }\n  let configTime = time;\n  //前后fade动画的配置\n  let beforeConfig = {\n    value: 0,\n    id: node.id,\n    onlyLine: true,\n  };\n  mergeAction(final, configTime, beforeConfig, AnimationType.Fade);\n\n  configTime = time + duration;\n  let afterConfig = {\n    value: opacity,\n    id: node.id,\n    onlyLine: true,\n  };\n  mergeAction(final, configTime, afterConfig, AnimationType.Fade);\n\n  //fade 模式下需要支持node的child\n  let child = node.child;\n  if (child) {\n<file_path>src/core/Animation/animationImpl/treeMove.ts\nimport { NodeBase, Tree } from '@/core/Node';\nimport { FrameAnimation } from '..';\nimport {\n  ActionConfig,\n  AnimationConfig,\n  AnimationType,\n  NodesActionConfig,\n  Point,\n} from '../../types';\nimport { getNodeById, handleActionToAnimation, mergeAction } from '../../utils';\n\n//根据主节点的位移,计算子节点的位移\nconst handlePoint = ({\n  oriNode,\n  mainValue,\n  targetValue,\n}: {\n  oriNode: NodeBase;\n  mainValue: Point;\n  targetValue: Point;\n}) => {\n  const linePoints = oriNode.line.lineRender.render.opts.shape.points;\n  const getPointsInTreeMove = (oriPoints: number[][], value: Point) => [\n    [oriPoints[0][0] + value[0], oriPoints[0][1] + value[1]],\n    [oriPoints[1][0] + value[0], oriPoints[1][1] + value[1]],\n    [oriPoints[2][0] + targetValue[0], oriPoints[2][1] + targetValue[1]],\n    [oriPoints[3][0] + targetValue[0], oriPoints[3][1] + targetValue[1]],\n  ];\n  return getPointsInTreeMove(linePoints, mainValue);\n};\n\n/**\n * 高级动画\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n * // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * action格式：\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n<file_path>src/core/Animation/index.ts\nimport { NodeBase, Tree } from '../Node';\nimport {\n  AnimationConfig,\n  AnimationType,\n  GlobalConfig,\n  GlobalObject,\n  NodesActionConfig,\n} from '../types';\nimport { resetAllNodes } from '../utils';\nimport { outputData } from '../utils/format';\nimport { fadeAnimation } from './animationImpl/fade';\nimport { scaleAnimation } from './animationImpl/scale';\nimport { moveAnimation } from './animationImpl/move';\nimport { lineAnimation } from './animationImpl/line';\nimport { bezierThroughAnimation } from './animationImpl/bezier';\nimport { processAnimationList } from './preProcess';\nimport { easingFunction } from '../config';\nimport { defaultAnimation } from './animationImpl/default';\n\ninterface TypeWithNodeActionConfig {\n  [type: number]: NodesActionConfig[];\n}\ninterface TimeWithTypeNodeActionConfig {\n  [time: number]: TypeWithNodeActionConfig;\n}\n\ninterface AnimationHandlerMap {\n  [key: string]: Function;\n}\n\ninterface MiddleType {\n  nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig>;\n  allTimeLine: number[];\n  ignoreTimeNodes: { [key: number]: string[] };\n}\nexport class FrameAnimation {\n  private trees: Tree[];\n  private nodes: NodeBase[];\n  private animationHandlers: AnimationHandlerMap;\n  private root!: GlobalObject;\n  //首帧动画对透明度为0的进行忽略,后续帧的不需要忽略\n  private hasDoneNodeIgnored: boolean = false;\n  constructor({ trees, nodes }: { trees?: Tree[]; nodes?: NodeBase[] }) {\n    this.trees = trees ?? [];\n    this.nodes = nodes ?? [];\n    this.animationHandlers = {};\n    // 注册支持的动画\n    this.registerAnimation();\n  }\n  //注册动画\n  registerAnimation() {\n    this.registerAnimationHandler(String(AnimationType.Fade), fadeAnimation);\n    this.registerAnimationHandler(String(AnimationType.Move), moveAnimation);\n    this.registerAnimationHandler(String(AnimationType.Scale), scaleAnimation);\n    this.registerAnimationHandler(String(AnimationType.Line), lineAnimation);\n    this.registerAnimationHandler(String(AnimationType.BezierThrough), bezierThroughAnimation);\n  }\n  registerAnimationHandler(key: string, func: Function) {\n    this.animationHandlers[key] = func;\n  }","relevantFileList":[],"filePath":"src/core/utils/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ine的动画\r","deepseek-chat-lite":"ineKey的副作用\r","deepseek-chat":"```\n// Start Generation Here\n/**\n * 处理动画动作并将其","copilot":"ine的标识"}},{"prefix":"import { easingFunction, renderConfig } from '../config';\nimport { Line, NodeBase } from '../Node';\nimport { AnimationConfig, Point, ProcessAnimationValue } from '../types';\nimport { clearEffect } from './format';\n\n// 用于deleteLine的标识\nexport const deleteLineKey = 'deleteLine';\n\n//line默认配置，线的颜色，透明度，线宽，给底层库\nexport const getLineConfig = (\n  points: Point[],\n  lineColor: string,\n  opacity: number = 1,\n  lineWidth: number = renderConfig.getConfig().lineWidth\n) => ({\n  render: {\n    shape: 'Polyline',\n    opts: {\n      shape: {\n        points,\n      },\n      style: {\n        lineWidth,\n        stroke: lineColor,\n        opacity,\n      },\n      z: 2,\n    },\n  },\n  animation: {\n    when: [],\n  },\n});\n//","infill":"node默认配置，位置，透明度，给底层库","suffix":"\r\nexport const getNodeConfig = (node: NodeBase) => {\r\n  const render = {\r\n    shape: 'Rect',\r\n    opts: {\r\n      position: node.position,\r\n    },\r\n    z: 2,\r\n  };\r\n  const base = {\r\n    id: node.id,\r\n    data: node.data,\r\n    // animation: node.animation,\r\n    render,\r\n  };\r\n  if (node.lottieW && node.lottieH) {\r\n    base.render.opts['shape'] = {\r\n      width: node.lottieW,\r\n      height: node.lottieH,\r\n    };\r\n  }\r\n  return deepClone(base);\r\n};\r\n\r\n//获取线的初始配置\r\nexport function getLineInitByNode(node: NodeBase) {\r\n  return deepClone({\r\n    source: node.line.source,\r\n    target: node.line.target,\r\n    line: node.line.lineRender,\r\n  });\r\n}\r\n\r\n// 需要进行时间判定,会有相同时间的不同type进行\r\n// 需要兼容 贝塞尔曲线动画\r\nexport function setAnimationToNode(\r\n  node: NodeBase,\r\n  time: number,\r\n  option?: {\r\n    onlyLine?: boolean;\r\n    withLine?: boolean;\r\n    addEasing?: boolean;\r\n  }\r\n) {\r\n  const { onlyLine = false, withLine = true, addEasing = false } = option ?? {};\r\n  if (!onlyLine) {\r\n    animationHandleNode(node, time, addEasing);\r\n  }\r\n  if (withLine && node.hasLine) {\r\n    animationHandleLine(node, time, addEasing);\r\n  }\r\n}\r\n// 处理节点动画\r\nfunction animationHandleNode(node: NodeBase, time: number, addEasing: boolean) {\r\n  let valNode: ProcessAnimationValue = deepClone({\r\n    time,\r\n    value: {\r\n      position: node.position,\r\n      style: {\r\n        opacity: node.data.opacity,\r\n      },\r\n      scale: node.scale,\r\n    },\r\n  });\r\n  if (node.moveAlongTheCurve) {\r\n    valNode.moveAlongTheCurve = node.moveAlongTheCurve;\r\n    const percent = node.moveAlongTheCurve.percent;\r\n    if (percent === 1) {\r\n      node.moveAlongTheCurve = null;\r\n    }\r\n  }\r\n  if (addEasing) {\r\n    valNode.easing = easingFunction;\r\n  }\r\n\r\n  let lastIndex = node.animation.when.length - 1;\r\n  let lastAnimationWhen = node.animation.when[lastIndex];\r\n  if (lastAnimationWhen) {\r\n    if (lastAnimationWhen.time === time) {\r\n      node.animation.when[lastIndex] = valNode;\r\n    } else {\r\n      node.animation.when = [...node.animation.when, valNode];\r\n    }\r\n  } else {\r\n    node.animation.when = [valNode];\r\n  }\r\n}\r\n\r\nfunction animationHandleLine(node: NodeBase, time: number, addEasing: boolean) {\r\n  let valLine: ProcessAnimationValue;\r\n\r\n  valLine = deepClone({\r\n    time,\r\n    value: node.line.lineRender.render.opts,\r\n  });\r\n  if (addEasing) {\r\n    valLine.easing = easingFunction;\r\n  }\r\n  let lastIndex = node.line.lineRender.animation.when.length - 1;\r\n\r\n  let lastAnimationWhen = node.line.lineRender.animation.when[lastIndex];\r\n  if (lastAnimationWhen) {\r\n    if (lastAnimationWhen.time === time) {\r\n      node.line.lineRender.animation.when[lastIndex] = valLine;\r\n    } else {\r\n      node.line.lineRender.animation.when = [...node.line.lineRender.animation.when, valLine];\r\n    }\r\n  } else {\r\n    node.line.lineRender.animation.when = [valLine];\r\n  }\r\n}\r\n\r\nexport function deepClone<T>(obj: T): T {\r\n  if (!obj) return obj;\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\n/**\r\n * 生成一个基于原始id和时间戳的唯一id\r\n * @param {string} id - 原始id\r\n * @returns {string} - 生成的唯一id\r\n */\r\n\r\nexport function generateId(id: string) {\r\n  /**\r\n   * 获取当前时间戳的后6位作为时间戳标识\r\n   */\r\n  const timestamp = Date.now().toString().slice(-6);\r\n  /**\r\n   * 获取4位随机数作为随机数标识\r\n   */\r\n  const randomNumber = Math.random().toString(36).substring(2, 6);\r\n  /**\r\n   * 拼接最终id\r\n   */\r\n  return `${id}_${timestamp}_${randomNumber}`;\r\n}\r\n\r\n/**\r\n * 节点平移-处理线\r\n * @param points\r\n * @param value\r\n * @returns\r\n */\r\nexport function handleLine(points: number[][], value: number[], node: NodeBase) {\r\n  const _points = deepClone(points);\r\n  // 先实现4点折线的平移\r\n  if (value[0]) {\r\n    //x轴\r\n    _points[2][0] = _points[2][0] + value[0];\r\n    _points[3][0] = _points[3][0] + value[0];\r\n  }\r\n  if (value[1]) {\r\n    // y轴的移动 对于超过 1段线的情况 需要特殊处理\r\n    //折线,动作默认朝上\r\n    let lineDirectionUp = true;\r\n    let animationDirectionUp = true;\r\n    //最外层的一段高度\r\n    const outOffset = _points[3][1] - _points[2][1];\r\n    if (outOffset > 0) {\r\n      //线朝下\r\n      lineDirectionUp = false;\r\n    }\r\n    if (value[1] > 0) {\r\n      //动作朝下\r\n      animationDirectionUp = false;\r\n    }\r\n    // y轴移动的绝对值\r\n    const absValueY = Math.abs(value[1]);\r\n    // 最外层的一段高度的绝对值\r\n    const outDistance = Math.abs(outOffset);\r\n    /** 特殊场景 子节点不适用\r\n     * 如果动画移动方向和线原有方向不一致  且y轴移动比一段线更多,意味着线的方向要开始变化\r\n     */\r\n    if (lineDirectionUp !== animationDirectionUp && absValueY > outDistance) {\r\n      // 节点高度\r\n      const nodeHeight = node.getBottomDistance() + node.getTopDistance();\r\n      // 节点高度 + 最外层的一段高度\r\n      const judgeHeight = outDistance + nodeHeight;\r\n      changeDirection(judgeHeight, absValueY, animationDirectionUp, _points);\r\n    } else {\r\n      // 默认 y轴坐标移动\r\n      _points[3][1] = _points[3][1] + value[1];\r\n    }\r\n  }\r\n  return _points;\r\n}\r\n\r\nconst changeDirection = (\r\n  judgeHeight: number,\r\n  absValueY: number,\r\n  animationDirectionUp: boolean,\r\n  _points: number[][]\r\n) => {\r\n  if (absValueY <= judgeHeight) {\r\n    // 如果y轴移动距离小于判断距离 即线与节点重合 线的末尾段应该是水平的\r\n    _points[3][1] = _points[2][1];\r\n  } else if (absValueY >= judgeHeight) {\r\n    // 如果y轴移动距离大于等于判断距离  即需要发生方向上的变化\r\n    let offset = absValueY - judgeHeight;\r\n    if (animationDirectionUp) {\r\n      offset = -offset;\r\n    }\r\n    // 方向变化要减去节点高度  如折线原本位于节点上方,现在会处于节点下方\r\n    _points[3][1] = _points[2][1] + offset;\r\n  }\r\n};\r\n\r\nexport function getNodeById(id: string, nodes: NodeBase[]) {\r\n  for (let node of nodes) {\r\n    if (node.id === id) {\r\n      return node;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 初始化所有节点\r\n * 1. 清空所有动画 2.初始化init状态 3.进行deleteline的副作用\r\n * @param nodes\r\n */\r\nexport function resetAllNodes(nodes: NodeBase[]) {\r\n  for (const node of nodes) {\r\n    clearEffect(node);\r\n\r\n    node.animation.when = [];\r\n\r\n    const nodeInit = getNodeConfig(node);\r\n    node.initStatus.nodeInit = nodeInit;\r\n    if (node.hasLine) {\r\n      const lineInit = getLineInitByNode(node);\r\n      node.initStatus.lineInit = lineInit;\r\n    } else {\r\n      node.initStatus.lineInit = null;\r\n    }\r\n\r\n    if (node.hasLine && node.line.lineRender.animation) {\r\n      node.line.lineRender.animation.when = [];\r\n    }\r\n  }\r\n}\r\n\r\n// 2个节点确定一条折线\r\nexport function generateLine({\r\n  sourceNode,\r\n  targetNode,\r\n  opacity,\r\n  targetPosition,\r\n  lineWidth,\r\n  sourcePosition,\r\n}: {\r\n  sourceNode: NodeBase;\r\n  targetNode: NodeBase;\r\n  opacity?: number;\r\n  targetPosition?: Point;\r\n  sourcePosition?: Point;\r\n  lineWidth?: number;\r\n}): Line {\r\n  const { lineInnerHeight, upColor, downColor } = renderConfig.getConfig();\r\n  // 首先判断方向 默认从源节点上部出发\r\n  let isUp = true;\r\n\r\n  const targetY = targetPosition ? targetPosition[1] : targetNode.y;\r\n  const targetX = targetPosition ? targetPosition[0] : targetNode.x;\r\n  const sourceY = sourcePosition ? sourcePosition[1] : sourceNode.y;\r\n  const sourceX = sourcePosition ? sourcePosition[0] : sourceNode.x;\r\n  const targetUpY = targetY - targetNode.getTopDistance();\r\n\r\n  const targetBottomY = targetY + targetNode.getBottomDistance();\r\n\r\n  //坐标相等 也要上部出发\r\n  if (targetY > sourceY) {\r\n    isUp = false;\r\n  }\r\n\r\n  const startY = sourceY + (isUp ? -sourceNode.getTopDistance() : sourceNode.getBottomDistance());\r\n\r\n  //第一个转折的y\r\n  let startPolyY = startY + (isUp ? -lineInnerHeight : lineInnerHeight);\r\n  //默认不需要折\r\n  let endY = startPolyY;\r\n  if (targetUpY > startPolyY) {\r\n    //往下折\r\n    endY = targetUpY;\r\n  } else if (targetBottomY < startPolyY) {\r\n    endY = targetBottomY;\r\n    //往上折\r\n  } else {\r\n    // 特殊情况\r\n    startPolyY = targetUpY;\r\n    endY = targetUpY;\r\n  }\r\n\r\n  const linePosition: Point[] = [\r\n    [sourceX, startY],\r\n    [sourceX, startPolyY],\r\n    [targetX, startPolyY],\r\n    [targetX, endY],\r\n  ];\r\n\r\n  return new Line({","relevantFile":"<file_path>src/core/utils/format.ts\nimport { NodeBase } from '../Node';\nimport { GlobalObject } from '../types';\n/**\n * 对输入的trees,nodes 进行 基础库的适配输出\n * 因为基础库也是对象引用,所以需要进行对象的深拷贝输出\n * @param trees\n * @param nodes\n */\nexport function outputData(nodeArr: NodeBase[], root: GlobalObject, doIgnore: boolean) {\n  let nodes: any[] = [];\n  let edges: any[] = [];\n  for (let node of nodeArr) {\n    const nodeInit = node.initStatus.nodeInit;\n    nodeInit.animation = node.animation;\n    doIgnore && handleIgnore(nodeInit);\n    nodes.push(deepClone(nodeInit));\n    const lineInit = node.initStatus.lineInit;\n    if (lineInit) {\n      lineInit.line.animation = node.line.lineRender.animation;\n      edges.push(deepClone(lineInit));\n    }\n  }\n  return { nodes, edges, root: deepClone(root) };\n}\n\n/**\n * 处理ignore\n * @param node\n */\nfunction handleIgnore(node: any) {\n  if (node.data.opacity === 0 || node.data.adaptIgnore) {\n    // 透明度为0或 adaptIgnore 需要忽略\n    node.render.opts['ignore'] = true;\n    const whens = node.animation.when;\n    //非0前面一个的0 需要设置成ignore:false\n    let isNotZero = false;\n    for (let i = whens.length - 1; i >= 0; i--) {\n      const item = whens[i];\n      if (item.value?.style?.opacity === 0) {\n        if (isNotZero) {\n          item.value['ignore'] = false;\n        }\n        isNotZero = false;\n      } else {\n        //not zero\n        isNotZero = true;\n      }\n    }\n  }\n}\n\n/**\n * 清理副作用\n */\nexport const clearEffect = (node: NodeBase) => {\n  if (node.data[deleteLineKey]) {\n    node.deleteLine();\n    delete node.data[deleteLineKey];\n  }\n};\n<file_path>src/core/Animation/animationImpl/line.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/** \n  线动画 内部使用  不包括fade fade相关的在fade里面\n  config入参格式：\n  {\n         id: string,\n         pointsOption:{\n          value: number[][],\n          cb:function, 与value 互斥\n          arg:参数\n         },\n         style:{\n          lineWidth: number,\n          stroke:string,\n         }\n         addEasing:boolean,\n  },\n */\n\nexport function lineAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, pointsOption, style, addEasing } = config;\n\n  const oriNode = getNodeById(id, context.allNodes);\n  //当前节点有line\n  if (oriNode && oriNode.hasLine) {\n    //根据配置修改线的的位置\n    if (pointsOption) {\n      const { value, cb, arg } = pointsOption;\n      //value或者cb必须有一个\n      let pointValue = value ?? cb(arg);\n      oriNode.line.lineRender.render.opts.shape.points = pointValue;\n    }\n    //根据配置修改线的的style\n    if (style) {\n      oriNode.line.lineRender.render.opts.style = {\n        ...oriNode.line.lineRender.render.opts.style,\n        ...style,\n      };\n    }\n    setAnimationToNode(oriNode, time, { onlyLine: true, addEasing: pointsOption && addEasing });\n  }\n}\n<file_path>src/core/Animation/animationImpl/treeMove.ts\nimport { NodeBase, Tree } from '@/core/Node';\nimport { FrameAnimation } from '..';\nimport {\n  ActionConfig,\n  AnimationConfig,\n  AnimationType,\n  NodesActionConfig,\n  Point,\n} from '../../types';\nimport { getNodeById, handleActionToAnimation, mergeAction } from '../../utils';\n\n//根据主节点的位移,计算子节点的位移\nconst handlePoint = ({\n  oriNode,\n  mainValue,\n  targetValue,\n}: {\n  oriNode: NodeBase;\n  mainValue: Point;\n  targetValue: Point;\n}) => {\n  const linePoints = oriNode.line.lineRender.render.opts.shape.points;\n  const getPointsInTreeMove = (oriPoints: number[][], value: Point) => [\n    [oriPoints[0][0] + value[0], oriPoints[0][1] + value[1]],\n    [oriPoints[1][0] + value[0], oriPoints[1][1] + value[1]],\n    [oriPoints[2][0] + targetValue[0], oriPoints[2][1] + targetValue[1]],\n    [oriPoints[3][0] + targetValue[0], oriPoints[3][1] + targetValue[1]],\n  ];\n  return getPointsInTreeMove(linePoints, mainValue);\n};\n\n/**\n * 高级动画\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n * // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * action格式：\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n<file_path>src/core/Animation/animationImpl/fade.ts\nimport { NodeBase } from '@/core/Node';\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { renderConfig } from '../../config';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线之间有重叠，优先展示不透明的节点\n    z = 1;\n  } else {\n    const color = renderConfig.getCorrespondingColor(stroke, false);\n    if (color) {","relevantFileList":[],"filePath":"src/core/utils/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 获取节点的初始配置\r","deepseek-chat-lite":" 用于deleteLine的标识","deepseek-chat":"```\n// Start Generation Here\n/**\n * 处理节点的初始化","copilot":"node默认配置，位置，透明度，给底层库"}},{"prefix":"import { easingFunction, renderConfig } from '../config';\nimport { Line, NodeBase } from '../Node';\nimport { AnimationConfig, Point, ProcessAnimationValue } from '../types';\nimport { clearEffect } from './format';\n\n// 用于deleteLine的标识\nexport const deleteLineKey = 'deleteLine';\n\n//line默认配置，线的颜色，透明度，线宽，给底层库\nexport const getLineConfig = (\n  points: Point[],\n  lineColor: string,\n  opacity: number = 1,\n  lineWidth: number = renderConfig.getConfig().lineWidth\n) => ({\n  render: {\n    shape: 'Polyline',\n    opts: {\n      shape: {\n        points,\n      },\n      style: {\n        lineWidth,\n        stroke: lineColor,\n        opacity,\n      },\n      z: 2,\n    },\n  },\n  animation: {\n    when: [],\n  },\n});\n//node默认配置，位置，透明度，给底层库\nexport const getNodeConfig = (node: NodeBase) => {\n  const render = {\n    shape: 'Rect',\n    opts: {\n      position: node.position,\n    },\n    z: 2,\n  };\n  const base = {\n    id: node.id,\n    data: node.data,\n    // animation: node.animation,\n    render,\n  };\n  if (node.lottieW && node.lottieH) {\n    base.render.opts['shape'] = {\n      width: node.lottieW,\n      height: node.lottieH,\n    };\n  }\n  return deepClone(base);\n};\n\n//获取线的初始配置\nexport function getLineInitByNode(node: NodeBase) {\n  return deepClone({\n    source: node.line.source,\n    target: node.line.target,\n    line: node.line.lineRender,\n  });\n}\n\n// 需要进行时间判定,会有相同时间的不同type进行\n// 需要兼容 贝塞尔曲线动画\nexport function setAnimationToNode(\n  node: NodeBase,\n  time: number,\n  option?: {\n    onlyLine?: boolean;\n    withLine?: boolean;\n    addEasing?: boolean;\n  }\n) {\n  const { onlyLine = false, withLine = true, addEasing = false } = option ?? {};\n  if (!onlyLine) {\n    animationHandleNode(node, time, addEasing);\n  }\n  if (withLine && node.hasLine) {\n    animationHandleLine(node, time, addEasing);\n  }\n}\n// 处理节点的动画 合并到原有配置\nfunction animationHandleNode(node: NodeBase, time: number, addEasing: boolean) {\n  let valNode: ProcessAnimationValue = deepClone({\n    time,\n    value: {\n      position: node.position,\n      style: {\n        opacity: node.data.opacity,\n      },\n      scale: node.scale,\n    },\n  });\n  if (node.moveAlongTheCurve) {\n    valNode.moveAlongTheCurve = node.moveAlongTheCurve;\n    const percent = node.moveAlongTheCurve.percent;\n    if (percent === 1) {\n      node.moveAlongTheCurve = null;\n    }\n  }\n  if (addEasing) {\n    valNode.easing = easingFunction;\n  }\n\n  let lastIndex = node.animation.when.length - 1;\n  let lastAnimationWhen = node.animation.when[lastIndex];\n  if (lastAnimationWhen) {\n    if (lastAnimationWhen.time === time) {\n      node.animation.when[lastIndex] = valNode;\n    } else {\n      node.animation.when = [...node.animation.when, valNode];\n    }\n  } else {\n    node.animation.when = [valNode];\n  }\n}\n\n// 处理线的动画 合并到原有配置\nfunction animationHandleLine(node: NodeBase, time: number, addEasing: boolean) {\n  let valLine: ProcessAnimationValue;\n\n  valLine = deepClone({\n    time,\n    value: node.line.lineRender.render.opts,\n  });\n  if (addEasing) {\n    valLine.easing = easingFunction;\n  }\n  let lastIndex = node.line.lineRender.animation.when.length - 1;\n\n  let lastAnimationWhen = node.line.lineRender.animation.when[lastIndex];\n  if (lastAnimationWhen) {\n    if (lastAnimationWhen.time === time) {\n      node.line.lineRender.animation.when[lastIndex] = valLine;\n    } else {\n      node.line.lineRender.animation.when = [...node.line.lineRender.animation.when, valLine];\n    }\n  } else {\n    node.line.lineRender.animation.when = [valLine];\n  }\n}\n\n// 深拷贝\nexport function deepClone<T>(obj: T): T {\n  if (!obj) return obj;\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * 生成一个基于原始id和时间戳的唯一id\n * @param {string} id - 原始id\n * @returns {string} - 生成的唯一id\n */\n\nexport function generateId(id: string) {\n  /**\n   * 获取当前时间戳的后6位作为时间戳标识\n   */\n  const timestamp = Date.now().toString().slice(-6);\n  /**\n   * 获取4位随机数作为随机数标识\n   */\n  const randomNumber = Math.random().toString(36).substring(2, 6);\n  /**\n   * 拼接最终id\n   */\n  return `${id}_${timestamp}_${randomNumber}`;\n}\n\n/**\n * 节点平移-处理线\n * @param points\n * @param value\n * @returns\n */\nexport function handleLine(points: number[][], value: number[], node: NodeBase) {\n  const _points = deepClone(points);\n  // 先实现4点折线的平移\n  if (value[0]) {\n    //x轴\n    _points[2][0] = _points[2][0] + value[0];\n    _points[3][0] = _points[3][0] + value[0];\n  }\n  if (value[1]) {\n    // y轴的移动 对于超过 1段线的情况 需要特殊处理\n    //折线,动作默认朝上\n    let lineDirectionUp = true;\n    let animationDirectionUp = true;\n    //最外层的一段高度\n    const outOffset = _points[3][1] - _points[2][1];\n    if (outOffset > 0) {\n      //线朝下\n      lineDirectionUp = false;\n    }\n    if (value[1] > 0) {\n      //动作朝下\n      animationDirectionUp = false;\n    }\n    // y轴移动的绝对值\n    const absValueY = Math.abs(value[1]);\n    // 最外层的一段高度的绝对值\n    const outDistance = Math.abs(outOffset);\n    /** 特殊场景 子节点不适用\n     * 如果动画移动方向和线原有方向不一致  且y轴移动比一段线更多,意味着线的方向要开始变化\n     */\n    if (lineDirectionUp !== animationDirectionUp && absValueY > outDistance) {\n      // 节点高度\n      const nodeHeight = node.getBottomDistance() + node.getTopDistance();\n      // 节点高度 + 最外层的一段高度\n      const judgeHeight = outDistance + nodeHeight;\n      changeDirection(judgeHeight, absValueY, animationDirectionUp, _points);\n    } else {\n      // 默认 y轴坐标移动\n      _points[3][1] = _points[3][1] + value[1];\n    }\n  }\n  return _points;\n}\n\n// 处理线的方向变化\nconst changeDirection = (\n  judgeHeight: number,\n  absValueY: number,\n  animationDirectionUp: boolean,\n  _points: number[][]\n) => {\n  if (absValueY <= judgeHeight) {\n    // 如果y轴移动距离小于判断距离 即线与节点重合 线的末尾段应该是水平的\n    _points[3][1] = _points[2][1];\n  } else if (absValueY >= judgeHeight) {\n    // 如果y轴移动距离大于等于判断距离  即需要发生方向上的变化\n    let offset = absValueY - judgeHeight;\n    if (animationDirectionUp) {\n      offset = -offset;\n    }\n    // 方向变化要减去节点高度  如折线原本位于节点上方,现在会处于节点下方\n    _points[3][1] = _points[2][1] + offset;\n  }\n};\n\n// 通过id获取节点\nexport function getNodeById(id: string, nodes: NodeBase[]) {\n  for (let node of nodes) {\n    if (node.id === id) {\n      return node;\n    }\n  }\n  return null;\n}\n\n/**\n * 初始化所有节点\n * 1. 清空所有动画 2.初始化init状态 3.进行deleteline的副作用\n * @param nodes\n */\nexport function resetAllNodes(nodes: NodeBase[]) {\n  for (const node of nodes) {\n    clearEffect(node);\n\n    node.animation.when = [];\n\n    const nodeInit = getNodeConfig(node);\n    node.initStatus.nodeInit = nodeInit;\n    if (node.hasLine) {\n      const lineInit = getLineInitByNode(node);\n      node.initStatus.lineInit = lineInit;\n    } else {\n      node.initStatus.lineInit = null;\n    }\n\n    if (node.hasLine && node.line.lineRender.animation) {\n      node.line.lineRender.animation.when = [];\n    }\n  }\n}\n\n// 2个节点确定一条折线\nexport function generateLine({\n  sourceNode,\n  targetNode,\n  opacity,\n  targetPosition,\n  lineWidth,\n  sourcePosition,\n}: {\n  sourceNode: NodeBase;\n  targetNode: NodeBase;\n  opacity?: number;\n  targetPosition?: Point;\n  sourcePosition?: Point;\n  lineWidth?: number;\n}): Line {\n  const { lineInnerHeight, upColor, downColor } = renderConfig.getConfig();\n  // 首先判断方向 默认从源节点上部出发\n  let isUp = true;\n\n  const targetY = targetPosition ? targetPosition[1] : targetNode.y;\n  const targetX = targetPosition ? targetPosition[0] : targetNode.x;\n  const sourceY = sourcePosition ? sourcePosition[1] : sourceNode.y;\n  const sourceX = sourcePosition ? sourcePosition[0] : sourceNode.x;\n  const targetUpY = targetY - targetNode.getTopDistance();\n\n  const targetBottomY = targetY + targetNode.getBottomDistance();\n\n  //坐标相等 也要上部出发\n  if (targetY > sourceY) {\n    isUp = false;\n  }\n\n  const startY = sourceY + (isUp ? -sourceNode.getTopDistance() : sourceNode.getBottomDistance());\n\n  //第一个转折的y\n  let startPolyY = startY + (isUp ? -lineInnerHeight : lineInnerHeight);\n  //默认不需要折\n  let endY = startPolyY;\n  if (targetUpY > startPolyY) {\n    //往下折\n    endY = targetUpY;\n  } else if (targetBottomY < startPolyY) {\n    endY = targetBottomY;\n    //往上折","infill":"\r\nexport","suffix":"\r\nexport function handleActionToAnimation(final) {\r\n  const keys = Object.keys(final);\r\n  const animations: AnimationConfig[] = [];\r\n  for (const key of keys) {\r\n    animations.push({\r\n      time: Number(key),\r\n      action: final[key],\r\n    });\r\n  }\r\n  return animations;\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/core/utils/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat":"```\n// Start Generation Here\n  } else {\n    // 需要","copilot":"\r\nexport"}},{"prefix":"import { t } from '@/assets/lang/i8n';\nimport { NodeBase, Tree } from '@/core';\nimport { handleName, handleValue, getAssetById, NodeType, judgeImgSrcAvailable } from '..';\nimport {\n  getSeparateWidth,\n  getTargetCompanyInitY,\n  stockAndCashXDistance,\n  getTargetHolderRateY,\n  getSubCompanyInitY,\n  publicInvestorInitX,\n  getPublicInvestorCashInitPosition,\n  ipoCashInitX,\n  ipoStockInitX,\n  unitsInitPosition,\n  ipoAfterUnitsNodeInitPosition,\n  etsTargetInitX,\n  etsSubCompanyInitY,\n  etsTargetTreeRightDistance,\n  ipoPublicInvestorCashBezierAfterPosition,\n  getSubCompanyFinalPosition,\n  getLineLottiePositionX,\n} from '../compute';\nimport { CashNode } from '../Nodes/cash/cashNode';\nimport { HolderPeopleNode } from '../Nodes/holderPeople/peopleNode';\nimport { LabelNode } from '../Nodes/label/labelNode';\nimport { LottieNode } from '../Nodes/lottie/lottieNode';\nimport { StockNode } from '../Nodes/stock/stockNode';\nimport { SubCompanyNode } from '../Nodes/subCompany/subCompanyNode';\nimport { HookExtendOption } from './type';\n\nimport { MainNode } from '../Nodes/main/mainNode';\nimport { NonCurrentAssetNode } from '../Nodes/nonCurrentAsset/nonCurrentAssetNode';\nimport { getIpoLottieOffset } from '../lottie/helper';\n\n/**\n  preHook为当前动作的前置逻辑\n  middle","infill":"Hook为第二个动作的前置逻辑\r\n  内部为根据接口tian'c","suffix":"\r\n */\r\n\r\nexport const mergePreHook = (\r\n  option,\r\n  { process, index, assetsInfo, allRenderMap }: HookExtendOption\r\n) => {\r\n  const { tradeItem, tradeDesc } = process;\r\n  //过滤主公司(amd) 过滤子公司(subcompany)\r\n  const realItem = tradeItem.filter(\r\n    item => item.itemId !== option.mainNode.id && item.itemId !== option.subCompanyNode.id\r\n  );\r\n  // 剩下2个一个为xlinx 另一个为股东\r\n  let [targetCompany, targetHolder] = realItem;\r\n  const selfType = '975010';\r\n  const acquiredCompanyType = '975005';\r\n  if (\r\n    targetCompany.relationType !== selfType &&\r\n    targetCompany.relationType !== acquiredCompanyType\r\n  ) {\r\n    // 如果type匹配不上 就是顺序反了\r\n    const temp = targetCompany;\r\n    targetCompany = targetHolder;\r\n    targetHolder = temp;\r\n  }\r\n\r\n  const scX = getSeparateWidth();\r\n\r\n  option.targetCompanyHolderNode = new HolderPeopleNode({\r\n    id: targetHolder.itemId,\r\n    position: [scX, 0],\r\n    data: {\r\n      text: handleName(targetHolder.itemNameKey, targetHolder.itemName, targetHolder.fillerFields),\r\n      opacity: 0,\r\n      showOriginal: true,\r\n    },\r\n  });\r\n  const targetCompanyId = targetCompany.itemId;\r\n  option.targetCompanyNode = new SubCompanyNode({\r\n    id: targetCompanyId,\r\n    data: {\r\n      text: targetCompany.itemName,\r\n      value: handleValue(targetCompany.value, targetCompany.unit),\r\n      opacity: 0,\r\n    },\r\n  });\r\n  option.targetCompanyNode.position = [\r\n    scX,\r\n    getTargetCompanyInitY(option.targetCompanyNode, option.targetCompanyHolderNode),\r\n  ];\r\n\r\n  const leftSupportTypes = ['A86004', 'A86005'];\r\n  let [leftDesc, rightDesc] = tradeDesc;\r\n  //左右2个描述 根据leftSupportTypes区分\r\n  if (!leftSupportTypes.includes(leftDesc.tradeType)) {\r\n    const temp = leftDesc;\r\n    rightDesc = leftDesc;\r\n    leftDesc = temp;\r\n  }\r\n  // const stockAndCash = 'A91003',\r\n  const onlyStock = 'A91002';\r\n  const onlyCash = 'A91001';\r\n  const cashKey = 'MergerAcuqire_Stats_Method_Cash';\r\n  const stockKey = 'MergerAcuqire_Stats_Method_Stock';\r\n\r\n  const cashId = 'cash';\r\n  const stockId = 'stock';\r\n  const stockText = t(stockKey);\r\n  const cashText = t(cashKey);\r\n\r\n  const cashRender = allRenderMap.get(NodeType.Cash);\r\n  const stockRender = allRenderMap.get(NodeType.Stock);\r\n  // stock 和cash 通过tradeMethod来区分\r\n  if (leftDesc.tradeMethod === onlyCash) {\r\n    option.cashNode = new CashNode({\r\n      id: cashId,\r\n      position: [-scX, 0],\r\n      data: { text: cashText, opacity: 0 },\r\n    });\r\n    cashRender!.enableTail([\r\n      {\r\n        id: cashId,\r\n      },\r\n    ]);\r\n  } else if (leftDesc.tradeMethod === onlyStock) {\r\n    option.stockNode = new StockNode({\r\n      id: stockId,\r\n      position: [-scX, 0],\r\n      data: { text: stockText, opacity: 0 },\r\n    });\r\n    stockRender!.enableTail([\r\n      {\r\n        id: stockId,\r\n      },\r\n    ]);\r\n  } else {\r\n    //寻找 stock and cash\r\n    option.cashNode = new CashNode({\r\n      id: cashId,\r\n      position: [-scX, 0],\r\n      data: { text: cashText, opacity: 0 },\r\n    });\r\n    option.stockNode = new StockNode({\r\n      id: stockId,\r\n      position: [-scX, 0],\r\n      data: { text: stockText, opacity: 0 },\r\n    });\r\n    //需要根据stock and cash 处理\r\n    cashRender!.enableTail([\r\n      {\r\n        id: cashId,\r\n        //2个节点一起动 所以需要偏移\r\n        offset: [-stockAndCashXDistance, 0],\r\n      },\r\n    ]);\r\n  }\r\n\r\n  option.targetCompanyTree = new Tree({\r\n    mainNode: option.targetCompanyHolderNode,\r\n    downNodes: [],\r\n    upNodes: [],\r\n  });\r\n  // leftDesc.fillerFields 替换\r\n  const leftLottieText = leftDesc.descKey;\r\n\r\n  const lottiePosition: [number, number] = [5, -55];\r\n  // lottie 需要单独调试\r\n  option.lottieNode = new LottieNode({\r\n    id: 'lottie-merge-top',\r\n    position: lottiePosition,\r\n    data: { opacity: 1, text: t(leftLottieText, leftDesc.fillerFields) },\r\n  });\r\n  option.lottieNode.lottieW = 260;\r\n  option.lottieNode.lottieH = 150;\r\n\r\n  const rightLottieText = rightDesc.descKey;\r\n  const otherLottiePosition: [number, number] = [135, 50];\r\n  option.otherLottieNode = new LottieNode({\r\n    id: 'lottie-merge-right',\r\n    position: otherLottiePosition,\r\n    data: { opacity: 1, text: t(rightLottieText) },\r\n  });\r\n  option.otherLottieNode.lottieW = 110;\r\n  option.otherLottieNode.lottieH = 110;\r\n  option.targetCompanyHolderRateNode = new LabelNode({\r\n    id: `${option.targetCompanyHolderNode.id}rate`,\r\n    data: {\r\n      text: '',\r\n      opacity: 0,\r\n    },\r\n  });\r\n  option.targetCompanyHolderRateNode.position = [\r\n    scX,\r\n    -getTargetHolderRateY(option.targetCompanyHolderNode, option.targetCompanyHolderRateNode),\r\n  ];\r\n  const nodes = [\r\n    option.subCompanyNode,\r\n    option.targetCompanyNode,\r\n    option.lottieNode,\r\n    option.otherLottieNode,\r\n    option.targetCompanyHolderRateNode,\r\n  ];\r\n  if (option.stockNode) {\r\n    nodes.push(option.stockNode);\r\n  }\r\n  if (option.cashNode) {\r\n    nodes.push(option.cashNode);\r\n  }\r\n\r\n  option.frameAnimation.reset({\r\n    trees: [option.mainTree, option.targetCompanyTree],\r\n    nodes,\r\n  });\r\n\r\n  const subCompanyRender = allRenderMap.get(NodeType.SubCompany);\r\n  subCompanyRender!.enableTail([\r\n    {\r\n      id: targetCompanyId,\r\n    },\r\n  ]);\r\n\r\n  //merge过程有前后持股比例变化 需要提前做处理\r\n  // 取结束态 所以需要加+1\r\n  option.specialArg = assetsInfo[index + 1]['assetsList'];\r\n};\r\n\r\nexport const mergeMiddleHook = option => {\r\n  option.subCompanyNode.setChild(option.targetCompanyNode);\r\n  if (option.specialArg) {\r\n    for (const holder of option.holderNodes) {\r\n      const asset = getAssetById(holder.id, option.specialArg);\r\n      holder.data.value = handleValue(asset.value, asset.unit);\r\n    }\r\n  }\r\n  const targetHolderAsset = getAssetById(option.targetCompanyHolderNode.id, option.specialArg);\r\n  option.targetCompanyHolderRateNode.data.value = handleValue(\r\n    targetHolderAsset.value,\r\n    targetHolderAsset.unit\r\n  );\r\n};\r\n\r\nexport const subsidiaryPreHook = (option, { process }: HookExtendOption) => {\r\n  const { tradeItem, tradeDesc } = process;\r\n  //寻找subCompany subsidiary流程中 寻找subCompany\r\n  const [item] = tradeItem;\r\n  const { itemId, itemName } = item;\r\n  const subCompanyNode = new SubCompanyNode({\r\n    id: itemId,\r\n    data: { text: itemName, opacity: 0, adaptIgnore: true },\r\n  });\r\n  const subCompanyY = getSubCompanyInitY({\r\n    subCompanyNode,\r\n    mainNode: option.mainNode,\r\n  });\r\n\r\n  subCompanyNode.position = [0, subCompanyY];\r\n  option.subCompanyNode = subCompanyNode;\r\n\r\n  const lottiePosition: [number, number] = [0, 65];\r\n  const lottieW = 110;\r\n  const lottieH = 80;\r\n  const lottieNodeId = 'lottie-id';\r\n  option.lottieNode = new LottieNode({\r\n    id: lottieNodeId,\r\n    position: lottiePosition,\r\n    data: { opacity: 1, text: t(tradeDesc[0].descKey) },\r\n  });\r\n  option.lottieNode.lottieW = lottieW;\r\n  option.lottieNode.lottieH = lottieH;\r\n  option.frameAnimation.reset({\r\n    trees: [option.mainTree],\r\n    nodes: [option.subCompanyNode, option.lottieNode],\r\n  });\r\n};\r\nexport const dissolutionPreHook = (option, { process }: HookExtendOption) => {\r\n  const { tradeDesc } = process;\r\n  const lottiePosition: [number, number] = [0, 65];\r\n  //可以复用merge\r\n  option.lottieNode = new LottieNode({\r\n    id: 'lottie-dissolution',\r\n    position: lottiePosition,\r\n    data: { opacity: 1, text: t(tradeDesc[0].descKey) },\r\n  });\r\n  option.lottieNode.lottieW = 60;\r\n  option.lottieNode.lottieH = 60;\r\n  const otherLottiePosition: [number, number] = [0, 60];\r\n  option.otherLottieNode = new LottieNode({\r\n    id: 'lottie-bubble',\r\n    position: otherLottiePosition,\r\n    data: { opacity: 1 },\r\n  });\r\n  option.otherLottieNode.lottieW = 100;\r\n  option.otherLottieNode.lottieH = 100;\r\n  option.frameAnimation.reset({\r\n    trees: [option.mainTree, option.targetCompanyTree],\r\n    nodes: [\r\n      option.subCompanyNode,\r\n      option.targetC","relevantFile":"","relevantFileList":[],"filePath":"src/utils/animation/init/hooks.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" Hook为当前动作的中间逻辑\r","deepseek-chat-lite":"Hook为当前动作的中间逻辑","deepseek-chat":"```\n// Start Generation Here\nconst handleLottieNode = (option,","copilot":"Hook为第二个动作的前置逻辑\r\n  内部为根据接口tian'c"}},{"prefix":"import { NodeBase, Tree, FrameAnimation } from '@/core/index';\n\nimport { doSubsidiaryAnimation, animationTime as subsidiaryTimes } from './trade/subsidiary';\nimport { doMergeAnimation, animationTime as mergeTimes } from './trade/merge';\nimport { doDissolutionAnimation, animationTime as dissolutionTimes } from './trade/dissolution';\nimport { doIpoAnimation, animationTime as ipoTimes } from './trade/ipo';\n\nimport { doETSAnimation, animationTime as etsTimes } from './trade/ets';\n\nimport { doBCAnimation, animationTime as bcTimes } from './trade/bc';\n\nimport { t } from '@/assets/lang/i8n';\nimport { IProcess } from './init/type';\nimport { getTextWidthByCanvas } from '../utils';\n\nexport const FontFamily = 'sans-serif';\n\n// value 跟接口匹配\nexport enum NodeType {\n  //主体公司\n  Main = 'Main',\n  //股东 个人\n  HolderPeople = 'people',\n  //股东机构s\n  HolderIns = 'inst',\n  // 流动资产\n  CurrentAsset = 'current',\n  //非流动资产 固定资产\n  NonCurrentAsset = 'nonCurrent',\n  //子公司\n  SubCompany = 'SubCompany',\n  //目标股东 因为逻辑比较特殊,不使用HolderPeople\n  TargetHolder = 'targetHolder',\n  //参与交易的股票\n  Stock = 'Stock',\n  //参与交易的现金\n  Cash = 'Cash',\n  // lottie\n  Lottie = 'Lottie',\n  // label 文字类node 应用多种场景\n  Label = 'Label',\n  //股东 个人 匹配接口other使用\n  Other = 'other',\n}\n\nexport enum SupportTradeTypes {\n  subsidiary = 'subsidiary',\n  merge = 'merge',\n  dissolution = 'dissolution',\n  ipo = 'ipo',\n  ets = 'establish_target_subsidiary',\n  bc = 'business_combination',\n}\nexport function isSupportTradeType(type: any): boolean {\n  return Object.values(SupportTradeTypes).includes(type);\n}\n\nconst TradeConfig = {\n  // 创建子公司\n  [SupportTradeTypes.subsidiary]: {\n    func: doSubsidiaryAnimation,\n    times: subsidiaryTimes,\n  },\n  // 收购\n  [Su","infill":"establish target subsidiary","suffix":"\r\nexport interface TradeEtsOption extends TradeBaseOption {\r\n  publicInvestorNode: NodeBase;\r\n  targetTree: Tree;\r\n  targetNode: NodeBase;\r\n  targetHolderNodes: NodeBase[];\r\n  subCompanyNode: NodeBase;\r\n  lottieNode: NodeBase;\r\n}\r\n\r\n// 大部分与ets共用 business combination\r\nexport interface TradeBcOption extends TradeEtsOption {\r\n  stockNode: NodeBase;\r\n  otherLottieNode: NodeBase;\r\n  lineLottieNode: NodeBase;\r\n  combinationLottieNode: NodeBase;\r\n  bubbleNode: NodeBase;\r\n}\r\n\r\nexport interface CommonValueOption {\r\n  id: string;\r\n  value: any;\r\n  onlyLine?: boolean;\r\n}\r\n\r\nexport const setValueWithIds = (nodes: NodeBase | NodeBase[], value: any) => {\r\n  let final: CommonValueOption[] = [];\r\n\r\n  if (Array.isArray(nodes)) {\r\n    final = nodes.map(node => ({\r\n      id: node.id,\r\n      value,\r\n    }));\r\n  } else {\r\n    final = [\r\n      {\r\n        id: nodes.id,\r\n        value,\r\n      },\r\n    ];\r\n  }\r\n  return final;\r\n};\r\n\r\nexport const getAssetById = (id: string, assetList: any[]) => {\r\n  for (const asset of assetList) {\r\n    if (asset.itemId === id) {\r\n      return asset;\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleValue = (val: string | null, oriUnit: string | null) => {\r\n  if (!val) {\r\n    return '';\r\n  }\r\n  if (oriUnit) {\r\n    return window.F10Utils.handleData(val) + oriUnit;\r\n  } else {\r\n    const { value, unit } = window.F10Utils.formateLocaleData(val, 'en');\r\n    return value + unit;\r\n  }\r\n};\r\n\r\n//显示的名字 优先取key 再取name\r\nexport const handleName = (key: string | null, name: string, fillerFields: Object = {}) => {\r\n  if (key) {\r\n    return t(key, fillerFields);\r\n  } else {\r\n    return name;\r\n  }\r\n};\r\n\r\n// 根据动画类型获取动画的时间 1个动画 分为 前后2部分\r\n/**\r\n * 返回秒\r\n * @param type\r\n * @returns\r\n * 例子 [7.5,5.5]\r\n */\r\nexport const getTradeAnimationTimes = (type: string): [number, number] => {\r\n  const rate = 1000;\r\n  const { times } = TradeConfig[type as SupportTradeTypes];\r\n  const { preTimes, afterTimes } = times;\r\n  return [Number(preTimes.at(-1)) / rate, Number(afterTimes.at(-1)) / rate];\r\n};\r\n\r\n//根据规则 自动自适应截断\r\nexport const getShowLabel = (label: string, font: number) => {\r\n  const max = 88;\r\n  let showLabel = label;\r\n  if (getTextWidthByCanvas(showLabel, font) <= max) {\r\n    return showLabel;\r\n  } else {\r\n    while (getTextWidthByCanvas(showLabel, font) > max) {\r\n      showLabel = showLabel.substring(0, showLabel.length - 1);\r\n    }\r\n    return `${showLabel.substring(0, showLabel.length - 1)}...`;\r\n  }\r\n};\r\n\r\nexport const judgeImgSrcAvailable = (src: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!src) reject('');\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      resolve(src);\r\n    };\r\n    img.onerror = () => {\r\n      reject(new Error('Image load failed'));\r\n    };\r\n    img.src = src;\r\n  });\r\n};\r\n\r\n// 获取实际动画步骤 过滤pre_ma post_ma\r\nexport const getAvailableProcess = (process: IProcess[]): IProcess[] => {\r\n  //忽略prema postma\r\n  const ignoreType = ['pre_ma', 'post_ma'];\r\n  //获取实际步骤\r\n  return process.filter(v => !ignoreType.includes(v.processType));\r\n};\r\n\r\n//获取实际的动画时间列表\r\nexport const getTimeLineByProcess = (process: IProcess[]): number[][] => {\r\n  const availableProcess = getAvailableProcess(process);\r\n  let result: number[][] = [];\r\n  for (let item of availableProcess) {\r\n    result.push(getTradeAnimationTimes(item.processType));\r\n  }\r\n  return result;\r\n};\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/scale.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/**\n * 缩放动画\n *config入参格式：\n *  {\n *   type: AnimationType.Scale,\n *   config: {\n *     nodes: [\n *       {\n *         id: string,\n *         value: [x,y], *x,y  缩放倍率\n *       },\n *     ],\n *   },\n * },\n */\n\nexport function scaleAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    node.scale = value;\n    setAnimationToNode(node, time);\n  }\n}\n<file_path>src/core/Animation/animationImpl/treeMove.ts\n};\n\n/**\n * 高级动画\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n * // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * action格式：\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n  time: number;\n}): AnimationConfig[] {\n  const final = {};\n  const { config } = action;\n  const {\n    tree,\n    nodes,\n    mainValue,\n    addEasing = true,\n  }: {\n    tree: Tree;\n    nodes: NodesActionConfig[];\n    mainValue: number;\n    addEasing: boolean;\n  } = config as unknown as {\n    tree: Tree;\n    nodes: NodesActionConfig[];\n    mainValue: number;\n    addEasing: boolean;\n  };\n  const mainNode = tree.getRoot();\n  //主节点配置\n  const mainMoveConfig = {\n    id: mainNode.id,\n    value: mainValue,\n    // 主节点的线不参与\n<file_path>src/core/Animation/index.ts\n\ninterface TypeWithNodeActionConfig {\n  [type: number]: NodesActionConfig[];\n}\ninterface TimeWithTypeNodeActionConfig {\n  [time: number]: TypeWithNodeActionConfig;\n}\n\ninterface AnimationHandlerMap {\n  [key: string]: Function;\n}\n\ninterface MiddleType {\n  nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig>;\n  allTimeLine: number[];\n  ignoreTimeNodes: { [key: number]: string[] };\n}\nexport class FrameAnimation {\n  private trees: Tree[];\n  private nodes: NodeBase[];\n  private animationHandlers: AnimationHandlerMap;\n  private root!: GlobalObject;\n  //首帧动画对透明度为0的进行忽略,后续帧的不需要忽略\n  private hasDoneNodeIgnored: boolean = false;\n  constructor({ trees, nodes }: { trees?: Tree[]; nodes?: NodeBase[] }) {\n    this.trees = trees ?? [];\n    this.nodes = nodes ?? [];\n    this.animationHandlers = {};\n    // 注册支持的动画\n    this.registerAnimation();\n  }\n  //注册动画\n  registerAnimation() {\n    this.registerAnimationHandler(String(AnimationType.Fade), fadeAnimation);\n    this.registerAnimationHandler(String(AnimationType.Move), moveAnimation);\n    this.registerAnimationHandler(String(AnimationType.Scale), scaleAnimation);\n    this.registerAnimationHandler(String(AnimationType.Line), lineAnimation);\n    this.registerAnimationHandler(String(AnimationType.BezierThrough), bezierThroughAnimation);\n  }\n  registerAnimationHandler(key: string, func: Function) {\n    this.animationHandlers[key] = func;\n  }\n\n  reset({ trees, nodes }: { trees: Tree[]; nodes: NodeBase[] }) {\n    if (trees) {\n      this.trees = trees;\n    }\n    if (nodes) {\n      this.nodes = nodes;\n    }\n  }\n  //已做去重处理\n  get allNodes(): NodeBase[] {\n    const nodes = new Set<NodeBase>();\n    for (const node of this.nodes) {\n      nodes.add(node);\n    }\n    for (const tree of this.trees) {\n      for (const node of tree.allNodes) {\n        nodes.add(node);\n<file_path>src/utils/animation/init/index.ts\n      upNodes: holderNodes,\n    });\n\n    const frameAnimation = new FrameAnimation({\n      trees: [],\n      nodes: [],\n    });\n\n    //注册动作与动作钩子\n    registerTradeHook(SupportTradeTypes.subsidiary, {\n      preHook: subsidiaryPreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.merge, {\n      middleHook: mergeMiddleHook,\n      preHook: mergePreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.dissolution, {\n      // middleHook: mergeMiddleHook,\n      preHook: dissolutionPreHook,\n    });\n    registerTradeHook(SupportTradeTypes.ipo, {\n      preHook: ipoPreHook,\n      middleHook: ipoMiddleHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.ets, {\n      // middleHook: mergeMiddleHook,\n      preHook: etsPreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.bc, {\n      preHook: bcPreHook,\n      middleHook: bcMiddleHook,\n    });\n    const tradeArg: any = {\n      holderNodes,\n      assetNodes,\n      mainNode,\n      mainTree: tree,\n      frameAnimation,\n    };\n    //遍历步骤，执行对应动作，获取动作生成的动画配置\n    for (let index = 0; index < availableProcess.length; index++) {\n      const nowProcess = availableProcess[index];\n      const { processType } = nowProcess;\n      if (!isSupportTradeType(processType)) {\n        // 交易类型不支持\n        continue;\n      }\n      const extendArg: HookExtendOption = {\n        process: nowProcess,\n        assetsInfo,\n        index,\n        allRenderMap: manage.renderInstanceMap,\n      };\n      const { func, middleHook, preHook } = getTradeAnimationFunc(processType as SupportTradeTypes);\n      preHook && preHook(tradeArg, extendArg);\n      tradeArg.middleHook = middleHook;","relevantFileList":[],"filePath":"src/utils/animation/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" pportTradeTypes.merge]: {\r","deepseek-chat-lite":"pportTradeTypes.merge]: {","deepseek-chat":"```\n// Start Generation Here\nconst TradeConfig = {\n  // ","copilot":"establish target subsidiary"}},{"prefix":"\nimport { NodeBase, renderConfig } from '../../core';\nimport { double } from './Nodes/config';\n\n/** common  */\n// 获取一段线宽 根据传入比例 变大\nexport const getWidth = (rate: number = 1) => {\n  return renderConfig.getConfig().lineBaseWidth * rate;\n};\n\nconst paddingWidth = 0;\n//获取3等分的屏幕的一段宽度\nexport const getSeparateWidth = () => {\n  const rate = 3;\n  const width = window.innerWidth - paddingWidth;\n  return width / rate;\n};\n\n//画布缩小 看上去节点放大\nexport const getScaleBig = (zoomY = '25%') => {\n  const bigRate = 0.75;\n  return { zoom: bigRate, zoomX: '50%', zoomY };\n};\n//画布放大 看上去节点缩小  与画布缩小对应\nexport const getScaleSmall = (zoomY = '25%') => {\n  const smallRate = 1;\n  return { zoom: smallRate, zoomX: '50%', zoomY };\n};\n\n//子公司初始位置与树中默认位置的距离\nexport const subCompanyDistance = 65;\n//默认y\nconst getInitY = (targetNode: NodeBase, mainNode: NodeBase) => {\n  // 算法  mainNode默认是Y是0\n  const { lineInnerHeight, lineOuterHeight } = renderConfig.getConfig();\n  return (\n    mainNode.getBottomDistance() + lineInnerHeight + lineOuterHeight + targetNode.getTopDistance()\n  );\n};\n//子公司初始位置Y轴位置\nexport const getSubCompanyInitY = ({\n  subCompanyNode,\n  mainNode,\n}: {\n  subCompanyNode: NodeBase;\n  mainNode: NodeBase;\n}) => {\n  return getInitY(subCompanyNode, mainNode) + subCompanyDistance;\n};\n\n//线的宽度\nexport const baseLineWidth = renderConfig.getConfig().lineWidth;\nexport const getBiggerLine = () => {\n  const rate = 1.5;\n  return baseLineWidth * rate;\n};\n\n// 贝塞尔曲线偏移量\nexport const getBezierOffset = () => {\n  return 35;\n};\n\n//  merge 过程中子公司向下的距离\nexport const subCompanyMoveDownDistanceInMerge = 10;\n\n// 目标公司与子公司连线的距离/高度差\nconst targetCompanyWithSubDistance = 20;\n//  目标公司 贝塞尔曲线 终点的y值\nexport const getTargetCompanyBezierFinalY = ({\n  targetCompanyNode,\n  subCompanyNode,\n  mainNode,\n}: {\n  targetCompanyNode: NodeBase;\n  mainNode: NodeBase;\n  subCompanyNode: NodeBase;\n}) => {\n  return (\n    getInitY(subCompanyNode, mainNode) +\n    subCompanyNode.getBottomDistance() +\n    subCompanyMoveDownDistanceInMerge +\n    targetCompanyWithSubDistance +\n    targetCompanyNode.getTopDistance()\n  );\n};\n\n// stock或者cash 与股东的x方向的距离\nexport const stockAndCashXDistance = 40;\nconst stockAndCashYDistance = 0;\n\n//stock and cash position 计算\nexport const getStockAndCashBezierFinal = ({\n  stockNode,\n  cashNode,\n  mainNode,\n}: {\n  stockNode: NodeBase | undefined;\n  cashNode: NodeBase | undefined;\n  mainNode: NodeBase;\n}) => {\n  // 默认stock and stock 相同高 简单点 stock在前,cash在后\n  const y = getInitY(stockNode ?? cashNode!, mainNode);\n  const finalY = y + stockAndCashYDistance;\n  let stockPosition: [number, number] | null = null;\n  let cashPosition: [number, number] | null = null;\n  if (cashNode && stockNode) {\n    //x轴以子公司股东的x为基准\n    const stockX = getSeparateWidth() - stockAndCashXDistance;\n    const cashX = getSeparateWidth() + stockAndCashXDistance;\n    stockPosition = [stockX, finalY];\n    cashPosition = [cashX, finalY];\n    return { cashPosition, stockPosition };\n  } else {\n    // 单 stock 或者单cash\n    const x = getSeparateWidth();\n    if (cashNode) {\n      cashPosition = [x, finalY];\n    }\n    if (stockNode) {\n      stockPosition = [x, finalY];\n    }\n  }\n  return { cashPosition, stockPosition };\n};\n\n//\nexport const getTargetCompanyDissolutionMoveY = ({\n  subCompanyNode,\n}: {\n  subCompanyNode: NodeBase;\n}) => {\n  return (\n    subCompanyNode.getBottomDistance() +\n    subCompanyNode.getTopDistance() +\n    targetCompanyWithSubDistance\n  );\n};\n\n//获取股东merge过程左移动的位置 根据个数返回对应数据\nexport const getHolderLeftDistanceInMerge = (count: number) => {\n  // 2 0.5base 3 base 4 1.5base 5 2base\n  const base = getWidth();\n  const rate = 0.5,\n    defaultCount = 1;\n  return (count - defaultCount) * base * rate;\n};\n\n//获取merge股东过程右移动(返回的时候 因为多了一个 需要少返回0.5base)的位置 根据个数返回对应数据\nexport const getHolderRightDistanceInMerge = (count: number) => {\n  // 2 0base 3 0.5base 4 1base 5 1.5base\n  const base = getWidth();\n  const rate = 0.5,\n    defaultCount = 2;\n  return (count - defaultCount) * base * rate;\n};\n\n//获取merge过程目标股东左移动(移动到树)的位置 根据个数返回对应数据\nexport const getTargetHolderLeftDistanceInMerge = (count: number) => {\n  // 2 1base 3 1.5base 4 2base 5 2.5base\n  const base = getWidth();\n  const rate = 0.5;\n  return count * rate * base;\n};\n\n//merge 过程 子公司股东 上移距离\nexport const getTargetHolderUpDistanceInMerge = (\n  targetHolderNode: NodeBase,\n  mainNode: NodeBase\n) => {\n  const { lineInnerHeight, lineOuterHeight } = renderConfig.getConfig();\n  return (\n    targetHolderNode.getBottomDistance() +\n    lineInnerHeight +\n    lineOuterHeight +\n    mainNode.getTopDistance()\n  );\n};\n\n// ratenode 默认的y\nexport const getTargetHolderRateY = (targetHolderNode: NodeBase, rateNode: NodeBase) => {\n  const { lineInnerHeight } = renderConfig.getConfig();\n  return (\n    targetHolderNode.position[1] +\n    lineInnerHeight +\n    targetHolderNode.getTopDistance() +\n    rateNode.getBottomDistance()\n  );\n};\n\n//ratenode 少移动的距离\nexport const getTargetHolderRateUpDistanceOffset = (targetHolderNode: NodeBase) => {\n  const { lineInnerHeight } = renderConfig.getConfig();\n  return lineInnerHeight + targetHolderNode.getBottomDistance() + targetHolderNode.getTopDistance();\n};\n\n//目标公司与holder 的距离\nconst targetCompanyWithHolderDistance = 20;\n\n//targetCompany 目标公司 默认y\nexport const getTargetCompanyInitY = (targetNode: NodeBase, targetHolderNode: NodeBase) => {\n  return (\n    targetHolderNode.position[1] +\n    targetCompanyWithHolderDistance +\n    targetNode.getTopDistance() +\n    targetHolderNode.getBottomDistance()\n  );\n};\n\n//stock在左 cash 在右\n//merge stock cash 从主节点移动向右\nexport const stockMergeRightDistance = 80;\n// merge 从主节点移动向右 stock 和 cash的距离\nexport const stockAndCashDistance = 40;\n\n/*** ipo  */\nconst ipoMainLeftOffset = 80;\nexport const ipoMainLeftDistance = getSeparateWidth() - ipoMainLeftOffset;\n\nexport const publicInvestorInitX = 120;\n\n// publicInvestor 和 cash 连线的高度\nexport const publicInvestCashDistance = 20;\n//publicInvestorcash初始位置\nexport function getPublicInvestorCashInitPosition(\n  publicInvestorNode: NodeBase,\n  cashNode: NodeBase\n): [number, number] {\n  const y =\n    publicInvestorNode.getBottomDistance() + publicInvestCashDistance + cashNode.getTopDistance();\n\n  return [publicInvestorInitX, y];\n}\n\n//cash 和 stock 的距离\nconst ipoStockCashWidth = 50;\nexport const ipoStockInitX = -ipoMainLeftDistance;\nexport const ipoCashInitX = -(ipoMainLeftDistance - ipoStockCashWidth);\n\n// stock cash 右移距离\nexport const ipoStockCashMoveRight = 90;\n\n//unit 默认位置\nexport const unitsInitPosition = (): [number, number] => {\n  const y = -30;\n  const x = ipoStockInitX + ipoStockCashMoveRight + ipoStockCashWidth / double;\n  return [x, y];\n};\n\nexport const ipoBezierOffset = 30;\n//PublicInvestorCashBezierAfterPosition\nexport const ipoPublicInvestorCashBezierAfterPosition = (\n  mainNode: NodeBase,\n  trustAccountNode: NodeBase\n): [number, number] => {\n  const { lineInnerHeight, lineOuterHeight } = renderConfig.getConfig();\n  const y =\n    lineInnerHeight +\n    lineOuterHeight +\n    mainNode.getBottomDistance() +\n    trustAccountNode.getTopDistance();\n  return [-ipoMainLeftDistance, y];\n};\n\n//基于publicInvestorcash初始位置  左右偏移 stock贝塞尔曲线运动后的位置\nexport const ipoStockBezierAfterPosition = (\n  publicInvestorNode: NodeBase,\n  cashNode: NodeBase\n): [number, number] => {\n  const x = publicInvestorInitX - ipoStockCashWidth / double;\n  const [, y]: [number, number] = getPublicInvestorCashInitPosition(publicInvestorNode, cashNode);\n  return [x, y];\n};\nexport const ipoCashBezierAfterPosition = (\n  publicInvestorNode: NodeBase,\n  cashNode: NodeBase\n): [number, number] => {\n  const [x, y]: [number, number] = ipoStockBezierAfterPosition(publicInvestorNode, cashNode);\n  return [x + ipoStockCashWidth, y];\n};\n\nconst ipoAfterUnitsNodeOffset = 50;\n// afterUnitNode的位置 基于cash贝塞尔曲线运动后的位置 再右边一点\nexport const ipoAfterUnitsNodeInitPosition = (\n  publicInvestorNode: NodeBase,\n  cashNode: NodeBase\n): [number, number] => {\n  const [x,","infill":"holder recovery config","suffix":"\r\nexport const getHoldersRecoveryConfig = (\r\n  holderNodes: NodeBase[],\r\n  targetHolderNodes: NodeBase[]\r\n) => {\r\n  const config = [];\r\n  const { lineBaseWidth } = renderConfig.getConfig();\r\n\r\n  // 2者count 不相同 多的一方居中间, 相同平均分\r\n  // 基于base的唯一差\r\n  let holderOffset, targetHolderOffset;\r\n  if (holderNodes.length > targetHolderNodes.length) {\r\n    holderOffset = 0;\r\n    targetHolderOffset = 1;\r\n  } else if (holderNodes.length < targetHolderNodes.length) {\r\n    holderOffset = 1;\r\n    targetHolderOffset = 0;\r\n  } else {\r\n    holderOffset = 0.5;\r\n    targetHolderOffset = 0.5;\r\n  }\r\n\r\n  for (let node of holderNodes) {\r\n    config.push({\r\n      id: node.id,\r\n      value: [-bcTargetTreeRecoveryX + holderOffset * lineBaseWidth + bcMainTreeLeftDistance, 0],\r\n    });\r\n  }\r\n\r\n  for (let node of targetHolderNodes) {\r\n    config.push({\r\n      id: node.id,\r\n      value: [bcTargetTreeRecoveryX + targetHolderOffset * lineBaseWidth, 0],\r\n    });\r\n  }\r\n  return config;\r\n};\r\n// bc子公司最终位置\r\nexport const getSubCompanyFinalPosition = (\r\n  subCompany: NodeBase,\r\n  targetNode: NodeBase\r\n): [number, number] => {\r\n  const { lineInnerHeight, lineOuterHeight } = renderConfig.getConfig();\r\n  const y =\r\n    lineOuterHeight +\r\n    lineInnerHeight +\r\n    subCompany.getTopDistance() +\r\n    targetNode.getBottomDistance() -\r\n    bcMainSubUpOffset;\r\n  return [bcSubCompanyRightDistance, y];\r\n};\r\n\r\nexport const getLineLottiePositionX = () => {\r\n  const x = etsTargetTreeRightDistance + bcMainTreeLeftDistance;\r\n  return -x;\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/utils/animation/compute.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  y]: [number, number] = ipoCashBezierAfterPosition(publicInvestorNode, cashNode);\r","deepseek-chat-lite":" y]: [number, number] = ipoCashBezierAfterPosition(publicInvestorNode, cashNode);","deepseek-chat":"```\n// Start Generation Here\nconst getHoldersRecoveryConfig = (\n","copilot":"holder recovery config"}},{"prefix":"interface BackgroundAvatarIpData {\n  // 背景图地址\n  backgroundUrl: string,\n  // 头像地址\n  avatarUrl: string,\n  // IP 地址\n  ipAdress: string,\n  // 是否为自己视角\n  selfView: boolean,\n  // 默认背景图地址\n  backgroundDefaultUrl: string,\n  // 默认头像地址\n  avatarDefaultUrl: string,\n  // 是否为默认背景图片\n  isDefaultBackground: boolean,\n}\n\n// IP 对应地址\ninterface IpinfoData {\n  [key: string]: string\n}\n\n// 处理后的用户名、认证状态、认证信息、性别数据\ninterface BaseInformationData {\n  // 用户名\n  name: string,\n  // 认证信息\n  identity?: string,\n  // 认证状态\n  verifyType: string,\n  // 性别 man：男 woman：女\n  sex?: string,\n  // 投顾战绩认证点\n  incomeRate?: string,\n  // 投顾战绩认证跳转地址\n  jumpUrl?: string,\n  // 勋章数据\n  medalData?: MedalI","infill":"nfo,","suffix":"\n}\n\n// 处理后的导航栏用户名、认证状态、头像、关注状态数据\ninterface NavigationInfoData {\n  // 用户名\n  name: string,\n  // 认证状态\n  verifyType: string,\n  // 头像\n  avatar: string,\n  // 默认头像地址\n  avatarDefaultUrl: string,\n}\n\n// 处理后的按钮视角、关注状态数据\ninterface ButtonData {\n  // 是否为自己视角\n  selfView: boolean,\n  // 关注类型\n  followStatus: string,\n}\n\n// 处理后的动态、关注、粉丝信息数据\ninterface UserTrendsData {\n  // 动态数据\n  postCount: string,\n  // 粉丝数据\n  fansCount: string,\n  // 关注数据\n  followCount: string,\n}\n\n// 处理后的股票信息数据\ninterface CompanyStockData {\n  // 市场名称\n  marketName: string,\n  // 股票名称\n  name: string,\n  // 股票代码\n  code: string,\n  // 市场标识\n  marketId: number,\n  // 划线所需市场名称\n  drawName: string,\n}\n\n// 处理后的直播信息数据\ninterface UserShowData {\n  // 直播间号\n  sid: number,\n  // 直播类型\n  showType: string,\n  // 直播标题\n  showTitle: string,\n  // h5 直播地址\n  h5Url: string,\n  // 客户端直播地址\n  clientUrl: string,\n  // 预约直播地址\n  appointUrl: string,\n  // 直播状态\n  showStatus: string,\n  // 直播埋点参数\n  showStat: string,\n}","relevantFile":"<file_path>src/types/service/user-information.d.ts\n  fileType: string,\n}\n\n// 更新用户头像请求参数\ninterface UpdateUserAvatarParams {\n  // 头像文件\n  file: File,\n  // x 偏移\n  x?: number,\n  // y 偏移\n  y?: number,\n  // 宽度\n  width?: number,\n  // 高度\n  height?: number,\n}\n\n// 获取投顾战绩认证信息请求参数\ninterface UserPortfolioInfoParams {\n  // 用户 uid\n  uid: number,\n  // 是否过滤白名单用户，默认为 true，即过滤白名单用户，false 为不过滤白名单用户\n  filterWhiteUser?: boolean,\n}\n\n// 获取投顾战绩认证信息返回数据\ninterface UserPortfolioInfoResult {\n  // 投顾战绩认证信息\n  portfolio?: PortfolioInfo,\n}\n\n// 投顾战绩认证信息\ninterface PortfolioInfo {\n  // 组合名称\n  portfolioName: string,\n  // 收益率\n  incomeRate: string,\n  // 跳转地址\n  jumpUrl: string,\n}\n\n// 获取切换关注状态请求参数\ninterface ChangeFollowStatusParams {\n  corObjectId: number,\n  operation: 'add' | 'cancel',\n}\n\n// 获取用户信息完整度请求参数\ninterface UserInfoPercentParams {\n  // 用户 uid\n  uid: number,\n}\n\n// 获取用户信息审核状态返回数据\ninterface UserInfoStatusResult {\n  // 性别\n  sex: number;\n  // 昵称\n  nickname: string;\n  // 用户名（直接取的cookie）\n<file_path>src/pages/user-page/convert-data.ts\n    }\n  }\n  return {\n    backgroundUrl: backgroundUrl,\n    avatarUrl: avatarUrl,\n    ipAdress: ipAdress,\n    selfView: selfView,\n    backgroundDefaultUrl: backgroundDefaultUrl,\n    avatarDefaultUrl: avatarDefaultUrl,\n    isDefaultBackground: isDefaultBackground,\n  }\n}\n\n/**\n * 获取用户的用户名、认证状态、认证信息、性别\n * @param {UserInformationResult} data - 用户信息数据\n * @param {UserPortfolioInfoResult} portfolioData - 投顾战绩认证数据\n * @param {boolean} selfView - 是否为自己视角\n * @returns {BaseInformationData} 用户名、认证状态、认证信息、性别数据\n */\nexport function getBaseInformationData(data: UserInformationResult, selfView: boolean, portfolioData?: UserPortfolioInfoResult): BaseInformationData{\n  // 认证状态 1：黄v 2：蓝v\n  let verifyStatus = '';\n  // 性别\n  let userSex = '';\n  if (data.verifyType != 0 && data.identity) {\n    if (data.verifyType === 1) {\n      verifyStatus = 'yellow';\n    } else if (data.verifyType === 2) {\n      verifyStatus = 'blue';\n    }\n  }\n  if (data.sex === 1) {\n    userSex = 'man';\n  } else if (data.sex === 0) {\n    userSex = 'woman';\n  }\n  return {\n    name: selfView ? data.selfName || data.nickname : data.nickname,\n    identity: data.identity,\n    verifyType: verifyStatus,\n    sex: userSex,\n    incomeRate: portfolioData?.portfolio?.incomeRate,\n    jumpUrl: portfolioData?.portfolio?.jumpUrl,\n    medalData: data.userWearMedal,\n  }\n}\n\n/**\n * 获取用户的导航栏信息用户名、头像、认证类型、关注状态\n * @param {UserInformationResult} data - 用户信息数据\n * @param {boolean} selfView - 是否为自己视角\n * @returns {NavigationInfoData} 用户名、头像、认证类型、关注状态\n */\nexport function getNavigationInfoData(data: UserInformationResult, selfView: boolean): NavigationInfoData{\n  // 认证状态 1：黄v 2：蓝v\n  let verifyStatus = '';\n  if (data.verifyType != 0 && data.identity) {\n    if (data.verifyType === 1) {\n      verifyStatus = 'yellow';\n处理后的背景图、头像、默认头像、默认背景图、IP地址数据","relevantFileList":[],"filePath":"src/types/service/convert-data.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" temData[],","deepseek-chat-lite":"nfoData[],","deepseek-chat":"```\n// Start Generation Here\n  medalData?: MedalInfo[],\n}","copilot":"nfo,"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n};\n\nexport const getAdvan","infill":"cedDataApi = (params: Recordable) => {\r\n  return http.get(apis.advanced, params);\r\n}","suffix":"\r\n\r\nexport const getListDataApi = (params: Recordable) => {\r\n  return http.get<ListResponse>(apis.list, params);\r\n};\r\n\r\nexport const editListDataApi = (\r\n  data: Recordable,\r\n  config = {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n    },\r\n  }\r\n) => {\r\n  return http.post<ListItem>(apis.edit, data, config);\r\n};\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(apis.detail, params);\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n      if (config.noCancel) {\n        const noCancelRequestKey = config.url + '&' + config.method + '&' + (config.key || '');\n        noCancelPendingRequests.set(noCancelRequestKey, cancel);\n      } else {\n        pendingRequests.set(requestKey, cancel);\n      }\n    });\n    return config;\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n  (response: AxiosResponse) => {\n    // 在响应数据之前做些处理\n    const requestKey = response.config.url + '&' + response.config.method;\n    cancelPendingRequest(requestKey); // 取消重复请求\n    return response;\n  },\n  (error: AxiosError) => {\n    // 如果请求被取消，不执行任何操作\n    if (axios.isCancel(error)) {\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport interface Result<T = unknown> {\n  code: number;\n  message?: string | number;\n  subCode?: NumberAndString;\n  data: T;\n  error?: string;\n  [key: string]: any;\n}\n\nexport const http = {\n  get<T = any>(\n    url: string,\n    params?: Recordable,\n    config?: Recordable\n  ): Promise<AxiosResponse<Result<T>>> {\n    return instance.get<T, AxiosResponse<Result<T>>>(url, {\n      params,\n      ...(config || {}),\n    });\n  },\n  post<T = any>(\n    url: string,\n    data?: any,\n    config?: AxiosRequestConfig | Recordable\n  ): Promise<AxiosResponse<Result<T>>> {\n    return instance.post<T, AxiosResponse<Result<T>>>(url, data, config);\n  },\n};\nexport default instance;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"cedDataApi = (params: Recordable) => {\r","deepseek-chat-lite":"cedDataApi = (params: Recordable) => {","deepseek-chat":"```\n// Start Generation Here\nexport const getAdvancedSearchApi = (params","copilot":"cedDataApi = (params: Recordable) => {\r\n  return http.get(apis.advanced, params);\r\n}"}},{"prefix":"import { NodeBase } from '@/core/Node';\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { renderConfig } from '../../config';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有透明1 与","infill":"半透明0.2 2zhong状态","suffix":"\r\n  if (value === 0.2) {\r\n    const color = renderConfig.getCorrespondingColor(stroke, true);\r\n    // 半透明 线的颜色改成 disable的颜色\r\n    if (color) {\r\n      node.line.lineRender.render.opts.style.stroke = color;\r\n      node.line.lineRender.render.opts.style.opacity = 1;\r\n    }\r\n    // 半透明度下 层级变低\r\n    z = 1;\r\n  } else {\r\n    const color = renderConfig.getCorrespondingColor(stroke, false);\r\n    if (color) {\r\n      node.line.lineRender.render.opts.style.stroke = color;\r\n    }\r\n    node.line.lineRender.render.opts.style.opacity = value;\r\n  }\r\n  node.line.lineRender.render.opts.z = z;\r\n};\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/default.ts\nimport { FrameAnimation } from '..';\nimport { deepClone, getNodeById, setAnimationToNode } from '../../utils';\n\n// 默认-当前无动画动作,但参与其他节点动画时间线  需要复制前一个时间状态\nexport function defaultAnimation({\n  time,\n  id,\n  context,\n}: {\n  id: string;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    let nodeAnimation = node.animation.when;\n    if (nodeAnimation.length === 0) {\n      // 初始化\n      setAnimationToNode(node, time);\n    } else {\n      const nowTimeAnimation = {\n        ...nodeAnimation[nodeAnimation.length - 1],\n        time,\n      };\n      //默认\n      const cloneNowTimeAnimation = deepClone(nowTimeAnimation);\n      // 这两者配置不需要\n      delete cloneNowTimeAnimation.easing;\n      delete cloneNowTimeAnimation.moveAlongTheCurve;\n      nodeAnimation.push(cloneNowTimeAnimation);\n      if (node.hasLine) {\n        let nodeLineAnimation: any = node.line.lineRender.animation.when;\n        const lastAnimation: any = nodeLineAnimation[nodeLineAnimation.length - 1];\n        const nowTimeLineAnimation = {\n          ...lastAnimation,\n          time,\n        };\n        nodeLineAnimation.push(deepClone(nowTimeLineAnimation));\n      }\n    }\n  }\n}\n<file_path>src/core/Animation/animationImpl/treeMove.ts\nimport { NodeBase, Tree } from '@/core/Node';\nimport { FrameAnimation } from '..';\nimport {\n  ActionConfig,\n  AnimationConfig,\n  AnimationType,\n  NodesActionConfig,\n  Point,\n} from '../../types';\nimport { getNodeById, handleActionToAnimation, mergeAction } from '../../utils';\n\nconst handlePoint = ({\n  oriNode,\n  mainValue,\n  targetValue,\n}: {\n  oriNode: NodeBase;\n  mainValue: Point;\n  targetValue: Point;\n}) => {\n  const linePoints = oriNode.line.lineRender.render.opts.shape.points;\n  const getPointsInTreeMove = (oriPoints: number[][], value: Point) => [\n    [oriPoints[0][0] + value[0], oriPoints[0][1] + value[1]],\n    [oriPoints[1][0] + value[0], oriPoints[1][1] + value[1]],\n    [oriPoints[2][0] + targetValue[0], oriPoints[2][1] + targetValue[1]],\n    [oriPoints[3][0] + targetValue[0], oriPoints[3][1] + targetValue[1]],\n  ];\n  return getPointsInTreeMove(linePoints, mainValue);\n};\n\n/**\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n *  // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n<file_path>src/core/Animation/animationImpl/bezier.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { getNodeById, setAnimationToNode } from '@/core/utils';\nimport { FrameAnimation } from '..';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n        config入参格式：\n        {\n          id,\n          moveAlongTheCurve:{...}\n        }\n  */\n// 内部的贝塞尔曲线动画处理 对已经预处理的数据进行透传\nexport function bezierThroughAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, moveAlongTheCurve } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    node.moveAlongTheCurve = moveAlongTheCurve;\n    const percent = moveAlongTheCurve.percent;\n    if (percent === 1) {\n      node.position = moveAlongTheCurve.point2;\n    }\n    setAnimationToNode(node, time);\n  }\n}\n<file_path>src/core/Animation/animationImpl/line.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/** \n  线动画 内部使用  不包括fade fade相关的在fade里面\n{\n         id: string,\n         pointsOption:{\n          value: number[][],\n          cb:function, 与value 互斥\n          arg:参数\n         },\n         style:{\n          lineWidth: number,\n          stroke:string,\n         }\n         addEasing:boolean,\n },\n */\n/**\n * Line 情况比较特殊,需要参考前面的Line动画或者treeAddNode,线可能已经被改了,\n * 要记录下来,后面的line基于前面修改过的points\n */\n\nexport function lineAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, pointsOption, style, addEasing } = config;\n\n  const oriNode = getNodeById(id, context.allNodes);\n  if (oriNode && oriNode.hasLine) {\n    if (pointsOption) {\n      const { value, cb, arg } = pointsOption;\n      let pointValue = value ?? cb(arg);\n      oriNode.line.lineRender.render.opts.shape.points = pointValue;\n    }\n    if (style) {\n      oriNode.line.lineRender.render.opts.style = {\n        ...oriNode.line.lineRender.render.opts.style,\n        ...style,\n      };\n    }\n    setAnimationToNode(oriNode, time, { onlyLine: true, addEasing: pointsOption && addEasing });\n  }\n}","relevantFileList":[],"filePath":"src/core/Animation/animationImpl/fade.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 透明2\r","deepseek-chat-lite":"不透明0.2 两种状态","deepseek-chat":"```\n// Start Generation Here\n  if (value === 0.5","copilot":"半透明0.2 2zhong状态"}},{"prefix":"import { NodeBase } from '@/core/Node';\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { renderConfig } from '../../config';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有透明1 与半透明0.2 2种状态\n  const halfOp","infill":"acity = 0.2;","suffix":"\r\n  if (value === halfOpacity) {\r\n    const color = renderConfig.getCorrespondingColor(stroke, true);\r\n    // 半透明 线的颜色改成 disable的颜色\r\n    if (color) {\r\n      node.line.lineRender.render.opts.style.stroke = color;\r\n      node.line.lineRender.render.opts.style.opacity = 1;\r\n    }\r\n    // 半透明度下 层级变低\r\n    z = 1;\r\n  } else {\r\n    const color = renderConfig.getCorrespondingColor(stroke, false);\r\n    if (color) {\r\n      node.line.lineRender.render.opts.style.stroke = color;\r\n    }\r\n    node.line.lineRender.render.opts.style.opacity = value;\r\n  }\r\n  node.line.lineRender.render.opts.z = z;\r\n};\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/default.ts\nimport { FrameAnimation } from '..';\nimport { deepClone, getNodeById, setAnimationToNode } from '../../utils';\n\n// 默认-当前无动画动作,但参与其他节点动画时间线  需要复制前一个时间状态\nexport function defaultAnimation({\n  time,\n  id,\n  context,\n}: {\n  id: string;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    let nodeAnimation = node.animation.when;\n    if (nodeAnimation.length === 0) {\n      // 初始化\n      setAnimationToNode(node, time);\n    } else {\n      const nowTimeAnimation = {\n        ...nodeAnimation[nodeAnimation.length - 1],\n        time,\n      };\n      //默认\n      const cloneNowTimeAnimation = deepClone(nowTimeAnimation);\n      // 这两者配置不需要\n      delete cloneNowTimeAnimation.easing;\n      delete cloneNowTimeAnimation.moveAlongTheCurve;\n      nodeAnimation.push(cloneNowTimeAnimation);\n      if (node.hasLine) {\n        let nodeLineAnimation: any = node.line.lineRender.animation.when;\n        const lastAnimation: any = nodeLineAnimation[nodeLineAnimation.length - 1];\n        const nowTimeLineAnimation = {\n          ...lastAnimation,\n          time,\n        };\n        nodeLineAnimation.push(deepClone(nowTimeLineAnimation));\n      }\n    }\n  }\n}\n<file_path>src/core/Animation/animationImpl/treeMove.ts\nimport { NodeBase, Tree } from '@/core/Node';\nimport { FrameAnimation } from '..';\nimport {\n  ActionConfig,\n  AnimationConfig,\n  AnimationType,\n  NodesActionConfig,\n  Point,\n} from '../../types';\nimport { getNodeById, handleActionToAnimation, mergeAction } from '../../utils';\n\nconst handlePoint = ({\n  oriNode,\n  mainValue,\n  targetValue,\n}: {\n  oriNode: NodeBase;\n  mainValue: Point;\n  targetValue: Point;\n}) => {\n  const linePoints = oriNode.line.lineRender.render.opts.shape.points;\n  const getPointsInTreeMove = (oriPoints: number[][], value: Point) => [\n    [oriPoints[0][0] + value[0], oriPoints[0][1] + value[1]],\n    [oriPoints[1][0] + value[0], oriPoints[1][1] + value[1]],\n    [oriPoints[2][0] + targetValue[0], oriPoints[2][1] + targetValue[1]],\n    [oriPoints[3][0] + targetValue[0], oriPoints[3][1] + targetValue[1]],\n  ];\n  return getPointsInTreeMove(linePoints, mainValue);\n};\n\n/**\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n *  // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n<file_path>src/core/Animation/animationImpl/bezier.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { getNodeById, setAnimationToNode } from '@/core/utils';\nimport { FrameAnimation } from '..';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n        config入参格式：\n        {\n          id,\n          moveAlongTheCurve:{...}\n        }\n  */\n// 内部的贝塞尔曲线动画处理 对已经预处理的数据进行透传\nexport function bezierThroughAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, moveAlongTheCurve } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    node.moveAlongTheCurve = moveAlongTheCurve;\n    const percent = moveAlongTheCurve.percent;\n    if (percent === 1) {\n      node.position = moveAlongTheCurve.point2;\n    }\n    setAnimationToNode(node, time);\n  }\n}\n<file_path>src/core/Animation/animationImpl/line.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/** \n  线动画 内部使用  不包括fade fade相关的在fade里面\n{\n         id: string,\n         pointsOption:{\n          value: number[][],\n          cb:function, 与value 互斥\n          arg:参数\n         },\n         style:{\n          lineWidth: number,\n          stroke:string,\n         }\n         addEasing:boolean,\n },\n */\n/**\n * Line 情况比较特殊,需要参考前面的Line动画或者treeAddNode,线可能已经被改了,\n * 要记录下来,后面的line基于前面修改过的points\n */\n\nexport function lineAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, pointsOption, style, addEasing } = config;\n\n  const oriNode = getNodeById(id, context.allNodes);\n  if (oriNode && oriNode.hasLine) {\n    if (pointsOption) {\n      const { value, cb, arg } = pointsOption;\n      let pointValue = value ?? cb(arg);\n      oriNode.line.lineRender.render.opts.shape.points = pointValue;\n    }\n    if (style) {\n      oriNode.line.lineRender.render.opts.style = {\n        ...oriNode.line.lineRender.render.opts.style,\n        ...style,\n      };\n    }\n    setAnimationToNode(oriNode, time, { onlyLine: true, addEasing: pointsOption && addEasing });\n  }\n}","relevantFileList":[],"filePath":"src/core/Animation/animationImpl/fade.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" acity = 0.2;\r","deepseek-chat-lite":"acity = 0.2;","deepseek-chat":"```\n// Start Generation Here\nconst halfOpacity = 0.2;","copilot":"acity = 0.2;"}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n    event: EventItem;\n    views: ViewItem[];\n}\n\nexport type ListResponse = {\n    total: number;\n    list: ListItem[];\n}\n\nexport type institutionItem = {\n  name: string;\n  code: s\n}\n\nexport type Advanced = {\n  common_selector","infill":": {\r\n    institutions: {\r\n  }","suffix":"\r\n}","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef } from \"vue\";\nimport { getAdvancedDataApi } from \"@/http/request\"\nconst advancedStore = defineStore('advanced', () => {\n    const institutions = shallowRef<>([]);\n});\n\nexport default advancedStore;\n<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n};\n\nexport const getAdvancedDataApi = (params: Recordable) => {\n  return http.get(apis.advanced, params);\n}\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" : string;\r","deepseek-chat-lite":": string[];\r","deepseek-chat":"```\n// Start Generation Here\n  common_selector: {\n    type","copilot":": {\r\n    institutions: {\r\n  }"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst advancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n        if (res.data.code === 1 && res.data","infill":".data && res.data.data.common_selector) {","suffix":"\r\n      institutions.value = res.data.data.common_selector.institutions || [];\r\n    }\r\n}\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    getAdvancedData,\r\n  };\r\n});\r\n\r\nexport default advancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" .data) {<file_sep> /src/http/request.ts","deepseek-chat-lite":".data.common_selector) {","deepseek-chat":"```\n// Start Generation Here\n          if (res.data.code ===","copilot":".data && res.data.data.common_selector) {"}},{"prefix":"import { NodeBase } from '@/core/Node';\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { renderConfig } from '../../config';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线","infill":"之间有重叠，优先展示不透明的节点","suffix":"\r\n    z = 1;\r\n  } else {\r\n    const color = renderConfig.getCorrespondingColor(stroke, false);\r\n    if (color) {\r\n      node.line.lineRender.render.opts.style.stroke = color;\r\n    }\r\n    node.line.lineRender.render.opts.style.opacity = value;\r\n  }\r\n  node.line.lineRender.render.opts.z = z;\r\n};\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/default.ts\nimport { FrameAnimation } from '..';\nimport { deepClone, getNodeById, setAnimationToNode } from '../../utils';\n\n// 默认-当前无动画动作,但参与其他节点动画时间线  需要复制前一个时间状态\nexport function defaultAnimation({\n  time,\n  id,\n  context,\n}: {\n  id: string;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    let nodeAnimation = node.animation.when;\n    if (nodeAnimation.length === 0) {\n      // 初始化\n      setAnimationToNode(node, time);\n    } else {\n      const nowTimeAnimation = {\n        ...nodeAnimation[nodeAnimation.length - 1],\n        time,\n      };\n      //默认\n      const cloneNowTimeAnimation = deepClone(nowTimeAnimation);\n      // 这两者配置不需要\n      delete cloneNowTimeAnimation.easing;\n      delete cloneNowTimeAnimation.moveAlongTheCurve;\n      nodeAnimation.push(cloneNowTimeAnimation);\n      if (node.hasLine) {\n        let nodeLineAnimation: any = node.line.lineRender.animation.when;\n        const lastAnimation: any = nodeLineAnimation[nodeLineAnimation.length - 1];\n        const nowTimeLineAnimation = {\n          ...lastAnimation,\n          time,\n        };\n        nodeLineAnimation.push(deepClone(nowTimeLineAnimation));\n      }\n    }\n  }\n}\n<file_path>src/core/Animation/animationImpl/treeMove.ts\nimport { NodeBase, Tree } from '@/core/Node';\nimport { FrameAnimation } from '..';\nimport {\n  ActionConfig,\n  AnimationConfig,\n  AnimationType,\n  NodesActionConfig,\n  Point,\n} from '../../types';\nimport { getNodeById, handleActionToAnimation, mergeAction } from '../../utils';\n\nconst handlePoint = ({\n  oriNode,\n  mainValue,\n  targetValue,\n}: {\n  oriNode: NodeBase;\n  mainValue: Point;\n  targetValue: Point;\n}) => {\n  const linePoints = oriNode.line.lineRender.render.opts.shape.points;\n  const getPointsInTreeMove = (oriPoints: number[][], value: Point) => [\n    [oriPoints[0][0] + value[0], oriPoints[0][1] + value[1]],\n    [oriPoints[1][0] + value[0], oriPoints[1][1] + value[1]],\n    [oriPoints[2][0] + targetValue[0], oriPoints[2][1] + targetValue[1]],\n    [oriPoints[3][0] + targetValue[0], oriPoints[3][1] + targetValue[1]],\n  ];\n  return getPointsInTreeMove(linePoints, mainValue);\n};\n\n/**\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n *  // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n<file_path>src/core/Animation/animationImpl/bezier.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { getNodeById, setAnimationToNode } from '@/core/utils';\nimport { FrameAnimation } from '..';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n        config入参格式：\n        {\n          id,\n          moveAlongTheCurve:{...}\n        }\n  */\n// 内部的贝塞尔曲线动画处理 对已经预处理的数据进行透传\nexport function bezierThroughAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, moveAlongTheCurve } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    node.moveAlongTheCurve = moveAlongTheCurve;\n    const percent = moveAlongTheCurve.percent;\n    if (percent === 1) {\n      node.position = moveAlongTheCurve.point2;\n    }\n    setAnimationToNode(node, time);\n  }\n}\n<file_path>src/core/Animation/animationImpl/line.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/** \n  线动画 内部使用  不包括fade fade相关的在fade里面\n{\n         id: string,\n         pointsOption:{\n          value: number[][],\n          cb:function, 与value 互斥\n          arg:参数\n         },\n         style:{\n          lineWidth: number,\n          stroke:string,\n         }\n         addEasing:boolean,\n },\n */\n/**\n * Line 情况比较特殊,需要参考前面的Line动画或者treeAddNode,线可能已经被改了,\n * 要记录下来,后面的line基于前面修改过的points\n */\n\nexport function lineAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, pointsOption, style, addEasing } = config;\n\n  const oriNode = getNodeById(id, context.allNodes);\n  if (oriNode && oriNode.hasLine) {\n    if (pointsOption) {\n      const { value, cb, arg } = pointsOption;\n      let pointValue = value ?? cb(arg);\n      oriNode.line.lineRender.render.opts.shape.points = pointValue;\n    }\n    if (style) {\n      oriNode.line.lineRender.render.opts.style = {\n        ...oriNode.line.lineRender.render.opts.style,\n        ...style,\n      };\n    }\n    setAnimationToNode(oriNode, time, { onlyLine: true, addEasing: pointsOption && addEasing });\n  }\n}","relevantFileList":[],"filePath":"src/core/Animation/animationImpl/fade.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 节点层级一样\r","deepseek-chat-lite":"之间有层级关系","deepseek-chat":"```\n// Start Generation Here\n    if (value === 1) {","copilot":"之间有重叠，优先展示不透明的节点"}},{"prefix":"import { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/**\n * 缩放动画\n *config","infill":"入参格式：\r\n *  {\r\n *   type: AnimationType.Scale,\r\n *   config: {\r\n *     nodes: [\r\n *       {\r\n *         id: string,\r\n *         value: [x,y], *x,y  缩放倍率\r\n *       },\r\n *     ],\r\n *   },\r\n * },","suffix":"\r\n */\r\n\r\nexport function scaleAnimation({\r\n  config,\r\n  context,\r\n  time,\r\n}: {\r\n  config: NodesActionConfig;\r\n  context: FrameAnimation;\r\n  time: number;\r\n}) {\r\n  const { id, value } = config;\r\n  const node = getNodeById(id, context.allNodes);\r\n  if (node) {\r\n    node.scale = value;\r\n    setAnimationToNode(node, time);\r\n  }\r\n}\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/move.ts\nimport { NodeBase } from '@/core/Node';\nimport { FrameAnimation } from '..';\nimport { NodesActionConfig, Point } from '../../types';\nimport { getNodeById, handleLine, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/**\n * config入参格式：\n      {\n*         value: [x,y], //x,y 坐标改变\n*         id: string,\n*         addEasing:boolean,  //该次位移是否需要缓动 默认true\n*      },\n */\n\nexport function moveAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  //新流程 直接改node位置\n  const { id, value, ignoreLine = false, addEasing = true } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    handleNode(node, value, handleLine, ignoreLine);\n    setAnimationToNode(node, time, { withLine: ignoreLine ? false : true, addEasing });\n    //子节点适配\n    if (node.child) {\n      let childNode = node.child;\n      handleNode(childNode, value, childHandleLine, false);\n      setAnimationToNode(node.child, time, { addEasing });\n    }\n  }\n}\n\nfunction handleNode(oriNode: NodeBase, value, handleLineFun, ignoreLine) {\n  let nowPosition = oriNode.position;\n  //节点移动后的位置\n  let nodeMovePosition: Point = [nowPosition[0] + value[0], nowPosition[1] + value[1]];\n  oriNode.position = nodeMovePosition;\n\n  let moveLinePoints;\n  //节点变化后 如果有线，线需要挪动的位置\n  if (oriNode.hasLine) {\n    let points = oriNode.line.lineRender.render.opts.shape.points;\n    if (points) {\n      moveLinePoints = handleLineFun(points, value, oriNode);\n    }\n  }\n  // 如果线不需要忽略，就同步改动线的位置\n  if (moveLinePoints && !ignoreLine) {\n    oriNode.line.lineRender.render.opts.shape.points = moveLinePoints;\n<file_path>src/core/Animation/animationImpl/fade.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { renderConfig } from '../../config';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线之间有重叠，优先展示不透明的节点\n    z = 1;\n  } else {\n    const color = renderConfig.getCorrespondingColor(stroke, false);\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n<file_path>src/core/Animation/animationImpl/line.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/** \n  线动画 内部使用  不包括fade fade相关的在fade里面\n  config入参格式：\n  {\n         id: string,\n         pointsOption:{\n          value: number[][],\n          cb:function, 与value 互斥\n          arg:参数\n         },\n         style:{\n          lineWidth: number,\n          stroke:string,\n         }\n         addEasing:boolean,\n  },\n */\n\nexport function lineAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, pointsOption, style, addEasing } = config;\n\n  const oriNode = getNodeById(id, context.allNodes);\n  //当前节点有line\n  if (oriNode && oriNode.hasLine) {\n    //根据配置修改线的的位置\n    if (pointsOption) {\n      const { value, cb, arg } = pointsOption;\n      //value或者cb必须有一个\n      let pointValue = value ?? cb(arg);\n      oriNode.line.lineRender.render.opts.shape.points = pointValue;\n    }\n    //根据配置修改线的的style\n    if (style) {\n      oriNode.line.lineRender.render.opts.style = {\n        ...oriNode.line.lineRender.render.opts.style,\n        ...style,\n      };\n    }\n    setAnimationToNode(oriNode, time, { onlyLine: true, addEasing: pointsOption && addEasing });\n  }\n}\n<file_path>src/core/Animation/animationImpl/bezier.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { getNodeById, setAnimationToNode } from '@/core/utils';\nimport { FrameAnimation } from '..';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n        config入参格式：\n        {\n          id,\n          moveAlongTheCurve:{...}\n        }\n  */\n// 内部的贝塞尔曲线动画处理 对已经预处理的数据进行透传\nexport function bezierThroughAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, moveAlongTheCurve } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    node.moveAlongTheCurve = moveAlongTheCurve;\n    const percent = moveAlongTheCurve.percent;\n    if (percent === 1) {\n      node.position = moveAlongTheCurve.point2;\n    }\n    setAnimationToNode(node, time);\n  }\n}","relevantFileList":[],"filePath":"src/core/Animation/animationImpl/scale.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat-lite":": {","deepseek-chat":"```\n// Start Generation Here\n/**\n * config入参格式：\n","copilot":"入参格式：\r\n *  {\r\n *   type: AnimationType.Scale,\r\n *   config: {\r\n *     nodes: [\r\n *       {\r\n *         id: string,\r\n *         value: [x,y], *x,y  缩放倍率\r\n *       },\r\n *     ],\r\n *   },\r\n * },"}},{"prefix":"import { deepClone, deleteLineKey } from './index';\nimport { NodeBase } from '../Node';\nimport { GlobalObject } from '../types';\n/**\n * 对输入的trees,nodes 进行 基础库的适配输出\n * 因为基础库也是对象引用,所以需要进行对象的深拷贝输出\n * @param trees\n * @param nodes\n */\nexport function outputData(nodeArr: NodeBase[], root: GlobalObject, doIgnore: boolean) {\n  let nodes: any[] = [];\n  let edges: any[] = [];\n  for (let node of nodeArr) {\n    const nodeInit = node.initStatus.nodeInit;\n    nodeInit.animation = node.animation;\n    doIgnore && handleIgnore(nodeInit);\n    nodes.push(deepClone(nodeInit));\n    const lineInit = node.initStatus.lineInit;\n    if (lineInit) {\n      lineInit.line.animation = node.line.lineRender.animation;\n      edges.push(deepClone(lineInit));\n    }\n  }\n  return { nodes, edges, root: deepClone(root) };\n}","infill":"/**\r\n * 处理ignore\r\n * @param node\r\n","suffix":" */\r\nfunction handleIgnore(node: any) {\r\n  if (node.data.opacity === 0 || node.data.adaptIgnore) {\r\n    // 透明度为0或 adaptIgnore 需要忽略\r\n    node.render.opts['ignore'] = true;\r\n    const whens = node.animation.when;\r\n    //非0前面一个的0 需要设置成ignore:false\r\n    let isNotZero = false;\r\n    for (let i = whens.length - 1; i >= 0; i--) {\r\n      const item = whens[i];\r\n      if (item.value?.style?.opacity === 0) {\r\n        if (isNotZero) {\r\n          item.value['ignore'] = false;\r\n        }\r\n        isNotZero = false;\r\n      } else {\r\n        //not zero\r\n        isNotZero = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 清理副作用\r\n */\r\nexport const clearEffect = (node: NodeBase) => {\r\n  if (node.data[deleteLineKey]) {\r\n    node.deleteLine();\r\n    delete node.data[deleteLineKey];\r\n  }\r\n};\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/fade.ts\nimport { NodeBase } from '@/core/Node';\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { renderConfig } from '../../config';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线之间有重叠，优先展示不透明的节点\n    z = 1;\n  } else {\n    const color = renderConfig.getCorrespondingColor(stroke, false);\n    if (color) {\n<file_path>src/core/Animation/animationImpl/default.ts\nimport { FrameAnimation } from '..';\nimport { deepClone, getNodeById, setAnimationToNode } from '../../utils';\n\n// 默认-当前无动画动作,但参与其他节点动画时间线  需要复制前一个时间状态\nexport function defaultAnimation({\n  time,\n  id,\n  context,\n}: {\n  id: string;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    let nodeAnimation = node.animation.when;\n    if (nodeAnimation.length === 0) {\n      // 初始化\n      setAnimationToNode(node, time);\n    } else {\n      const nowTimeAnimation = {\n        ...nodeAnimation[nodeAnimation.length - 1],\n        time,\n      };\n      //默认\n      const cloneNowTimeAnimation = deepClone(nowTimeAnimation);\n      // 这两者配置不需要\n      delete cloneNowTimeAnimation.easing;\n      delete cloneNowTimeAnimation.moveAlongTheCurve;\n      nodeAnimation.push(cloneNowTimeAnimation);\n      if (node.hasLine) {\n        let nodeLineAnimation: any = node.line.lineRender.animation.when;\n        const lastAnimation: any = nodeLineAnimation[nodeLineAnimation.length - 1];\n        const nowTimeLineAnimation = {\n          ...lastAnimation,\n          time,\n        };\n        nodeLineAnimation.push(deepClone(nowTimeLineAnimation));\n      }\n    }\n  }\n}\n<file_path>src/core/Animation/animationImpl/treeAddNode.ts\nimport { ActionConfig, AnimationConfig, AnimationType, Point } from '../../types';\nimport { Line, NodeBase, Tree } from '../../Node';\nimport {\n  deepClone,\n  deleteLineKey,\n  generateLine,\n  getExtendByLine,\n  getTimeLineByPoint,\n  handleActionToAnimation,\n  mergeAction,\n} from '../../utils';\n\ninterface TreeAddNodeOption {\n  position?: Point;\n  mainPosition?: Point;\n  mode?: string;\n  duration?: number;\n  opacity?: number;\n  childPosition?: Point;\n  lineWidth?: number;\n}\n\nconst doFadeMode = (\n  node: NodeBase,\n  final: Object,\n  {\n    time,\n    duration,\n    opacity,\n    childPosition,\n  }: { time: number; duration: number; opacity: number; childPosition: Point | undefined }\n) => {\n  //add线的情况 要保证最初也是有线的\n  if (!node.initStatus.lineInit) {\n    node.initStatus.lineInit = deepClone({\n      source: node.line.source,\n      target: node.line.target,\n      line: node.line.lineRender,\n    });\n  }\n  let configTime = time;\n  //前后fade动画的配置\n  let beforeConfig = {\n    value: 0,\n    id: node.id,\n    onlyLine: true,\n  };\n  mergeAction(final, configTime, beforeConfig, AnimationType.Fade);\n\n  configTime = time + duration;\n  let afterConfig = {\n    value: opacity,\n    id: node.id,\n    onlyLine: true,\n  };\n  mergeAction(final, configTime, afterConfig, AnimationType.Fade);\n\n  //fade 模式下需要支持node的child\n  let child = node.child;\n  if (child) {\n<file_path>src/core/Animation/animationImpl/treeDeleteNode.ts\nimport { ActionConfig, AnimationConfig, AnimationType } from '../../types';\nimport { NodeBase } from '../../Node';\nimport { deleteLineKey, handleActionToAnimation, mergeAction } from '../../utils';\n\n/**\n * 处理  treeDeleteNode animation 高级动画\n * @param animationList\n * @returns animationList \n * 主要处理 树delete节点动画 主要处理线  基于(fade实现 1-0 ),会占用后续时间,请自动计算时间\n * 会在node的data里面塞入一个deleteLine属性, 在最后应用动画到节点时会判断该属性,删除node的line,\n * 后续如果触发treeAddNode动画 去删除deleteLine 属性 \n  配置同add 尽量相同\n\n  action入参：\n  * {\n        type: AnimationType.TreeDeleteNode,\n        //不需要value\n        config: {},\n          {\n            nodes:[\n              {\n              node, // node实例 \n            fadeTime:500// 隐藏时间\n              }\n            ]\n       \n          },\n        }\n    },\n */\n\nexport function treeDeleteNodeAnimation({\n  action,\n  time,\n}: {\n  action: ActionConfig;\n  time: number;\n}): AnimationConfig[] {\n  let final = {};\n  const { config } = action;\n  const { nodes } = config;\n\n  for (let nodeConfig of nodes) {\n    const { node, fadeTime = 500 }: { node: NodeBase; fadeTime: number } =\n      nodeConfig as unknown as { node: NodeBase; fadeTime: number };\n    node.data[deleteLineKey] = true;\n    let configTime = time;\n    let beforeConfig = {\n      value: 1,\n      id: node.id,\n      onlyLine: true,\n    };\n    mergeAction(final, configTime, beforeConfig, AnimationType.Fade);\n    configTime = time + fadeTime;\n    //通过隐藏来实现，当前帧动画结束后，删除线\n    let afterConfig = {\n      value: 0,\n      id: node.id,\n      onlyLine: true,\n    };","relevantFileList":[],"filePath":"src/core/utils/format.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\n/**\n * 处理节点的忽略逻辑","copilot":"/**\r\n * 处理ignore\r\n * @param node\r\n"}},{"prefix":"import { ActionConfig, AnimationConfig, AnimationType, Point } from '../../types';\nimport { Line, NodeBase, Tree } from '../../Node';\nimport {\n  deepClone,\n  deleteLineKey,\n  generateLine,\n  getExtendByLine,\n  getTimeLineByPoint,\n  handleActionToAnimation,\n  mergeAction,\n} from '../../utils';\n\ninterface TreeAddNodeOption {\n  position?: Point;\n  mainPosition?: Point;\n  mode?: string;\n  duration?: number;\n  opacity?: number;\n  childPosition?: Point;\n  lineWidth?: number;\n}\n\nconst doFadeMode = (\n  node: NodeBase,\n  final: Object,\n  {\n    time,\n    duration,\n    opacity,\n    childPosition,\n  }: { time: number; duration: number; opacity: number; childPosition: Point | undefined }\n) => {\n  //add线的情况 要保证最初也是有线的\n  if (!node.initStatus.lineInit) {\n    node.initStatus.lineInit = deepClone({\n      source: node.line.source,\n      target: node.line.target,\n      line: node.line.lineRender,\n    });\n  }\n  let configTime = time;\n  //qi\n  let beforeConfig = {\n    value: 0,\n    id: node.id,\n    onlyLine: true,\n  };\n  mergeAction(final, configTime, beforeConfig, AnimationType.Fade);\n  configTime = time + duration;\n\n  let afterConfig = {\n    value: opacity,\n    id: node.id,\n    onlyLine: true,\n  };\n  mergeAction(f","infill":"xtend模式","suffix":"\r\n      doExtendMode(node, final, { newLine, duration, opacity, lineWidth, time });\r\n    }\r\n  }\r\n  return handleActionToAnimation(final);\r\n}\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/blink.ts\nimport { ActionConfig, AnimationConfig, AnimationType } from '../../types';\nimport { handleActionToAnimation, mergeAction } from '../../utils';\n\n/**\n * 处理 blink animation  高级动画\n * @param animationList\n * @returns animationList\n *\n * 闪烁动画须知 闪烁动画的time 是动画开始的时间\n * 闪n次 就产生2n+1次时间 如间隔100ms 闪2次 即500(配置时间)-600-700-800-900\n * 基于fade实现 根据repeatCount 和 interval 会占用后续时间,请自动计算时间\n * \n * config入参格式：\n * {\n        type: AnimationType.Blink,\n        config: {\n          nodes: [\n            {\n              id: \"gk-main-node\",\n              //{repeatCount = 2, interval = 225, opacity = 0.2 }\n            },\n          ],\n        },\n    },\n */\n\nexport function blinkAnimation({\n  action,\n  time,\n}: {\n  action: ActionConfig;\n  time: number;\n}): AnimationConfig[] {\n  const final = {};\n  const { config } = action;\n  const { nodes } = config;\n\n  for (const nodeConfig of nodes) {\n    // 默认闪烁2次 间隔100ms 从1(暂时写死 简化逻辑)变化到传入的透明度 默认0.2\n    const { repeatCount = 2, interval = 225, opacity = 0.2, id } = nodeConfig;\n    const count = 2 * repeatCount + 1;\n    // 遍历每个动画次数\n    for (let index = 0; index < count; index++) {\n      const configTime = time + interval * index;\n      // 创建动作配置\n      const actionConfig = {\n        id,\n        value: index % 2 === 0 ? 1 : opacity,\n        withLine: false,\n      };\n      // 如果索引不是第一个也不是最后一个，则不参与其他节点的动画序列，需要对于其他节点忽略\n      const shouldIgnore = index !== 0 && index !== count - 1;\n      mergeAction(final, configTime, actionConfig, AnimationType.Fade, shouldIgnore);\n    }\n  }\n  return handleActionToAnimation(final);\n}\n<file_path>src/core/Animation/animationImpl/preBezier.ts\n *\n * config入参格式：\n *  {\n *  type: AnimationType.Bezier,\n *  config: {\n *   nodes:[\n *     {\n *        id:'',\n *        targetPosition:[x,y],\n *        duration: 持续时间,默认1s, 会占用后续时间\n *        offset: 0, y轴偏移量 默认0  往上-10 往下10\n *     }\n *   ]\n *  }\n * }\n * @returns\n */\nexport function bezierAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n  time: number;\n}): AnimationConfig[] {\n  const { config } = action;\n  const { nodes } = config;\n  //time为key,处理后的actions为value\n  let final = {};\n  for (let nodeConfig of nodes) {\n    const { targetPosition, offset = 0, duration = 1000, id } = nodeConfig;\n    const oriNode = getNodeById(id, context.allNodes);\n    if (oriNode && targetPosition) {\n      //获取中间控制点\n      const controlPoint = getControlPoint(oriNode.position, targetPosition, offset);\n      //生成唯一key\n      let key = generateId(id);\n      //bezier动画所需的配置\n      let beforeConfig = {\n        id,\n        moveAlongTheCurve: {\n          key,\n          point1: oriNode.position,\n          point2: targetPosition,\n          cpoint: controlPoint,\n          percent: 0,\n        },\n      };\n      //bezier动画所需的配置 前后 需要一对\n      let afterConfig = {\n        id,\n        moveAlongTheCurve: {\n          key,\n          point1: oriNode.position,\n          point2: targetPosition,\n          cpoint: controlPoint,\n          percent: 1,\n        },\n      };\n<file_path>src/core/Animation/animationImpl/treeMove.ts\n    [oriPoints[3][0] + targetValue[0], oriPoints[3][1] + targetValue[1]],\n  ];\n  return getPointsInTreeMove(linePoints, mainValue);\n};\n\n/**\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n *  // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n  time: number;\n}): AnimationConfig[] {\n  const final = {};\n  const { config } = action;\n  const {\n    tree,\n    nodes,\n    mainValue,\n    addEasing = true,\n  }: {\n    tree: Tree;\n    nodes: NodesActionConfig[];\n    mainValue: number;\n    addEasing: boolean;\n  } = config as unknown as {\n    tree: Tree;\n    nodes: NodesActionConfig[];\n    mainValue: number;\n    addEasing: boolean;\n  };\n  const mainNode = tree.getRoot();\n  const mainMoveConfig = {\n    id: mainNode.id,\n    value: mainValue,\n    // 主节点的线不参与\n<file_path>src/core/Animation/animationImpl/treeDeleteNode.ts\nimport {\n  deleteLineKey,\n  handleActionToAnimation,\n  mergeAction,\n} from \"../../utils\";\n\n/**\n * 处理  treeDeleteNode animation  不同于普通动画  需要修改动画配置list\n * @param animationList\n * @returns animationList \n * 主要处理 树delete节点动画 主要处理线  基于(fade实现 1-0 ),会占用后续时间,请自动计算时间\n * 会在node的data里面塞入一个deleteLine属性, 在最后应用动画到节点时会判断该属性,删除node的line,\n * 后续如果触发treeAddNode动画 去删除deleteLine 属性 \n  配置同add 尽量相同\n  * {\n        type: AnimationType.TreeDeleteNode,\n        //不需要value\n        config: {},\n          {\n            nodes:[\n              {\n              node, // node实例 \n            fadeTime:500// 隐藏时间\n              }\n            ]\n       \n          },\n        }\n    },\n */\n\nexport function treeDeleteNodeAnimation({\n  action,\n  time,\n}:{action:ActionConfig,time:number}): AnimationConfig[] {\n  let final = {};\n  const { config } = action;\n  const { nodes } = config;\n\n  for (let nodeConfig of nodes) {\n    const { node, fadeTime = 500 }: { node: NodeBase; fadeTime: number } =\n      nodeConfig as unknown as { node: NodeBase; fadeTime: number };\n    node.data[deleteLineKey] = true;\n    let configTime = time;\n    let beforeConfig = {\n      value: 1,\n      id: node.id,\n      onlyLine: true,\n    };\n    mergeAction(final, configTime, beforeConfig, AnimationType.Fade);\n    configTime = time + fadeTime;\n\n    let afterConfig = {\n      value: 0,\n      id: node.id,\n      onlyLine: true,\n    };\n    mergeAction(final, configTime, afterConfig, AnimationType.Fade);\n  }\n  return handleActionToAnimation(final);","relevantFileList":[],"filePath":"src/core/Animation/animationImpl/treeAddNode.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"inal, configTime, afterConfig, AnimationType.Fade);","deepseek-chat-lite":"inal, configTime, afterConfig, AnimationType.Fade);","deepseek-chat":"```\n// Start Generation Here\ninal, configTime, afterConfig, Animation","copilot":"xtend模式"}},{"prefix":"import { Point } from '../types';\nimport { doTail } from '../utils/tail';\n\ninterface RenderOption {\n  update: Function;\n  render: Function;\n}\n//渲染管理器\nexport class RenderManager {\n  private _renderMap = new Map<string, RenderOption>();\n  private _renderInstanceMap = new Map<string, BaseRender>();\n\n  //type key后续有用\n  constructor(public key = 'type') {}\n\n  //注册有哪些渲染配置\n  register(type: string, render: BaseRender) {\n    this._renderInstanceMap.set(type, render);\n    this._renderMap.set(type, render.render());\n    return this;\n  }\n\n  get renderMap() {\n    return this._renderMap;\n  }\n  get renderInstanceMap() {\n    return this._renderInstanceMap;\n  }\n}\n\ninterface TailOption {\n  id: string;\n  offset?: number[];\n}\n\nexport const generateRender = (render: RenderManager) => {\n  const getCustomRenderHandler = (node: any) => {\n    let result: RenderOption = {\n      render: () => '',\n      update: () => '',\n    };\n    //根据节点的option中的key值找到对应的渲染器\n    const option = node.getOption();\n    const { renderMap } = render;\n    for (const [key, value] of renderMap) {\n      if (key === option?.data[render.key]) {\n        result = value;\n        break;\n      }\n    }\n    return result;\n  };\n\n  //提供给底层渲染库\n  return (_relationGraphs: any, _node: any, _option: any) => {\n    const handler = getCustomRenderHandler(_node);\n    if (_option.update) {\n      handler.update(_relationGraphs, _node, _option);\n    } else {\n      handler.render(_relationGraphs, _node, _option);\n    }\n  };\n};\n\n//基础渲染器\nexport abstract class BaseRender {\n  protected nodes: any = {};\n  protected zrender: any = {};\n  protected helper: any = {};\n  private isEnableTail: boolean = false;\n  private enableIds: TailOption[] = [];\n  constructor(zrender: any, helper: any) {\n    this.zrender = zrender;\n    this.helper = helper;\n  }\n  render() {\n    return {\n      render: this.getRender(),\n      update: this.getUpdate(),\n    };\n  }\n\n  getRender() {\n    return (_relationGraphs: any, node: any) => {\n      this.customRender(_relationGraphs, node);\n      this.addToGroupAndSetAnimation(_relationGraphs, node);\n      if (this.isEnableTail) {\n        const { id, offset = [0, 0] } = this.getTailConfig(node.id);\n        if (id) {\n          doTail(node, this.zrender, offset);\n        }\n      }\n    };\n  }\n  //","infill":"子类实现 add渲染逻辑","suffix":"\r\n  abstract customRender(_relationGraphs: any, node: any): void;\r\n  protected getUpdate() {\r\n    return () => '';\r\n  }\r\n  // 传给底层库的渲染配置\r\n  addToGroupAndSetAnimation(relationGraphs: any, node: any) {\r\n    const option = node.getOption();\r\n    Object.entries(this.nodes).forEach(([name, config]) => {\r\n      const { shape, opts } = config as {\r\n        shape: string;\r\n        opts: any;\r\n      };\r\n      const ele = new this.zrender[shape](opts);\r\n      ele.name = name;\r\n      this.eleAddToGroupPreHook(ele);\r\n      node.group.add(ele);\r\n      const animations = option.animation;\r\n      // 还是使用老的实现设置子元素的透明度 现在只涉及透明度\r\n      const realWhen = animations.when.map(v => ({\r\n        time: v.time,\r\n        value: {\r\n          style: {\r\n            //动画未设置透明度 使用节点本身默认透明度\r\n            opacity: v.value?.style?.opacity ?? option.data.opacity,\r\n          },\r\n        },\r\n      }));\r\n      this.helper.animation.setElementAnimation(relationGraphs, ele, {\r\n        when: realWhen,\r\n      });\r\n    });\r\n  }\r\n\r\n  /** tail */\r\n  getTailConfig(id: string): { id: string; offset?: Point } {\r\n    const result: any = {};\r\n    for (const item of this.enableIds) {\r\n      if (item.id === id) {\r\n        result.id = id;\r\n        if (item.offset) {\r\n          result.offset = item.offset;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  public enableTail(ids: TailOption[]) {\r\n    this.enableIds = ids;\r\n    this.isEnableTail = true;\r\n  }\r\n\r\n  //子节点加在group之前需要特殊处理的 //比如图片圆角\r\n  protected eleAddToGroupPreHook(ele) {\r\n    //  需要处理时进行重写\r\n  }\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/core/Render/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 渲染节点\r","deepseek-chat-lite":"抽象方法 子类实现","deepseek-chat":"```\n// Start Generation Here\n  protected getTailConfig(id: string","copilot":"子类实现 add渲染逻辑"}},{"prefix":"import { easingFunction, renderConfig } from '../config';\nimport { Line, NodeBase } from '../Node';\nimport { AnimationConfig, Point, ProcessAnimationValue } from '../types';\nimport { clearEffect } from './format';\n\n// 用于deleteLine的标识\nexport const deleteLineKey = 'deleteLine';\n\n//line默认配置，线的颜色，透明度，线宽，给底层库\nexport const getLineConfig = (\n  points: Point[],\n  lineColor: string,\n  opacity: number = 1,\n  lineWidth: number = renderConfig.getConfig().lineWidth\n) => ({\n  render: {\n    shape: 'Polyline',\n    opts: {\n      shape: {\n        points,\n      },\n      style: {\n        lineWidth,\n        stroke: lineColor,\n        opacity,\n      },\n      z: 2,\n    },\n  },\n  animation: {\n    when: [],\n  },\n});\n//node默认配置，位置，透明度，给底层库\nexport const getNodeConfig = (node: NodeBase) => {\n  const render = {\n    shape: 'Rect',\n    opts: {\n      position: node.position,\n    },\n    z: 2,\n  };\n  const base = {\n    id: node.id,\n    data: node.data,\n    // animation: node.animation,\n    render,\n  };\n  if (node.lottieW && node.lottieH) {\n    base.render.opts['shape'] = {\n      width: node.lottieW,\n      height: node.lottieH,\n    };\n  }\n  return deepClone(base);\n};\n\n//获取线的初始配置\nexport function getLineInitByNode(node: NodeBase) {\n  return deepClone({\n    source: node.line.source,\n    target: node.line.target,\n    line: node.line.lineRender,\n  });\n}\n\n// 需要进行时间判定,会有相同时间的不同type进行\n// 需要兼容 贝塞尔曲线动画\nexport function setAnimationToNode(\n  node: NodeBase,\n  time: number,\n  option?: {\n    onlyLine?: boolean;\n    withLine?: boolean;\n    addEasing?: boolean;\n  }\n) {\n  const { onlyLine = false, withLine = true, addEasing = false } = option ?? {};\n  if (!onlyLine) {\n    animationHandleNode(node, time, addEasing);\n  }\n  if (withLine && node.hasLine) {\n    animationHandleLine(node, time, addEasing);\n  }\n}\n// 处理节点的动画 合并到原有配置\nfunction animationHandleNode(node: NodeBase, time: number, addEasing: boolean) {\n  let valNode: ProcessAnimationValue = deepClone({\n    time,\n    value: {\n      position: node.position,\n      style: {\n        opacity: node.data.opacity,\n      },\n      scale: node.scale,\n    },\n  });\n  if (node.moveAlongTheCurve) {\n    valNode.moveAlongTheCurve = node.moveAlongTheCurve;\n    const percent = node.moveAlongTheCurve.percent;\n    if (percent === 1) {\n      node.moveAlongTheCurve = null;\n    }\n  }\n  if (addEasing) {\n    valNode.easing = easingFunction;\n  }\n\n  let lastIndex = node.animation.when.length - 1;\n  let lastAnimationWhen = node.animation.when[lastIndex];\n  if (lastAnimationWhen) {\n    if (lastAnimationWhen.time === time) {\n      node.animation.when[lastIndex] = valNode;\n    } else {\n      node.animation.when = [...node.animation.when, valNode];\n    }\n  } else {\n    node.animation.when = [valNode];\n  }\n}\n\n// 处理线的动画 合并到原有配置\nfunction animationHandleLine(node: NodeBase, time: number, addEasing: boolean) {\n  let valLine: ProcessAnimationValue;\n\n  valLine = deepClone({\n    time,\n    value: node.line.lineRender.render.opts,\n  });\n  if (addEasing) {\n    valLine.easing = easingFunction;\n  }\n  let lastIndex = node.line.lineRender.animation.when.length - 1;\n\n  let lastAnimationWhen = node.line.lineRender.animation.when[lastIndex];\n  if (lastAnimationWhen) {\n    if (lastAnimationWhen.time === time) {\n      node.line.lineRender.animation.when[lastIndex] = valLine;\n    } else {\n      node.line.lineRender.animation.when = [...node.line.lineRender.animation.when, valLine];\n    }\n  } else {\n    node.line.lineRender.animation.when = [valLine];\n  }\n}\n\n// 深拷贝\nexport function deepClone<T>(obj: T): T {\n  if (!obj) return obj;\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * 生成一个基于原始id和时间戳的唯一id\n * @param {string} id - 原始id\n * @returns {string} - 生成的唯一id\n */\n\nexport function generateId(id: string) {\n  /**\n   * 获取当前时间戳的后6位作为时间戳标识\n   */\n  const timestamp = Date.now().toString().slice(-6);\n  /**\n   * 获取4位随机数作为随机数标识\n   */\n  const randomNumber = Math.random().toString(36).substring(2, 6);\n  /**\n   * 拼接最终id\n   */\n  return `${id}_${timestamp}_${randomNumber}`;\n}\n\n/**\n * 节点平移-处理线\n * @param points\n * @param value\n * @returns\n */\nexport function handleLine(points: number[][], value: number[], node: NodeBase) {\n  const _points = deepClone(points);\n  // 先实现4点折线的平移\n  if (value[0]) {\n    //x轴\n    _points[2][0] = _points[2][0] + value[0];\n    _points[3][0] = _points[3][0] + value[0];\n  }\n  if (value[1]) {\n    // y轴的移动 对于超过 1段线的情况 需要特殊处理\n    //折线,动作默认朝上\n    let lineDirectionUp = true;\n    let animationDirectionUp = true;\n    //最外层的一段高度\n    const outOffset = _points[3][1] - _points[2][1];\n    if (outOffset > 0) {\n      //线朝下\n      lineDirectionUp = false;\n    }\n    if (value[1] > 0) {\n      //动作朝下\n      animationDirectionUp = false;\n    }\n    // y轴移动的绝对值\n    const absValueY = Math.abs(value[1]);\n    // 最外层的一段高度的绝对值\n    const outDistance = Math.abs(outOffset);\n    /** 特殊场景 子节点不适用\n     * 如果动画移动方向和线原有方向不一致  且y轴移动比一段线更多,意味着线的方向要开始变化\n     */\n    if (lineDirectionUp !== animationDirectionUp && absValueY > outDistance) {\n      // 节点高度\n      const nodeHeight = node.getBottomDistance() + node.getTopDistance();\n      // 节点高度 + 最外层的一段高度\n      const judgeHeight = outDistance + nodeHeight;\n      changeDirection(judgeHeight, absValueY, animationDirectionUp, _points);\n    } else {\n      // 默认 y轴坐标移动\n      _points[3][1] = _points[3][1] + value[1];\n    }\n  }\n  return _points;\n}\n\n// 处理线的方向变化\nconst changeDirection = (\n  judgeHeight: number,\n  absValueY: number,\n  animationDirectionUp: boolean,\n  _points: number[][]\n) => {\n  if (absValueY <= judgeHeight) {\n    // 如果y轴移动距离小于判断距离 即线与节点重合 线的末尾段应该是水平的\n    _points[3][1] = _points[2][1];\n  } else if (absValueY >= judgeHeight) {\n    // 如果y轴移动距离大于等于判断距离  即需要发生方向上的变化\n    let offset = absValueY - judgeHeight;\n    if (animationDirectionUp) {\n      offset = -offset;\n    }\n    // 方向变化要减去节点高度  如折线原本位于节点上方,现在会处于节点下方\n    _points[3][1] = _points[2][1] + offset;\n  }\n};\n\n//","infill":" 通过id获取节点","suffix":"\r\nexport function getNodeById(id: string, nodes: NodeBase[]) {\r\n  for (let node of nodes) {\r\n    if (node.id === id) {\r\n      return node;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * 初始化所有节点\r\n * 1. 清空所有动画 2.初始化init状态 3.进行deleteline的副作用\r\n * @param nodes\r\n */\r\nexport function resetAllNodes(nodes: NodeBase[]) {\r\n  for (const node of nodes) {\r\n    clearEffect(node);\r\n\r\n    node.animation.when = [];\r\n\r\n    const nodeInit = getNodeConfig(node);\r\n    node.initStatus.nodeInit = nodeInit;\r\n    if (node.hasLine) {\r\n      const lineInit = getLineInitByNode(node);\r\n      node.initStatus.lineInit = lineInit;\r\n    } else {\r\n      node.initStatus.lineInit = null;\r\n    }\r\n\r\n    if (node.hasLine && node.line.lineRender.animation) {\r\n      node.line.lineRender.animation.when = [];\r\n    }\r\n  }\r\n}\r\n\r\n// 2个节点确定一条折线\r\nexport function generateLine({\r\n  sourceNode,\r\n  targetNode,\r\n  opacity,\r\n  targetPosition,\r\n  lineWidth,\r\n  sourcePosition,\r\n}: {\r\n  sourceNode: NodeBase;\r\n  targetNode: NodeBase;\r\n  opacity?: number;\r\n  targetPosition?: Point;\r\n  sourcePosition?: Point;\r\n  lineWidth?: number;\r\n}): Line {\r\n  const { lineInnerHeight, upColor, downColor } = renderConfig.getConfig();\r\n  // 首先判断方向 默认从源节点上部出发\r\n  let isUp = true;\r\n\r\n  const targetY = targetPosition ? targetPosition[1] : targetNode.y;\r\n  const targetX = targetPosition ? targetPosition[0] : targetNode.x;\r\n  const sourceY = sourcePosition ? sourcePosition[1] : sourceNode.y;\r\n  const sourceX = sourcePosition ? sourcePosition[0] : sourceNode.x;\r\n  const targetUpY = targetY - targetNode.getTopDistance();\r\n\r\n  const targetBottomY = targetY + targetNode.getBottomDistance();\r\n\r\n  //坐标相等 也要上部出发\r\n  if (targetY > sourceY) {\r\n    isUp = false;\r\n  }\r\n\r\n  const startY = sourceY + (isUp ? -sourceNode.getTopDistance() : sourceNode.getBottomDistance());\r\n\r\n  //第一个转折的y\r\n  let startPolyY = startY + (isUp ? -lineInnerHeight : lineInnerHeight);\r\n  //默认不需要折\r\n  let endY = startPolyY;\r\n  if (targetUpY > startPolyY) {\r\n    //往下折\r\n    endY = targetUpY;\r\n  } else if (targetBottomY < startPolyY) {\r\n    endY = targetBottomY;\r\n    //往上折\r\n  } else {\r\n    // 特殊情况\r\n    startPolyY = targetUpY;\r\n    endY = targetUpY;\r\n  }\r\n\r\n  const linePosition: Point[] = [\r\n    [sourceX, startY],\r\n    [sourceX, startPolyY],\r\n    [targetX, startPolyY],\r\n    [targetX, endY],\r\n  ];\r\n\r\n  return new Line({\r\n    lineRender: getLineConfig(linePosition, isUp ? upColor : downColor, opacity, lineWidth),\r\n    source: sourceNode.id,\r\n    target: targetNode.id,\r\n  });\r\n}\r\n\r\n// 获取线的延展路线\r\n/** example: [[20, 0],[20, 20],[40, 20],[40, -10]]\r\n *  ==> [[20, 0],[20, 0],[20, 0],[20, 0]]\r\n *  ==> [[20, 0],[20, 20],[20, 20],[20, 20]]\r\n *  ==> [[20, 0],[20, 20],[40, 20],[40,20]]\r\n *  ==> [[20, 0],[20, 20],[40, 20],[40, -10]]\r\n */\r\nexport function getExtendByLine(points: Point[]) {\r\n  return [\r\n    [points[0], points[0], points[0], points[0]],\r\n    [points[0], points[1], points[1], points[1]],\r\n    [points[0], points[1], points[2], points[2]],\r\n    [points[0], points[1], points[2], points[3]],\r\n  ];\r\n}\r\n// 线的延展时用 获取各段线的延展市场,按长度平均分配\r\n/** example: [[20, 0],[20, 20],[40, 20],[40, -10]],1000\r\n */\r\nexport function getTimeLineByPoint(points: Point[], duration: number): number[] {\r\n  const lengthY1 = Math.abs(points[1][1] - points[0][1]);\r\n  const lengthX = Math.abs(points[2][0] - points[1][0]);\r\n  const lengthY2 = Math.abs(points[3][1] - points[2][1]);\r\n  const total = lengthY1 + lengthX + lengthY2;\r\n  return [\r\n    Math.floor((lengthY1 / total) * duration),\r\n    Math.floor((lengthX / total) * duration),\r\n\r\n    Math.floor((lengthY2 / total) * duration),\r\n  ];\r\n}\r\n\r\n/**\r\n * 合并高级动画处理后的数据到基础动画list\r\n * @param animations\r\n * @param proAnimation\r\n * @returns\r\n */\r\nexport function mergeAnimation(\r\n  animations: AnimationConfig[],\r\n  proAnimation: AnimationConfig[][]\r\n): AnimationConfig[] {\r\n  const result: AnimationConfig[] = [...animations];\r\n\r\n  // 合并proAnimation数组中的动画\r\n  for (const animationsArray of proAnimation) {\r\n    for (const animation of animationsArray) {\r\n      const lastAnimation = result[result.length - 1];\r\n\r\n      // 如果result数组为空，或者当前动画的时间大于上一个动画的时间\r\n      if (!lastAnimation || animation.time > lastAnimation.time) {\r\n        result.push(animation);\r\n      } else if (animation.time === lastAnimation.time) {\r\n        // 如果当前动画的时间与上一个动画的时间相同\r\n        lastAnimation.action = lastAnimation.action.concat(animation.action);\r\n      } else {\r\n        needInsert(result, animation);\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n// 插入到正确的位置\r\nconst needInsert = (result: AnimationConfig[], animation: AnimationConfig) => {\r\n  // 如果当前动画的时间小于上一个动画的时间，需要找到正确的位置插入\r\n  let insertIndex = result.length - 1;\r\n  while (insertIndex >= 0 && animation.time < result[insertIndex].time) {\r\n    insertIndex--;\r\n  }\r\n\r\n  if (insertIndex === -1) {\r\n    // 时间最小 插最前面\r\n    result.unshift(animation);\r\n  } else if (animation.time === result[insertIndex].time) {\r\n    result[insertIndex].action = result[insertIndex].action.concat(animation.action);\r\n  } else {\r\n    //插入到 insertIndex 之前\r\n    // 插入到正确的位置\r\n    result.splice(insertIndex + 1, 0, animation);\r\n  }\r\n};\r\n、、\r\nexport const mergeAction = (final, time, config, type, ignore = false) => {\r\n  const beforeAction = final[time];\r\n  let typeMerge = false;\r\n  if (beforeAction) {\r\n    //同一时间点需要合并,相同type 需要合并到nodes\r\n    for (const action of beforeAction) {\r\n      if (action === type) {\r\n        //type相同\r\n        action.config.nodes.push(config);\r\n        typeMerge = true;\r\n      }\r\n    }\r\n    if (!typeMerge) {\r\n      //是个新type\r\n      beforeAction.push({\r\n        ignore,\r\n        type,\r\n        config: {\r\n          nodes: [config],\r\n        },\r\n      });\r\n    }\r\n  } else {\r\n    final[time] = [\r\n      {\r\n        type,\r\n        ignore,\r\n        config: {\r\n          nodes: [config],\r\n        },\r\n      },\r\n    ];\r\n  }\r\n};\r\n\r\nexport function handleActionToAnimation(final) {\r\n  const keys = Object.keys(final);\r\n  const animations: AnimationConfig[] = [];\r\n  for (const key of keys) {\r\n    animations.push({\r\n      time: Number(key),\r\n      action: final[key],\r\n    });\r\n  }\r\n  return animations;\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/core/utils/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 节点平移-处理线\r","deepseek-chat-lite":" 清除动画效果","deepseek-chat":"```\n// Start Generation Here\nexport function calculateDistance(point1: Point","copilot":" 通过id获取节点"}},{"prefix":"import { NodeBase, Tree, FrameAnimation } from '@/core/index';\n\nimport { doSubsidiaryAnimation, animationTime as subsidiaryTimes } from './trade/subsidiary';\nimport { doMergeAnimation, animationTime as mergeTimes } from './trade/merge';\nimport { doDissolutionAnimation, animationTime as dissolutionTimes } from './trade/dissolution';\nimport { doIpoAnimation, animationTime as ipoTimes } from './trade/ipo';\n\nimport { doETSAnimation, animationTime as etsTimes } from './trade/ets';\n\nimport { doBCAnimation, animationTime as bcTimes } from './trade/bc';\n\nimport { t } from '@/assets/lang/i8n';\nimport { IProcess } from './init/type';\nimport { getTextWidthByCanvas } from '../utils';\n\nexport const FontFamily = 'sans-serif';\n\n// value 跟接口匹配\nexport enum NodeType {\n  //主体公司\n  Main = 'Main',\n  //股东 个人\n  HolderPeople = 'people',\n  //股东机构s\n  HolderIns = 'inst',\n  // 流动资产\n  CurrentAsset = 'current',\n  //非流动资产 固定资产\n  NonCurrentAsset = 'nonCurrent',\n  //子公司\n  SubCompany = 'SubCompany',\n  //目标股东 因为逻辑比较特殊,不使用HolderPeople\n  TargetHolder = 'targetHolder',\n  //参与交易的股票\n  Stock = 'Stock',\n  //参与交易的现金\n  Cash = 'Cash',\n  // lottie\n  Lottie = 'Lottie',\n  // label 文字类node 应用多种场景\n  Label = 'Label',\n  //股东 个人 匹配接口other使用\n  Other = 'other',\n}\n\nexport enum SupportTradeTypes {\n  subsidiary = 'subsidiary',\n  merge = 'merge',\n  dissolution = 'dissolution',\n  ipo = 'ipo',\n  ets = 'establish_target_subsidiary',\n  bc = 'business_combination',\n}\nexport function isSupportTradeType(type: any): boolean {\n  return Object.values(SupportTradeTypes).includes(type);\n}\n\nconst TradeConfig = {\n  // 创建子公司\n  [SupportTradeTypes.subsidiary]: {\n    func: doSubsidiaryAnimation,\n    times: subsidiaryTimes,\n  },\n  // 收购\n  [SupportTradeTypes.merge]: {\n    func: doMergeAnimation,\n    times: mergeTimes,\n  },\n  // 注销子公司\n  [SupportTradeTypes.dissolution]: {\n    func: doDissolutionAnimation,\n    times: dissolutionTimes,\n  },\n  // ipo\n  [SupportTradeTypes.ipo]: {\n    func: doIpoAnimation,\n    times: ipoTimes,\n  },\n  // establish target subsidiary\n  [SupportTradeTypes.ets]: {\n    func: doETSAnimation,\n    times: etsTimes,\n  },\n  //business combine\n  [SupportTradeTypes.bc]: {\n    func: doBCAnimation,\n    times: bcTimes,\n  },\n};\n\n//钩子有哪些\ninterface Hooks {\n  preHook?: Function;\n  middleHook?: Function;\n}\nconst TradeHook: { [key: string]: Hooks } = {};\n//注册钩子\nexport const registerTradeHook = (type: SupportTradeTypes, obj: Object) => {\n  TradeHook[type] = obj;\n};\n//获取对应的动画函数\nexport const getTradeAnimationFunc = (type: SupportTradeTypes) => {\n  const { func } = TradeConfig[type];\n  const { preHook, middleHook } = TradeHook[type] ?? {};\n  return { func, preHook, middleHook };\n};\n\nexport interface TradeBaseOption {\n  holderNodes: NodeBase[];\n  assetNodes: NodeBase[];\n  mainNode: NodeBase;\n  mainTree: Tree;\n  frameAnimation: FrameAnimation;\n  middleHook?: Function;\n}\n\n//创建子公司 Subsidiary\nexport interface TradeSubsidiaryOption extends TradeBaseOption {\n  subCompanyNode: NodeBase;\n  lottieNode: NodeBase;\n}\n\n//Dissolution 共用merge\nexport interface TradeMergeOption extends TradeSubsidiaryOption {\n  targetCompanyNode: NodeBase;\n  targetCompanyHolderNode: NodeBase;\n  targetCompanyHolderRateNode: NodeBase;\n  targetCompanyTree: Tree;\n  stockNode?: NodeBase;\n  cashNode?: NodeBase;\n  otherLottieNode: NodeBase;\n  //为middlHook使用的参数\n  specialArg?: any;\n}\n//IPO\nexport interface TradeIpoOption extends TradeBaseOption {\n  publicInvestorNode: NodeBase;\n  stockNode: NodeBase;\n  cashNode: NodeBase;\n  unitsNode: NodeBase;\n  afterUnitsNode: NodeBase;\n  publicInvestorCashNode: NodeBase;\n  publicInvestorTree: Tree;\n  lottieNode: NodeBase;\n  bubbleNode: NodeBase;\n}\n//establish target subsidiary\nexport interface TradeEtsOption extends TradeBaseOption {\n  publicInvestorNode: NodeBase;\n  targetTree: Tree;\n  targetNode: NodeBase;\n  targetHolderNodes: NodeBase[];\n  subCompanyNode: NodeBase;\n  lottieNode: NodeBase;\n}\n\n// 大部分与ets共用 bus","infill":"iness combination","suffix":"\r\nexport interface TradeBcOption extends TradeEtsOption {\r\n  stockNode: NodeBase;\r\n  otherLottieNode: NodeBase;\r\n  lineLottieNode: NodeBase;\r\n  combinationLottieNode: NodeBase;\r\n  bubbleNode: NodeBase;\r\n}\r\n\r\nexport interface CommonValueOption {\r\n  id: string;\r\n  value: any;\r\n  onlyLine?: boolean;\r\n}\r\n\r\n//根据ids设置value \r\nexport const setValueWithIds = (nodes: NodeBase | NodeBase[], value: any) => {\r\n  let final: CommonValueOption[] = [];\r\n\r\n  if (Array.isArray(nodes)) {\r\n    final = nodes.map(node => ({\r\n      id: node.id,\r\n      value,\r\n    }));\r\n  } else {\r\n    final = [\r\n      {\r\n        id: nodes.id,\r\n        value,\r\n      },\r\n    ];\r\n  }\r\n  return final;\r\n};\r\n\r\nexport const getAssetById = (id: string, assetList: any[]) => {\r\n  for (const asset of assetList) {\r\n    if (asset.itemId === id) {\r\n      return asset;\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleValue = (val: string | null, oriUnit: string | null) => {\r\n  if (!val) {\r\n    return '';\r\n  }\r\n  if (oriUnit) {\r\n    return window.F10Utils.handleData(val) + oriUnit;\r\n  } else {\r\n    const { value, unit } = window.F10Utils.formateLocaleData(val, 'en');\r\n    return value + unit;\r\n  }\r\n};\r\n\r\n//显示的名字 优先取key 再取name\r\nexport const handleName = (key: string | null, name: string, fillerFields: Object = {}) => {\r\n  if (key) {\r\n    return t(key, fillerFields);\r\n  } else {\r\n    return name;\r\n  }\r\n};\r\n\r\n// 根据动画类型获取动画的时间 1个动画 分为 前后2部分\r\n/**\r\n * 返回秒\r\n * @param type\r\n * @returns\r\n * 例子 [7.5,5.5]\r\n */\r\nexport const getTradeAnimationTimes = (type: string): [number, number] => {\r\n  const rate = 1000;\r\n  const { times } = TradeConfig[type as SupportTradeTypes];\r\n  const { preTimes, afterTimes } = times;\r\n  return [Number(preTimes.at(-1)) / rate, Number(afterTimes.at(-1)) / rate];\r\n};\r\n\r\n//根据规则 自动自适应截断\r\nexport const getShowLabel = (label: string, font: number) => {\r\n  const max = 88;\r\n  let showLabel = label;\r\n  if (getTextWidthByCanvas(showLabel, font) <= max) {\r\n    return showLabel;\r\n  } else {\r\n    while (getTextWidthByCanvas(showLabel, font) > max) {\r\n      showLabel = showLabel.substring(0, showLabel.length - 1);\r\n    }\r\n    return `${showLabel.substring(0, showLabel.length - 1)}...`;\r\n  }\r\n};\r\n\r\nexport const judgeImgSrcAvailable = (src: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!src) reject('');\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      resolve(src);\r\n    };\r\n    img.onerror = () => {\r\n      reject(new Error('Image load failed'));\r\n    };\r\n    img.src = src;\r\n  });\r\n};\r\n\r\n// 获取实际动画步骤 过滤pre_ma post_ma\r\nexport const getAvailableProcess = (process: IProcess[]): IProcess[] => {\r\n  //忽略prema postma\r\n  const ignoreType = ['pre_ma', 'post_ma'];\r\n  //获取实际步骤\r\n  return process.filter(v => !ignoreType.includes(v.processType));\r\n};\r\n\r\n//获取实际的动画时间列表\r\nexport const getTimeLineByProcess = (process: IProcess[]): number[][] => {\r\n  const availableProcess = getAvailableProcess(process);\r\n  let result: number[][] = [];\r\n  for (let item of availableProcess) {\r\n    result.push(getTradeAnimationTimes(item.processType));\r\n  }\r\n  return result;\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/utils/animation/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"iness combine\r","deepseek-chat-lite":"iness combination","deepseek-chat":"```\n// Start Generation Here\nexport const getTradeAnimationDuration = (type","copilot":"iness combination"}},{"prefix":"import {\n  NodeType,\n  registerTradeHook,\n  getTradeAnimationFunc,\n  handleValue,\n  SupportTradeTypes,\n  handleName,\n  judgeImgSrcAvailable,\n  isSupportTradeType,\n  getAvailableProcess,\n} from '..';\nimport { Tree, Fra","infill":" 与 holderPeople 一样","suffix":"\r\n    if (curType === NodeType.HolderPeople || curType === NodeType.Other) {\r\n      holderNodes.push(\r\n        new HolderPeopleNode({\r\n          id: asset.itemId,\r\n          data: {\r\n            text: handleName(asset.itemNameKey, asset.itemName),\r\n            value: handleValue(asset.value, asset.unit),\r\n          },\r\n        })\r\n      );\r\n    }\r\n  }\r\n  return { assetNodes, holderNodes };\r\n}\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/treeAddNode.ts\n *                                另一种 mode:'extend' 逐渐延伸,逐渐修改线的坐标,会占用后续时间,请自动计算时间\n * \n * 位置计算: 默认以当前的节点位置计算 但是对于节点在中间会变化的场景等,支持自定义位置作为终点\n * \n * action格式：\n * {\n        type: AnimationType.TreeAddNode,\n        不取value的值\n        config:{}\n           {\n          tree, //树的实例\n          node, //node实例\n          option:{\n            position:[x,y] 传了x,y;连线点以position为准,  (新版已同步修改节点位置,所以暂时可以不用)(可能还需要用到,因为节点执行顺序不确定,刚变完位置,立马执行treeaddnode,可能获取到老位置)\n            mode:'fade'|| 'extend' \n            duration:1000// 动画时间  默认1000 \n            opacity:1,  //add的时候的颜色 \n            mainPosition:[x,y],\n            childPosition: [x,y]; fade模式下 子节点的连线需要指定位置时用\n            lineWidth:number, 线的宽度\n            lineYOffset: 0,// 添加线的时候 计算出来的y坐标的偏移量,主要兼容节点的上下边距是一个动态变化过程\n          },\n        }\n    },\n */\n\nexport function treeAddNodeAnimation({\n  action,\n  time,\n}: {\n  action: ActionConfig;\n  time: number;\n}): AnimationConfig[] {\n  let final = {};\n  const { config } = action;\n  const { nodes } = config;\n  for (let nodeConfig of nodes) {\n    const {\n      node,\n      tree,\n      option = {},\n    }: { node: NodeBase; tree: Tree; option: TreeAddNodeOption } = nodeConfig as unknown as {\n      node: NodeBase;\n      tree: Tree;\n      option: TreeAddNodeOption;\n    };\n    const {\n      position,\n      mode = 'fade',\n      duration = 1000,\n      opacity = 1,\n      lineWidth,\n      childPosition,\n      mainPosition,\n    } = option;\n    let isFade = mode === 'fade';\n    if (node.data[deleteLineKey]) {\n      // 前面设置过treeDeleteNode  那么需要删掉\n      delete node.data[deleteLineKey];\n    }\n<file_path>src/core/Animation/animationImpl/fade.ts\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线之间有重叠，优先展示不透明的节点\n    z = 1;\n  } else {\n    const color = renderConfig.getCorrespondingColor(stroke, false);\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n    }\n    node.line.lineRender.render.opts.style.opacity = value;\n  }\n  node.line.lineRender.render.opts.z = z;\n<file_path>src/core/Render/index.ts\n\ninterface RenderOption {\n  update: Function;\n  render: Function;\n}\n//渲染管理器\nexport class RenderManager {\n  private _renderMap = new Map<string, RenderOption>();\n  private _renderInstanceMap = new Map<string, BaseRender>();\n\n  //type key后续有用\n  constructor(public key = 'type') {}\n\n  //注册有哪些渲染配置\n  register(type: string, render: BaseRender) {\n    this._renderInstanceMap.set(type, render);\n    this._renderMap.set(type, render.render());\n    return this;\n  }\n\n  get renderMap() {\n    return this._renderMap;\n  }\n  get renderInstanceMap() {\n    return this._renderInstanceMap;\n  }\n}\n\ninterface TailOption {\n  id: string;\n  offset?: number[];\n}\n\nexport const generateRender = (render: RenderManager) => {\n  const getCustomRenderHandler = (node: any) => {\n    let result: RenderOption = {\n      render: () => '',\n      update: () => '',\n    };\n    //根据节点的option中的key值找到对应的渲染器\n    const option = node.getOption();\n    const { renderMap } = render;\n    for (const [key, value] of renderMap) {\n      if (key === option?.data[render.key]) {\n        result = value;\n        break;\n      }\n    }\n    return result;\n  };\n\n  //提供给底层渲染库\n  return (_relationGraphs: any, _node: any, _option: any) => {\n    const handler = getCustomRenderHandler(_node);\n    if (_option.update) {\n      handler.update(_relationGraphs, _node, _option);\n    } else {\n      handler.render(_relationGraphs, _node, _option);\n    }\n  };\n<file_path>src/utils/animation/init/initRender.ts\nimport { RenderManager, generateRender } from '../../../core';\n\nimport { MainRender } from '../Nodes/main/mainRender';\nimport { HolderPeopleRender } from '../Nodes/holderPeople/peopleRender';\nimport { LottieRender } from '../Nodes/lottie/lottieRender';\nimport { CashRender } from '../Nodes/cash/cashRender';\nimport { StockRender } from '../Nodes/stock/stockRender';\n\nimport { HolderInsRender } from '../Nodes/holderIns/insRender';\n\nimport { SubCompanyRender } from '../Nodes/subCompany/subCompanyRender';\nimport { LabelRender } from '../Nodes/label/labelRender';\n\nimport { CurrentAssetRender } from '../Nodes/currentAsset/currentAssetRender';\n\nimport { NonCurrentAssetRender } from '../Nodes/nonCurrentAsset/nonCurrentAssetRender';\nimport getDefaultOptions from '../defaultOption';\nimport { NodeType } from '..';\n\n// 初始化render相关\nexport function initRender(DRG: any) {\n  const { zrender, helper } = DRG.relationGraphs;\n  // 初始化需要渲染哪些节点\n  const mainRender = new MainRender(zrender, helper);\n  const holderPeopleRender = new HolderPeopleRender(zrender, helper);\n  const holderIns = new HolderInsRender(zrender, helper);\n  const lottieRender = new LottieRender(zrender, helper);\n  const cashRender = new CashRender(zrender, helper);\n  const stockRender = new StockRender(zrender, helper);\n  const currentAssetRender = new CurrentAssetRender(zrender, helper);\n  const nonCurrentAssetRender = new NonCurrentAssetRender(zrender, helper);\n  const subCompanyRender = new SubCompanyRender(zrender, helper);\n  const labelRender = new LabelRender(zrender, helper);\n\n  const manage = new RenderManager();\n\n  // 暴露给hook\n  manage\n    .register(NodeType.Main, mainRender)\n    .register(NodeType.HolderPeople, holderPeopleRender)\n    .register(NodeType.HolderIns, holderIns)\n    .register(NodeType.Lottie, lottieRender)\n    .register(NodeType.Cash, cashRender)\n    .register(NodeType.Stock, stockRender)\n    .register(NodeType.CurrentAsset, currentAssetRender)\n    .register(NodeType.NonCurrentAsset, nonCurrentAssetRender)\n    .register(NodeType.Label, labelRender)\n    .register(NodeType.SubCompany, subCompanyRender);\n\n  const customRender = generateRender(manage);\n  //get default options\n  const option = getDefaultOptions(customRender);\n\n  return { option, manage };\n}","relevantFileList":[],"filePath":"src/utils/animation/init/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" me, HolderPeopleNode, AssetNode } from '../../../components';\r","deepseek-chat-lite":"me } from '../../../types';","deepseek-chat":"```\n// Start Generation Here\nimport { initRender } from './initRender","copilot":" 与 holderPeople 一样"}},{"prefix":"import { NodeBase, Tree, FrameAnimation } from '@/core/index';\n\nimport { doSubsidiaryAnimation, animationTime as subsidiaryTimes } from './trade/subsidiary';\nimport { doMergeAnimation, animationTime as mergeTimes } from './trade/merge';\nimport { doDissolutionAnimation, animationTime as dissolutionTimes } from './trade/dissolution';\nimport { doIpoAnimation, animationTime as ipoTimes } from './trade/ipo';\n\nimport { doETSAnimation, animationTime as etsTimes } from './trade/ets';\n\nimport { doBCAnimation, animationTime as bcTimes } from './trade/bc';\n\nimport { t } from '@/assets/lang/i8n';\nimport { IProcess } from './init/type';\nimport { getTextWidthByCanvas } from '../utils';\n\nexport const FontFamily = 'sans-serif';\n\n// value 跟接口匹配\nexport enum NodeType {\n  //主体公司\n  Main = 'Main',\n  //股东 个人\n  HolderPeople = 'people',\n  //股东机构s\n  HolderIns = 'inst',\n  // 流动资产\n  CurrentAsset = 'current',\n  //非流动资产 固定资产\n  NonCurrentAsset = 'nonCurrent',\n  //子公司\n  SubCompany = 'SubCompany',\n  //目标股东 因为逻辑比较特殊,不使用HolderPeople\n  TargetHolder = 'targetHolder',\n  //参与交易的股票\n  Stock = 'Stock',\n  //参与交易的现金\n  Cash = 'Cash',\n  // lottie\n  Lottie = 'Lottie',\n  // label 文字类node 应用多种场景\n  Label = 'Label',\n  //股东 个人 匹配接口other使用\n  Other = 'other',\n}\n\nexport enum SupportTradeTypes {\n  subsidiary = 'subsidiary',\n  merge = 'merge',\n  dissolution = 'dissolution',\n  ipo = 'ipo',\n  ets = 'establish_target_subsidiary',\n  bc = 'business_combination',\n}\nexport function isSupportTradeType(type: any): boolean {\n  return Object.values(SupportTradeTypes).includes(type);\n}\n\nconst TradeConfig = {\n  // 创建子公司\n  [SupportTradeTypes.subsidiary]: {\n    func: doSubsidiaryAnimation,\n    times: subsidiaryTimes,\n  },\n  // 收购\n  [Su","infill":"创建子公司 Subsidiary","suffix":"\r\nexport interface TradeSubsidiaryOption extends TradeBaseOption {\r\n  subCompanyNode: NodeBase;\r\n  lottieNode: NodeBase;\r\n}\r\n\r\n//Dissolution 共用merge\r\nexport interface TradeMergeOption extends TradeSubsidiaryOption {\r\n  targetCompanyNode: NodeBase;\r\n  targetCompanyHolderNode: NodeBase;\r\n  targetCompanyHolderRateNode: NodeBase;\r\n  targetCompanyTree: Tree;\r\n  stockNode?: NodeBase;\r\n  cashNode?: NodeBase;\r\n  otherLottieNode: NodeBase;\r\n  //为middlHook使用的参数\r\n  specialArg?: any;\r\n}\r\n//IPO\r\nexport interface TradeIpoOption extends TradeBaseOption {\r\n  publicInvestorNode: NodeBase;\r\n  stockNode: NodeBase;\r\n  cashNode: NodeBase;\r\n  unitsNode: NodeBase;\r\n  afterUnitsNode: NodeBase;\r\n  publicInvestorCashNode: NodeBase;\r\n  publicInvestorTree: Tree;\r\n  lottieNode: NodeBase;\r\n  bubbleNode: NodeBase;\r\n}\r\n//establish target subsidiary\r\nexport interface TradeEtsOption extends TradeBaseOption {\r\n  publicInvestorNode: NodeBase;\r\n  targetTree: Tree;\r\n  targetNode: NodeBase;\r\n  targetHolderNodes: NodeBase[];\r\n  subCompanyNode: NodeBase;\r\n  lottieNode: NodeBase;\r\n}\r\n\r\n// b 大部分与ets共用\r\nexport interface TradeBcOption extends TradeEtsOption {\r\n  stockNode: NodeBase;\r\n  otherLottieNode: NodeBase;\r\n  lineLottieNode: NodeBase;\r\n  combinationLottieNode: NodeBase;\r\n  bubbleNode: NodeBase;\r\n}\r\n\r\nexport interface CommonValueOption {\r\n  id: string;\r\n  value: any;\r\n  onlyLine?: boolean;\r\n}\r\n\r\nexport const setValueWithIds = (nodes: NodeBase | NodeBase[], value: any) => {\r\n  let final: CommonValueOption[] = [];\r\n\r\n  if (Array.isArray(nodes)) {\r\n    final = nodes.map(node => ({\r\n      id: node.id,\r\n      value,\r\n    }));\r\n  } else {\r\n    final = [\r\n      {\r\n        id: nodes.id,\r\n        value,\r\n      },\r\n    ];\r\n  }\r\n  return final;\r\n};\r\n\r\nexport const getAssetById = (id: string, assetList: any[]) => {\r\n  for (const asset of assetList) {\r\n    if (asset.itemId === id) {\r\n      return asset;\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleValue = (val: string | null, oriUnit: string | null) => {\r\n  if (!val) {\r\n    return '';\r\n  }\r\n  if (oriUnit) {\r\n    return window.F10Utils.handleData(val) + oriUnit;\r\n  } else {\r\n    const { value, unit } = window.F10Utils.formateLocaleData(val, 'en');\r\n    return value + unit;\r\n  }\r\n};\r\n\r\n//显示的名字 优先取key 再取name\r\nexport const handleName = (key: string | null, name: string, fillerFields: Object = {}) => {\r\n  if (key) {\r\n    return t(key, fillerFields);\r\n  } else {\r\n    return name;\r\n  }\r\n};\r\n\r\n// 根据动画类型获取动画的时间 1个动画 分为 前后2部分\r\n/**\r\n * 返回秒\r\n * @param type\r\n * @returns\r\n * 例子 [7.5,5.5]\r\n */\r\nexport const getTradeAnimationTimes = (type: string): [number, number] => {\r\n  const rate = 1000;\r\n  const { times } = TradeConfig[type as SupportTradeTypes];\r\n  const { preTimes, afterTimes } = times;\r\n  return [Number(preTimes.at(-1)) / rate, Number(afterTimes.at(-1)) / rate];\r\n};\r\n\r\n//根据规则 自动自适应截断\r\nexport const getShowLabel = (label: string, font: number) => {\r\n  const max = 88;\r\n  let showLabel = label;\r\n  if (getTextWidthByCanvas(showLabel, font) <= max) {\r\n    return showLabel;\r\n  } else {\r\n    while (getTextWidthByCanvas(showLabel, font) > max) {\r\n      showLabel = showLabel.substring(0, showLabel.length - 1);\r\n    }\r\n    return `${showLabel.substring(0, showLabel.length - 1)}...`;\r\n  }\r\n};\r\n\r\nexport const judgeImgSrcAvailable = (src: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!src) reject('');\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      resolve(src);\r\n    };\r\n    img.onerror = () => {\r\n      reject(new Error('Image load failed'));\r\n    };\r\n    img.src = src;\r\n  });\r\n};\r\n\r\n// 获取实际动画步骤 过滤pre_ma post_ma\r\nexport const getAvailableProcess = (process: IProcess[]): IProcess[] => {\r\n  //忽略prema postma\r\n  const ignoreType = ['pre_ma', 'post_ma'];\r\n  //获取实际步骤\r\n  return process.filter(v => !ignoreType.includes(v.processType));\r\n};\r\n\r\n//获取实际的动画时间列表\r\nexport const getTimeLineByProcess = (process: IProcess[]): number[][] => {\r\n  const availableProcess = getAvailableProcess(process);\r\n  let result: number[][] = [];\r\n  for (let item of availableProcess) {\r\n    result.push(getTradeAnimationTimes(item.processType));\r\n  }\r\n  return result;\r\n};\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/scale.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/**\n * 缩放动画\n *config入参格式：\n *  {\n *   type: AnimationType.Scale,\n *   config: {\n *     nodes: [\n *       {\n *         id: string,\n *         value: [x,y], *x,y  缩放倍率\n *       },\n *     ],\n *   },\n * },\n */\n\nexport function scaleAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    node.scale = value;\n    setAnimationToNode(node, time);\n  }\n}\n<file_path>src/core/Animation/animationImpl/treeMove.ts\n};\n\n/**\n * 高级动画\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n * // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * action格式：\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n  time: number;\n}): AnimationConfig[] {\n  const final = {};\n  const { config } = action;\n  const {\n    tree,\n    nodes,\n    mainValue,\n    addEasing = true,\n  }: {\n    tree: Tree;\n    nodes: NodesActionConfig[];\n    mainValue: number;\n    addEasing: boolean;\n  } = config as unknown as {\n    tree: Tree;\n    nodes: NodesActionConfig[];\n    mainValue: number;\n    addEasing: boolean;\n  };\n  const mainNode = tree.getRoot();\n  //主节点配置\n  const mainMoveConfig = {\n    id: mainNode.id,\n    value: mainValue,\n    // 主节点的线不参与\n<file_path>src/core/Animation/index.ts\n\ninterface TypeWithNodeActionConfig {\n  [type: number]: NodesActionConfig[];\n}\ninterface TimeWithTypeNodeActionConfig {\n  [time: number]: TypeWithNodeActionConfig;\n}\n\ninterface AnimationHandlerMap {\n  [key: string]: Function;\n}\n\ninterface MiddleType {\n  nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig>;\n  allTimeLine: number[];\n  ignoreTimeNodes: { [key: number]: string[] };\n}\nexport class FrameAnimation {\n  private trees: Tree[];\n  private nodes: NodeBase[];\n  private animationHandlers: AnimationHandlerMap;\n  private root!: GlobalObject;\n  //首帧动画对透明度为0的进行忽略,后续帧的不需要忽略\n  private hasDoneNodeIgnored: boolean = false;\n  constructor({ trees, nodes }: { trees?: Tree[]; nodes?: NodeBase[] }) {\n    this.trees = trees ?? [];\n    this.nodes = nodes ?? [];\n    this.animationHandlers = {};\n    // 注册支持的动画\n    this.registerAnimation();\n  }\n  //注册动画\n  registerAnimation() {\n    this.registerAnimationHandler(String(AnimationType.Fade), fadeAnimation);\n    this.registerAnimationHandler(String(AnimationType.Move), moveAnimation);\n    this.registerAnimationHandler(String(AnimationType.Scale), scaleAnimation);\n    this.registerAnimationHandler(String(AnimationType.Line), lineAnimation);\n    this.registerAnimationHandler(String(AnimationType.BezierThrough), bezierThroughAnimation);\n  }\n  registerAnimationHandler(key: string, func: Function) {\n    this.animationHandlers[key] = func;\n  }\n\n  reset({ trees, nodes }: { trees: Tree[]; nodes: NodeBase[] }) {\n    if (trees) {\n      this.trees = trees;\n    }\n    if (nodes) {\n      this.nodes = nodes;\n    }\n  }\n  //已做去重处理\n  get allNodes(): NodeBase[] {\n    const nodes = new Set<NodeBase>();\n    for (const node of this.nodes) {\n      nodes.add(node);\n    }\n    for (const tree of this.trees) {\n      for (const node of tree.allNodes) {\n        nodes.add(node);\n<file_path>src/utils/animation/init/index.ts\n      upNodes: holderNodes,\n    });\n\n    const frameAnimation = new FrameAnimation({\n      trees: [],\n      nodes: [],\n    });\n\n    //注册动作与动作钩子\n    registerTradeHook(SupportTradeTypes.subsidiary, {\n      preHook: subsidiaryPreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.merge, {\n      middleHook: mergeMiddleHook,\n      preHook: mergePreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.dissolution, {\n      // middleHook: mergeMiddleHook,\n      preHook: dissolutionPreHook,\n    });\n    registerTradeHook(SupportTradeTypes.ipo, {\n      preHook: ipoPreHook,\n      middleHook: ipoMiddleHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.ets, {\n      // middleHook: mergeMiddleHook,\n      preHook: etsPreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.bc, {\n      preHook: bcPreHook,\n      middleHook: bcMiddleHook,\n    });\n    const tradeArg: any = {\n      holderNodes,\n      assetNodes,\n      mainNode,\n      mainTree: tree,\n      frameAnimation,\n    };\n    //遍历步骤，执行对应动作，获取动作生成的动画配置\n    for (let index = 0; index < availableProcess.length; index++) {\n      const nowProcess = availableProcess[index];\n      const { processType } = nowProcess;\n      if (!isSupportTradeType(processType)) {\n        // 交易类型不支持\n        continue;\n      }\n      const extendArg: HookExtendOption = {\n        process: nowProcess,\n        assetsInfo,\n        index,\n        allRenderMap: manage.renderInstanceMap,\n      };\n      const { func, middleHook, preHook } = getTradeAnimationFunc(processType as SupportTradeTypes);\n      preHook && preHook(tradeArg, extendArg);\n      tradeArg.middleHook = middleHook;","relevantFileList":[],"filePath":"src/utils/animation/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" pportTradeTypes.merge]: { func: doMergeAnimation, times: mergeTimes },\r","deepseek-chat-lite":"pportTradeTypes.merge]: {","deepseek-chat":"```\n// Start Generation Here\n  [SupportTradeTypes.merge]: {","copilot":"创建子公司 Subsidiary"}},{"prefix":"import { NodeBase, Tree, FrameAnimation } from '@/core/index';\n\nimport { doSubsidiaryAnimation, animationTime as subsidiaryTimes } from './trade/subsidiary';\nimport { doMergeAnimation, animationTime as mergeTimes } from './trade/merge';\nimport { doDissolutionAnimation, animationTime as dissolutionTimes } from './trade/dissolution';\nimport { doIpoAnimation, animationTime as ipoTimes } from './trade/ipo';\n\nimport { doETSAnimation, animationTime as etsTimes } from './trade/ets';\n\nimport { doBCAnimation, animationTime as bcTimes } from './trade/bc';\n\nimport { t } from '@/assets/lang/i8n';\nimport { IProcess } from './init/type';\nimport { getTextWidthByCanvas } from '../utils';\n\nexport const FontFamily = 'sans-serif';\n\n// value 跟接口匹配\nexport enum NodeType {\n  //主体公司\n  Main = 'Main',\n  //股东 个人\n  HolderPeople = 'people',\n  //股东机构s\n  HolderIns = 'inst',\n  // 流动资产\n  CurrentAsset = 'current',\n  //非流动资产 固定资产\n  N","infill":"IPO","suffix":"\r\nexport interface TradeIpoOption extends TradeBaseOption {\r\n  publicInvestorNode: NodeBase;\r\n  stockNode: NodeBase;\r\n  cashNode: NodeBase;\r\n  unitsNode: NodeBase;\r\n  afterUnitsNode: NodeBase;\r\n  publicInvestorCashNode: NodeBase;\r\n  publicInvestorTree: Tree;\r\n  lottieNode: NodeBase;\r\n  bubbleNode: NodeBase;\r\n}\r\n//establish target subsidiary\r\nexport interface TradeEtsOption extends TradeBaseOption {\r\n  publicInvestorNode: NodeBase;\r\n  targetTree: Tree;\r\n  targetNode: NodeBase;\r\n  targetHolderNodes: NodeBase[];\r\n  subCompanyNode: NodeBase;\r\n  lottieNode: NodeBase;\r\n}\r\n\r\n// 大部分与ets共用 business combination\r\nexport interface TradeBcOption extends TradeEtsOption {\r\n  stockNode: NodeBase;\r\n  otherLottieNode: NodeBase;\r\n  lineLottieNode: NodeBase;\r\n  combinationLottieNode: NodeBase;\r\n  bubbleNode: NodeBase;\r\n}\r\n\r\nexport interface CommonValueOption {\r\n  id: string;\r\n  value: any;\r\n  onlyLine?: boolean;\r\n}\r\n\r\nexport const setValueWithIds = (nodes: NodeBase | NodeBase[], value: any) => {\r\n  let final: CommonValueOption[] = [];\r\n\r\n  if (Array.isArray(nodes)) {\r\n    final = nodes.map(node => ({\r\n      id: node.id,\r\n      value,\r\n    }));\r\n  } else {\r\n    final = [\r\n      {\r\n        id: nodes.id,\r\n        value,\r\n      },\r\n    ];\r\n  }\r\n  return final;\r\n};\r\n\r\nexport const getAssetById = (id: string, assetList: any[]) => {\r\n  for (const asset of assetList) {\r\n    if (asset.itemId === id) {\r\n      return asset;\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleValue = (val: string | null, oriUnit: string | null) => {\r\n  if (!val) {\r\n    return '';\r\n  }\r\n  if (oriUnit) {\r\n    return window.F10Utils.handleData(val) + oriUnit;\r\n  } else {\r\n    const { value, unit } = window.F10Utils.formateLocaleData(val, 'en');\r\n    return value + unit;\r\n  }\r\n};\r\n\r\n//显示的名字 优先取key 再取name\r\nexport const handleName = (key: string | null, name: string, fillerFields: Object = {}) => {\r\n  if (key) {\r\n    return t(key, fillerFields);\r\n  } else {\r\n    return name;\r\n  }\r\n};\r\n\r\n// 根据动画类型获取动画的时间 1个动画 分为 前后2部分\r\n/**\r\n * 返回秒\r\n * @param type\r\n * @returns\r\n * 例子 [7.5,5.5]\r\n */\r\nexport const getTradeAnimationTimes = (type: string): [number, number] => {\r\n  const rate = 1000;\r\n  const { times } = TradeConfig[type as SupportTradeTypes];\r\n  const { preTimes, afterTimes } = times;\r\n  return [Number(preTimes.at(-1)) / rate, Number(afterTimes.at(-1)) / rate];\r\n};\r\n\r\n//根据规则 自动自适应截断\r\nexport const getShowLabel = (label: string, font: number) => {\r\n  const max = 88;\r\n  let showLabel = label;\r\n  if (getTextWidthByCanvas(showLabel, font) <= max) {\r\n    return showLabel;\r\n  } else {\r\n    while (getTextWidthByCanvas(showLabel, font) > max) {\r\n      showLabel = showLabel.substring(0, showLabel.length - 1);\r\n    }\r\n    return `${showLabel.substring(0, showLabel.length - 1)}...`;\r\n  }\r\n};\r\n\r\nexport const judgeImgSrcAvailable = (src: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!src) reject('');\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      resolve(src);\r\n    };\r\n    img.onerror = () => {\r\n      reject(new Error('Image load failed'));\r\n    };\r\n    img.src = src;\r\n  });\r\n};\r\n\r\n// 获取实际动画步骤 过滤pre_ma post_ma\r\nexport const getAvailableProcess = (process: IProcess[]): IProcess[] => {\r\n  //忽略prema postma\r\n  const ignoreType = ['pre_ma', 'post_ma'];\r\n  //获取实际步骤\r\n  return process.filter(v => !ignoreType.includes(v.processType));\r\n};\r\n\r\n//获取实际的动画时间列表\r\nexport const getTimeLineByProcess = (process: IProcess[]): number[][] => {\r\n  const availableProcess = getAvailableProcess(process);\r\n  let result: number[][] = [];\r\n  for (let item of availableProcess) {\r\n    result.push(getTradeAnimationTimes(item.processType));\r\n  }\r\n  return result;\r\n};\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/lottie.ts\n *  独立动画 建议配在已有动画的action里面,  不走正常的动画时间线\n *  lottie动画 直接塞到node,不返回内容\n *\n *  action入参格式：\n *  {\n *  type: AnimationType.Lottie,\n *  config: {\n *   nodes:[\n *     {\n *        id:'',\n *        暂时简化,2种场景\n *            1)从time1[从头开始]播放到time2暂停;  times:[2400,5400]\n *            2)从头开始[从time3]开始播,播完为止;   times:[3000]\n *        times:[],\n *        data: json  //lottie数据\n *        keep:boolean        // 用于lottie动画在结尾是否保留\n *        setIgnore:boolean //  用于初始帧添加ignore了,后续设置ignore为false\n *     }\n *   ]\n *  }\n * }\n * @returns\n */\nexport function lottieAnimation({\n  action,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n}): AnimationConfig[] {\n  const { config } = action;\n  const { nodes } = config;\n  for (let nodeConfig of nodes) {\n    const { times, id, data, keep = true, setIgnore = false } = nodeConfig;\n    const oriNode = getNodeById(id, context.allNodes);\n    if (oriNode && times && data) {\n      if (times.length === 1) {\n        // 从头开始[从time3]开始播,播完为止;   times:[3000]\n        let animationPlay = {\n          time: 0,\n          lottie: [\n            {\n              key: id,\n              data,\n              keep,\n              atTime: times[0],\n              action: 'goToAndStop',\n            },\n          ],\n        };\n        let animationPause = {\n          time: 1,\n          lottie: [\n            {\n              key: id,\n              atTime: times[0],\n              action: 'play',\n            },\n          ],\n        };\n<file_path>src/core/Animation/animationImpl/treeMove.ts\n};\n\n/**\n * 高级动画\n * 树的整体位移,必须包括主节点的位移,带动整体节点的线的变化,不包含的主节点的,请用普通move动画\n * // 尽量都改y 和都改x   不然效果可能不是想要的\n * //  \n * \n * 基于move和line实现\n * action格式：\n * {\n        type: AnimationType.TreeMove,\n        config: {\n          tree,\n          mainValue:[x,y], 主节点的位移\n          addEasing:boolean,\n          nodes:[  //子节点的配置\n            {\n              id,\n              value:[x,y],\n              addEasing:boolean\n            }\n          ]\n        },\n    },\n */\n\nexport function treeMoveAnimation({\n  action,\n  time,\n  context,\n}: {\n  action: ActionConfig;\n  context: FrameAnimation;\n  time: number;\n}): AnimationConfig[] {\n  const final = {};\n  const { config } = action;\n  const {\n    tree,\n    nodes,\n    mainValue,\n    addEasing = true,\n  }: {\n    tree: Tree;\n    nodes: NodesActionConfig[];\n    mainValue: number;\n    addEasing: boolean;\n  } = config as unknown as {\n    tree: Tree;\n    nodes: NodesActionConfig[];\n    mainValue: number;\n    addEasing: boolean;\n  };\n  const mainNode = tree.getRoot();\n  //主节点配置\n  const mainMoveConfig = {\n    id: mainNode.id,\n    value: mainValue,\n    // 主节点的线不参与\n<file_path>src/core/Animation/index.ts\n\ninterface TypeWithNodeActionConfig {\n  [type: number]: NodesActionConfig[];\n}\ninterface TimeWithTypeNodeActionConfig {\n  [time: number]: TypeWithNodeActionConfig;\n}\n\ninterface AnimationHandlerMap {\n  [key: string]: Function;\n}\n\ninterface MiddleType {\n  nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig>;\n  allTimeLine: number[];\n  ignoreTimeNodes: { [key: number]: string[] };\n}\nexport class FrameAnimation {\n  private trees: Tree[];\n  private nodes: NodeBase[];\n  private animationHandlers: AnimationHandlerMap;\n  private root!: GlobalObject;\n  //首帧动画对透明度为0的进行忽略,后续帧的不需要忽略\n  private hasDoneNodeIgnored: boolean = false;\n  constructor({ trees, nodes }: { trees?: Tree[]; nodes?: NodeBase[] }) {\n    this.trees = trees ?? [];\n    this.nodes = nodes ?? [];\n    this.animationHandlers = {};\n    // 注册支持的动画\n    this.registerAnimation();\n  }\n  //注册动画\n  registerAnimation() {\n    this.registerAnimationHandler(String(AnimationType.Fade), fadeAnimation);\n    this.registerAnimationHandler(String(AnimationType.Move), moveAnimation);\n    this.registerAnimationHandler(String(AnimationType.Scale), scaleAnimation);\n    this.registerAnimationHandler(String(AnimationType.Line), lineAnimation);\n    this.registerAnimationHandler(String(AnimationType.BezierThrough), bezierThroughAnimation);\n  }\n  registerAnimationHandler(key: string, func: Function) {\n    this.animationHandlers[key] = func;\n  }\n\n  reset({ trees, nodes }: { trees: Tree[]; nodes: NodeBase[] }) {\n    if (trees) {\n      this.trees = trees;\n    }\n    if (nodes) {\n      this.nodes = nodes;\n    }\n  }\n  //已做去重处理\n  get allNodes(): NodeBase[] {\n    const nodes = new Set<NodeBase>();\n    for (const node of this.nodes) {\n      nodes.add(node);\n    }\n    for (const tree of this.trees) {\n      for (const node of tree.allNodes) {\n        nodes.add(node);\n<file_path>src/utils/animation/init/index.ts\n      upNodes: holderNodes,\n    });\n\n    const frameAnimation = new FrameAnimation({\n      trees: [],\n      nodes: [],\n    });\n\n    //注册动作与动作钩子\n    registerTradeHook(SupportTradeTypes.subsidiary, {\n      preHook: subsidiaryPreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.merge, {\n      middleHook: mergeMiddleHook,\n      preHook: mergePreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.dissolution, {\n      // middleHook: mergeMiddleHook,\n      preHook: dissolutionPreHook,\n    });\n    registerTradeHook(SupportTradeTypes.ipo, {\n      preHook: ipoPreHook,\n      middleHook: ipoMiddleHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.ets, {\n      // middleHook: mergeMiddleHook,\n      preHook: etsPreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.bc, {\n      preHook: bcPreHook,\n      middleHook: bcMiddleHook,\n    });\n    const tradeArg: any = {\n      holderNodes,\n      assetNodes,\n      mainNode,\n      mainTree: tree,\n      frameAnimation,\n    };\n    //遍历步骤，执行对应动作，获取动作生成的动画配置\n    for (let index = 0; index < availableProcess.length; index++) {\n      const nowProcess = availableProcess[index];\n      const { processType } = nowProcess;\n      if (!isSupportTradeType(processType)) {\n        // 交易类型不支持\n        continue;\n      }\n      const extendArg: HookExtendOption = {\n        process: nowProcess,\n        assetsInfo,\n        index,\n        allRenderMap: manage.renderInstanceMap,\n      };\n      const { func, middleHook, preHook } = getTradeAnimationFunc(processType as SupportTradeTypes);\n      preHook && preHook(tradeArg, extendArg);\n      tradeArg.middleHook = middleHook;","relevantFileList":[],"filePath":"src/utils/animation/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" onCurrentAsset = 'noncurrent',","deepseek-chat-lite":"onCurrentAsset = 'noncurrent',","deepseek-chat":"```\n// Start Generation Here\nexport const getNodeById = (id:","copilot":"IPO"}},{"prefix":"import { NodeBase, Tree, FrameAnimation } from '@/core/index';\n\nimport { doSubsidiaryAnimation, animationTime as subsidiaryTimes } from './trade/subsidiary';\nimport { doMergeAnimation, animationTime as mergeTimes } from './trade/merge';\nimport { doDissolutionAnimation, animationTime as dissolutionTimes } from './trade/dissolution';\nimport { doIpoAnimation, animationTime as ipoTimes } from './trade/ipo';\n\nimport { doETSAnimation, animationTime as etsTimes } from './trade/ets';\n\nimport { doBCAnimation, animationTime as bcTimes } from './trade/bc';\n\nimport { t } from '@/assets/lang/i8n';\nimport { IProcess } from './init/type';\nimport { getTextWidthByCanvas } from '../utils';\n\nexport const FontFamily = 'sans-serif';\n\n// value 跟接口匹配\nexport enum NodeType {\n  //主体公司\n  Main = 'Main',\n  //股东 ","infill":"根据ids设置value 多节点快速设置","suffix":"\r\nexport const setValueWithIds = (nodes: NodeBase | NodeBase[], value: any) => {\r\n  let final: CommonValueOption[] = [];\r\n\r\n  if (Array.isArray(nodes)) {\r\n    final = nodes.map(node => ({\r\n      id: node.id,\r\n      value,\r\n    }));\r\n  } else {\r\n    final = [\r\n      {\r\n        id: nodes.id,\r\n        value,\r\n      },\r\n    ];\r\n  }\r\n  return final;\r\n};\r\n\r\n//\r\nexport const getAssetById = (id: string, assetList: any[]) => {\r\n  for (const asset of assetList) {\r\n    if (asset.itemId === id) {\r\n      return asset;\r\n    }\r\n  }\r\n};\r\n\r\nexport const handleValue = (val: string | null, oriUnit: string | null) => {\r\n  if (!val) {\r\n    return '';\r\n  }\r\n  if (oriUnit) {\r\n    return window.F10Utils.handleData(val) + oriUnit;\r\n  } else {\r\n    const { value, unit } = window.F10Utils.formateLocaleData(val, 'en');\r\n    return value + unit;\r\n  }\r\n};\r\n\r\n//显示的名字 优先取key 再取name\r\nexport const handleName = (key: string | null, name: string, fillerFields: Object = {}) => {\r\n  if (key) {\r\n    return t(key, fillerFields);\r\n  } else {\r\n    return name;\r\n  }\r\n};\r\n\r\n// 根据动画类型获取动画的时间 1个动画 分为 前后2部分\r\n/**\r\n * 返回秒\r\n * @param type\r\n * @returns\r\n * 例子 [7.5,5.5]\r\n */\r\nexport const getTradeAnimationTimes = (type: string): [number, number] => {\r\n  const rate = 1000;\r\n  const { times } = TradeConfig[type as SupportTradeTypes];\r\n  const { preTimes, afterTimes } = times;\r\n  return [Number(preTimes.at(-1)) / rate, Number(afterTimes.at(-1)) / rate];\r\n};\r\n\r\n//根据规则 自动自适应截断\r\nexport const getShowLabel = (label: string, font: number) => {\r\n  const max = 88;\r\n  let showLabel = label;\r\n  if (getTextWidthByCanvas(showLabel, font) <= max) {\r\n    return showLabel;\r\n  } else {\r\n    while (getTextWidthByCanvas(showLabel, font) > max) {\r\n      showLabel = showLabel.substring(0, showLabel.length - 1);\r\n    }\r\n    return `${showLabel.substring(0, showLabel.length - 1)}...`;\r\n  }\r\n};\r\n\r\nexport const judgeImgSrcAvailable = (src: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!src) reject('');\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      resolve(src);\r\n    };\r\n    img.onerror = () => {\r\n      reject(new Error('Image load failed'));\r\n    };\r\n    img.src = src;\r\n  });\r\n};\r\n\r\n// 获取实际动画步骤 过滤pre_ma post_ma\r\nexport const getAvailableProcess = (process: IProcess[]): IProcess[] => {\r\n  //忽略prema postma\r\n  const ignoreType = ['pre_ma', 'post_ma'];\r\n  //获取实际步骤\r\n  return process.filter(v => !ignoreType.includes(v.processType));\r\n};\r\n\r\n//获取实际的动画时间列表\r\nexport const getTimeLineByProcess = (process: IProcess[]): number[][] => {\r\n  const availableProcess = getAvailableProcess(process);\r\n  let result: number[][] = [];\r\n  for (let item of availableProcess) {\r\n    result.push(getTradeAnimationTimes(item.processType));\r\n  }\r\n  return result;\r\n};\r\n","relevantFile":"<file_path>src/core/Animation/animationImpl/line.ts\nimport { NodesActionConfig } from '@/core/types';\nimport { FrameAnimation } from '..';\nimport { getNodeById, setAnimationToNode } from '../../utils';\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/** \n  线动画 内部使用  不包括fade fade相关的在fade里面\n  config入参格式：\n  {\n         id: string,\n         pointsOption:{\n          value: number[][],\n          cb:function, 与value 互斥\n          arg:参数\n         },\n         style:{\n          lineWidth: number,\n          stroke:string,\n         }\n         addEasing:boolean,\n  },\n */\n\nexport function lineAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  const { id, pointsOption, style, addEasing } = config;\n\n  const oriNode = getNodeById(id, context.allNodes);\n  //当前节点有line\n  if (oriNode && oriNode.hasLine) {\n    //根据配置修改线的的位置\n    if (pointsOption) {\n      const { value, cb, arg } = pointsOption;\n      //value或者cb必须有一个\n      let pointValue = value ?? cb(arg);\n      oriNode.line.lineRender.render.opts.shape.points = pointValue;\n    }\n    //根据配置修改线的的style\n    if (style) {\n      oriNode.line.lineRender.render.opts.style = {\n        ...oriNode.line.lineRender.render.opts.style,\n        ...style,\n      };\n    }\n    setAnimationToNode(oriNode, time, { onlyLine: true, addEasing: pointsOption && addEasing });\n  }\n}\n<file_path>src/core/Animation/index.ts\n}\n\ninterface AnimationHandlerMap {\n  [key: string]: Function;\n}\n\ninterface MiddleType {\n  nodeTimeActionMap: Map<string, TimeWithTypeNodeActionConfig>;\n  allTimeLine: number[];\n  ignoreTimeNodes: { [key: number]: string[] };\n}\nexport class FrameAnimation {\n  private trees: Tree[];\n  private nodes: NodeBase[];\n  private animationHandlers: AnimationHandlerMap;\n  private root!: GlobalObject;\n  //首帧动画对透明度为0的进行忽略,后续帧的不需要忽略\n  private hasDoneNodeIgnored: boolean = false;\n  constructor({ trees, nodes }: { trees?: Tree[]; nodes?: NodeBase[] }) {\n    this.trees = trees ?? [];\n    this.nodes = nodes ?? [];\n    this.animationHandlers = {};\n    // 注册支持的动画\n    this.registerAnimation();\n  }\n  //注册动画\n  registerAnimation() {\n    this.registerAnimationHandler(String(AnimationType.Fade), fadeAnimation);\n    this.registerAnimationHandler(String(AnimationType.Move), moveAnimation);\n    this.registerAnimationHandler(String(AnimationType.Scale), scaleAnimation);\n    this.registerAnimationHandler(String(AnimationType.Line), lineAnimation);\n    this.registerAnimationHandler(String(AnimationType.BezierThrough), bezierThroughAnimation);\n  }\n  registerAnimationHandler(key: string, func: Function) {\n    this.animationHandlers[key] = func;\n  }\n\n  reset({ trees, nodes }: { trees: Tree[]; nodes: NodeBase[] }) {\n    if (trees) {\n      this.trees = trees;\n    }\n    if (nodes) {\n      this.nodes = nodes;\n    }\n  }\n  //已做去重处理\n  get allNodes(): NodeBase[] {\n    const nodes = new Set<NodeBase>();\n    for (const node of this.nodes) {\n      nodes.add(node);\n    }\n    for (const tree of this.trees) {\n      for (const node of tree.allNodes) {\n        nodes.add(node);\n      }\n    }\n    return Array.from(nodes);\n  }\n\n  /**\n<file_path>src/utils/animation/init/index.ts\n */\n\nexport async function init(data: IResult) {\n  const { option, manage } = initRender(DRG);\n  const res = data ?? {};\n  const { assetsInfo, companyInfo, process } = res;\n  const finalData: any = [];\n  //接口处理\n  if (assetsInfo && companyInfo && process) {\n    const { orgId, code, logo } = companyInfo;\n    //new Node\n    // 重复的type ,data内的type用于基础库匹配渲染,对象内的type可用于后续判定区分,暂时没用到 可以删掉\n    const mainNode = new MainNode({\n      id: orgId,\n      data: { text: window.SPAC === true ? `${code}(SPAC)` : code },\n    });\n    if (logo) {\n      mainNode.data.logo = logo;\n    }\n    // 获取节点 规则 第一个为默认状态\n    const initAssets = assetsInfo[0].assetsList;\n    const { assetNodes, holderNodes } = initAssetAndHolderNode(initAssets);\n\n    //获取步骤\n    const availableProcess = getAvailableProcess(process);\n\n    const tree = new Tree({\n      mainNode,\n      downNodes: assetNodes,\n      upNodes: holderNodes,\n    });\n\n    const frameAnimation = new FrameAnimation({\n      trees: [],\n      nodes: [],\n    });\n\n    //注册动作与动作钩子\n    registerTradeHook(SupportTradeTypes.subsidiary, {\n      preHook: subsidiaryPreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.merge, {\n      middleHook: mergeMiddleHook,\n      preHook: mergePreHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.dissolution, {\n      // middleHook: mergeMiddleHook,\n      preHook: dissolutionPreHook,\n    });\n    registerTradeHook(SupportTradeTypes.ipo, {\n      preHook: ipoPreHook,\n      middleHook: ipoMiddleHook,\n    });\n\n    registerTradeHook(SupportTradeTypes.ets, {\n      // middleHook: mergeMiddleHook,\n      preHook: etsPreHook,\n    });\n<file_path>src/core/Animation/animationImpl/fade.ts\n\n/**\n * @param config\n * @param value\n * @returns\n */\n/*\n * config入参格式：\n       {\n         value: number,\n         id: string,\n         onlyLine:boolean, 可选  只影响线\n         withLine:boolean 可选  是否带上线\n       },\n */\nexport function fadeAnimation({\n  config,\n  context,\n  time,\n}: {\n  config: NodesActionConfig;\n  context: FrameAnimation;\n  time: number;\n}) {\n  // withLine:默认带上节点动画带上线 除非主动置false\n  const { id, withLine = true, onlyLine = false, value } = config;\n  const node = getNodeById(id, context.allNodes);\n  if (node) {\n    if (!onlyLine) {\n      node.data.opacity = value;\n    }\n    if (withLine && node.hasLine) {\n      handleExitLine(node, value);\n    }\n    setAnimationToNode(node, time);\n  }\n}\n\nconst handleExitLine = (node: NodeBase, value: number) => {\n  let z = 2;\n  const { stroke } = node.line.lineRender.render.opts.style;\n  // 根据ui效果 有不透明1 与半透明0.2 2种状态\n  const halfOpacity = 0.2;\n  if (value === halfOpacity) {\n    const color = renderConfig.getCorrespondingColor(stroke, true);\n    // 半透明 线的颜色改成 半透明的颜色\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n      node.line.lineRender.render.opts.style.opacity = 1;\n    }\n    // 半透明度下 层级变低 线与线之间有重叠，优先展示不透明的节点\n    z = 1;\n  } else {\n    const color = renderConfig.getCorrespondingColor(stroke, false);\n    if (color) {\n      node.line.lineRender.render.opts.style.stroke = color;\n    }\n    node.line.lineRender.render.opts.style.opacity = value;\n  }\n  node.line.lineRender.render.opts.z = z;","relevantFileList":[],"filePath":"src/utils/animation/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 1\r","deepseek-chat-lite":"子公司","deepseek-chat":"```\n// Start Generation Here\n  Shareholder = 'Shareholder',\n","copilot":"根据ids设置value 多节点快速设置"}},{"prefix":"/**\n * 客户端常用命令\n * @author japlus\n */\n\nimport { clientVersion } from './index';\n\n/**\n * 设置全局代码\n * @param {string} thsCode\n */\nexport function setGlobalCode(thsCode: string) {\n  if (!thsCode) return;\n  console.log('设置全局代码', thsCode);\n  try {\n    window.API.use('OnSetThsCode', [thsCode]);\n  } catch (error) {\n    console.log('全局代码设置失败！');\n  }\n}\n\n/**\n * 跳转债券F9\n * @param {string} thsCode\n */\nexport function jumpToF9(thsCode: string) {\n  if (!thsCode) return;\n  console.log('跳转到债券F9', thsCode);\n  try {\n    window.API.use('onClientCmd', ['main=DepthInformation&sub=BOND&code=' + thsCode]);\n  } catch (e) {\n    console.error('客户端跳转F9异常：' + e);\n  }\n}\n/**\n * 跳转到行情F5\n * @param thsCode\n * @param option.type 'web'：跳转到网页f5。默认使用旧版f5命令（跳转f5不能带指定子tab参数）\n * @param option.subTab 指定债券F5子tab\n */\nexport function jumpToHqF5(thsCode: string, option?: { subTab?: ('brokerage' | 'cfets' | 'exchange') & string }) {\n  if (!thsCode) {\n    console.error('Missing parameter thsCode');\n    return;\n  }\n  console.log('跳转到行情F5', thsCode);\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.402') {\n      /**\n       * 这个命令只能跳转web f5页面。不能跳转客户端的F5。\n       */\n      let cmd = `main=ProPertyTrade&sub=BONDF5&thscode=${thsCode}`;\n      if (option?.subTab) {\n        cmd += `&sub_tab=${option.subTab}`;\n      }\n      window.API.onClientCmd(cmd);\n    } else {\n      /**\n       * 这个命令既可以跳客户端的f5也能跳新版网页f5。跳新版网页f5不能指定子tab。\n       */\n      window.API.use('OnClientOperJump', [thsCode, 'F5']);\n    }\n  } catch (error) {\n    console.error('跳转到行情F5失败！');\n  }\n}\n\n/** 客户端参数 */\ntype ShowPopupOptions = {\n  /** 标题 */\n  title?: string;\n  /** 副标题 */\n  subtitle?: string;\n  main?: string;\n  url_id: number | string;\n  html_type?: number | string;\n  /** 宽 */\n  cx?: number | string;\n  /** 高 */\n  cy?: number | string;\n  refresh?: number | string;\n  notify?: number | string;\n  newtheme?: number | string;\n  fixedstyle?: number | string;\n  style?: number | string;\n  changeskin?: number | string;\n  skinthemestyle?: number | string;\n};\n/**\n * 打开客户端弹窗，该客户端弹窗需要url_id,需要客户端提供。\n * @param {string} url 页面地址\n * @param {ShowPopupOptions} options\n */\nexport function showPopup(url: string, options: ShowPopupOptions) {\n  options = Object.assign(\n    {\n      main: 'URLFrame',\n      html_type: 6,\n      cx: 922,\n      cy: 454,\n      refresh: 1,\n      notify: 1,\n      newtheme: 1,\n      fixedstyle: 1,\n      style: 327680,\n      skinthemestyle: 1,\n    } as ShowPopupOptions,\n    options,\n  );\n\n  const mainUrl =\n    Object.entries(options)\n      .map(it => it.join('='))\n      .join('&') + `&url_id_append=${url}`;\n\n  try {\n    window.API.use('onClientCmd', [mainUrl]);\n  } catch (e) {\n    console.log('客户端接口调用异常：', e);\n  }\n}\n\n/**\n * 打开债券综合分析小窗\n */\nexport function showBCW(item: {\n  thsCode: string;\n  /**债券简称 */\n  name: string;\n}) {\n  const params = `batcode=${item.thsCode}&batname=${item.name}&curTheme=dark`;\n  showPopup(`/bond_analysis/comprehensive/simple?${encodeURIComponent(params)}`, {\n    url_id: 223,\n    style: '13107200',\n    subtitle: 'BCW',\n    changeskin: 1,\n    skinthemestyle: 1,\n    cx: 522,\n    cy: 566,\n  });\n}\n\n/**\n * 打开中介债券-报价小窗\n * @param {string} thsCode\n */\nexport function showBBQW(thsCode: string) {\n  try {\n    window.API.use('ScreenManagerConsole', [0, `url_id_append=/CurrencyService/market_window/index.html?thscode=${thsCode}`]);\n  } catch (error) {\n    console.warn(`${thsCode}:打开报价小窗失败`, error);\n  }\n}\n\n/**\n * 弹出中介债券(BBQ)简版弹窗\n * @param type - '1'最优报价，'2'今日成交, '3'最优报价的相似债券, '4'今日成交的相似债券, '5'成交汇总的相似债券\n * @param item - 显示该数据对应的相似债券\n */\nexport function showBBQPopup(\n  type: '1' | '2' | '3' | '4' | '5',\n  item: {\n    thsCode: string;\n    /** 剩余期限天数 */\n    remainingPeriodSort: number;\n    /** 债券简称 */\n    bondAbbreviation: string;\n    /** 债券类型：国债,国开,企业债,NCD... */\n    bondType: string;\n    /** 评级 */\n    orgRating: string;\n    /**地区编码 */\n    area: string;\n    /** 所属行业-一级编码 */\n    firstCode: string;\n  },\n) {\n  const itemClone = { ...item };\n\n  const curFormulaObj: any = {\n    name: '当前方案',\n    type,\n    item: itemClone,\n  };\n  if (['3', '4', '5'].includes(type)) {\n    curFormulaObj.options = { code: itemClone.thsCode, name: itemClone.bondAbbreviation };\n  }\n  localStorage.setItem('intermediary_quotation_cur_filters', JSON.stringify(curFormulaObj));\n  showPopup('/CurrencyServiceNew/intermediary_quote/index?isPopup=1', { url_id: 140 });\n}\n\n/**\n * 调用客户端接口保存板块\n * @param {object} params\n * @param {string[]} params.codes 添加成分的thscode或orgid\n * @param {string[]} params.blockids 操作的板块id\n * @param {number} params.oper 0-新增，1-删除\n */\nexport function addCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', encodeURIComponent(JSON.stringify(params))]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 跳转至权限中心\n */\nexport function jumpToAuthCenter() {\n  const cmd =\n    'main=URLFrame&title=权限申请&url_id=77&url_id_append=FeedBack/permission-center#/Currency&html_type=6&cx=800&cy=565&style=13107200&refresh=1&newtheme=1';\n  try {\n    window.API.OnClientCmd([cmd]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 调用客户端下载器只支持get请求\n * @param url 下载链接\n * @param fileName 下载文件\n * @param options.ifindCheckUrl 'no' 不检查地址\n * @param options.valuectrl 1:不显示下载链接, 2: 显示下载链接(默认，传2会导致不能打开下载弹窗)\n */\nexport function downloadFile(url: string, fileName: string, options: { ifindCheckUrl?: 'no'; valuectrl?: 1 | 2 } = {}) {\n  const optionsStr = Object.entries(options)\n    .map(it => it.join('='))\n    .join('&');\n  if (!url.startsWith('http')) {\n    url = window.location.origin + url;\n    console.log('相对url，已转化为完整url:', url);\n  }\n  const href = `ifind://!command=down${optionsStr && '&' + optionsStr}&filename=${fileName}&url=${url}`;\n  console.log('ifind download href:', href);\n  location.href = href;\n}\n\ntype ShowPlateManagementPopupOption = {\n  /** 板块管理客户端命令额外参数  */\n  clientParamsAppend?: string[];\n};\n/**\n * 打开客户端板块管理弹窗\n * @param {ShowPlateManagementPopupOption} options\n * @param {ShowPlateManagementPopupOption['clientParamsAppend']} options.clientParamsAppend 板块管理客户端命令额外参数 eg :['importset=25004|25017']\n */\nexport function showBlockManagerPopup(options?: ShowPlateManagementPopupOption) {\n  const { clientParamsAppend } = Object.assign(\n    {\n      clientParamsAppend: ['importset=25004|25017'],\n    },\n    options || {},\n  );\n\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.382') {\n      const param = 'synchrequest=true&' + clientParamsAppend.join('&');\n      window.API.use('OnJsFun', ['OnOperBlockManager', param]);\n    } else {\n      window.API.onClientCmd('main=SectorManagement&requestmethod=synchrequest');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/** 获取系统剪贴板文字 */\nexport function getClipboardContents() {\n  return new Promise<string>(resolve => {\n    window.API.use('OnJsFun', ['OnGetClipboardContents', ''], text => resolve(text));\n  });\n}\n\n/**\n * 打开新的客户端标签页\n * @param title 标签页名称\n * @param url\n */\nexport function newClientTab(title: string, url: string) {\n  window.API.use('OnAddSpecialTab', [title, url], rsp => {\n    console.log(rsp);\n  });\n}\n\n/**\n * 添加成分到板块\n * @param params.codes 添加成分的thscode或orgid\n * @param params.blockids 操作的板块id\n * @param params.oper 0-新增，1-删除\n */\nexport function onAddCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  const p = encodeURIComponent(JSON.stringify(params));\n  // 调用客户端接口进行保存\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', p]);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\ntype PDFOptions = {\n  format?: 'A4';\n  marginRight?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  marginBottom?: number;\n  waitFor?: string;\n  scrollPage?: boolean;\n};\n/** 网页导出为pdf */\nexport function exportWebToPDF(url: string, fileName: string, pdfOptions?: PDFOptions) {\n  let pdfOptions","infill":"Str = '';\r\n  if (pdfOptions) {\r\n    pdfOptionsStr = Object.entries(pdfOptions)\r\n      .map(it => it.join('='))\r\n      .join('&');\r\n  }","suffix":"\r\n  const downloadUrl = `/thsft/iFindService/ServiceTools/html-to-x/pdf2?${\r\n    \r\n   }url=${encodeURIComponent(url)}`;\r\n  downloadFile(downloadUrl, fileName, { ifindCheckUrl: 'no' });\r\n}\r\n\r\n/** 打开客户端弹窗。confluence pageId=526516839 */\r\nexport function onDispOpenSubUrlV1(url: string, width: number, height: number, style: number) {\r\n  window.API.use('OnDispOpenSubUrlV1', [url, width, height, style]);\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"packages/Utils/clientApi.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"Str = '';","deepseek-chat-lite":"Str = '';","deepseek-chat":"```\n// Start Generation Here\n  const pdfOptionsStr = Object.entries","copilot":"Str = '';\r\n  if (pdfOptions) {\r\n    pdfOptionsStr = Object.entries(pdfOptions)\r\n      .map(it => it.join('='))\r\n      .join('&');\r\n  }"}},{"prefix":"import { IDataSource, ICascaderData, IDataSourceConfig } from 'types/data-source'\nimport { IConditionGroup } from 'types/conditons';\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: Object;\n  id: string;\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  // regionType?: string[];\n  // region?: string[];\n  dataSource: {\n    selectedDataSource: IDataSource[];  // 选中的数据源\n    selectedDataSourceCascaderData: ICascaderData[];  // 选中的数据源级联数据\n  }\n  dataSourceConfig: IDataSourceConfig;  // ","infill":"数据源配置(y已选择的数据源配置)","suffix":"\n  conditionGroup: IConditionGroup[]; // 组件执行条件（组）\n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}\n","relevantFile":"<file_path>types/conditons.ts\nexport enum ConditionFlag {\n  and = 'and',\n  or = 'or',\n}\n\nexport const flagMap: Record<ConditionFlag, string> = {\n  and: '且',\n  or: '或',\n};\n\ninterface ICondition {\n  flag: ConditionFlag;\n  conditions: {\n    sourceName: string; // 数据源名称：表.列\n    sourceKey: string; // 格式：$_表id_表名\n    express: string; // 对比表达式\n    targetType: 'VALUE' | 'FIELD'; // VALUE表示常量; FIELD表示从数据源获取\n    targetValue: string; // targetType值是VALUE时传这个\n    targetName: string; // targetType值是FIELD时传这个,数据源名称：表.列\n    targetKey: string; // targetType值是FIELD时传这个,格式：$_表id_表名\n  }[];\n}\nexport interface IConditionGroup {\n  flag: ConditionFlag;\n  conditionList: ICondition[];\n}\n<file_path>types/data-source.ts\nimport { ConditionFlag } from './conditons';\n\n/**\n * 数据源\n */\nexport interface IDataSource {\n  id: number;\n  name: string;\n  key: string;\n  type: number;\n  status: number;\n  fieldList: string[];\n  protocolFormat: { key: string; value: string; description: string; varName: string }[];\n}\n\n/**级联数据（根据无参数据源进行处理获取） */\nexport interface ICascaderData {\n  value: string;\n  label: string;\n  isLeaf?: boolean;\n  loading?: boolean;\n  children?: ICascaderData[];\n}\n\nexport interface IFieldMap {\n  sourceFieldName: string; //数据源字段展示名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  sourceFieldKey: string; //数据源字段传参标识\n  inputFieldName: string; //输入字段名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  inputFieldKey: string; //输入字段标识\n  inputFieldValue: string; //输入测试案例\n}\n\nexport interface IDataSourceConfig {\n  dataSourceId: string; //数据源id\n  dataSourceName: string; //数据源名称\n  fieldMappings: IFieldMap[];\n}\n\nexport interface IFieldMapping {\n  /**\n   *  数据源名称,给前端用，可以自定义，后端不管内容是什么，只做保存\n   *  此处的表是有参数据源表\n   */\n  sourceFieldName: string;\n  /**\n   * 数据源key，格式`$_表id_protocalFormat.key`\n   * 此处的表是有参数据源表\n   */\n  sourceFieldKey: string;\n  /**\n   * 无参数据源的出参，无参表名.fileldList中的某个数据。给前端用，可以自定义，后端不管内容是什么，只做保存\n   */\n  inputFieldName: string; //输入字段名称\n  /**\n   * 无参数据源的出参，格式为：$_无参表id_fileldList中的某个数据\n   */\n  inputFieldKey: string[]; // string[]类型为了适配级联类型数据\n  inputFieldValue: string; //输入测试案例\n  placeholder: string; // 级联默认展示内容\n}\n<file_path>src/hooks/useRegionData.ts\n        model: '',\n        temperature: 0,\n        maxToken: 0,\n        account: '',\n        business: '',\n        translateType: 'text',\n      },\n      prompt: '',\n    },\n    components: [],\n  },\n]);\nconst regionDataLoading = ref<Record<areaMap, boolean>>({\n  TITLE: false,\n  SUMMARY: false,\n  CONTENT: false,\n});\nexport const useRegionData = () => {\n  const addRegionData = (\n    regionData: RegionConfig,\n    component: ComponentConfig,\n    dragEndIndex: number | null\n  ) => {\n    const { area } = regionData;\n    const { type, resultPath, editorPath, id, key, region, icon, name } = component;\n\n    // 智能文本组件的组件默认初始配置\n    const textComponentConfig = {\n      executeConfig: {\n        // 标题或者摘要区域，默认不开启【内容单独成段】\n        singleParagraph: area === 'CONTENT' ? 1 : 0,\n      }\n    }\n\n    const addComponent = () => {\n      const config:RegionComponent = {\n        type,\n        name: '',\n        editorPath,\n        id: id!,\n        key,\n        resultPath,\n        componentCode: window[key]?.default,\n        componentConfig: type === 'TEXT' ? textComponentConfig : {},\n        extraData: {\n          region,\n          icon,\n          name,\n        },\n        dataSource: {\n          selectedDataSource: [],\n          selectedDataSourceCascaderData: []\n        }\n      };\n      //不为null表示在中间插入\n      if (dragEndIndex !== null) {\n        regionData.components.splice(dragEndIndex + 1, 0, config);\n      } else {\n        regionData.components.push(config);\n      }","relevantFileList":[],"filePath":"src/components/Middle/interface/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 数据源配置","deepseek-chat-lite":"数据源配置","deepseek-chat":"```\n// Start Generation Here\n  dataSourceConfig: IDataSourceConfig; ","copilot":"数据源配置(y已选择的数据源配置)"}},{"prefix":"/**\n * 客户端常用命令\n * @author japlus\n */\n\nimport { clientVersion } from './index';\n\n/**\n * 设置全局代码\n * @param {string} thsCode\n */\nexport function setGlobalCode(thsCode: string) {\n  if (!thsCode) return;\n  console.log('设置全局代码', thsCode);\n  try {\n    window.API.use('OnSetThsCode', [thsCode]);\n  } catch (error) {\n    console.log('全局代码设置失败！');\n  }\n}\n\n/**\n * 跳转债券F9\n * @param {string} thsCode\n */\nexport function jumpToF9(thsCode: string) {\n  if (!thsCode) return;\n  console.log('跳转到债券F9', thsCode);\n  try {\n    window.API.use('onClientCmd', ['main=DepthInformation&sub=BOND&code=' + thsCode]);\n  } catch (e) {\n    console.error('客户端跳转F9异常：' + e);\n  }\n}\n/**\n * 跳转到行情F5\n * @param thsCode\n * @param option.type 'web'：跳转到网页f5。默认使用旧版f5命令（跳转f5不能带指定子tab参数）\n * @param option.subTab 指定债券F5子tab\n */\nexport function jumpToHqF5(thsCode: string, option?: { subTab?: ('brokerage' | 'cfets' | 'exchange') & string }) {\n  if (!thsCode) {\n    console.error('Missing parameter thsCode');\n    return;\n  }\n  console.log('跳转到行情F5', thsCode);\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.402') {\n      /**\n       * 这个命令只能跳转web f5页面。不能跳转客户端的F5。\n       */\n      let cmd = `main=ProPertyTrade&sub=BONDF5&thscode=${thsCode}`;\n      if (option?.subTab) {\n        cmd += `&sub_tab=${option.subTab}`;\n      }\n      window.API.onClientCmd(cmd);\n    } else {\n      /**\n       * 这个命令既可以跳客户端的f5也能跳新版网页f5。跳新版网页f5不能指定子tab。\n       */\n      window.API.use('OnClientOperJump', [thsCode, 'F5']);\n    }\n  } catch (error) {\n    console.error('跳转到行情F5失败！');\n  }\n}\n\n/** 客户端参数 */\ntype ShowPopupOptions = {\n  /** 标题 */\n  title?: string;\n  /** 副标题 */\n  subtitle?: string;\n  main?: string;\n  url_id: number | string;\n  html_type?: number | string;\n  /** 宽 */\n  cx?: number | string;\n  /** 高 */\n  cy?: number | string;\n  refresh?: number | string;\n  notify?: number | string;\n  newtheme?: number | string;\n  fixedstyle?: number | string;\n  style?: number | string;\n  changeskin?: number | string;\n  skinthemestyle?: number | string;\n};\n/**\n * 打开客户端弹窗，该客户端弹窗需要url_id,需要客户端提供。\n * @param {string} url 页面地址\n * @param {ShowPopupOptions} options\n */\nexport function showPopup(url: string, options: ShowPopupOptions) {\n  options = Object.assign(\n    {\n      main: 'URLFrame',\n      html_type: 6,\n      cx: 922,\n      cy: 454,\n      refresh: 1,\n      notify: 1,\n      newtheme: 1,\n      fixedstyle: 1,\n      style: 327680,\n      skinthemestyle: 1,\n    } as ShowPopupOptions,\n    options,\n  );\n\n  const mainUrl =\n    Object.entries(options)\n      .map(it => it.join('='))\n      .join('&') + `&url_id_append=${url}`;\n\n  try {\n    window.API.use('onClientCmd', [mainUrl]);\n  } catch (e) {\n    console.log('客户端接口调用异常：', e);\n  }\n}\n\n/**\n * 打开债券综合分析小窗\n */\nexport function showBCW(item: {\n  thsCode: string;\n  /**债券简称 */\n  name: string;\n}) {\n  const params = `batcode=${item.thsCode}&batname=${item.name}&curTheme=dark`;\n  showPopup(`/bond_analysis/comprehensive/simple?${encodeURIComponent(params)}`, {\n    url_id: 223,\n    style: '13107200',\n    subtitle: 'BCW',\n    changeskin: 1,\n    skinthemestyle: 1,\n    cx: 522,\n    cy: 566,\n  });\n}\n\n/**\n * 打开中介债券-报价小窗\n * @param {string} thsCode\n */\nexport function showBBQW(thsCode: string) {\n  try {\n    window.API.use('ScreenManagerConsole', [0, `url_id_append=/CurrencyService/market_window/index.html?thscode=${thsCode}`]);\n  } catch (error) {\n    console.warn(`${thsCode}:打开报价小窗失败`, error);\n  }\n}\n\n/**\n * 弹出中介债券(BBQ)简版弹窗\n * @param type - '1'最优报价，'2'今日成交, '3'最优报价的相似债券, '4'今日成交的相似债券, '5'成交汇总的相似债券\n * @param item - 显示该数据对应的相似债券\n */\nexport function showBBQPopup(\n  type: '1' | '2' | '3' | '4' | '5',\n  item: {\n    thsCode: string;\n    /** 剩余期限天数 */\n    remainingPeriodSort: number;\n    /** 债券简称 */\n    bondAbbreviation: string;\n    /** 债券类型：国债,国开,企业债,NCD... */\n    bondType: string;\n    /** 评级 */\n    orgRating: string;\n    /**地区编码 */\n    area: string;\n    /** 所属行业-一级编码 */\n    firstCode: string;\n  },\n) {\n  const itemClone = { ...item };\n\n  const curFormulaObj: any = {\n    name: '当前方案',\n    type,\n    item: itemClone,\n  };\n  if (['3', '4', '5'].includes(type)) {\n    curFormulaObj.options = { code: itemClone.thsCode, name: itemClone.bondAbbreviation };\n  }\n  localStorage.setItem('intermediary_quotation_cur_filters', JSON.stringify(curFormulaObj));\n  showPopup('/CurrencyServiceNew/intermediary_quote/index?isPopup=1', { url_id: 140 });\n}\n\n/**\n * 调用客户端接口保存板块\n * @param {object} params\n * @param {string[]} params.codes 添加成分的thscode或orgid\n * @param {string[]} params.blockids 操作的板块id\n * @param {number} params.oper 0-新增，1-删除\n */\nexport function addCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', encodeURIComponent(JSON.stringify(params))]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 跳转至权限中心\n */\nexport function jumpToAuthCenter() {\n  const cmd =\n    'main=URLFrame&title=权限申请&url_id=77&url_id_append=FeedBack/permission-center#/Currency&html_type=6&cx=800&cy=565&style=13107200&refresh=1&newtheme=1';\n  try {\n    window.API.OnClientCmd([cmd]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 调用客户端下载器只支持get请求\n * @param url 下载链接\n * @param fileName 下载文件\n * @param options.ifindCheckUrl 'no' 不检查地址\n * @param options.valuectrl 1:不显示下载链接, 2: 显示下载链接(默认，传2会导致不能打开下载弹窗)\n */\nexport function downloadFile(url: string, fileName: string, options: { ifindCheckUrl?: 'no'; valuectrl?: 1 | 2 } = {}) {\n  const optionsStr = Object.entries(options)\n    .map(it => it.join('='))\n    .join('&');\n  if (!url.startsWith('http')) {\n    url = window.location.origin + url;\n    console.log('相对url，已转化为完整url:', url);\n  }\n  const href = `ifind://!command=down${optionsStr && '&' + optionsStr}&filename=${fileName}&url=${url}`;\n  console.log('ifind download href:', href);\n  location.href = href;\n}\n\ntype ShowPlateManagementPopupOption = {\n  /** 板块管理客户端命令额外参数  */\n  clientParamsAppend?: string[];\n};\n/**\n * 打开客户端板块管理弹窗\n * @param {ShowPlateManagementPopupOption} options\n * @param {ShowPlateManagementPopupOption['clientParamsAppend']} options.clientParamsAppend 板块管理客户端命令额外参数 eg :['importset=25004|25017']\n */\nexport function showBlockManagerPopup(options?: ShowPlateManagementPopupOption) {\n  const { clientParamsAppend } = Object.assign(\n    {\n      clientParamsAppend: ['importset=25004|25017'],\n    },\n    options || {},\n  );\n\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.382') {\n      const param = 'synchrequest=true&' + clientParamsAppend.join('&');\n      window.API.use('OnJsFun', ['OnOperBlockManager', param]);\n    } else {\n      window.API.onClientCmd('main=SectorManagement&requestmethod=synchrequest');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/** 获取系统剪贴板文字 */\nexport function getClipboardContents() {\n  return new Promise<string>(resolve => {\n    window.API.use('OnJsFun', ['OnGetClipboardContents', ''], text => resolve(text));\n  });\n}\n\n/**\n * 打开新的客户端标签页\n * @param title 标签页名称\n * @param url\n */\nexport function newClientTab(title: string, url: string) {\n  window.API.use('OnAddSpecialTab', [title, url], rsp => {\n    console.log(rsp);\n  });\n}\n\n/**\n * 添加成分到板块\n * @param params.codes 添加成分的thscode或orgid\n * @param params.blockids 操作的板块id\n * @param params.oper 0-新增，1-删除\n */\nexport function onAddCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  const p = encodeURIComponent(JSON.stringify(params));\n  // 调用客户端接口进行保存\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', p]);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\ntype PDFOptions = {\n  'pdf.format'?: 'A4';\n  'pdf.margin.right'?: number;\n  'pdf.margin.left'?: number;\n  'pdf.margin.top'?: number;\n  'pdf.margin.bottom'?: number;\n  'pdf.printBackground","infill":"'?: boolean;\r\n  'pdf.displayHeaderFooter'?: boolean;\r\n  'pdf.'","suffix":"\r\n  /** 等待dom id 加载再执行 */\r\n  waitFor?: string;\r\n  scrollPage?: boolean;\r\n};\r\n/** 网页导出为pdf */\r\nexport function exportWebToPDF(url: string, fileName: string, pdfOptions?: PDFOptions) {\r\n  let pdfOptionsStr = '';\r\n  if (pdfOptions) {\r\n    pdfOptionsStr = Object.entries(pdfOptions)\r\n      .map(it => it.join('='))\r\n      .join('&');\r\n  }\r\n  const downloadUrl = `/thsft/iFindService/ServiceTools/html-to-x/pdf2?${pdfOptionsStr && pdfOptionsStr + '&'}url=${encodeURIComponent(url)}`;\r\n  downloadFile(downloadUrl, fileName, { ifindCheckUrl: 'no' });\r\n}\r\n\r\n/** 打开客户端弹窗。confluence pageId=526516839 */\r\nexport function onDispOpenSubUrlV1(url: string, width: number, height: number, style: number) {\r\n  window.API.use('OnDispOpenSubUrlV1', [url, width, height, style]);\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"packages/Utils/clientApi.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"'?: number;\r","deepseek-chat-lite":"'?: boolean;","deepseek-chat":"```\n// Start Generation Here\n/**\n * 打开客户端弹窗，","copilot":"'?: boolean;\r\n  'pdf.displayHeaderFooter'?: boolean;\r\n  'pdf.'"}},{"prefix":"/**\n * 客户端常用命令\n * @author japlus\n */\n\nimport { clientVersion } from './index';\n\n/**\n * 设置全局代码\n * @param {string} thsCode\n */\nexport function setGlobalCode(thsCode: string) {\n  if (!thsCode) return;\n  console.log('设置全局代码', thsCode);\n  try {\n    window.API.use('OnSetThsCode', [thsCode]);\n  } catch (error) {\n    console.log('全局代码设置失败！');\n  }\n}\n\n/**\n * 跳转债券F9\n * @param {string} thsCode\n */\nexport function jumpToF9(thsCode: string) {\n  if (!thsCode) return;\n  console.log('跳转到债券F9', thsCode);\n  try {\n    window.API.use('onClientCmd', ['main=DepthInformation&sub=BOND&code=' + thsCode]);\n  } catch (e) {\n    console.error('客户端跳转F9异常：' + e);\n  }\n}\n/**\n * 跳转到行情F5\n * @param thsCode\n * @param option.type 'web'：跳转到网页f5。默认使用旧版f5命令（跳转f5不能带指定子tab参数）\n * @param option.subTab 指定债券F5子tab\n */\nexport function jumpToHqF5(thsCode: string, option?: { subTab?: ('brokerage' | 'cfets' | 'exchange') & string }) {\n  if (!thsCode) {\n    console.error('Missing parameter thsCode');\n    return;\n  }\n  console.log('跳转到行情F5', thsCode);\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.402') {\n      /**\n       * 这个命令只能跳转web f5页面。不能跳转客户端的F5。\n       */\n      let cmd = `main=ProPertyTrade&sub=BONDF5&thscode=${thsCode}`;\n      if (option?.subTab) {\n        cmd += `&sub_tab=${option.subTab}`;\n      }\n      window.API.onClientCmd(cmd);\n    } else {\n      /**\n       * 这个命令既可以跳客户端的f5也能跳新版网页f5。跳新版网页f5不能指定子tab。\n       */\n      window.API.use('OnClientOperJump', [thsCode, 'F5']);\n    }\n  } catch (error) {\n    console.error('跳转到行情F5失败！');\n  }\n}\n\n/** 客户端参数 */\ntype ShowPopupOptions = {\n  /** 标题 */\n  title?: string;\n  /** 副标题 */\n  subtitle?: string;\n  main?: string;\n  url_id: number | string;\n  html_type?: number | string;\n  /** 宽 */\n  cx?: number | string;\n  /** 高 */\n  cy?: number | string;\n  refresh?: number | string;\n  notify?: number | string;\n  newtheme?: number | string;\n  fixedstyle?: number | string;\n  style?: number | string;\n  changeskin?: number | string;\n  skinthemestyle?: number | string;\n};\n/**\n * 打开客户端弹窗，该客户端弹窗需要url_id,需要客户端提供。\n * @param {string} url 页面地址\n * @param {ShowPopupOptions} options\n */\nexport function showPopup(url: string, options: ShowPopupOptions) {\n  options = Object.assign(\n    {\n      main: 'URLFrame',\n      html_type: 6,\n      cx: 922,\n      cy: 454,\n      refresh: 1,\n      notify: 1,\n      newtheme: 1,\n      fixedstyle: 1,\n      style: 327680,\n      skinthemestyle: 1,\n    } as ShowPopupOptions,\n    options,\n  );\n\n  const mainUrl =\n    Object.entries(options)\n      .map(it => it.join('='))\n      .join('&') + `&url_id_append=${url}`;\n\n  try {\n    window.API.use('onClientCmd', [mainUrl]);\n  } catch (e) {\n    console.log('客户端接口调用异常：', e);\n  }\n}\n\n/**\n * 打开债券综合分析小窗\n */\nexport function showBCW(item: {\n  thsCode: string;\n  /**债券简称 */\n  name: string;\n}) {\n  const params = `batcode=${item.thsCode}&batname=${item.name}&curTheme=dark`;\n  showPopup(`/bond_analysis/comprehensive/simple?${encodeURIComponent(params)}`, {\n    url_id: 223,\n    style: '13107200',\n    subtitle: 'BCW',\n    changeskin: 1,\n    skinthemestyle: 1,\n    cx: 522,\n    cy: 566,\n  });\n}\n\n/**\n * 打开中介债券-报价小窗\n * @param {string} thsCode\n */\nexport function showBBQW(thsCode: string) {\n  try {\n    window.API.use('ScreenManagerConsole', [0, `url_id_append=/CurrencyService/market_window/index.html?thscode=${thsCode}`]);\n  } catch (error) {\n    console.warn(`${thsCode}:打开报价小窗失败`, error);\n  }\n}\n\n/**\n * 弹出中介债券(BBQ)简版弹窗\n * @param type - '1'最优报价，'2'今日成交, '3'最优报价的相似债券, '4'今日成交的相似债券, '5'成交汇总的相似债券\n * @param item - 显示该数据对应的相似债券\n */\nexport function showBBQPopup(\n  type: '1' | '2' | '3' | '4' | '5',\n  item: {\n    thsCode: string;\n    /** 剩余期限天数 */\n    remainingPeriodSort: number;\n    /** 债券简称 */\n    bondAbbreviation: string;\n    /** 债券类型：国债,国开,企业债,NCD... */\n    bondType: string;\n    /** 评级 */\n    orgRating: string;\n    /**地区编码 */\n    area: string;\n    /** 所属行业-一级编码 */\n    firstCode: string;\n  },\n) {\n  const itemClone = { ...item };\n\n  const curFormulaObj: any = {\n    name: '当前方案',\n    type,\n    item: itemClone,\n  };\n  if (['3', '4', '5'].includes(type)) {\n    curFormulaObj.options = { code: itemClone.thsCode, name: itemClone.bondAbbreviation };\n  }\n  localStorage.setItem('intermediary_quotation_cur_filters', JSON.stringify(curFormulaObj));\n  showPopup('/CurrencyServiceNew/intermediary_quote/index?isPopup=1', { url_id: 140 });\n}\n\n/**\n * 调用客户端接口保存板块\n * @param {object} params\n * @param {string[]} params.codes 添加成分的thscode或orgid\n * @param {string[]} params.blockids 操作的板块id\n * @param {number} params.oper 0-新增，1-删除\n */\nexport function addCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', encodeURIComponent(JSON.stringify(params))]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 跳转至权限中心\n */\nexport function jumpToAuthCenter() {\n  const cmd =\n    'main=URLFrame&title=权限申请&url_id=77&url_id_append=FeedBack/permission-center#/Currency&html_type=6&cx=800&cy=565&style=13107200&refresh=1&newtheme=1';\n  try {\n    window.API.OnClientCmd([cmd]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 调用客户端下载器只支持get请求\n * @param url 下载链接\n * @param fileName 下载文件\n * @param options.ifindCheckUrl 'no' 不检查地址\n * @param options.valuectrl 1:不显示下载链接, 2: 显示下载链接(默认，传2会导致不能打开下载弹窗)\n */\nexport function downloadFile(url: string, fileName: string, options: { ifindCheckUrl?: 'no'; valuectrl?: 1 | 2 } = {}) {\n  const optionsStr = Object.entries(options)\n    .map(it => it.join('='))\n    .join('&');\n  if (!url.startsWith('http')) {\n    url = window.location.origin + url;\n    console.log('相对url，已转化为完整url:', url);\n  }\n  const href = `ifind://!command=down${optionsStr && '&' + optionsStr}&filename=${fileName}&url=${url}`;\n  console.log('ifind download href:', href);\n  location.href = href;\n}\n\ntype ShowPlateManagementPopupOption = {\n  /** 板块管理客户端命令额外参数  */\n  clientParamsAppend?: string[];\n};\n/**\n * 打开客户端板块管理弹窗\n * @param {ShowPlateManagementPopupOption} options\n * @param {ShowPlateManagementPopupOption['clientParamsAppend']} options.clientParamsAppend 板块管理客户端命令额外参数 eg :['importset=25004|25017']\n */\nexport function showBlockManagerPopup(options?: ShowPlateManagementPopupOption) {\n  const { clientParamsAppend } = Object.assign(\n    {\n      clientParamsAppend: ['importset=25004|25017'],\n    },\n    options || {},\n  );\n\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.382') {\n      const param = 'synchrequest=true&' + clientParamsAppend.join('&');\n      window.API.use('OnJsFun', ['OnOperBlockManager', param]);\n    } else {\n      window.API.onClientCmd('main=SectorManagement&requestmethod=synchrequest');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/** 获取系统剪贴板文字 */\nexport function getClipboardContents() {\n  return new Promise<string>(resolve => {\n    window.API.use('OnJsFun', ['OnGetClipboardContents', ''], text => resolve(text));\n  });\n}\n\n/**\n * 打开新的客户端标签页\n * @param title 标签页名称\n * @param url\n */\nexport function newClientTab(title: string, url: string) {\n  window.API.use('OnAddSpecialTab', [title, url], rsp => {\n    console.log(rsp);\n  });\n}\n\n/**\n * 添加成分到板块\n * @param params.codes 添加成分的thscode或orgid\n * @param params.blockids 操作的板块id\n * @param params.oper 0-新增，1-删除\n */\nexport function onAddCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  const p = encodeURIComponent(JSON.stringify(params));\n  // 调用客户端接口进行保存\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', p]);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\ntype PDFOptions = {\n  'pdf.format'?: 'A4';\n  'pdf.printBackground'?: boolean;\n  'pdf.displayHeaderFooter'?: boolean;\n  'pdf.headerTemplate'?: string;\n  'pdf.footerTemplate'?: string;\n  'pdf.landscape'?: boolean;\n  'pdf.pageRanges'?: string;\n  'pdf.scale'?: number;","infill":"'pdf.width'?: string;\r\n  'pdf.height'?: string;\r\n  'pdf.fullPage'\r\n  'pdf.margin.right'?: number;\r\n  'pdf.margin.left'?: number;\r\n  'pdf.margin.top'?: number;\r\n  'pdf.margin.bottom'?: number;\r\n  ","suffix":"\r\n  /** 等待dom id 加载再执行 */\r\n  waitFor?: string;\r\n  scrollPage?: boolean;\r\n};\r\n/** 网页导出为pdf */\r\nexport function exportWebToPDF(url: string, fileName: string, pdfOptions?: PDFOptions) {\r\n  let pdfOptionsStr = '';\r\n  if (pdfOptions) {\r\n    pdfOptionsStr = Object.entries(pdfOptions)\r\n      .map(it => it.join('='))\r\n      .join('&');\r\n  }\r\n  const downloadUrl = `/thsft/iFindService/ServiceTools/html-to-x/pdf2?${pdfOptionsStr && pdfOptionsStr + '&'}url=${encodeURIComponent(url)}`;\r\n  downloadFile(downloadUrl, fileName, { ifindCheckUrl: 'no' });\r\n}\r\n\r\n/** 打开客户端弹窗。confluence pageId=526516839 */\r\nexport function onDispOpenSubUrlV1(url: string, width: number, height: number, style: number) {\r\n  window.API.use('OnDispOpenSubUrlV1', [url, width, height, style]);\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"packages/Utils/clientApi.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\n  /**\n   * 打开客户端弹","copilot":"'pdf.width'?: string;\r\n  'pdf.height'?: string;\r\n  'pdf.fullPage'\r\n  'pdf.margin.right'?: number;\r\n  'pdf.margin.left'?: number;\r\n  'pdf.margin.top'?: number;\r\n  'pdf.margin.bottom'?: number;\r\n  "}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst advancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function ","infill":"getAdvancedData() {\r\n    getAdvancedDataApi().then(res => {\r\n        if (res.data.code === 1 )\r\n      institutions.value = res.common_selector.institutions;\r\n    });\r\n  }","suffix":"\r\n\r\n  return {\r\n    institutions,\r\n    getAdvancedData,\r\n  };\r\n});\r\n\r\nexport default advancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" getAdvancedData() {\r","deepseek-chat-lite":"getAdvancedData() {\r","deepseek-chat":"```\n// Start Generation Here\nfunction getAdvancedData() {\n  return","copilot":"getAdvancedData() {\r\n    getAdvancedDataApi().then(res => {\r\n        if (res.data.code === 1 )\r\n      institutions.value = res.common_selector.institutions;\r\n    });\r\n  }"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced","infill":": prefix + '/list/advanced',","suffix":"\r\n};\r\nexport const getListDataApi = (params: Recordable) => {\r\n  return http.get<ListResponse>(apis.list, params);\r\n};\r\n\r\nexport const editListDataApi = (\r\n  data: Recordable,\r\n  config = {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n    },\r\n  }\r\n) => {\r\n  return http.post<ListItem>(apis.edit, data, config);\r\n};\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(apis.detail, params);\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n      if (config.noCancel) {\n        const noCancelRequestKey = config.url + '&' + config.method + '&' + (config.key || '');\n        noCancelPendingRequests.set(noCancelRequestKey, cancel);\n      } else {\n        pendingRequests.set(requestKey, cancel);\n      }\n    });\n    return config;\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n  (response: AxiosResponse) => {\n    // 在响应数据之前做些处理\n    const requestKey = response.config.url + '&' + response.config.method;\n    cancelPendingRequest(requestKey); // 取消重复请求\n    return response;\n  },\n  (error: AxiosError) => {\n    // 如果请求被取消，不执行任何操作\n    if (axios.isCancel(error)) {\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport interface Result<T = unknown> {\n  code: number;\n  message?: string | number;\n  subCode?: NumberAndString;\n  data: T;\n  error?: string;\n  [key: string]: any;\n}\n\nexport const http = {\n  get<T = any>(\n    url: string,\n    params?: Recordable,\n    config?: Recordable\n  ): Promise<AxiosResponse<Result<T>>> {\n    return instance.get<T, AxiosResponse<Result<T>>>(url, {\n      params,\n      ...(config || {}),\n    });\n  },\n  post<T = any>(\n    url: string,\n    data?: any,\n    config?: AxiosRequestConfig | Recordable\n  ): Promise<AxiosResponse<Result<T>>> {\n    return instance.post<T, AxiosResponse<Result<T>>>(url, data, config);\n  },\n};\nexport default instance;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":": prefix + '/list/advanced',\r","deepseek-chat-lite":"Search: prefix + '/list/advancedSearch',","deepseek-chat":"```\n// Start Generation Here\n  search: prefix + '/list/search","copilot":": prefix + '/list/advanced',"}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: s","infill":"tring;\r\n  pyName: string;","suffix":"\r\n};\r\n\r\nexport type Advanced = {\r\n  common_selector: {\r\n    institutions: InstitutionItem[];\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef } from \"vue\";\nimport { getAdvancedDataApi } from \"@/http/request\"\nconst advancedStore = defineStore('advanced', () => {\n    const institutions = shallowRef<>([]);\n});\n\nexport default advancedStore;\n<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n};\n\nexport const getAdvancedDataApi = (params: Recordable) => {\n  return http.get(apis.advanced, params);\n}\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" tring;","deepseek-chat-lite":"tring;\r","deepseek-chat":"```\n// Start Generation Here\ntring;\n  type: string;\n","copilot":"tring;\r\n  pyName: string;"}},{"prefix":"import {IDataSourceConfig,IDataSourceConfigForDisplay,IDataSource,ICascaderData } from 'types/data-source'\nimport { v4 as uuid } from 'uuid'; \n/**\n * 把服务端格式的数据源转成前端展示所需格式\n * 由于平台传递数据进行初始化时，会触发store变化，一些数据可能此时还不存在，所以需要进行兼容处理\n * @param dataSourceConfig\n * @returns\n */\nexport const dataSourceConfig2Display = (\n  dataSourceConfig: IDataSourceConfig[]\n): IDataSourceConfigForDisplay[] => {\n  const dataSourceConfigForDisplay: IDataSourceConfigForDisplay[] = dataSourceConfig.map(ele => {\n    const list = ele.fieldMappings?.map(d => {\n      const keys = d.inputFieldKey.split('_');\n      return {\n        sourceFieldName: d.sourceFieldName,\n        sourceFieldKey: d.sourceFieldKey,\n        inputFieldName: d.inputFieldName,\n        inputFieldKey: [keys[1], keys[2]],\n        inputFieldValue: d.inputFieldValue,\n        placeholder: '',\n      };\n    });\n\n    return {\n      id: uuid(),\n      data: {\n        dataSourceId: ele.dataSourceId,\n        dataSourceName: ele.dataSourceName,\n        fieldMappings: list || [],\n      },\n    };\n  });\n\n  return dataSourceConfigForDisplay;\n};\n\n\n/**\n * 组件数据初始化的时候处理一下已选择的数据源\n * @param selectedDataSourceList\n * @param dataSourceList\n * @param dataSourceCascaderData\n * @param store   // 全局的store\n */\nexport const handleSelectedDataSource = (\n  dataSourceConfig: IDataSourceConfig[],\n  dataSourceList: IDataSource[],\n  dataSourceCascaderData: ICascaderData[],\n) => {\n  const selectedDataSource: IDataSource[] = []; // 已选择的数据源（原始类型数据）\n  const selectedSourceCacasderData: ICascaderData[] = []; // 已选择的数据源对应的级联数据\n\n  dataSourceConfig.forEach(ele => {\n\n    if (ele) {\n      const temp = dataSourceCascaderData.find(\n        d => ele?.dataSourceId !== undefined && d.value === ele?.dataSourceId\n      );\n      temp && selectedSourceCacasderData.push(temp);\n\n      const selectedSource = dataSourceList.find(\n        d => ele?.dataSourceId !== undefined && d.id === +ele?.dataSourceId\n      );\n      selectedSource && selectedDataSource.push(selectedSource);\n    }\n  });\n\n  return {\n    selectedDataSource,","infill":"selectedDataSourceCascaderData,","suffix":"\n  }\n\n  // store.selectedDataSources.value = selectedDataSources;\n  // store.selectedDataSourcesCascaderData.value = selectedSourceCacasderData;\n};","relevantFile":"<file_path>src/hooks/useRegionData.ts\n        // dataSource: {\n        //   selectedDataSource: [],\n        //   selectedDataSourceCascaderData: []\n        // }\n      };\n      //不为null表示在中间插入\n      if (dragEndIndex !== null) {\n        regionData.components.splice(dragEndIndex + 1, 0, config);\n      } else {\n        regionData.components.push(config);\n      }\n    };\n    if (regionData.components.findIndex(item => item.id === component.id) === -1) {\n      if (window[key]) {\n        addComponent();\n        regionDataLoading.value[area] = false;\n      } else {\n        regionDataLoading.value[area] = true;\n\n        loadScript(component.editorPath, err => {\n          if (err) {\n            regionDataLoading.value[area] = false;\n            return;\n          }\n          addComponent();\n          regionDataLoading.value[area] = false;\n        });\n      }\n    }\n  };\n\n  //初始化组件的配置，用于动态渲染\n  const initComponentCode = (editorPath: string, component: RegionComponent): Promise<boolean> => {\n    return new Promise((resolve, reject) => {\n      if (window[component.key]) {\n        resolve(true);\n      } else {\n        loadScript(editorPath, err => {\n          if (err) {\n            reject(false);\n          } else {\n            resolve(true);\n          }\n        });\n      }\n    });\n  };\n\n  // 初始化组件列表\n  const initComponentList = async () => {\n    components.value = await getComponentList();\n  };\n\n  const initRegionData = async (regionData: RegionConfig[]) => {\n    const currentRegionData = cloneDeep(regionData || regions.value);\n    const componentformatData = new Map();\n    //构建map对象，方便获取\n    for (let componentKey in components.value) {\n      const item = components.value[componentKey];\n      item.component.forEach(component => {\n<file_path>src/components/Middle/interface/index.ts\nimport { IDataSource, ICascaderData, IDataSourceConfig } from 'types/data-source'\nimport { IConditionGroup } from 'types/conditons';\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: {\n    dataSourceConfig?: IDataSourceConfig;  // 数据源配置(y已选择的数据源配置)\n    conditionGroup?: IConditionGroup[]; // 组件执行条件（组）\n    executeConfig?: any;  // 执行配置\n  };\n  id: string;\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  // regionType?: string[];\n  // region?: string[];\n  // dataSource: {\n  //   selectedDataSource: IDataSource[];  // 选中的数据源\n  //   selectedDataSourceCascaderData: ICascaderData[];  // 选中的数据源级联数据\n  // }\n \n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}\n<file_path>src/hooks/useTriggerData.ts\n// const dataSourceConfigForDisplay = ref<IDataSourceConfigForDisplay[]>([]); // 用于展示的数据源\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n      };\n    });\n  };\n  const initAllTable = () => {\n    allTable.value = allTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,","relevantFileList":[],"filePath":"src/common/utils/dataSource.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\n    selectedSourceCacasderData,\n","copilot":"selectedDataSourceCascaderData,"}},{"prefix":"import { IDataSource, ICascaderData, IDataSourceConfig, IDataSourceConfigForDisplay, IConditionGroupForDisplay } from 'types/data-source'\nimport { IConditionGroup } from 'types/conditons';\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: {\n    dataSourceConfig?: IDataSourceConfig;  // 数据源配置(y已选择的数据源配置)\n    conditionGroup?: IConditionGroup[]; // 组件执行条件（组）\n    executeConfig?: any;  // 执行配置\n  };\n  id: string;\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  // regionType?: string[];\n  // region?: string[];\n  // dataSource: {\n  //   selectedDataSource: IDataSource[];  // 选中的数据源\n  //   selectedDataSourceCascaderData: ICascaderData[];  // 选中的数据源级联数据\n  // }\n  displayData: {\n    // 用于展示的数据源\n    dataSourceConfigForDisplay: IDataSourceConfigForDisplay[];\n    // 用于展示的条件组\n    condi","infill":"tionGroupForDisplay: IConditionGroupForDisplay[];","suffix":"\n  }\n \n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}\n","relevantFile":"<file_path>src/hooks/useTriggerData.ts\nimport { CascaderData } from '@/components/Common/interface';\nimport { IDataSourceConfigForDisplay } from 'types/data-source'\n\nimport { ref } from 'vue';\n\nconst allTableData = ref<Datasource[]>([]);   // 所有数据表\nconst noParamsTableData = ref<Datasource[]>([]);  // 无参数据表\nconst parameterlessTable = ref<CascaderData[]>([]);  // 无参数据表级联数据\nconst allTable = ref<CascaderData[]>([]); // 所有数据表级联数据\n// const dataSourceConfigForDisplay = ref<IDataSourceConfigForDisplay[]>([]); // 用于展示的数据源\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n<file_path>src/common/utils/dataSource.ts\nimport {IDataSourceConfig,IDataSourceConfigForDisplay,IDataSource,ICascaderData } from 'types/data-source'\nimport { v4 as uuid } from 'uuid'; \n/**\n * 把服务端格式的数据源转成前端展示所需格式\n * 由于平台传递数据进行初始化时，会触发store变化，一些数据可能此时还不存在，所以需要进行兼容处理\n * @param dataSourceConfig\n * @returns\n */\nexport const dataSourceConfig2Display = (\n  dataSourceConfig: IDataSourceConfig[]\n): IDataSourceConfigForDisplay[] => {\n  const dataSourceConfigForDisplay: IDataSourceConfigForDisplay[] = dataSourceConfig.map(ele => {\n    const list = ele.fieldMappings?.map(d => {\n      const keys = d.inputFieldKey.split('_');\n      return {\n        sourceFieldName: d.sourceFieldName,\n        sourceFieldKey: d.sourceFieldKey,\n        inputFieldName: d.inputFieldName,\n        inputFieldKey: [keys[1], keys[2]],\n        inputFieldValue: d.inputFieldValue,\n        placeholder: '',\n      };\n    });\n\n    return {\n      id: uuid(),\n      data: {\n        dataSourceId: ele.dataSourceId,\n        dataSourceName: ele.dataSourceName,\n        fieldMappings: list || [],\n      },\n    };\n  });\n\n  return dataSourceConfigForDisplay;\n};\n\n\n/**\n * 组件数据初始化的时候处理一下已选择的数据源\n * @param selectedDataSourceList\n * @param dataSourceList\n * @param dataSourceCascaderData\n * @param store   // 全局的store\n */\nexport const handleSelectedDataSource = (\n  dataSourceConfig: IDataSourceConfig[],\n  dataSourceList: IDataSource[],\n  dataSourceCascaderData: ICascaderData[],\n) => {\n  const selectedDataSource: IDataSource[] = []; // 已选择的数据源（原始类型数据）\n  const selectedDataSourceCacasderData: ICascaderData[] = []; // 已选择的数据源对应的级联数据\n\n  dataSourceConfig.forEach(ele => {\n\n    if (ele) {\n      const temp = dataSourceCascaderData.find(\n        d => ele?.dataSourceId !== undefined && d.value === ele?.dataSourceId\n      );\n      temp && selectedDataSourceCacasderData.push(temp);\n<file_path>src/hooks/useRegionData.ts\n        model: '',\n        temperature: 0,\n        maxToken: 0,\n        account: '',\n        business: '',\n        translateType: 'text',\n      },\n      prompt: '',\n    },\n    components: [],\n  },\n]);\nconst regionDataLoading = ref<Record<areaMap, boolean>>({\n  TITLE: false,\n  SUMMARY: false,\n  CONTENT: false,\n});\nexport const useRegionData = () => {\n  const addRegionData = (\n    regionData: RegionConfig,\n    component: ComponentConfig,\n    dragEndIndex: number | null\n  ) => {\n    const { area } = regionData;\n    const { type, resultPath, editorPath, id, key, region, icon, name } = component;\n\n    // 智能文本组件的组件默认初始配置\n    const textComponentConfig = {\n      executeConfig: {\n        // 标题或者摘要区域，默认不开启【内容单独成段】\n        singleParagraph: area === 'CONTENT' ? 1 : 0,\n      }\n    }\n\n    const addComponent = () => {\n      const config:RegionComponent = {\n        type,\n        name: '',\n        editorPath,\n        id: id!,\n        key,\n        resultPath,\n        componentCode: window[key]?.default,\n        componentConfig: type === 'TEXT' ? textComponentConfig : {},\n        extraData: {\n          region,\n          icon,\n          name,\n        },\n        // dataSource: {\n        //   selectedDataSource: [],\n        //   selectedDataSourceCascaderData: []\n        // }\n      };\n      //不为null表示在中间插入\n      if (dragEndIndex !== null) {\n        regionData.components.splice(dragEndIndex + 1, 0, config);\n      } else {\n        regionData.components.push(config);\n      }","relevantFileList":[],"filePath":"src/components/Middle/interface/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" tionGroupForDisplay: IConditionGroupForDisplay[];","deepseek-chat-lite":"tionGroupForDisplay: IConditionGroupForDisplay[];","deepseek-chat":"```\n// Start Generation Here\n    conditionGroupForDisplay: ICondition","copilot":"tionGroupForDisplay: IConditionGroupForDisplay[];"}},{"prefix":"const en = {\n  基金报告: \"Fund report\",\n  新建报告: \"New report\",\n  投顾报告: \"Investment Advisor Report\",\n  首页: \"Home\",\n  我的报告: \"My report\",\n  素材库: \"Material library\",\n  回收站: \"Recycle bin\",\n  工具箱: \"Toolbox\",\n  数据看板: \"Data Board\",\n  订阅账号: \"Subscription account\",\n  返回写作首页: \"Back to Writing Home\",\n  操作指南: \"How to do it\",\n  写作模版: \"Writing template\",\n  个基研究报告: \"Base research report\",\n  个基诊断点评: \"Individual Diagnostic Reviews\",\n  基金经理研究报告: \"Fund Manager Research Report\",\n  支持生成不同类型基金投资分析报告:\n    \"Support the generation of investment analysis reports for different types of funds\",\n  依托同花顺基金评价体系输出基金诊断点评:\n    \"Relying on the RoyalFlush Fund Evaluation System to output fund diagnosis comments\",\n  \"基金经理研究，报告一键生成\":\n    \"Fund manager research, one-click report generation\",\n  最近文章: \"Recent articles\",\n  只看编辑: \"Just watch edit\",\n  同花顺推荐: \"RoyalFlush recommendation\",\n  访谈热词: \"Interview hot words\",\n  \"注：基于基金经理最新访谈统计高频热词\":\n    \"Note: Based on the latest interviews with fund managers, statistics of high-frequency hot words\",\n  常用功能: \"Common functions\",\n  基金F9: \"Fund F 9\",\n  经理F9: \"Manager F 9\",\n  经理图谱: \"Manager map\",\n  全景诊断: \"Panoramic diagnosis\",\n  数据浏览器: \"Data browser\",\n  基金专题: \"Fund Statistics\",\n  基金池: \"Fund pool\",\n  基金资讯: \"Fund Information\",\n  基金研报: \"Fund Research Report\",\n  访谈文章: \"Interview article\",\n  \"基金经理：\": \"Fund Manager:\",\n  \"您还未有文档足迹，同花顺为您推荐了如下优质报告可浏览！\":\n    \"You do not have a document footprint, RoyalFlush recommends the following high-quality reports for you to browse!\",\n  文章: \"Article\",\n  图表: \"Chart\",\n  上传: \"Upload\",\n  点击或拖拽上传文件或图片: \"Click or drag to upload a file or image\",\n  \".doc｜.docx｜.pdf 或 .jpg｜.png\": \".doc | .docx | .pdf or .jpg | .png\",\n  搜索内容: \"Search content\",\n  \"暂无素材，\": \"No material yet,\",\n  点击上传: \"Click to upload\",\n  全部类型: \"All types\",\n  Word文档: \"Word document\",\n  PDF文档: \"PDF document\",\n  图片: \"Picture\",\n  素材类型: \"Material type\",\n  请选择: \"Please choose\",\n  取消: \"Cancel\",\n  删除: \"Delete\",\n  打开: \"Open\",\n  重命名: \"Rename\",\n  导出文档: \"Export document\",\n  热点解读: \"Hot Interpretation\",\n  投资早报: \"Investment Morning Post\",\n  收盘点评: \"Closing Comments\",\n  周期报告: \"Periodic report\",\n  短视频脚本: \"Short video script\",\n  同步推广: \"Synchronous promotion\",\n  \"暂无报告，\": \"No report yet,\",\n  点击创建: \"Click to build\",\n};\n\nex","infill":"port default","suffix":" en;\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/assets/constants/index.ts\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"manager-f9\",\n    label: window.$t(\"经理F9\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"manager-map\",\n    label: window.$t(\"经理图谱\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"diagnosis\",\n    label: window.$t(\"全景诊断\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"browser\",\n    label: window.$t(\"数据浏览器\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"statistics\",\n    label: window.$t(\"基金专题\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-pool\",\n    label: window.$t(\"基金池\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-information\",\n    label: window.$t(\"基金资讯\"),\n    jumpUrl: \"\",\n  },\n  {\n    icon: \"fund-research\",\n    label: window.$t(\"基金研报\"),\n    jumpUrl: \"\",\n  },\n];\n\nexport const VIEW_BUTTON_GROUP = [\n  {\n    icon: \"list\",\n    key: \"0\",\n  },\n  {\n    icon: \"view\",\n    key: \"1\",\n  },\n];\n\nexport const MATERIAL_FILTER_ALL = \"all\";\n\nexport const MATERIAL_FILTER_WORD = \"word\";\n\nexport const MATERIAL_FILTER_PDF = \"pdf\";","relevantFileList":[],"filePath":"source/fund-writing-platform/src/locale/en.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" port default ","deepseek-chat-lite":"port default","deepseek-chat":"```\n// Start Generation Here\nconst en = {\n  基金报告:","copilot":"port default"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst advancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);","infill":"  const getAdvancedData = async () => {\r\n        const { common_selector } = await getAdvancedDataApi({});\r\n        institutions.value = common_selector.instit","suffix":"utions;\r\n    };\r\n\r\n    return {\r\n        institutions,\r\n        getAdvancedData,\r\n    };\r\n});\r\n\r\nexport default advancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n};\n\nexport const getAdvancedDataApi = (params: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\n  const getAdvancedData = async () =>","copilot":"  const getAdvancedData = async () => {\r\n        const { common_selector } = await getAdvancedDataApi({});\r\n        institutions.value = common_selector.instit"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst advancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n    const getAdvancedData = async () => {\n        const { common_selector } = await getAdvancedDataApi({});\n        institutions.value = common_selector.institutions;\n    };","infill":"return {\r\n        institutions,\r\n        getAdvancedData,\r\n   ","suffix":" };\r\n});\r\n\r\nexport default advancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n};\n\nexport const getAdvancedDataApi = (params: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\n  const setInstitutions = (newInst","copilot":"return {\r\n        institutions,\r\n        getAdvancedData,\r\n   "}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport { getAdvancedDataApi, getDefaultInstitutionsApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: []) {","infill":"defaultInstitutions.value = codes;\r\n    ","suffix":"\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    defaultInstitutions,\r\n    getAdvancedData,\r\n    getDefaultInstitutions,\r\n    updateDefaultInstitutions\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\n    const newDefaultInstitutions = [...","copilot":"defaultInstitutions.value = codes;\r\n    "}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: []) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi","infill":"({ orgIds: codes }).then(res => {\r\n        getDefaultInstitutions\r\n    });","suffix":"\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    defaultInstitutions,\r\n    getAdvancedData,\r\n    getDefaultInstitutions,\r\n    updateDefaultInstitutions,\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};\n\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\n    noCancel: true,\n  });\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"(codes).then(res => {\r","deepseek-chat-lite":"({ codes }).then(res => {","deepseek-chat":"```\n// Start Generation Here\n      (codes).then(res => {","copilot":"({ orgIds: codes }).then(res => {\r\n        getDefaultInstitutions\r\n    });"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: []) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi({ orgIds: codes }).then(res => {","infill":"getDefaultInstitutions();","suffix":"\r\n    });\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    defaultInstitutions,\r\n    getAdvancedData,\r\n    getDefaultInstitutions,\r\n    updateDefaultInstitutions,\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};\n\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\n    noCancel: true,\n  });\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat-lite":"\r","deepseek-chat":"```\n// Start Generation Here\n      if (res.data.code ===","copilot":"getDefaultInstitutions();"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: []) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi({ orgIds: codes })\n      .then(res => {\n        if (res.data.code ===","infill":" 1","suffix":") {\r\n          getDefaultInstitutions();\r\n          window.$message.success('更新成功');\r\n        } else {\r\n          window.$message.error('更新失败');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        window.$message.error('更新失败');\r\n      });\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    defaultInstitutions,\r\n    getAdvancedData,\r\n    getDefaultInstitutions,\r\n    updateDefaultInstitutions,\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};\n\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\n    noCancel: true,\n  });\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  1<file_sep> /src/http/request.ts","deepseek-chat-lite":" 1) {","deepseek-chat":"```\n// Start Generation Here\n1\n// End Generation Here\n```<｜end▁of▁sentence｜>","copilot":" 1"}},{"prefix":"import { fileURLToPath, URL } from 'node:url';\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n      },\n      '/standard","infill":"gwapi': {\r\n        target: 'http://172.19.80.62',\r\n      },","suffix":"\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst advancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  return {\n    institutions,\n    getAdvancedData,\n  };\n});\n\nexport default advancedStore;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/vite.config.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"': {\r","deepseek-chat-lite":"': {","deepseek-chat":"```\n// Start Generation Here\n      '/standardgwapi': {\n       ","copilot":"gwapi': {\r\n        target: 'http://172.19.80.62',\r\n      },"}},{"prefix":"/**\n * 客户端常用命令\n * @author japlus\n */\n\nimport { clientVersion } from './index';\n\n/**\n * 设置全局代码\n * @param {string} thsCode\n */\nexport function setGlobalCode(thsCode: string) {\n  if (!thsCode) return;\n  console.log('设置全局代码', thsCode);\n  try {\n    window.API.use('OnSetThsCode', [thsCode]);\n  } catch (error) {\n    console.log('全局代码设置失败！');\n  }\n}\n\n/**\n * 跳转债券F9\n * @param {string} thsCode\n */\nexport function jumpToF9(thsCode: string) {\n  if (!thsCode) return;\n  console.log('跳转到债券F9', thsCode);\n  try {\n    window.API.use('onClientCmd', ['main=DepthInformation&sub=BOND&code=' + thsCode]);\n  } catch (e) {\n    console.error('客户端跳转F9异常：' + e);\n  }\n}\n/**\n * 跳转到行情F5\n * @param thsCode\n * @param option.type 'web'：跳转到网页f5。默认使用旧版f5命令（跳转f5不能带指定子tab参数）\n * @param option.subTab 指定债券F5子tab\n */\nexport function jumpToHqF5(thsCode: string, option?: { subTab?: ('brokerage' | 'cfets' | 'exchange') & string }) {\n  if (!thsCode) {\n    console.error('Missing parameter thsCode');\n    return;\n  }\n  console.log('跳转到行情F5', thsCode);\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.402') {\n      /**\n       * 这个命令只能跳转web f5页面。不能跳转客户端的F5。\n       */\n      let cmd = `main=ProPertyTrade&sub=BONDF5&thscode=${thsCode}`;\n      if (option?.subTab) {\n        cmd += `&sub_tab=${option.subTab}`;\n      }\n      window.API.onClientCmd(cmd);\n    } else {\n      /**\n       * 这个命令既可以跳客户端的f5也能跳新版网页f5。跳新版网页f5不能指定子tab。\n       */\n      window.API.use('OnClientOperJump', [thsCode, 'F5']);\n    }\n  } catch (error) {\n    console.error('跳转到行情F5失败！');\n  }\n}\n\n/** 客户端参数 */\ntype ShowPopupOptions = {\n  /** 标题 */\n  title?: string;\n  /** 副标题 */\n  subtitle?: string;\n  main?: string;\n  url_id: number | string;\n  html_type?: number | string;\n  /** 宽 */\n  cx?: number | string;\n  /** 高 */\n  cy?: number | string;\n  refresh?: number | string;\n  notify?: number | string;\n  newtheme?: number | string;\n  fixedstyle?: number | string;\n  style?: number | string;\n  changeskin?: number | string;\n  skinthemestyle?: number | string;\n};\n/**\n * 打开客户端弹窗，该客户端弹窗需要url_id,需要客户端提供。\n * @param {string} url 页面地址\n * @param {ShowPopupOptions} options\n */\nexport function showPopup(url: string, options: ShowPopupOptions) {\n  options = Object.assign(\n    {\n      main: 'URLFrame',\n      html_type: 6,\n      cx: 922,\n      cy: 454,\n      refresh: 1,\n      notify: 1,\n      newtheme: 1,\n      fixedstyle: 1,\n      style: 327680,\n      skinthemestyle: 1,\n    } as ShowPopupOptions,\n    options,\n  );\n\n  const mainUrl =\n    Object.entries(options)\n      .map(it => it.join('='))\n      .join('&') + `&url_id_append=${url}`;\n\n  try {\n    window.API.use('onClientCmd', [mainUrl]);\n  } catch (e) {\n    console.log('客户端接口调用异常：', e);\n  }\n}\n\n/**\n * 打开债券综合分析小窗\n */\nexport function showBCW(item: {\n  thsCode: string;\n  /**债券简称 */\n  name: string;\n}) {\n  const params = `batcode=${item.thsCode}&batname=${item.name}&curTheme=dark`;\n  showPopup(`/bond_analysis/comprehensive/simple?${encodeURIComponent(params)}`, {\n    url_id: 223,\n    style: '13107200',\n    subtitle: 'BCW',\n    changeskin: 1,\n    skinthemestyle: 1,\n    cx: 522,\n    cy: 566,\n  });\n}\n\n/**\n * 打开中介债券-报价小窗\n * @param {string} thsCode\n */\nexport function showBBQW(thsCode: string) {\n  try {\n    window.API.use('ScreenManagerConsole', [0, `url_id_append=/CurrencyService/market_window/index.html?thscode=${thsCode}`]);\n  } catch (error) {\n    console.warn(`${thsCode}:打开报价小窗失败`, error);\n  }\n}\n\n/**\n * 弹出中介债券(BBQ)简版弹窗\n * @param type - '1'最优报价，'2'今日成交, '3'最优报价的相似债券, '4'今日成交的相似债券, '5'成交汇总的相似债券\n * @param item - 显示该数据对应的相似债券\n */\nexport function showBBQPopup(\n  type: '1' | '2' | '3' | '4' | '5',\n  item: {\n    thsCode: string;\n    /** 剩余期限天数 */\n    remainingPeriodSort: number;\n    /** 债券简称 */\n    bondAbbreviation: string;\n    /** 债券类型：国债,国开,企业债,NCD... */\n    bondType: string;\n    /** 评级 */\n    orgRating: string;\n    /**地区编码 */\n    area: string;\n    /** 所属行业-一级编码 */\n    firstCode: string;\n  },\n) {\n  const itemClone = { ...item };\n\n  const curFormulaObj: any = {\n    name: '当前方案',\n    type,\n    item: itemClone,\n  };\n  if (['3', '4', '5'].includes(type)) {\n    curFormulaObj.options = { code: itemClone.thsCode, name: itemClone.bondAbbreviation };\n  }\n  localStorage.setItem('intermediary_quotation_cur_filters', JSON.stringify(curFormulaObj));\n  showPopup('/CurrencyServiceNew/intermediary_quote/index?isPopup=1', { url_id: 140 });\n}\n\n/**\n * 调用客户端接口保存板块\n * @param {object} params\n * @param {string[]} params.codes 添加成分的thscode或orgid\n * @param {string[]} params.blockids 操作的板块id\n * @param {number} params.oper 0-新增，1-删除\n */\nexport function addCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', encodeURIComponent(JSON.stringify(params))]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 跳转至权限中心\n */\nexport function jumpToAuthCenter() {\n  const cmd =\n    'main=URLFrame&title=权限申请&url_id=77&url_id_append=FeedBack/permission-center#/Currency&html_type=6&cx=800&cy=565&style=13107200&refresh=1&newtheme=1';\n  try {\n    window.API.OnClientCmd([cmd]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 调用客户端下载器只支持get请求\n * @param url 下载链接\n * @param fileName 下载文件\n * @param options.ifindCheckUrl 'no' 不检查地址\n * @param options.valuectrl 1:不显示下载链接, 2: 显示下载链接(默认，传2会导致不能打开下载弹窗)\n */\nexport function downloadFile(url: string, fileName: string, options: { ifindCheckUrl?: 'no'; valuectrl?: 1 | 2 } = {}) {\n  const optionsStr = Object.entries(options)\n    .map(it => it.join('='))\n    .join('&');\n  if (!url.startsWith('http')) {\n    url = window.location.origin + url;\n    console.log('相对url，已转化为完整url:', url);\n  }\n  const href = `ifind://!command=down${optionsStr && '&' + optionsStr}&filename=${fileName}&url=${url}`;\n  console.log('ifind download href:', href);\n  location.href = href;\n}\n\ntype ShowPlateManagementPopupOption = {\n  /** 板块管理客户端命令额外参数  */\n  clientParamsAppend?: string[];\n};\n/**\n * 打开客户端板块管理弹窗\n * @param {ShowPlateManagementPopupOption} options\n * @param {ShowPlateManagementPopupOption['clientParamsAppend']} options.clientParamsAppend 板块管理客户端命令额外参数 eg :['importset=25004|25017']\n */\nexport function showBlockManagerPopup(options?: ShowPlateManagementPopupOption) {\n  const { clientParamsAppend } = Object.assign(\n    {\n      clientParamsAppend: ['importset=25004|25017'],\n    },\n    options || {},\n  );\n\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.382') {\n      const param = 'synchrequest=true&' + clientParamsAppend.join('&');\n      window.API.use('OnJsFun', ['OnOperBlockManager', param]);\n    } else {\n      window.API.onClientCmd('main=SectorManagement&requestmethod=synchrequest');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/** 获取系统剪贴板文字 */\nexport function getClipboardContents() {\n  return new Promise<string>(resolve => {\n    window.API.use('OnJsFun', ['OnGetClipboardContents', ''], text => resolve(text));\n  });\n}\n\n/**\n * 打开新的客户端标签页\n * @param title 标签页名称\n * @param url\n */\nexport function newClientTab(title: string, url: string) {\n  window.API.use('OnAddSpecialTab', [title, url], rsp => {\n    console.log(rsp);\n  });\n}\n\n/**\n * 添加成分到板块\n * @param params.codes 添加成分的thscode或orgid\n * @param params.blockids 操作的板块id\n * @param params.oper 0-新增，1-删除\n */\nexport function onAddCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  const p = encodeURIComponent(JSON.stringify(params));\n  // 调用客户端接口进行保存\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', p]);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\n/** 网页导出为pdf */\nexport function exportWebToPDF(url: string, fileName: string,pdfOptions?:{format: 'A4',marginRight?:number,marginLeft?:number,mar","infill":"ginTop?:number,marginBottom?:number,waitFor?:string,scrollPage?:","suffix":"}) {\r\n  const downloadUrl = `/thsft/iFindService/ServiceTools/html-to-x/pdf2?url=${encodeURIComponent(url)}`;\r\n  downloadFile(downloadUrl, fileName, { ifindCheckUrl: 'no' });\r\n}\r\n\r\n/** 打开客户端弹窗。confluence pageId=526516839 */\r\nexport function onDispOpenSubUrlV1(url: string, width: number, height: number, style: number) {\r\n  window.API.use('OnDispOpenSubUrlV1', [url, width, height, style]);\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"packages/Utils/clientApi.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"ginTop?:number,marginBottom?:number}) {\r","deepseek-chat-lite":"ginTop?:number,marginBottom?:number}) {","deepseek-chat":"```\n// Start Generation Here\n/**\n * 打开客户端弹窗，","copilot":"ginTop?:number,marginBottom?:number,waitFor?:string,scrollPage?:"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: ","infill":"prefix + '/finance/hot/',","suffix":"\r\n};\r\n\r\nexport const getAdvancedDataApi = (params?: Recordable) => {\r\n  return http.get<Advanced>(apis.advanced, params);\r\n};\r\n\r\nexport const getListDataApi = (params: Recordable) => {\r\n  return http.get<ListResponse>(apis.list, params);\r\n};\r\n\r\nexport const editListDataApi = (\r\n  data: Recordable,\r\n  config = {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n    },\r\n  }\r\n) => {\r\n  return http.post<ListItem>(apis.edit, data, config);\r\n};\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(apis.detail, params);\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  return {\n    institutions,\n    getAdvancedData,\n  };\n});\n\nexport default useAdvancedStore;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" prefix + '/report_search/search/default_institutions',\r","deepseek-chat-lite":"prefix + '/default_institutions',","deepseek-chat":"```\n// Start Generation Here\nprefix + '/institutions/default',\n","copilot":"prefix + '/finance/hot/',"}},{"prefix":"/**\n * 客户端常用命令\n * @author japlus\n */\n\nimport { clientVersion } from './index';\n\n/**\n * 设置全局代码\n * @param {string} thsCode\n */\nexport function setGlobalCode(thsCode: string) {\n  if (!thsCode) return;\n  console.log('设置全局代码', thsCode);\n  try {\n    window.API.use('OnSetThsCode', [thsCode]);\n  } catch (error) {\n    console.log('全局代码设置失败！');\n  }\n}\n\n/**\n * 跳转债券F9\n * @param {string} thsCode\n */\nexport function jumpToF9(thsCode: string) {\n  if (!thsCode) return;\n  console.log('跳转到债券F9', thsCode);\n  try {\n    window.API.use('onClientCmd', ['main=DepthInformation&sub=BOND&code=' + thsCode]);\n  } catch (e) {\n    console.error('客户端跳转F9异常：' + e);\n  }\n}\n/**\n * 跳转到行情F5\n * @param thsCode\n * @param option.type 'web'：跳转到网页f5。默认使用旧版f5命令（跳转f5不能带指定子tab参数）\n * @param option.subTab 指定债券F5子tab\n */\nexport function jumpToHqF5(thsCode: string, option?: { subTab?: ('brokerage' | 'cfets' | 'exchange') & string }) {\n  if (!thsCode) {\n    console.error('Missing parameter thsCode');\n    return;\n  }\n  console.log('跳转到行情F5', thsCode);\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.402') {\n      /**\n       * 这个命令只能跳转web f5页面。不能跳转客户端的F5。\n       */\n      let cmd = `main=ProPertyTrade&sub=BONDF5&thscode=${thsCode}`;\n      if (option?.subTab) {\n        cmd += `&sub_tab=${option.subTab}`;\n      }\n      window.API.onClientCmd(cmd);\n    } else {\n      /**\n       * 这个命令既可以跳客户端的f5也能跳新版网页f5。跳新版网页f5不能指定子tab。\n       */\n      window.API.use('OnClientOperJump', [thsCode, 'F5']);\n    }\n  } catch (error) {\n    console.error('跳转到行情F5失败！');\n  }\n}\n\n/** 客户端参数 */\ntype ShowPopupOptions = {\n  /** 标题 */\n  title?: string;\n  /** 副标题 */\n  subtitle?: string;\n  main?: string;\n  url_id: number | string;\n  html_type?: number | string;\n  /** 宽 */\n  cx?: number | string;\n  /** 高 */\n  cy?: number | string;\n  refresh?: number | string;\n  notify?: number | string;\n  newtheme?: number | string;\n  fixedstyle?: number | string;\n  style?: number | string;\n  changeskin?: number | string;\n  skinthemestyle?: number | string;\n};\n/**\n * 打开客户端弹窗，该客户端弹窗需要url_id,需要客户端提供。\n * @param {string} url 页面地址\n * @param {ShowPopupOptions} options\n */\nexport function showPopup(url: string, options: ShowPopupOptions) {\n  options = Object.assign(\n    {\n      main: 'URLFrame',\n      html_type: 6,\n      cx: 922,\n      cy: 454,\n      refresh: 1,\n      notify: 1,\n      newtheme: 1,\n      fixedstyle: 1,\n      style: 327680,\n      skinthemestyle: 1,\n    } as ShowPopupOptions,\n    options,\n  );\n\n  const mainUrl =\n    Object.entries(options)\n      .map(it => it.join('='))\n      .join('&') + `&url_id_append=${url}`;\n\n  try {\n    window.API.use('onClientCmd', [mainUrl]);\n  } catch (e) {\n    console.log('客户端接口调用异常：', e);\n  }\n}\n\n/**\n * 打开债券综合分析小窗\n */\nexport function showBCW(item: {\n  thsCode: string;\n  /**债券简称 */\n  name: string;\n}) {\n  const params = `batcode=${item.thsCode}&batname=${item.name}&curTheme=dark`;\n  showPopup(`/bond_analysis/comprehensive/simple?${encodeURIComponent(params)}`, {\n    url_id: 223,\n    style: '13107200',\n    subtitle: 'BCW',\n    changeskin: 1,\n    skinthemestyle: 1,\n    cx: 522,\n    cy: 566,\n  });\n}\n\n/**\n * 打开中介债券-报价小窗\n * @param {string} thsCode\n */\nexport function showBBQW(thsCode: string) {\n  try {\n    window.API.use('ScreenManagerConsole', [0, `url_id_append=/CurrencyService/market_window/index.html?thscode=${thsCode}`]);\n  } catch (error) {\n    console.warn(`${thsCode}:打开报价小窗失败`, error);\n  }\n}\n\n/**\n * 弹出中介债券(BBQ)简版弹窗\n * @param type - '1'最优报价，'2'今日成交, '3'最优报价的相似债券, '4'今日成交的相似债券, '5'成交汇总的相似债券\n * @param item - 显示该数据对应的相似债券\n */\nexport function showBBQPopup(\n  type: '1' | '2' | '3' | '4' | '5',\n  item: {\n    thsCode: string;\n    /** 剩余期限天数 */\n    remainingPeriodSort: number;\n    /** 债券简称 */\n    bondAbbreviation: string;\n    /** 债券类型：国债,国开,企业债,NCD... */\n    bondType: string;\n    /** 评级 */\n    orgRating: string;\n    /**地区编码 */\n    area: string;\n    /** 所属行业-一级编码 */\n    firstCode: string;\n  },\n) {\n  const itemClone = { ...item };\n\n  const curFormulaObj: any = {\n    name: '当前方案',\n    type,\n    item: itemClone,\n  };\n  if (['3', '4', '5'].includes(type)) {\n    curFormulaObj.options = { code: itemClone.thsCode, name: itemClone.bondAbbreviation };\n  }\n  localStorage.setItem('intermediary_quotation_cur_filters', JSON.stringify(curFormulaObj));\n  showPopup('/CurrencyServiceNew/intermediary_quote/index?isPopup=1', { url_id: 140 });\n}\n\n/**\n * 调用客户端接口保存板块\n * @param {object} params\n * @param {string[]} params.codes 添加成分的thscode或orgid\n * @param {string[]} params.blockids 操作的板块id\n * @param {number} params.oper 0-新增，1-删除\n */\nexport function addCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', encodeURIComponent(JSON.stringify(params))]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 跳转至权限中心\n */\nexport function jumpToAuthCenter() {\n  const cmd =\n    'main=URLFrame&title=权限申请&url_id=77&url_id_append=FeedBack/permission-center#/Currency&html_type=6&cx=800&cy=565&style=13107200&refresh=1&newtheme=1';\n  try {\n    window.API.OnClientCmd([cmd]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 调用客户端下载器只支持get请求\n * @param url 下载链接\n * @param fileName 下载文件\n * @param options.ifindCheckUrl 'no' 不检查地址\n * @param options.valuectrl 1:不显示下载链接, 2: 显示下载链接(默认，传2会导致不能打开下载弹窗)\n */\nexport function downloadFile(url: string, fileName: string, options: { ifindCheckUrl?: 'no'; valuectrl?: 1 | 2 } = {}) {\n  const optionsStr = Object.entries(options)\n    .map(it => it.join('='))\n    .join('&');\n  if (!url.startsWith('http')) {\n    url = window.location.origin + url;\n    console.log('相对url，已转化为完整url:', url);\n  }\n  const href = `ifind://!command=down${optionsStr && '&' + optionsStr}&filename=${fileName}&url=${url}`;\n  console.log('ifind download href:', href);\n  location.href = href;\n}\n\ntype ShowPlateManagementPopupOption = {\n  /** 板块管理客户端命令额外参数  */\n  clientParamsAppend?: string[];\n};\n/**\n * 打开客户端板块管理弹窗\n * @param {ShowPlateManagementPopupOption} options\n * @param {ShowPlateManagementPopupOption['clientParamsAppend']} options.clientParamsAppend 板块管理客户端命令额外参数 eg :['importset=25004|25017']\n */\nexport function showBlockManagerPopup(options?: ShowPlateManagementPopupOption) {\n  const { clientParamsAppend } = Object.assign(\n    {\n      clientParamsAppend: ['importset=25004|25017'],\n    },\n    options || {},\n  );\n\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.382') {\n      const param = 'synchrequest=true&' + clientParamsAppend.join('&');\n      window.API.use('OnJsFun', ['OnOperBlockManager', param]);\n    } else {\n      window.API.onClientCmd('main=SectorManagement&requestmethod=synchrequest');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/** 获取系统剪贴板文字 */\nexport function getClipboardContents() {\n  return new Promise<string>(resolve => {\n    window.API.use('OnJsFun', ['OnGetClipboardContents', ''], text => resolve(text));\n  });\n}\n\n/**\n * 打开新的客户端标签页\n * @param title 标签页名称\n * @param url\n */\nexport function newClientTab(title: string, url: string) {\n  window.API.use('OnAddSpecialTab', [title, url], rsp => {\n    console.log(rsp);\n  });\n}\n\n/**\n * 添加成分到板块\n * @param params.codes 添加成分的thscode或orgid\n * @param params.blockids 操作的板块id\n * @param params.oper 0-新增，1-删除\n */\nexport function onAddCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  const p = encodeURIComponent(JSON.stringify(params));\n  // 调用客户端接口进行保存\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', p]);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\ntype PDFOptions = {\n  format?: 'A4';\n  marginRight?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  marginBottom?: number;\n  waitFor?: string;\n  scrollPage?: boolean;\n};\n/** 网页导出为pdf */\nexport function exportWebToPDF(url: string, fileName: string, pdfOptions?: PDFOptions) {\n  let pdfOptionsStr = '';\n  if (pdfOptions) {\n    pdfOptionsStr = Object.entries(pdfOptions)\n   ","infill":"pdfOptionsStr && pdfOptionsStr + '&'","suffix":"}url=${encodeURIComponent(url)}`;\r\n  downloadFile(downloadUrl, fileName, { ifindCheckUrl: 'no' });\r\n}\r\n\r\n/** 打开客户端弹窗。confluence pageId=526516839 */\r\nexport function onDispOpenSubUrlV1(url: string, width: number, height: number, style: number) {\r\n  window.API.use('OnDispOpenSubUrlV1', [url, width, height, style]);\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"packages/Utils/clientApi.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"    .map(it => it.join('='))\r","deepseek-chat-lite":"   .map(it => it.join('='))","deepseek-chat":"```\n// Start Generation Here\n      .map(it => it.join","copilot":"pdfOptionsStr && pdfOptionsStr + '&'"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n};","infill":"\r\n\r\nexport const getAdvancedDataApi = (params?: R","suffix":"ecordable) => {\r\n  return http.get<Advanced>(apis.advanced, params);\r\n};\r\n\r\nexport const getListDataApi = (params: Recordable) => {\r\n  return http.get<ListResponse>(apis.list, params);\r\n};\r\n\r\nexport const editListDataApi = (\r\n  data: Recordable,\r\n  config = {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n    },\r\n  }\r\n) => {\r\n  return http.post<ListItem>(apis.edit, data, config);\r\n};\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(apis.detail, params);\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  return {\n    institutions,\n    getAdvancedData,\n  };\n});\n\nexport default useAdvancedStore;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\nexport const getAdvancedDataApi = (params","copilot":"\r\n\r\nexport const getAdvancedDataApi = (params?: R"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi","infill":" = () => {\r\n  return http.get<string[]>(apis.defaultInstitutions);\r\n};\r\n","suffix":"","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\nconst cookie =\n  'v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=1db2a360ae802718717df3cc87938435f; jgbsessid=8949f0ffa46877367e1d6bc91e6ca6a7; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0NTo6Ojo2MDI2MDQ1NzI6MTcxNjI1NjUwMTo6Ojo4NjQwMDo6MWRiMmEzNjBhZTgwMjcxODcxN2RmM2NjODc5Mzg0MzVmOmRlZmF1bHRfMTE6MA%3D%3D; ticket=7d9e8a8afb0889cf9aab324b8ce19f44; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2';\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n        headers: {\n          cookie,\n        },\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n        headers: {\n          cookie,\n        },\n      },\n      '/standardgwapi': {\n        target: 'http://172.19.80.62',\n        headers: {\n          cookie,\n        },\n      },\n    },\n  },\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  return {\n    institutions,\n    getAdvancedData,\n  };\n});\n\nexport default useAdvancedStore;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  = (params: Recordable) => {","deepseek-chat-lite":" = (params: Recordable) => {","deepseek-chat":"```\n// Start Generation Here\n  = (params?: Recordable) =>","copilot":" = () => {\r\n  return http.get<string[]>(apis.defaultInstitutions);\r\n};\r\n"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi, getDefaultInstitutionsApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const default","infill":"Institutions = shallowRef<string[]>([]);\r\n","suffix":"\r\n  function getDefaultInstitutions() {\r\n    getDefaultInstitutionsApi().then(res => {\r\n      if (res.data.code === 1) {\r\n        defaultInstitutions.value = res.data.data || [];\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    getAdvancedData,\r\n    getDefaultInstitutions,\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" Institutions = shallowRef<InstitutionItem[]>([]);<file_sep> /src/http/request.ts","deepseek-chat-lite":"Institutions = shallowRef<InstitutionItem[]>([]);\r","deepseek-chat":"```\n// Start Generation Here\nconst defaultInstitutions = shallowRef<string","copilot":"Institutions = shallowRef<string[]>([]);\r\n"}},{"prefix":"import axios from 'axios';\nconst instance = axios.create({});\nconst SUCCESS_CODE = 200;\nexport const qs = {\n  stringify(data) {\n    const keys = Object.keys(data);\n    const sp = new URLSearchParams();\n    keys.forEach(\n      key => ![undefined, null].includes(data[key]) && sp.set(key, data[key])\n    );\n    return sp.toString();\n  },\n};\nexport const requestGet = (url, config = {}) => {\n  return instance.get(url, config).then(res => {\n    if (res.status === SUCCESS_CODE) {\n      return res.data;\n    } else {\n      throw new Error(`${res.statusText}`);\n    }\n  });\n};\nexport const requestPost = (url, data, config = {}, strngify = true) => {\n  return instance\n    .post(url, strngify ? qs.stringify(data) : data, {\n      headers: strngify\n        ? {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          }\n        : {},\n      ...config,\n    })\n    .then(res => {\n      if (res.status === SUCCESS_CODE) {\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nconst DEFAULT_TIMEOUT = 50000;\nexport default class ApiBase {\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri, params, isExport, prefix) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  _commonPost(url, params, stringify = true, sKey = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n        params,\n        {\n          cancelToken: source.token,\n          timeout,\n          headers: {},\n        },\n        stringify\n      )\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n  _commonGet(url, sKey, noCancel) {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Get');\n    if (!noCancel) {\n      this.cancelRequest(sourceKey);\n    }\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestGet(url, {\n        timeout,\n        cancelToken: source.token,\n      })\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n\n  commonRequest({ url, params, stringify, sKey, noCancel, method }) {","infill":"if (method === 'post') {\n      return this._commonPost(url, params, stringify, sKey);\n    } else {\n      this._commonPost(url, params, stringify, sKey);\n    }","suffix":"\n  }\n}\n","relevantFile":"<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};","relevantFileList":[],"filePath":"source/fund-writing-platform/src/http/apiBase.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\n    return new Promise((resolve, reject)","copilot":"if (method === 'post') {\n      return this._commonPost(url, params, stringify, sKey);\n    } else {\n      this._commonPost(url, params, stringify, sKey);\n    }"}},{"prefix":"export ","infill":"const useCoupon = () => {\r\n\r\n\r\n  \r\n};\r\n","suffix":"","relevantFile":"","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" const getRandomInt = (min, max) => {","deepseek-chat-lite":"default App;","deepseek-chat":"```\n// Start Generation Here\nimport { useState, useEffect } from '","copilot":"const useCoupon = () => {\r\n\r\n\r\n  \r\n};\r\n"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\nclass CreationApi extends ApiBase {\n  constructor() {\n    super(","infill":"\"/standardgwapi/api\");","suffix":"\r\n  }\r\n\r\n  get\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri, params, isExport, prefix) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url, params, stringify = true, sKey = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \"/creation\");","deepseek-chat-lite":");","deepseek-chat":"```\n// Start Generation Here\n      \"/creation\",\n      500","copilot":"\"/standardgwapi/api\");"}},{"prefix":"export interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\nexport interface IGetI18nDataReq {\n  template_name: string[];\n  app_id: string;\n}\n// i18n多语言数据\nexport interface IGetI18nDataRes {\n  [key: string]: {\n    [key: string]: string;\n  };\n}\n\n// ===================================================================================\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    description: string;\n    large_image: string;\n    small_white_image: string;\n    small_black_image: string;\n    description_page: string;\n    active_page: string;\n    purchase_page: string;\n    label: string;\n  };\n  price: {\n    original_price: string;\n    current_price: string;\n    discount: string;\n    discount_value: string;\n    renewal_type: string;\n    sale_id: string;\n  };\n  statistics: {\n    exposure_count: number;\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ","infill":"===============================================================================\r\n\r\n// 优惠券领取\r\nexport interface IRedeemCouponByCodeProps {\r\n  maskCode: string;\r\n}\r\n\r\n// 优惠券领取结果\r\nexport enum REDEEM_BY_CODE_TYPE {\r\n  // 成功\r\n  SUCCESS = 'SUCCESS',\r\n  // 掩码数量已用完/不存在\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  // 不允许参与\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  // 奖券不存在\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  // 平台系统限制\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  // 用户ID不存在\r\n  USER_ID_NOT_FOUND = 'USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',\r\n}\r\n","suffix":"","relevantFile":"<file_path>src/hooks/useCoupon.ts\nexport const useCoupon = () => {\n\n\n  \n};\n<file_path>src/request/api.ts\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n\n// ==================================================================================================\n\n// 请求商品列表 - 订阅中心\nexport const getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${EXT_BASE_URL}/od/subscription-center-api/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n支付权限状态","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ===================================================================================","deepseek-chat-lite":"商品列表信息 - 订阅中心","deepseek-chat":"```\n// Start Generation Here\nexport interface IGetUserArticleReq {\n","copilot":"===============================================================================\r\n\r\n// 优惠券领取\r\nexport interface IRedeemCouponByCodeProps {\r\n  maskCode: string;\r\n}\r\n\r\n// 优惠券领取结果\r\nexport enum REDEEM_BY_CODE_TYPE {\r\n  // 成功\r\n  SUCCESS = 'SUCCESS',\r\n  // 掩码数量已用完/不存在\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  // 不允许参与\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  // 奖券不存在\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  // 平台系统限制\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  // 用户ID不存在\r\n  USER_ID_NOT_FOUND = 'USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',\r\n}\r\n"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\nclass CreationApi extends ApiBase {\n\n  static urlMap = {\n    category","infill":"List: \"/industry/report/manage/category/list_by_user\",\r\n    remove","suffix":"\r\n  }\r\n\r\n  constructor() {\r\n    super(\"/standardgwapi/api\");\r\n  }\r\n\r\n  getCategoryList() {\r\n    const url\r\n  }\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri, params, isExport, prefix) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url, params, stringify = true, sKey = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" List: \"/category/list\",","deepseek-chat-lite":"List: \"/category/list\"","deepseek-chat":"```\n// Start Generation Here\n    categoryList: \"/category/list\",","copilot":"List: \"/industry/report/manage/category/list_by_user\",\r\n    remove"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this;\n    retu","infill":"rn this.commonGet(url);","suffix":"\r\n  }\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri, params, isExport, prefix) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url, params, stringify = true, sKey = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"rn this.get(url.uriMap.categoryList);\r","deepseek-chat-lite":"rn this.get(url.uriMap.categoryList);","deepseek-chat":"```\n// Start Generation Here\n    const url = this.generateUrl(","copilot":"rn this.commonGet(url);"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this.generateUrl(CreationApi.uriMap.categoryList, );\n    return this.commonGet","infill":"(url);","suffix":"\r\n  }\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri, params, isExport, prefix) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url, params, stringify = true, sKey = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"(url);\r","deepseek-chat-lite":"(url);","deepseek-chat":"```\n// Start Generation Here\n    (url, {\n      timeout:","copilot":"(url);"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef } from 'vue';\nimport { getAdvancedDataApi, getDefaultInstitutionsApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n    \n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const default\n  function ","infill":"getDefaultInstitutions() {\r\n    getDefaultInstitutionsApi().then(res => {\r\n      if (res.data.code === 1) {\r\n        institutions.value = res.data.data || [];\r\n      }\r\n    })","suffix":";\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    getAdvancedData,\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" getDefaultInstitutions() {\r","deepseek-chat-lite":"getDefaultInstitutions() {","deepseek-chat":"```\n// Start Generation Here\nconst defaultInstitutions = shallowRef<Inst","copilot":"getDefaultInstitutions() {\r\n    getDefaultInstitutionsApi().then(res => {\r\n      if (res.data.code === 1) {\r\n        institutions.value = res.data.data || [];\r\n      }\r\n    })"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\n/**\n * ","infill":"@description: 报告列表参数\r\n * @param {string | number} page 页码","suffix":"\r\n */\r\ntype ReportParams = {\r\n  page: string | number,\r\n  size: string | number,\r\n  category?: string,\r\n  keyword?: string,\r\n};\r\n\r\nclass CreationApi extends ApiBase {\r\n\r\n  static uriMap = {\r\n    // 报告类型\r\n    categoryList: \"/industry/report/manage/category/list_by_user\",\r\n    // 批量删除\r\n    remove: '/industry/report/manage/word/delete_batch',\r\n    // 报告文件列表\r\n    reportList: '/industry/report/manage/word/list',\r\n    // 重命名\r\n    rename: '/industry/report/manage/word/rename',\r\n    // 导出文档\r\n    export: '/industry/export/word',\r\n  };\r\n\r\n  constructor() {\r\n    super(\"/standardgwapi/api\");\r\n  }\r\n\r\n  getCategoryList() {\r\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\r\n    return this.commonGet(url);\r\n  }\r\n\r\n  getReportList(params: ReportParams) {\r\n\r\n  }\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/apiBase.ts\n  },\n};\nexport const requestGet = (url, config = {}) => {\n  return instance.get(url, config).then(res => {\n    if (res.status === SUCCESS_CODE) {\n      return res.data;\n    } else {\n      throw new Error(`${res.statusText}`);\n    }\n  });\n};\nexport const requestPost = (url, data, config = {}, strngify = true) => {\n  return instance\n    .post(url, strngify ? qs.stringify(data) : data, {\n      headers: strngify\n        ? {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          }\n        : {},\n      ...config,\n    })\n    .then(res => {\n      if (res.status === SUCCESS_CODE) {\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 创建报告\r","deepseek-chat-lite":"报告类型","deepseek-chat":"```\n// Start Generation Here\n    const url = this.generateUrl(","copilot":"@description: 报告列表参数\r\n * @param {string | number} page 页码"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\n/**\n * @description: 报告列表参数\n * @param","infill":" {string | number} page 页码","suffix":"\r\n */\r\ntype ReportParams = {\r\n  page: string | number,\r\n  size: string | number,\r\n  category?: string,\r\n  keyword?: string,\r\n};\r\n\r\nclass CreationApi extends ApiBase {\r\n\r\n  static uriMap = {\r\n    // 报告类型\r\n    categoryList: \"/industry/report/manage/category/list_by_user\",\r\n    // 批量删除\r\n    remove: '/industry/report/manage/word/delete_batch',\r\n    // 报告文件列表\r\n    reportList: '/industry/report/manage/word/list',\r\n    // 重命名\r\n    rename: '/industry/report/manage/word/rename',\r\n    // 导出文档\r\n    export: '/industry/export/word',\r\n  };\r\n\r\n  constructor() {\r\n    super(\"/standardgwapi/api\");\r\n  }\r\n\r\n  getCategoryList() {\r\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\r\n    return this.commonGet(url);\r\n  }\r\n\r\n  getReportList(params: ReportParams) {\r\n\r\n  }\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/apiBase.ts\n  },\n};\nexport const requestGet = (url, config = {}) => {\n  return instance.get(url, config).then(res => {\n    if (res.status === SUCCESS_CODE) {\n      return res.data;\n    } else {\n      throw new Error(`${res.statusText}`);\n    }\n  });\n};\nexport const requestPost = (url, data, config = {}, strngify = true) => {\n  return instance\n    .post(url, strngify ? qs.stringify(data) : data, {\n      headers: strngify\n        ? {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          }\n        : {},\n      ...config,\n    })\n    .then(res => {\n      if (res.status === SUCCESS_CODE) {\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  {string} page\r","deepseek-chat-lite":" {string} page 页码\r","deepseek-chat":"```\n// Start Generation Here\n    const url = this.generateUrl(","copilot":" {string | number} page 页码"}},{"prefix":"import { IDataSource, ICascaderData, IDataSourceConfig } from 'types/data-source'\nimport { IConditionGroup } from 'types/conditons';\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: Object;\n  id: string;\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  // regionType?: string[];\n  // region?: string[];\n  dataSource: {\n    selectedDataSource: IDataSource[];  // 选中的数据源\n    selectedDataSourceCascaderData: ICascaderData[];  // 选中的数据源级联数据\n  }\n  dataSourceConfig: IDataSourceConfig;  // 数据源配置(y已选择","infill":"的数据源配置)","suffix":"\n  conditionGroup: IConditionGroup[]; // 组件执行条件（组）\n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}\n","relevantFile":"<file_path>types/conditons.ts\nexport enum ConditionFlag {\n  and = 'and',\n  or = 'or',\n}\n\nexport const flagMap: Record<ConditionFlag, string> = {\n  and: '且',\n  or: '或',\n};\n\ninterface ICondition {\n  flag: ConditionFlag;\n  conditions: {\n    sourceName: string; // 数据源名称：表.列\n    sourceKey: string; // 格式：$_表id_表名\n    express: string; // 对比表达式\n    targetType: 'VALUE' | 'FIELD'; // VALUE表示常量; FIELD表示从数据源获取\n    targetValue: string; // targetType值是VALUE时传这个\n    targetName: string; // targetType值是FIELD时传这个,数据源名称：表.列\n    targetKey: string; // targetType值是FIELD时传这个,格式：$_表id_表名\n  }[];\n}\nexport interface IConditionGroup {\n  flag: ConditionFlag;\n  conditionList: ICondition[];\n}\n<file_path>types/data-source.ts\nimport { ConditionFlag } from './conditons';\n\n/**\n * 数据源\n */\nexport interface IDataSource {\n  id: number;\n  name: string;\n  key: string;\n  type: number;\n  status: number;\n  fieldList: string[];\n  protocolFormat: { key: string; value: string; description: string; varName: string }[];\n}\n\n/**级联数据（根据无参数据源进行处理获取） */\nexport interface ICascaderData {\n  value: string;\n  label: string;\n  isLeaf?: boolean;\n  loading?: boolean;\n  children?: ICascaderData[];\n}\n\nexport interface IFieldMap {\n  sourceFieldName: string; //数据源字段展示名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  sourceFieldKey: string; //数据源字段传参标识\n  inputFieldName: string; //输入字段名称，给前端用，可以自定义，后端不管内容是什么，只做保存\n  inputFieldKey: string; //输入字段标识\n  inputFieldValue: string; //输入测试案例\n}\n\nexport interface IDataSourceConfig {\n  dataSourceId: string; //数据源id\n  dataSourceName: string; //数据源名称\n  fieldMappings: IFieldMap[];\n}\n\nexport interface IFieldMapping {\n  /**\n   *  数据源名称,给前端用，可以自定义，后端不管内容是什么，只做保存\n   *  此处的表是有参数据源表\n   */\n  sourceFieldName: string;\n  /**\n   * 数据源key，格式`$_表id_protocalFormat.key`\n   * 此处的表是有参数据源表\n   */\n  sourceFieldKey: string;\n  /**\n   * 无参数据源的出参，无参表名.fileldList中的某个数据。给前端用，可以自定义，后端不管内容是什么，只做保存\n   */\n  inputFieldName: string; //输入字段名称\n  /**\n   * 无参数据源的出参，格式为：$_无参表id_fileldList中的某个数据\n   */\n  inputFieldKey: string[]; // string[]类型为了适配级联类型数据\n  inputFieldValue: string; //输入测试案例\n  placeholder: string; // 级联默认展示内容\n}\n<file_path>src/hooks/useRegionData.ts\n        model: '',\n        temperature: 0,\n        maxToken: 0,\n        account: '',\n        business: '',\n        translateType: 'text',\n      },\n      prompt: '',\n    },\n    components: [],\n  },\n]);\nconst regionDataLoading = ref<Record<areaMap, boolean>>({\n  TITLE: false,\n  SUMMARY: false,\n  CONTENT: false,\n});\nexport const useRegionData = () => {\n  const addRegionData = (\n    regionData: RegionConfig,\n    component: ComponentConfig,\n    dragEndIndex: number | null\n  ) => {\n    const { area } = regionData;\n    const { type, resultPath, editorPath, id, key, region, icon, name } = component;\n\n    // 智能文本组件的组件默认初始配置\n    const textComponentConfig = {\n      executeConfig: {\n        // 标题或者摘要区域，默认不开启【内容单独成段】\n        singleParagraph: area === 'CONTENT' ? 1 : 0,\n      }\n    }\n\n    const addComponent = () => {\n      const config:RegionComponent = {\n        type,\n        name: '',\n        editorPath,\n        id: id!,\n        key,\n        resultPath,\n        componentCode: window[key]?.default,\n        componentConfig: type === 'TEXT' ? textComponentConfig : {},\n        extraData: {\n          region,\n          icon,\n          name,\n        },\n        dataSource: {\n          selectedDataSource: [],\n          selectedDataSourceCascaderData: []\n        }\n      };\n      //不为null表示在中间插入\n      if (dragEndIndex !== null) {\n        regionData.components.splice(dragEndIndex + 1, 0, config);\n      } else {\n        regionData.components.push(config);\n      }","relevantFileList":[],"filePath":"src/components/Middle/interface/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 的数据源)","deepseek-chat-lite":"的数据源)","deepseek-chat":"```\n// Start Generation Here\n  dataSourceConfig: IDataSourceConfig; ","copilot":"的数据源配置)"}},{"prefix":"/**\n * 客户端常用命令\n * @author japlus\n */\n\nimport { clientVersion } from './index';\n\n/**\n * 设置全局代码\n * @param {string} thsCode\n */\nexport function setGlobalCode(thsCode: string) {\n  if (!thsCode) return;\n  console.log('设置全局代码', thsCode);\n  try {\n    window.API.use('OnSetThsCode', [thsCode]);\n  } catch (error) {\n    console.log('全局代码设置失败！');\n  }\n}\n\n/**\n * 跳转债券F9\n * @param {string} thsCode\n */\nexport function jumpToF9(thsCode: string) {\n  if (!thsCode) return;\n  console.log('跳转到债券F9', thsCode);\n  try {\n    window.API.use('onClientCmd', ['main=DepthInformation&sub=BOND&code=' + thsCode]);\n  } catch (e) {\n    console.error('客户端跳转F9异常：' + e);\n  }\n}\n/**\n * 跳转到行情F5\n * @param thsCode\n * @param option.type 'web'：跳转到网页f5。默认使用旧版f5命令（跳转f5不能带指定子tab参数）\n * @param option.subTab 指定债券F5子tab\n */\nexport function jumpToHqF5(thsCode: string, option?: { subTab?: ('brokerage' | 'cfets' | 'exchange') & string }) {\n  if (!thsCode) {\n    console.error('Missing parameter thsCode');\n    return;\n  }\n  console.log('跳转到行情F5', thsCode);\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.402') {\n      /**\n       * 这个命令只能跳转web f5页面。不能跳转客户端的F5。\n       */\n      let cmd = `main=ProPertyTrade&sub=BONDF5&thscode=${thsCode}`;\n      if (option?.subTab) {\n        cmd += `&sub_tab=${option.subTab}`;\n      }\n      window.API.onClientCmd(cmd);\n    } else {\n      /**\n       * 这个命令既可以跳客户端的f5也能跳新版网页f5。跳新版网页f5不能指定子tab。\n       */\n      window.API.use('OnClientOperJump', [thsCode, 'F5']);\n    }\n  } catch (error) {\n    console.error('跳转到行情F5失败！');\n  }\n}\n\n/** 客户端参数 */\ntype ShowPopupOptions = {\n  /** 标题 */\n  title?: string;\n  /** 副标题 */\n  subtitle?: string;\n  main?: string;\n  url_id: number | string;\n  html_type?: number | string;\n  /** 宽 */\n  cx?: number | string;\n  /** 高 */\n  cy?: number | string;\n  refresh?: number | string;\n  notify?: number | string;\n  newtheme?: number | string;\n  fixedstyle?: number | string;\n  style?: number | string;\n  changeskin?: number | string;\n  skinthemestyle?: number | string;\n};\n/**\n * 打开客户端弹窗，该客户端弹窗需要url_id,需要客户端提供。\n * @param {string} url 页面地址\n * @param {ShowPopupOptions} options\n */\nexport function showPopup(url: string, options: ShowPopupOptions) {\n  options = Object.assign(\n    {\n      main: 'URLFrame',\n      html_type: 6,\n      cx: 922,\n      cy: 454,\n      refresh: 1,\n      notify: 1,\n      newtheme: 1,\n      fixedstyle: 1,\n      style: 327680,\n      skinthemestyle: 1,\n    } as ShowPopupOptions,\n    options,\n  );\n\n  const mainUrl =\n    Object.entries(options)\n      .map(it => it.join('='))\n      .join('&') + `&url_id_append=${url}`;\n\n  try {\n    window.API.use('onClientCmd', [mainUrl]);\n  } catch (e) {\n    console.log('客户端接口调用异常：', e);\n  }\n}\n\n/**\n * 打开债券综合分析小窗\n */\nexport function showBCW(item: {\n  thsCode: string;\n  /**债券简称 */\n  name: string;\n}) {\n  const params = `batcode=${item.thsCode}&batname=${item.name}&curTheme=dark`;\n  showPopup(`/bond_analysis/comprehensive/simple?${encodeURIComponent(params)}`, {\n    url_id: 223,\n    style: '13107200',\n    subtitle: 'BCW',\n    changeskin: 1,\n    skinthemestyle: 1,\n    cx: 522,\n    cy: 566,\n  });\n}\n\n/**\n * 打开中介债券-报价小窗\n * @param {string} thsCode\n */\nexport function showBBQW(thsCode: string) {\n  try {\n    window.API.use('ScreenManagerConsole', [0, `url_id_append=/CurrencyService/market_window/index.html?thscode=${thsCode}`]);\n  } catch (error) {\n    console.warn(`${thsCode}:打开报价小窗失败`, error);\n  }\n}\n\n/**\n * 弹出中介债券(BBQ)简版弹窗\n * @param type - '1'最优报价，'2'今日成交, '3'最优报价的相似债券, '4'今日成交的相似债券, '5'成交汇总的相似债券\n * @param item - 显示该数据对应的相似债券\n */\nexport function showBBQPopup(\n  type: '1' | '2' | '3' | '4' | '5',\n  item: {\n    thsCode: string;\n    /** 剩余期限天数 */\n    remainingPeriodSort: number;\n    /** 债券简称 */\n    bondAbbreviation: string;\n    /** 债券类型：国债,国开,企业债,NCD... */\n    bondType: string;\n    /** 评级 */\n    orgRating: string;\n    /**地区编码 */\n    area: string;\n    /** 所属行业-一级编码 */\n    firstCode: string;\n  },\n) {\n  const itemClone = { ...item };\n\n  const curFormulaObj: any = {\n    name: '当前方案',\n    type,\n    item: itemClone,\n  };\n  if (['3', '4', '5'].includes(type)) {\n    curFormulaObj.options = { code: itemClone.thsCode, name: itemClone.bondAbbreviation };\n  }\n  localStorage.setItem('intermediary_quotation_cur_filters', JSON.stringify(curFormulaObj));\n  showPopup('/CurrencyServiceNew/intermediary_quote/index?isPopup=1', { url_id: 140 });\n}\n\n/**\n * 调用客户端接口保存板块\n * @param {object} params\n * @param {string[]} params.codes 添加成分的thscode或orgid\n * @param {string[]} params.blockids 操作的板块id\n * @param {number} params.oper 0-新增，1-删除\n */\nexport function addCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', encodeURIComponent(JSON.stringify(params))]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 跳转至权限中心\n */\nexport function jumpToAuthCenter() {\n  const cmd =\n    'main=URLFrame&title=权限申请&url_id=77&url_id_append=FeedBack/permission-center#/Currency&html_type=6&cx=800&cy=565&style=13107200&refresh=1&newtheme=1';\n  try {\n    window.API.OnClientCmd([cmd]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 调用客户端下载器只支持get请求\n * @param url 下载链接\n * @param fileName 下载文件\n * @param options.ifindCheckUrl 'no' 不检查地址\n * @param options.valuectrl 1:不显示下载链接, 2: 显示下载链接(默认，传2会导致不能打开下载弹窗)\n */\nexport function downloadFile(url: string, fileName: string, options: { ifindCheckUrl?: 'no'; valuectrl?: 1 | 2 } = {}) {\n  const optionsStr = Object.entries(options)\n    .map(it => it.join('='))\n    .join('&');\n  if (!url.startsWith('http')) {\n    url = window.location.origin + url;\n    console.log('相对url，已转化为完整url:', url);\n  }\n  const href = `ifind://!command=down${optionsStr && '&' + optionsStr}&filename=${fileName}&url=${url}`;\n  console.log('ifind download href:', href);\n  location.href = href;\n}\n\ntype ShowPlateManagementPopupOption = {\n  /** 板块管理客户端命令额外参数  */\n  clientParamsAppend?: string[];\n};\n/**\n * 打开客户端板块管理弹窗\n * @param {ShowPlateManagementPopupOption} options\n * @param {ShowPlateManagementPopupOption['clientParamsAppend']} options.clientParamsAppend 板块管理客户端命令额外参数 eg :['importset=25004|25017']\n */\nexport function showBlockManagerPopup(options?: ShowPlateManagementPopupOption) {\n  const { clientParamsAppend } = Object.assign(\n    {\n      clientParamsAppend: ['importset=25004|25017'],\n    },\n    options || {},\n  );\n\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.382') {\n      const param = 'synchrequest=true&' + clientParamsAppend.join('&');\n      window.API.use('OnJsFun', ['OnOperBlockManager', param]);\n    } else {\n      window.API.onClientCmd('main=SectorManagement&requestmethod=synchrequest');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/** 获取系统剪贴板文字 */\nexport function getClipboardContents() {\n  return new Promise<string>(resolve => {\n    window.API.use('OnJsFun', ['OnGetClipboardContents', ''], text => resolve(text));\n  });\n}\n\n/**\n * 打开新的客户端标签页\n * @param title 标签页名称\n * @param url\n */\nexport function newClientTab(title: string, url: string) {\n  window.API.use('OnAddSpecialTab', [title, url], rsp => {\n    console.log(rsp);\n  });\n}\n\n/**\n * 添加成分到板块\n * @param params.codes 添加成分的thscode或orgid\n * @param params.blockids 操作的板块id\n * @param params.oper 0-新增，1-删除\n */\nexport function onAddCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  const p = encodeURIComponent(JSON.stringify(params));\n  // 调用客户端接口进行保存\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', p]);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\ntype PDFOptions = {\n  'pdf.format'?: 'A4';\n  'pdf.margin.right'?: number;\n  'pdf.margin.left'?: number;\n  'pdf.margin.top'?: number;\n  'pdf.margin.bottom'?: number;\n  'pdf.printBackground'?: boolean;\n  'pdf.displayHeaderFooter","infill":"'?: boolean;\r\n  'pdf.headerTemplate'?: string;\r\n  'pdf.footerTemplate'?: string;\r\n  'pdf.landscape'?: boolean;\r\n  'pdf.pageRanges'?: string;\r\n  'pdf.scale'?: number;\r\n  'pdf.width'?: string;","suffix":"\r\n  /** 等待dom id 加载再执行 */\r\n  waitFor?: string;\r\n  scrollPage?: boolean;\r\n};\r\n/** 网页导出为pdf */\r\nexport function exportWebToPDF(url: string, fileName: string, pdfOptions?: PDFOptions) {\r\n  let pdfOptionsStr = '';\r\n  if (pdfOptions) {\r\n    pdfOptionsStr = Object.entries(pdfOptions)\r\n      .map(it => it.join('='))\r\n      .join('&');\r\n  }\r\n  const downloadUrl = `/thsft/iFindService/ServiceTools/html-to-x/pdf2?${pdfOptionsStr && pdfOptionsStr + '&'}url=${encodeURIComponent(url)}`;\r\n  downloadFile(downloadUrl, fileName, { ifindCheckUrl: 'no' });\r\n}\r\n\r\n/** 打开客户端弹窗。confluence pageId=526516839 */\r\nexport function onDispOpenSubUrlV1(url: string, width: number, height: number, style: number) {\r\n  window.API.use('OnDispOpenSubUrlV1', [url, width, height, style]);\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"packages/Utils/clientApi.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"'?: boolean;\r","deepseek-chat-lite":"'?: boolean;","deepseek-chat":"```\n// Start Generation Here\n/**\n * 打开客户端弹窗，","copilot":"'?: boolean;\r\n  'pdf.headerTemplate'?: string;\r\n  'pdf.footerTemplate'?: string;\r\n  'pdf.landscape'?: boolean;\r\n  'pdf.pageRanges'?: string;\r\n  'pdf.scale'?: number;\r\n  'pdf.width'?: string;"}},{"prefix":"/**\n * 客户端常用命令\n * @author japlus\n */\n\nimport { clientVersion } from './index';\n\n/**\n * 设置全局代码\n * @param {string} thsCode\n */\nexport function setGlobalCode(thsCode: string) {\n  if (!thsCode) return;\n  console.log('设置全局代码', thsCode);\n  try {\n    window.API.use('OnSetThsCode', [thsCode]);\n  } catch (error) {\n    console.log('全局代码设置失败！');\n  }\n}\n\n/**\n * 跳转债券F9\n * @param {string} thsCode\n */\nexport function jumpToF9(thsCode: string) {\n  if (!thsCode) return;\n  console.log('跳转到债券F9', thsCode);\n  try {\n    window.API.use('onClientCmd', ['main=DepthInformation&sub=BOND&code=' + thsCode]);\n  } catch (e) {\n    console.error('客户端跳转F9异常：' + e);\n  }\n}\n/**\n * 跳转到行情F5\n * @param thsCode\n * @param option.type 'web'：跳转到网页f5。默认使用旧版f5命令（跳转f5不能带指定子tab参数）\n * @param option.subTab 指定债券F5子tab\n */\nexport function jumpToHqF5(thsCode: string, option?: { subTab?: ('brokerage' | 'cfets' | 'exchange') & string }) {\n  if (!thsCode) {\n    console.error('Missing parameter thsCode');\n    return;\n  }\n  console.log('跳转到行情F5', thsCode);\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.402') {\n      /**\n       * 这个命令只能跳转web f5页面。不能跳转客户端的F5。\n       */\n      let cmd = `main=ProPertyTrade&sub=BONDF5&thscode=${thsCode}`;\n      if (option?.subTab) {\n        cmd += `&sub_tab=${option.subTab}`;\n      }\n      window.API.onClientCmd(cmd);\n    } else {\n      /**\n       * 这个命令既可以跳客户端的f5也能跳新版网页f5。跳新版网页f5不能指定子tab。\n       */\n      window.API.use('OnClientOperJump', [thsCode, 'F5']);\n    }\n  } catch (error) {\n    console.error('跳转到行情F5失败！');\n  }\n}\n\n/** 客户端参数 */\ntype ShowPopupOptions = {\n  /** 标题 */\n  title?: string;\n  /** 副标题 */\n  subtitle?: string;\n  main?: string;\n  url_id: number | string;\n  html_type?: number | string;\n  /** 宽 */\n  cx?: number | string;\n  /** 高 */\n  cy?: number | string;\n  refresh?: number | string;\n  notify?: number | string;\n  newtheme?: number | string;\n  fixedstyle?: number | string;\n  style?: number | string;\n  changeskin?: number | string;\n  skinthemestyle?: number | string;\n};\n/**\n * 打开客户端弹窗，该客户端弹窗需要url_id,需要客户端提供。\n * @param {string} url 页面地址\n * @param {ShowPopupOptions} options\n */\nexport function showPopup(url: string, options: ShowPopupOptions) {\n  options = Object.assign(\n    {\n      main: 'URLFrame',\n      html_type: 6,\n      cx: 922,\n      cy: 454,\n      refresh: 1,\n      notify: 1,\n      newtheme: 1,\n      fixedstyle: 1,\n      style: 327680,\n      skinthemestyle: 1,\n    } as ShowPopupOptions,\n    options,\n  );\n\n  const mainUrl =\n    Object.entries(options)\n      .map(it => it.join('='))\n      .join('&') + `&url_id_append=${url}`;\n\n  try {\n    window.API.use('onClientCmd', [mainUrl]);\n  } catch (e) {\n    console.log('客户端接口调用异常：', e);\n  }\n}\n\n/**\n * 打开债券综合分析小窗\n */\nexport function showBCW(item: {\n  thsCode: string;\n  /**债券简称 */\n  name: string;\n}) {\n  const params = `batcode=${item.thsCode}&batname=${item.name}&curTheme=dark`;\n  showPopup(`/bond_analysis/comprehensive/simple?${encodeURIComponent(params)}`, {\n    url_id: 223,\n    style: '13107200',\n    subtitle: 'BCW',\n    changeskin: 1,\n    skinthemestyle: 1,\n    cx: 522,\n    cy: 566,\n  });\n}\n\n/**\n * 打开中介债券-报价小窗\n * @param {string} thsCode\n */\nexport function showBBQW(thsCode: string) {\n  try {\n    window.API.use('ScreenManagerConsole', [0, `url_id_append=/CurrencyService/market_window/index.html?thscode=${thsCode}`]);\n  } catch (error) {\n    console.warn(`${thsCode}:打开报价小窗失败`, error);\n  }\n}\n\n/**\n * 弹出中介债券(BBQ)简版弹窗\n * @param type - '1'最优报价，'2'今日成交, '3'最优报价的相似债券, '4'今日成交的相似债券, '5'成交汇总的相似债券\n * @param item - 显示该数据对应的相似债券\n */\nexport function showBBQPopup(\n  type: '1' | '2' | '3' | '4' | '5',\n  item: {\n    thsCode: string;\n    /** 剩余期限天数 */\n    remainingPeriodSort: number;\n    /** 债券简称 */\n    bondAbbreviation: string;\n    /** 债券类型：国债,国开,企业债,NCD... */\n    bondType: string;\n    /** 评级 */\n    orgRating: string;\n    /**地区编码 */\n    area: string;\n    /** 所属行业-一级编码 */\n    firstCode: string;\n  },\n) {\n  const itemClone = { ...item };\n\n  const curFormulaObj: any = {\n    name: '当前方案',\n    type,\n    item: itemClone,\n  };\n  if (['3', '4', '5'].includes(type)) {\n    curFormulaObj.options = { code: itemClone.thsCode, name: itemClone.bondAbbreviation };\n  }\n  localStorage.setItem('intermediary_quotation_cur_filters', JSON.stringify(curFormulaObj));\n  showPopup('/CurrencyServiceNew/intermediary_quote/index?isPopup=1', { url_id: 140 });\n}\n\n/**\n * 调用客户端接口保存板块\n * @param {object} params\n * @param {string[]} params.codes 添加成分的thscode或orgid\n * @param {string[]} params.blockids 操作的板块id\n * @param {number} params.oper 0-新增，1-删除\n */\nexport function addCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', encodeURIComponent(JSON.stringify(params))]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 跳转至权限中心\n */\nexport function jumpToAuthCenter() {\n  const cmd =\n    'main=URLFrame&title=权限申请&url_id=77&url_id_append=FeedBack/permission-center#/Currency&html_type=6&cx=800&cy=565&style=13107200&refresh=1&newtheme=1';\n  try {\n    window.API.OnClientCmd([cmd]);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n/**\n * 调用客户端下载器只支持get请求\n * @param url 下载链接\n * @param fileName 下载文件\n * @param options.ifindCheckUrl 'no' 不检查地址\n * @param options.valuectrl 1:不显示下载链接, 2: 显示下载链接(默认，传2会导致不能打开下载弹窗)\n */\nexport function downloadFile(url: string, fileName: string, options: { ifindCheckUrl?: 'no'; valuectrl?: 1 | 2 } = {}) {\n  const optionsStr = Object.entries(options)\n    .map(it => it.join('='))\n    .join('&');\n  if (!url.startsWith('http')) {\n    url = window.location.origin + url;\n    console.log('相对url，已转化为完整url:', url);\n  }\n  const href = `ifind://!command=down${optionsStr && '&' + optionsStr}&filename=${fileName}&url=${url}`;\n  console.log('ifind download href:', href);\n  location.href = href;\n}\n\ntype ShowPlateManagementPopupOption = {\n  /** 板块管理客户端命令额外参数  */\n  clientParamsAppend?: string[];\n};\n/**\n * 打开客户端板块管理弹窗\n * @param {ShowPlateManagementPopupOption} options\n * @param {ShowPlateManagementPopupOption['clientParamsAppend']} options.clientParamsAppend 板块管理客户端命令额外参数 eg :['importset=25004|25017']\n */\nexport function showBlockManagerPopup(options?: ShowPlateManagementPopupOption) {\n  const { clientParamsAppend } = Object.assign(\n    {\n      clientParamsAppend: ['importset=25004|25017'],\n    },\n    options || {},\n  );\n\n  try {\n    if (clientVersion && clientVersion >= '1.10.12.382') {\n      const param = 'synchrequest=true&' + clientParamsAppend.join('&');\n      window.API.use('OnJsFun', ['OnOperBlockManager', param]);\n    } else {\n      window.API.onClientCmd('main=SectorManagement&requestmethod=synchrequest');\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n/** 获取系统剪贴板文字 */\nexport function getClipboardContents() {\n  return new Promise<string>(resolve => {\n    window.API.use('OnJsFun', ['OnGetClipboardContents', ''], text => resolve(text));\n  });\n}\n\n/**\n * 打开新的客户端标签页\n * @param title 标签页名称\n * @param url\n */\nexport function newClientTab(title: string, url: string) {\n  window.API.use('OnAddSpecialTab', [title, url], rsp => {\n    console.log(rsp);\n  });\n}\n\n/**\n * 添加成分到板块\n * @param params.codes 添加成分的thscode或orgid\n * @param params.blockids 操作的板块id\n * @param params.oper 0-新增，1-删除\n */\nexport function onAddCodesToBlocks(params: { codes: string[]; blockids: string[]; oper: 0 | 1 }) {\n  const p = encodeURIComponent(JSON.stringify(params));\n  // 调用客户端接口进行保存\n  try {\n    window.API.use('OnJsFun', ['OnOperBlocksCodes', p]);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\ntype PDFOptions = {\n  'pdf.format'?: 'A4';\n  'pdf.printBackground'?: boolean;\n  'pdf.displayHeaderFooter'?: boolean;\n  'pdf.headerTemplate'?: string;\n  'pdf.footerTemplate'?: string;\n  'pdf.landscape'?: boolean;","infill":"'pdf.pageRanges'?: string;\r\n  'pdf.scale'?: number;\r\n  'pdf.width'?: string;\r\n  'pdf.height'?: string;\r\n  'pdf.margin.right'?: number;\r\n  'pdf.margin.left'?: number;\r\n  'pdf.margin.top'?: number;\r\n  'pdf.margin.bottom'?: number;\r\n  ","suffix":"\r\n  /** 等待dom id 加载再执行 */\r\n  waitFor?: string;\r\n  scrollPage?: boolean;\r\n};\r\n/** 网页导出为pdf */\r\nexport function exportWebToPDF(url: string, fileName: string, pdfOptions?: PDFOptions) {\r\n  let pdfOptionsStr = '';\r\n  if (pdfOptions) {\r\n    pdfOptionsStr = Object.entries(pdfOptions)\r\n      .map(it => it.join('='))\r\n      .join('&');\r\n  }\r\n  const downloadUrl = `/thsft/iFindService/ServiceTools/html-to-x/pdf2?${pdfOptionsStr && pdfOptionsStr + '&'}url=${encodeURIComponent(url)}`;\r\n  downloadFile(downloadUrl, fileName, { ifindCheckUrl: 'no' });\r\n}\r\n\r\n/** 打开客户端弹窗。confluence pageId=526516839 */\r\nexport function onDispOpenSubUrlV1(url: string, width: number, height: number, style: number) {\r\n  window.API.use('OnDispOpenSubUrlV1', [url, width, height, style]);\r\n}\r\n","relevantFile":"","relevantFileList":[],"filePath":"packages/Utils/clientApi.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\n  /**\n   * 设置PDF的","copilot":"'pdf.pageRanges'?: string;\r\n  'pdf.scale'?: number;\r\n  'pdf.width'?: string;\r\n  'pdf.height'?: string;\r\n  'pdf.margin.right'?: number;\r\n  'pdf.margin.left'?: number;\r\n  'pdf.margin.top'?: number;\r\n  'pdf.margin.bottom'?: number;\r\n  "}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\ntype CateGoryType = {\n  category: string,\n  value: string,\n};\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet<CateGoryType[]>(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    return this.commonPost(url, params);\n  }\n\n  removeReport(ids: string[]) {\n    const url = this.generateUrl(CreationApi.uriMap.remove);\n    return this.commonPost<boolean>(url, { ids });\n  }\n\n  renameReport(params: { id: string, title: string }) {\n    const url = this.generateUrl(CreationApi.uriMap.rename);\n    return this.commonPost(url, params);\n  }\n\n  exportReport(seq: string) {\n    const","infill":" url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\r\n    \r\n  }\r\n}\r\n\r\nexport default new Creat","suffix":"ionApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost<T>(url: string, params?: any, stringify: boolean = true, sKey: string = ''): Promise<T> {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  url = this.generateUrl(CreationApi.uriMap.export);","deepseek-chat-lite":" url = this.generateUrl(CreationApi.uriMap.export);","deepseek-chat":"```\n// Start Generation Here\n    const url = this.generateUrl(","copilot":" url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\r\n    \r\n  }\r\n}\r\n\r\nexport default new Creat"}},{"prefix":"import axios from 'axios';\nconst instance = axios.create({});\nconst SUCCESS_CODE = 200;\nconst DEFAULT_TIMEOUT = 50000;\nexport const qs = {\n  stringify(data) {\n    const keys = Object.keys(data);\n    const sp = new URLSearchParams();\n    keys.forEach(\n      key => ![undefined, null].includes(data[key]) && sp.set(key, data[key])\n    );\n    return sp.toString();\n  },\n};\nexport const requestGet = (url, config = {}) => {\n  return instance.get(url, config).then(res => {\n    if (res.status === SUCCESS_CODE) {\n      return res.data;\n    } else {\n      throw new Error(`${res.statusText}`);\n    }\n  });\n};\nexport const requestPost = (url, data, config = {}, strngify = true) => {\n  return instance\n    .post(url, strngify ? qs.stringify(data) : data, {\n      headers: strngify\n        ? {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          }\n        : {},\n      ...config,\n    })\n    .then(res => {\n      if (res.status === SUCCESS_CODE) {\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost<T>(url: string, params?: any, stringify: boolean = true, sKey: string = ''): Promise<T> {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n        params,\n        {\n          cancelToken: source.token,\n          timeout,\n          headers: {},\n        },\n        stringify\n      )\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data as T);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n  commonGet<T>(url: string, sKey?: string, noCancel?:boolean): Promise<T> {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Get');\n    if (!noCancel) {\n      this.cancelRequest(sourceKey);\n    }\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestGet(url, {\n        timeout,\n        cancelToken: source.token,\n      })\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data as T);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n\n  clientDownload(url: ","infill":"string, filename: string) {\n    const encodeFilename = window.encodeURIComponent(filename);\n    const downloadUrl = `ifind://!command=down&ifindCheckUrl=no&filename=${encodeFilename}&url=${url}`;\n    window.location.href","suffix":"\n}\n","relevantFile":"<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/api/creation.ts\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\ntype CateGoryType = {\n  category: string,\n  value: string,\n};\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet<CateGoryType[]>(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    return this.commonPost(url, params);\n  }\n\n  removeReport(ids: string[]) {\n    const url = this.generateUrl(CreationApi.uriMap.remove);\n    return this.commonPost<boolean>(url, { ids });\n  }\n\n  renameReport(params: { id: string, title: string }) {\n    const url = this.generateUrl(CreationApi.uriMap.rename);\n    return this.commonPost(url, params);\n  }\n\n  exportReport(seq: string, filename: string) {\n    const url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\n    const \n    const downloadUrl = `ifind://!command=down&ifindCheckUrl=no&filename=${encodeFilename}&url=${url}`;\n  }\n\n  \n}\n\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};","relevantFileList":[],"filePath":"source/fund-writing-platform/src/http/apiBase.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" string, params?: any, sKey?: string) {","deepseek-chat-lite":"string, params?: any, stringify: boolean = true, sKey: string = '') {","deepseek-chat":"```\n// Start Generation Here\nclientDownload(url: string, filename:","copilot":"string, filename: string) {\n    const encodeFilename = window.encodeURIComponent(filename);\n    const downloadUrl = `ifind://!command=down&ifindCheckUrl=no&filename=${encodeFilename}&url=${url}`;\n    window.location.href"}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ICouponItem } from '@/request/interface';\nimport { ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const ","infill":"couponListRef = ref<ICouponItem[]>([]);","suffix":"\r\n\r\n  async function queryData() {\r\n    // loading\r\n    queryState.value = QUERY_STATE.LOADING;\r\n    try {\r\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList });\r\n      window.console.log('getCouponListByCodeList res', res);\r\n      // loading\r\n      queryState.value = QUERY_STATE.SUCCESS;\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  maskCodeList: string[];\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;\n  // 订单id\n  orderId: string;\n  // sid\n  sid: SID_TYPE;\n  // 商品续费周期\n  sidTimeType: SID_TIME_TYPE;\n  // 优惠券所属平台","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" couponList = ref<ICouponItem[]>([]);\r","deepseek-chat-lite":"couponList = ref<ICouponItem[]>([]);","deepseek-chat":"```\n// Start Generation Here\ncouponList = ref<ICoupon","copilot":"couponListRef = ref<ICouponItem[]>([]);"}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ICouponItem } from '@/request/interface';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // \n  const currSystemCouponList = ","infill":"computed(() => couponListRef.value.filter((item) => item.availableSystem === 'INIT')\r\n  async function que","suffix":"ryData() {\r\n    // loading\r\n    queryState.value = QUERY_STATE.LOADING;\r\n    try {\r\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList });\r\n      window.console.log('getCouponListByCodeList res', res);\r\n      // loading\r\n      queryState.value = QUERY_STATE.SUCCESS;\r\n      couponListRef.value = res;\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n\r\n  return {\r\n    couponListRef,\r\n    queryData,\r\n    queryState,\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  maskCodeList: string[];\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;\n  // 订单id\n  orderId: string;\n  // sid\n  sid: SID_TYPE;\n  // 商品续费周期\n  sidTimeType: SID_TIME_TYPE;\n  // 优惠券所属平台","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" computed(() => {\r","deepseek-chat-lite":"computed(() => {","deepseek-chat":"```\n// Start Generation Here\ncomputed(() => {\n  return couponList","copilot":"computed(() => couponListRef.value.filter((item) => item.availableSystem === 'INIT')\r\n  async function que"}},{"prefix":"export * from './com","infill":"mon';\r\nexport * from './ipo';\r\n\r\nexport * from './ets';\r\n\r\nexport * from './bc';","suffix":"\r\n","relevantFile":"<file_path>src/utils/animation/compute/compute.ts\n  targetCompanyNode,\n  subCompanyNode,\n  mainNode,\n}: {\n  targetCompanyNode: NodeBase;\n  mainNode: NodeBase;\n  subCompanyNode: NodeBase;\n}) => {\n  return (\n    getInitY(subCompanyNode, mainNode) +\n    subCompanyNode.getBottomDistance() +\n    subCompanyMoveDownDistanceInMerge +\n    targetCompanyWithSubDistance +\n    targetCompanyNode.getTopDistance()\n  );\n};\n\n// stock或者cash 与股东的x方向的距离\nexport const stockAndCashXDistance = 40;\nconst stockAndCashYDistance = 0;\n\n//stock and cash position 计算\nexport const getStockAndCashBezierFinal = ({\n  stockNode,\n  cashNode,\n  mainNode,\n}: {\n  stockNode: NodeBase | undefined;\n  cashNode: NodeBase | undefined;\n  mainNode: NodeBase;\n}) => {\n  // 默认stock and stock 相同高 简单点 stock在前,cash在后\n  const y = getInitY(stockNode ?? cashNode!, mainNode);\n  const finalY = y + stockAndCashYDistance;\n  let stockPosition: [number, number] | null = null;\n  let cashPosition: [number, number] | null = null;\n  if (cashNode && stockNode) {\n    //x轴以子公司股东的x为基准\n    const stockX = getSeparateWidth() - stockAndCashXDistance;\n    const cashX = getSeparateWidth() + stockAndCashXDistance;\n    stockPosition = [stockX, finalY];\n    cashPosition = [cashX, finalY];\n    return { cashPosition, stockPosition };\n  } else {\n    // 单 stock 或者单cash\n    const x = getSeparateWidth();\n    if (cashNode) {\n      cashPosition = [x, finalY];\n    }\n    if (stockNode) {\n      stockPosition = [x, finalY];\n    }\n  }\n  return { cashPosition, stockPosition };\n};\n\nexport const getTargetCompanyDissolutionMoveY = ({\n  subCompanyNode,\n}: {\n  subCompanyNode: NodeBase;\n<file_path>src/core/index.ts\nexport * from \"./config\";\n\n/**\n * 动画设计: 1) 基础动画  透明度,位置改变\n *          2) 高级动画 基于基础动画实现\n *          3) 独立动画  独立时间轴的动画\n */\n/**\n * // 一个time 支持所有高级动画和基础动画 配置action\n * // 根据后续场景评估 \n * 现有设计 是基于 一次动画区间只会做相同的类型的动画\n * 对于同一个开始时间,但是动画区间不同的情况无法满足,对于500-700ms 隐藏到0.2,500-800ms,隐藏到0.2,会有问题变成700-800ms的0.2动画(拆分成2个动画实现)\n * 优化,每个节点都单独维护一套timeline  配置更复杂化\n * \n * // 配置怎么配? 节点a 500-700 节点b 500-800  \n * // \n * **/\n\n/**\n * 子节点设计:\n * nodeBase添加children属性,指向子节点\n * 子节点暂时只支持1个,添加线时参考树\n */\n\n/**\n * animation的读取\n * 待完成  应该是转化成节点-对应的timeline-action的数组,所有的动画行为都是基于上一个行为结束的行为,时间线的读取 也要参考其他动画,ignore配置貌似去不掉\n * \n * 现在是直接解析动画配置,遍历每个动画,然后基于当前节点的初始状态来修改 在同一个动画序列里面,如果同时进行同类型基础动画的操作,\n * 就会有问题(treeAddNode move)就有冲突了\n * 逻辑重写 1.根据animationlist[预处理完的,只有基础动画]塞入map 只存对应的action,然后根据节点的action序列,执行对应的动画,传入上一个动画的内容,做参考.\n\n\n12.21 更新逻辑\n\n矛盾点: \n1. 在遍历执行完action列表时候,只能获取到节点们最开始的状态.\n2. 一个节点在一个序列内可能执行多次位移(不同于透明度,位移因为只输入每次位移的距离(或者新位置),所以依赖于原本的实时状态),那么节点(包括线)位置如何正确获取?\n3. 如果节点实时修改节点的属性(透明度,位移等),但是最后输出的结果,又是想要动画最原始的状态\n\n现有逻辑:通过不同的key,如movepositionkey来记录动画过程中位置已经发生变化,通过deletelinekey来清理副作用;\n\n好处: 每个节点单独维护自己的动画时间序列,其他节点的时间序列不参与\n缺点: 各种key的使用参与实际动画,逻辑复杂化,可维护性变差\n\n\n优化方向:\n1.先不执行action动画(预处理还是优先), 进行一个特殊处理,转化成时间序列,节点序列(节点维护自己的时间线)的对象集合,\n顺序遍历时间序列,在内部遍历节点,节点根据自身时间线判断是否进行动画,并输出到animation列表,同时动画动作实时映射到节点属性上\n[时间复杂度变高  n^2 -> n^3,但逻辑变简单 ]\n2. 原始状态通过一个状态比如initStatus来保存,开始动画时优先统一赋值,结尾输出后,统一删除\n\n*/\n\n/**\n * 线的设计 根据情况场景 现在分几种情况:\n * 1.fade的时候,如0.2的时候,线变disable颜色,2.treeAddNode 线是1.5倍宽度 3.fade的时候 线从1.5->1倍宽度\n */\n\n/**\n<file_path>src/utils/animation/compute/common.ts\n/** common  */\n\nimport { renderConfig } from '@/core';\n\n// 获取一段线宽 根据传入比例 变大\nexport const getWidth = (rate: number = 1) => {\n  return renderConfig.getConfig().lineBaseWidth * rate;\n};\n\nconst paddingWidth = 0;\n//获取3等分的屏幕的一段宽度\nexport const getSeparateWidth = () => {\n  const rate = 3;\n  const width = window.innerWidth - paddingWidth;\n  return width / rate;\n};\n\n//画布缩小 看上去节点放大\nexport const getScaleBig = (zoomY = '25%') => {\n  const bigRate = 0.75;\n  return { zoom: bigRate, zoomX: '50%', zoomY };\n};\n//画布放大 看上去节点缩小  与画布缩小对应\nexport const getScaleSmall = (zoomY = '25%') => {\n  const smallRate = 1;\n  return { zoom: smallRate, zoomX: '50%', zoomY };\n};\n<file_path>src/utils/animation/compute/ets.ts\n/*** ets*/\n\nexport const etsTargetInitX = 550;\n\nexport const etsSubCompanyInitY = 130;\n\n//  主公司树往左移动的距离偏差  基于1/3屏幕宽度\nconst etsMainTreeLeftOffset = 130;\nexport const etsMainTreeLeftDistance = getSeparateWidth() + etsMainTreeLeftOffset;\n\n//  目标公司树往右移动的距离偏差  基于1/3屏幕宽度\nconst etsTargetMainOffset = 60;\nexport const etsTargetTreeRightDistance = getSeparateWidth() - etsTargetMainOffset;\n\nexport const getETSSubCompanyMoveUpDistance = (subCompanyNode: NodeBase, mainNode: NodeBase) => {\n  const { lineInnerHeight, lineOuterHeight } = renderConfig.getConfig();\n  const moveAfterY =\n    lineInnerHeight +\n    lineOuterHeight +\n    subCompanyNode.getTopDistance() +\n    mainNode.getBottomDistance();\n  return moveAfterY - etsSubCompanyInitY;\n};","relevantFileList":[],"filePath":"src/utils/animation/compute/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" mon';\r","deepseek-chat-lite":"ponents/index';\r","deepseek-chat":"```\n// Start Generation Here\nexport * from './common';\nexport *","copilot":"mon';\r\nexport * from './ipo';\r\n\r\nexport * from './ets';\r\n\r\nexport * from './bc';"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\ntype CateGoryType = {\n  category: string,\n  value: string,\n};\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet<CateGoryType[]>(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    return this.commonPost(url, params).then(res => {\n      const { data } = res as { data: object[] };\n      return {\n        list: data || [],","infill":"total: data?.length || 0,","suffix":"\r\n      }\r\n    });\r\n  }\r\n\r\n  removeReport(ids: string[]) {\r\n    const url = this.generateUrl(CreationApi.uriMap.remove);\r\n    return this.commonPost<boolean>(url, { ids });\r\n  }\r\n\r\n  renameReport(params: { id: string, title: string }) {\r\n    const url = this.generateUrl(CreationApi.uriMap.rename);\r\n    return this.commonPost(url, params);\r\n  }\r\n\r\n  exportReport(seq: string, filename: string) {\r\n    const url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\r\n    this.clientDownload(url, filename);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost<T>(url: string, params?: any, stringify: boolean = true, sKey: string = ''): Promise<T> {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\n        total: res.total || 0","copilot":"total: data?.length || 0,"}},{"prefix":"import { IDataSource, ICascaderData, IDataSourceConfig, IDataSourceConfigForDisplay } from 'types/data-source'\nimport { IConditionGroup } from 'types/conditons';\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: {\n    dataSourceConfig?: IDataSourceConfig;  // 数据源配置(y已选择的数据源配置)\n    conditionGroup?: IConditionGroup[]; // 组件执行条件（组）\n    executeConfig?: any;  // 执行配置\n  };\n  id: string;\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  // regionType?: string[];\n  // region?: string[];\n  // dataSource: {\n  //   selectedDataSource: IDataSource[];  // 选中的数据源\n  //   selectedDataSourceCascaderData: ICascaderData[];  // 选中的数据源级联数据\n  // }\n  displayData: {\n    dataSourceConfigFor","infill":"Display: IDataSourceConfigForDisplay[];\n    conditionGroupForDisplay: IConditionGroup[];","suffix":"\n  }\n \n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}\n","relevantFile":"<file_path>src/hooks/useTriggerData.ts\nimport { CascaderData } from '@/components/Common/interface';\nimport { IDataSourceConfigForDisplay } from 'types/data-source'\n\nimport { ref } from 'vue';\n\nconst allTableData = ref<Datasource[]>([]);   // 所有数据表\nconst noParamsTableData = ref<Datasource[]>([]);  // 无参数据表\nconst parameterlessTable = ref<CascaderData[]>([]);  // 无参数据表级联数据\nconst allTable = ref<CascaderData[]>([]); // 所有数据表级联数据\n// const dataSourceConfigForDisplay = ref<IDataSourceConfigForDisplay[]>([]); // 用于展示的数据源\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n<file_path>src/common/utils/dataSource.ts\nimport {IDataSourceConfig,IDataSourceConfigForDisplay,IDataSource,ICascaderData } from 'types/data-source'\nimport { v4 as uuid } from 'uuid'; \n/**\n * 把服务端格式的数据源转成前端展示所需格式\n * 由于平台传递数据进行初始化时，会触发store变化，一些数据可能此时还不存在，所以需要进行兼容处理\n * @param dataSourceConfig\n * @returns\n */\nexport const dataSourceConfig2Display = (\n  dataSourceConfig: IDataSourceConfig[]\n): IDataSourceConfigForDisplay[] => {\n  const dataSourceConfigForDisplay: IDataSourceConfigForDisplay[] = dataSourceConfig.map(ele => {\n    const list = ele.fieldMappings?.map(d => {\n      const keys = d.inputFieldKey.split('_');\n      return {\n        sourceFieldName: d.sourceFieldName,\n        sourceFieldKey: d.sourceFieldKey,\n        inputFieldName: d.inputFieldName,\n        inputFieldKey: [keys[1], keys[2]],\n        inputFieldValue: d.inputFieldValue,\n        placeholder: '',\n      };\n    });\n\n    return {\n      id: uuid(),\n      data: {\n        dataSourceId: ele.dataSourceId,\n        dataSourceName: ele.dataSourceName,\n        fieldMappings: list || [],\n      },\n    };\n  });\n\n  return dataSourceConfigForDisplay;\n};\n\n\n/**\n * 组件数据初始化的时候处理一下已选择的数据源\n * @param selectedDataSourceList\n * @param dataSourceList\n * @param dataSourceCascaderData\n * @param store   // 全局的store\n */\nexport const handleSelectedDataSource = (\n  dataSourceConfig: IDataSourceConfig[],\n  dataSourceList: IDataSource[],\n  dataSourceCascaderData: ICascaderData[],\n) => {\n  const selectedDataSource: IDataSource[] = []; // 已选择的数据源（原始类型数据）\n  const selectedDataSourceCacasderData: ICascaderData[] = []; // 已选择的数据源对应的级联数据\n\n  dataSourceConfig.forEach(ele => {\n\n    if (ele) {\n      const temp = dataSourceCascaderData.find(\n        d => ele?.dataSourceId !== undefined && d.value === ele?.dataSourceId\n      );\n      temp && selectedDataSourceCacasderData.push(temp);\n<file_path>src/hooks/useRegionData.ts\n        model: '',\n        temperature: 0,\n        maxToken: 0,\n        account: '',\n        business: '',\n        translateType: 'text',\n      },\n      prompt: '',\n    },\n    components: [],\n  },\n]);\nconst regionDataLoading = ref<Record<areaMap, boolean>>({\n  TITLE: false,\n  SUMMARY: false,\n  CONTENT: false,\n});\nexport const useRegionData = () => {\n  const addRegionData = (\n    regionData: RegionConfig,\n    component: ComponentConfig,\n    dragEndIndex: number | null\n  ) => {\n    const { area } = regionData;\n    const { type, resultPath, editorPath, id, key, region, icon, name } = component;\n\n    // 智能文本组件的组件默认初始配置\n    const textComponentConfig = {\n      executeConfig: {\n        // 标题或者摘要区域，默认不开启【内容单独成段】\n        singleParagraph: area === 'CONTENT' ? 1 : 0,\n      }\n    }\n\n    const addComponent = () => {\n      const config:RegionComponent = {\n        type,\n        name: '',\n        editorPath,\n        id: id!,\n        key,\n        resultPath,\n        componentCode: window[key]?.default,\n        componentConfig: type === 'TEXT' ? textComponentConfig : {},\n        extraData: {\n          region,\n          icon,\n          name,\n        },\n        // dataSource: {\n        //   selectedDataSource: [],\n        //   selectedDataSourceCascaderData: []\n        // }\n      };\n      //不为null表示在中间插入\n      if (dragEndIndex !== null) {\n        regionData.components.splice(dragEndIndex + 1, 0, config);\n      } else {\n        regionData.components.push(config);\n      }","relevantFileList":[],"filePath":"src/components/Middle/interface/index.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" Display: IDataSourceConfigForDisplay;  // 显示的数据源配置(y已选择的数据源配置)","deepseek-chat-lite":"Display: IDataSourceConfigForDisplay[];","deepseek-chat":"```\n// Start Generation Here\n    dataSourceConfigForDisplay: IDataSourceConfig","copilot":"Display: IDataSourceConfigForDisplay[];\n    conditionGroupForDisplay: IConditionGroup[];"}},{"prefix":"export default function en() {\n  return {\n    提醒设置: 'Notice setting',\n    监控报告: 'Monitoring report',\n    帮助文档: 'Help document',\n    监控成员: 'Monitor members',\n    报价异动: 'Quotation change',\n    成交异动: 'Transaction transaction',\n    舆情预警: 'Public opinion warning',\n    重要事件: 'Important Events',\n    评级变动: 'Rating changes',\n    一级发行: 'Primary issue',\n    实时成交: 'Real-time transaction',\n    离岸报价: 'Offshore quotation',\n    // 全部: 'All',\n    // 经纪商行情: 'Brokerage Quotes',\n    // 上证固收: 'SSE Fixed Income',\n    // 竞价系统: 'Bidding system',3\n    只看有行情债券: 'Just look at market bonds',\n    异动设置: 'Change settings',\n    快速筛选: 'Quick filter',\n    简易: 'Easy',\n    列表: 'List',\n    估值偏离: 'Valuation deviation',\n    昨收偏离: 'Deviated yesterday',\n    笔: 'Count',\n    切换: 'Toggle',\n    板块管理: 'Sector management',\n    默认排序: 'Default sort',\n    价格异动: 'Price change',\n    新债发行: 'New bond issuance',\n    负面舆情: 'Negative public opinion',\n    今日: 'Today',\n    近一周: 'Nearly a week',\n    债券简称: 'Abbreviation',\n    债券代码: 'Bond Code',\n    成交走势: 'Trend',\n    成交价: 'Price',\n    指标编辑: 'Indicator edit',\n    基础指标: 'Basic indicators',\n    行情指标: 'Market indicators',\n    境内债券: 'Domestic bonds',\n    流动性指标: 'Liquidity Indicator',\n    保存成功: 'Save successfully',\n    收益率: 'Yield',\n    偏离: 'Deviation',\n    中债: 'CB',\n    净价: 'Net price',\n    昨收: 'Prev',\n    前收: 'Prev',\n    空: 'Empty',\n    新增成员: 'Add member',\n    '请输入主体、债券名称': 'Please enter the subject and bond name',\n    实时行情: 'Real-time Quotes',\n    舆情: 'Public Sentiment',\n    评级: 'Rating',\n    发行: 'Issuance',\n    事件: 'Event',\n    自定义: 'Customize',\n    改变布局: 'Change Layout',\n    // 评级tab\n    评级汇总: '',\n    评级变动方向: '',\n    上调: 'Increase',\n    下调: 'Decrease',\n    维持: 'Hold',\n    首次: 'First',\n    正面: '',\n    负面: '',\n    稳定: '',\n    无: '',\n    本次评级: 'Current Rating',\n    前次评级: 'Previous Rating',\n    评级展望: 'Rating Outlook',\n    评级机构: 'Rating Agency',\n    评级日期: 'Rating Date',\n    评级报告: 'Rating Report',\n    // 发行tab\n    全部: 'All',\n    取消发行: 'Canceled',\n    发行成功: 'Issue Successfully',\n    发行中: 'In Progress',\n    待发行: 'To Be Issued',\n    发行人: 'Issuer',\n    发行规模: 'Scale',\n    期限: 'Maturity',\n    投标区间: 'Bidding Interval',\n    YY主体评级: 'YY Issuer Rating',\n    发行状态: 'Issuance Status',\n    '票面利率(发行时)': 'Coupon Rate (At Issue)',\n    '首日净价偏离度（%）': 'Net Price Deviation (1st Day)(%)',\n    '首日收益率偏离度（%）': 'YTM Deviation (1st Day)(%)',\n    '首日估值净价（%）': 'Valuation Net Price (1st Day)(%)',\n    '首日估值收益率（%）': 'Valuation Yield (1st Day)(%)',\n    发行日: 'Issue Date',\n    '发行价格（元）': 'Issue Price',\n    主承销商: 'Lead Underwriter',\n    发行主体评级: 'Issuer Rating',\n    发行债项评级: 'Bond Issuance Rating',\n    监控债券: 'Monitor bonds',\n    取消: 'Cancel',\n    下载: 'Cancel download',\n    周报: 'Weekly report',\n    日报: 'Daily report',\n    时间选择: 'Time selection',\n    导出为: 'Export to {0}',\n    至: 'To',\n    报价行情: 'Quotation',\n    利率债: 'Government Bonds',\n    今日报价: 'Today Quotes',\n    成交明细: 'Transaction Details',\n    今日成交: 'Today Transaction',\n    历史走势: 'Historical Trend',\n    国际: 'CNEX',\n    中诚: 'CCXI',\n    国利: 'TPSH',\n    平安: 'PATR',\n    上田: 'UEDA',\n    信唐: 'TJXT',\n    交易所: 'Exchange',\n    上证固收: 'SSE',\n    只看经纪商: 'Only Broker',\n    剔除异常值: 'Exclude outliers',\n    当前净价:","infill":" 'Current Net Price',\r\n    当前收益率: 'Current Yield',","suffix":"\r\n  };\r\n}\r\n","relevantFile":"<file_path>src/http/apiList.ts\nconst API_PREFIX = '/standardgwapi/api';\nconst BFF_PREFIX = '/standardgwapi/bff';\nconst YAPI_PREFIX = 'http://yapi.myhexin.com/yapi/mock_v2/312422';\n\nconst BOND_F5_PREFIX = API_PREFIX + '/bond_f9f5_service/bond_f5';\nconst BOND_MONITOR_PREFIX = API_PREFIX + '/bond_f9f5_service/bond_monitor';\n\n//'http://yapi.myhexin.com/yapi/mock_v2/312422'\nexport const apiList = {\n  common: {\n    /** 获取板块列表 */\n    getSectorList: API_PREFIX + '/bond_service/bond_bff/combination/list',\n    /** 更新表头 */\n    updateTableHeader: BFF_PREFIX + '/bond_bff/overseas/custom_config/edit_config',\n    /** 重置表头 */\n    resetTableHeader: BFF_PREFIX + '/bond_bff/overseas/custom_config/reset_config',\n    /** 叠加指标 */\n    getOverlayIndicator: BOND_F5_PREFIX + '/common/add_index',\n  },\n  /** 经纪商行情 */\n  brokerageQuotes: {\n    /** 获取今日成交, 今日报价数据 */\n    getDealAndQuote: BOND_F5_PREFIX + '/broker_market/today_deal_quote/get_deal_quote_data',\n    /**历史走势重大事件接口 */\n    getNewsEvent: API_PREFIX + '/news_service/news_event/provide/search',\n    /** 获取历史成交量 */\n    getHistoryDealNum: BOND_F5_PREFIX + '/broker_market/deal_num',\n    /** 获取历史利差 */\n    getHistorySpread: BOND_F5_PREFIX + '/common/spread',\n  },\n  /** 监控报告 */\n  monitorReport: {\n    /** 导出 Excel*/\n    exportExcel: BOND_MONITOR_PREFIX + '/monitor_report/export_excel',\n    /** report.html 监控报告的页面地址 */\n    previewPDF: BFF_PREFIX + '/bond_bff/bond_monitoring/report',\n  },\n  /** 顶部键盘精灵搜索 */\n  spriteSearch: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/common/search',\n  /** 获取监控成员 */\n  getMemberList: '',\n  /** 获取离岸报价数据 */\n  getOffshoreQuote: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/offshore_bond/get_quote_data',\n  /** 获取评级数据 */\n  getRatingData: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/common/bond_monitor_rating',\n  /** 抽屉-获取最新报价数据 */\n  getLatestQuote: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/latest_quotation',\n  /** 报价行情--成交明细-表格数据 */\n  getTodayDeal: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/today_deal',\n  /** 报价行情-成交明细-右统计图 */\n  getTodayDealStatistics: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/today_count',\n};\n<file_path>src/App/MainGrid/table-columns/index.tsx\n      sorter: true,\n      headerAlign: alignMap[item.align || 0],\n      ...columnMap[dataIndex],\n    };\n    return column;\n  });\n}\n\n/** 列表模式，简易模式对应列配置 */\nexport function getTableColumnMap() {\n  const store = useTableColumnsStore();\n  return {\n    [TableTypeTab.Deal]: {\n      /** 实时成交-简易模式 */\n      [TableMode.Easy]: transformTableColumns(store[TableTypeTab.Deal][TableMode.Easy]),\n      /** 实时成交-列表模式 */\n      [TableMode.List]: transformTableColumns(store[TableTypeTab.Deal][TableMode.List].filter(it => it.selected)),\n    },\n    [TableTypeTab.Quote]: {\n      /** 离岸报价-简易模式 */\n      [TableMode.Easy]: transformTableColumns(store[TableTypeTab.Quote][TableMode.Easy]),\n      /** 离岸报价-列表模式 */\n      [TableMode.List]: transformTableColumns(store[TableTypeTab.Quote][TableMode.List].filter(it => it.selected)),\n    },\n  };\n}\n\n/**TODO: type */\ntype CustomCellProp = {\n  row: any;\n  col: StkTableColumn<any>;\n  cellValue: any;\n};\n\ntype BasicSlotFn = (props: CustomCellProp) => VNode | string;\n/** 通用单元格 */\nfunction createBasicCell(option?: { slots?: { main?: BasicSlotFn; sub?: BasicSlotFn; main2?: BasicSlotFn; sub2?: BasicSlotFn } }) {\n  const slots = option?.slots || {};\n  return (props: CustomCellProp) => {\n    return (\n      <div class=\"basic-cell-layout\">\n        <div class=\"main\">\n          {slots?.main2 && <span class=\"cell-main2\">{slots.main2(props)}</span>}\n          <span class=\"cell-main\">{slots?.main ? slots.main(props) : props.cellValue || '--'}</span>\n        </div>\n        <div class=\"sub\">\n          {slots?.sub2 && <span class=\"cell-sub2\">{slots.sub2(props)}</span>}\n          {slots?.sub && <span class=\"cell-sub\">{slots.sub(props)}</span>}\n        </div>\n      </div>\n    );\n  };\n}\n/** 走势图 */\nfunction TrendCellComp() {\n  return defineComponent({\n    props: ['row', 'col'],\n    setup(props) {\n      const cellRef = ref();\n      onMounted(() => {","relevantFileList":[],"filePath":"src/locale/en.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 'Current Net Price',","deepseek-chat-lite":" 'Current Net Price',","deepseek-chat":"```\n// Start Generation Here\n      'Current Net Price': 'Current Net","copilot":" 'Current Net Price',\r\n    当前收益率: 'Current Yield',"}},{"prefix":"export default function en() {\n  return {\n    提醒设置: 'Notice setting',\n    监控报告: 'Monitoring report',\n    帮助文档: 'Help document',\n    监控成员: 'Monitor members',\n    报价异动: 'Quotation change',\n    成交异动: 'Transaction transaction',\n    舆情预警: 'Public opinion warning',\n    重要事件: 'Important Events',\n    评级变动: 'Rating changes',\n    一级发行: 'Primary issue',\n    实时成交: 'Real-time transaction',\n    离岸报价: 'Offshore quotation',\n    // 全部: 'All',\n    // 经纪商行情: 'Brokerage Quotes',\n    // 上证固收: 'SSE Fixed Income',\n    // 竞价系统: 'Bidding system',3\n    只看有行情债券: 'Just look at market bonds',\n    异动设置: 'Change settings',\n    快速筛选: 'Quick filter',\n    简易: 'Easy',\n    列表: 'List',\n    估值偏离: 'Valuation deviation',\n    昨收偏离: 'Deviated yesterday',\n    笔: 'Count',\n    切换: 'Toggle',\n    板块管理: 'Sector management',\n    默认排序: 'Default sort',\n    价格异动: 'Price change',\n    新债发行: 'New bond issuance',\n    负面舆情: 'Negative public opinion',\n    今日: 'Today',\n    近一周: 'Nearly a week',\n    债券简称: 'Abbreviation',\n    债券代码: 'Bond Code',\n    成交走势: 'Trend',\n    成交价: 'Price',\n    指标编辑: 'Indicator edit',\n    基础指标: 'Basic indicators',\n    行情指标: 'Market indicators',\n    境内债券: 'Domestic bonds',\n    流动性指标: 'Liquidity Indicator',\n    保存成功: 'Save successfully',\n    收益率: 'Yield',\n    偏离: 'Deviation',\n    中债: 'CB',\n    净价: 'Net price',\n    昨收: 'Prev',\n    前收: 'Prev',\n    空: 'Empty',\n    新增成员: 'Add member',\n    '请输入主体、债券名称': 'Please enter the subject and bond name',\n    实时行情: 'Real-time Quotes',\n    舆情: 'Public Sentiment',\n    评级: 'Rating',\n    发行: 'Issuance',\n    事件: 'Event',\n    自定义: 'Customize',\n    改变布局: 'Change Layout',\n    // 评级tab\n    评级汇总: '',\n    评级变动方向: '',\n    上调: 'Increase',\n    下调: 'Decrease',\n    维持: 'Hold',\n    首次: 'First',\n    正面: '',\n    负面: '',\n    稳定: '',\n    无: '',\n    本次评级: 'Current Rating',\n    前次评级: 'Previous Rating',\n    评级展望: 'Rating Outlook',\n    评级机构: 'Rating Agency',\n    评级日期: 'Rating Date',\n    评级报告: 'Rating Report',\n    // 发行tab\n    全部: 'All',\n    取消发行: 'Canceled',\n    发行成功: 'Issue Successfully',\n    发行中: 'In Progress',\n    待发行: 'To Be Issued',\n    发行人: 'Issuer',\n    发行规模: 'Scale',\n    期限: 'Maturity',\n    投标区间: 'Bidding Interval',\n    YY主体评级: 'YY Issuer Rating',\n    发行状态: 'Issuance Status',\n    '票面利率(发行时)': 'Coupon Rate (At Issue)',\n    '首日净价偏离度（%）': 'Net Price Deviation (1st Day)(%)',\n    '首日收益率偏离度（%）': 'YTM Deviation (1st Day)(%)',\n    '首日估值净价（%）': 'Valuation Net Price (1st Day)(%)',\n    '首日估值收益率（%）': 'Valuation Yield (1st Day)(%)',\n    发行日: 'Issue Date',\n    '发行价格（元）': 'Issue Price',\n    主承销商: 'Lead Underwriter',\n    发行主体评级: 'Issuer Rating',\n    发行债项评级: 'Bond Issuance Rating',\n    监控债券: 'Monitor bonds',\n    取消: 'Cancel',\n    下载: 'Cancel download',\n    周报: 'Weekly report',\n    日报: 'Daily report',\n    时间选择: 'Time selection',\n    导出为: 'Export to {0}',\n    至: 'To',\n    报价行情: 'Quotation',\n    利率债: 'Government Bonds',\n    今日报价: 'Today Quotes',\n    成交明细: 'Transaction Details',\n    今日成交: 'Today Transaction',\n    历史走势: 'Historical Trend',\n    国际: 'CNEX',\n    中诚: 'CCXI',\n    国利: 'TPSH',\n    平安: 'PATR',\n    上田: 'UEDA',\n    信唐: 'TJXT',\n    交易所: 'Exchange',\n    上证固收: 'SSE',\n    只看经纪商: 'Only Broker',\n    剔除异常值: 'Exclude outliers',\n    当前净价: 'Current Net Price',\n    当前收益率:","infill":" 'Current Yield',","suffix":"\r\n  };\r\n}\r\n","relevantFile":"<file_path>src/http/apiList.ts\nconst API_PREFIX = '/standardgwapi/api';\nconst BFF_PREFIX = '/standardgwapi/bff';\nconst YAPI_PREFIX = 'http://yapi.myhexin.com/yapi/mock_v2/312422';\n\nconst BOND_F5_PREFIX = API_PREFIX + '/bond_f9f5_service/bond_f5';\nconst BOND_MONITOR_PREFIX = API_PREFIX + '/bond_f9f5_service/bond_monitor';\n\n//'http://yapi.myhexin.com/yapi/mock_v2/312422'\nexport const apiList = {\n  common: {\n    /** 获取板块列表 */\n    getSectorList: API_PREFIX + '/bond_service/bond_bff/combination/list',\n    /** 更新表头 */\n    updateTableHeader: BFF_PREFIX + '/bond_bff/overseas/custom_config/edit_config',\n    /** 重置表头 */\n    resetTableHeader: BFF_PREFIX + '/bond_bff/overseas/custom_config/reset_config',\n    /** 叠加指标 */\n    getOverlayIndicator: BOND_F5_PREFIX + '/common/add_index',\n  },\n  /** 经纪商行情 */\n  brokerageQuotes: {\n    /** 获取今日成交, 今日报价数据 */\n    getDealAndQuote: BOND_F5_PREFIX + '/broker_market/today_deal_quote/get_deal_quote_data',\n    /**历史走势重大事件接口 */\n    getNewsEvent: API_PREFIX + '/news_service/news_event/provide/search',\n    /** 获取历史成交量 */\n    getHistoryDealNum: BOND_F5_PREFIX + '/broker_market/deal_num',\n    /** 获取历史利差 */\n    getHistorySpread: BOND_F5_PREFIX + '/common/spread',\n  },\n  /** 监控报告 */\n  monitorReport: {\n    /** 导出 Excel*/\n    exportExcel: BOND_MONITOR_PREFIX + '/monitor_report/export_excel',\n    /** report.html 监控报告的页面地址 */\n    previewPDF: BFF_PREFIX + '/bond_bff/bond_monitoring/report',\n  },\n  /** 顶部键盘精灵搜索 */\n  spriteSearch: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/common/search',\n  /** 获取监控成员 */\n  getMemberList: '',\n  /** 获取离岸报价数据 */\n  getOffshoreQuote: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/offshore_bond/get_quote_data',\n  /** 获取评级数据 */\n  getRatingData: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/common/bond_monitor_rating',\n  /** 抽屉-获取最新报价数据 */\n  getLatestQuote: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/latest_quotation',\n  /** 报价行情--成交明细-表格数据 */\n  getTodayDeal: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/today_deal',\n  /** 报价行情-成交明细-右统计图 */\n  getTodayDealStatistics: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/today_count',\n};\n<file_path>src/App/MainGrid/table-columns/index.tsx\n      sorter: true,\n      headerAlign: alignMap[item.align || 0],\n      ...columnMap[dataIndex],\n    };\n    return column;\n  });\n}\n\n/** 列表模式，简易模式对应列配置 */\nexport function getTableColumnMap() {\n  const store = useTableColumnsStore();\n  return {\n    [TableTypeTab.Deal]: {\n      /** 实时成交-简易模式 */\n      [TableMode.Easy]: transformTableColumns(store[TableTypeTab.Deal][TableMode.Easy]),\n      /** 实时成交-列表模式 */\n      [TableMode.List]: transformTableColumns(store[TableTypeTab.Deal][TableMode.List].filter(it => it.selected)),\n    },\n    [TableTypeTab.Quote]: {\n      /** 离岸报价-简易模式 */\n      [TableMode.Easy]: transformTableColumns(store[TableTypeTab.Quote][TableMode.Easy]),\n      /** 离岸报价-列表模式 */\n      [TableMode.List]: transformTableColumns(store[TableTypeTab.Quote][TableMode.List].filter(it => it.selected)),\n    },\n  };\n}\n\n/**TODO: type */\ntype CustomCellProp = {\n  row: any;\n  col: StkTableColumn<any>;\n  cellValue: any;\n};\n\ntype BasicSlotFn = (props: CustomCellProp) => VNode | string;\n/** 通用单元格 */\nfunction createBasicCell(option?: { slots?: { main?: BasicSlotFn; sub?: BasicSlotFn; main2?: BasicSlotFn; sub2?: BasicSlotFn } }) {\n  const slots = option?.slots || {};\n  return (props: CustomCellProp) => {\n    return (\n      <div class=\"basic-cell-layout\">\n        <div class=\"main\">\n          {slots?.main2 && <span class=\"cell-main2\">{slots.main2(props)}</span>}\n          <span class=\"cell-main\">{slots?.main ? slots.main(props) : props.cellValue || '--'}</span>\n        </div>\n        <div class=\"sub\">\n          {slots?.sub2 && <span class=\"cell-sub2\">{slots.sub2(props)}</span>}\n          {slots?.sub && <span class=\"cell-sub\">{slots.sub(props)}</span>}\n        </div>\n      </div>\n    );\n  };\n}\n/** 走势图 */\nfunction TrendCellComp() {\n  return defineComponent({\n    props: ['row', 'col'],\n    setup(props) {\n      const cellRef = ref();\n      onMounted(() => {","relevantFileList":[],"filePath":"src/locale/en.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 'Current Yield',","deepseek-chat-lite":" 'Current Yield',\r","deepseek-chat":"```\n// Start Generation Here\n      'Current Yield',\n    当前估值","copilot":" 'Current Yield',"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};","infill":"export const setDefaultInstitutionsApi = (data: Recordable) => {\r\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\r\n    noCancel: true,\r\n  });\r\n","suffix":"};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/vite.config.ts\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\nconst cookie =\n  'v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=1db2a360ae802718717df3cc87938435f; jgbsessid=8949f0ffa46877367e1d6bc91e6ca6a7; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0NTo6Ojo2MDI2MDQ1NzI6MTcxNjI1NjUwMTo6Ojo4NjQwMDo6MWRiMmEzNjBhZTgwMjcxODcxN2RmM2NjODc5Mzg0MzVmOmRlZmF1bHRfMTE6MA%3D%3D; ticket=7d9e8a8afb0889cf9aab324b8ce19f44; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2';\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n        headers: {\n          cookie,\n        },\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n        headers: {\n          cookie,\n        },\n      },\n      '/standardgwapi': {\n        target: 'http://172.19.80.62',\n        headers: {\n          cookie,\n        },\n      },\n    },\n  },\n<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\nexport default [\n  {\n    url: '/standardgwapi/api/finance/hot/back/orgid/get',\n    method: 'get',\n    timeout: 500,\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport { getAdvancedDataApi, getDefaultInstitutionsApi } from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: []) {\n    defaultInstitutions.value = codes;\n    \n  }\n\n  return {\n    institutions,\n    defaultInstitutions,\n    getAdvancedData,\n    getDefaultInstitutions,\n    updateDefaultInstitutions\n  };\n});\n\nexport default useAdvancedStore;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat":"```\n// Start Generation Here\nexport const setDefaultInstitutionsApi = (","copilot":"export const setDefaultInstitutionsApi = (data: Recordable) => {\r\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\r\n    noCancel: true,\r\n  });\r\n"}},{"prefix":"const API_PREFIX = '/standardgwapi/api';\nconst BFF_PREFIX = '/standardgwapi/bff';\nconst YAPI_PREFIX = 'http://yapi.myhexin.com/yapi/mock_v2/312422';\n\nconst BOND_F5_PREFIX = API_PREFIX + '/bond_f9f5_service/bond_f5';\nconst BOND_MONITOR_PREFIX = API_PREFIX + '/bond_f9f5_service/bond_monitor';\n\n//'http://yapi.myhexin.com/yapi/mock_v2/312422'\nexport const apiList = {\n  common: {\n    /** 获取板块列表 */\n    getSectorList: API_PREFIX + '/bond_service/bond_bff/combination/list',\n    /** 更新表头 */\n    updateTableHeader: BFF_PREFIX + '/bond_bff/overseas/custom_config/edit_config',\n    /** 重置表头 */\n    resetTableHeader: BFF_PREFIX + '/bond_bff/overseas/custom_config/reset_config',\n    /** 叠加指标 */\n    getOverlayIndicator: BOND_F5_PREFIX + '/common/add_index',\n  },\n  /** 经纪商行情 */\n  brokerageQuotes: {\n    /** 获取今日成交, 今日报价数据 */\n    getDealAndQuote: BOND_F5_PREFIX + '/broker_market/today_deal_quote/get_deal_quote_data',\n    /**历史走势重大事件接口 */\n    getNewsEvent: API_PREFIX + '/news_service/news_event/provide/search',\n    /** 获取历史成交量 */\n    getHistoryDealNum: BOND_F5_PREFIX + '/broker_market/deal_num',\n    /** 获取历史利差 */\n    getHistorySpread: BOND_F5_PREFIX + '/common/spread',\n  },\n  /** 监控报告 */\n  monitorReport: {\n    /** 导出 Excel*/\n    exportExcel: BOND_MONITOR_PREFIX + '/monitor_report/export_excel',\n    previewPDF: ","infill":"BFF_PREFIX + '//',","suffix":"\r\n  },\r\n  /** 顶部键盘精灵搜索 */\r\n  spriteSearch: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/common/search',\r\n  /** 获取监控成员 */\r\n  getMemberList: '',\r\n  /** 获取离岸报价数据 */\r\n  getOffshoreQuote: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/offshore_bond/get_quote_data',\r\n  /** 获取评级数据 */\r\n  getRatingData: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/common/bond_monitor_rating',\r\n  /** 抽屉-获取最新报价数据 */\r\n  getLatestQuote: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/latest_quotation',\r\n  /** 报价行情--成交明细-表格数据 */\r\n  getTodayDeal: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/today_deal',\r\n  /** 报价行情-成交明细-右统计图 */\r\n  getTodayDealStatistics: YAPI_PREFIX + BOND_MONITOR_PREFIX + '/quote_market/today_count',\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/http/apiList.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" BOND_MONITOR_PREFIX + '/monitor_report/preview_pdf',\r","deepseek-chat-lite":"BOND_MONITOR_PREFIX + '/monitor_report/preview_pdf',","deepseek-chat":"```\n// Start Generation Here\n    previewPDF: BOND_MONITOR","copilot":"BFF_PREFIX + '//',"}},{"prefix":"import {\n  IGetPayAuthorityStateReq,\n  IGetPayAuthorityStateRes,\n  GetProductListConfigOfProductInfoProps,\n  IGetI18nDataReq,\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n\n// ==================================================================================================\n\n// 请求商品列表 - 订阅中心\nexport const getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${EXT_BASE_URL}/od/subscription-center-api/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      // Cookie: 'userid=1000000695;sessionid=163139c43ec3a27463f21cf458f7715a0',\n      // 'X-Auth-Type': 'ths',\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// =================================================================================================\n\n// 优惠券查询 - 通过券码列表\nexport const getCouponListByCodeList = (data: IGetCouponByCodeListProps) => {\n  return customFetchAdapter<ICouponItem[]>({\n    url: `${BASE_URL}/gw/socialcenter/v1/activity/queryRewardByCodeList`,\n    method: 'get',\n    data,\n    headers: {\n      userId: ","infill":"'1000000695',","suffix":"\r\n    },\r\n  });\r\n};\r\n\r\n// 优惠券领取 - 券码兑换\r\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\r\n  return customFetchAdapter<REDEEM_BY_CODE_TYPE>({\r\n    url: `${BASE_URL}/gw/socialcenter/v1/activity/redeemByCode`,\r\n    method: 'post',\r\n    data,\r\n  });\r\n};\r\n","relevantFile":"<file_path>src/hooks/useCoupon.ts\nimport { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ICouponItem } from '@/request/interface';\nimport { checkIsIOS } from '@/utils/localUtils';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // 当前平台\n  const currSystem = checkIsIOS() ? 'ios' : 'android';\n\n  // 当前系统的优惠券列表\n  const currSystemCouponList = computed(() =>\n    couponListRef.value.filter(item => item.availableSystem === currSystem)\n  );\n\n  // 查询数据\n  async function queryData() {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList.toString() });\n      window.console.log('getCouponListByCodeList res', res);\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n      couponListRef.value = res;\n    } catch (err) {\n      window.console.log('getCouponListByCodeList err', err);\n      // loading\n      queryState.value = QUERY_STATE.FAIL;\n    }\n  }\n\n  return {\n    couponListRef,\n    queryData,\n    queryState,\n    currSystemCouponList,\n  };\n};\n<file_path>src/request/interface.ts\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\nexport interface IGetI18nDataReq {\n  template_name: string[];\n  app_id: string;\n}\n// i18n多语言数据\nexport interface IGetI18nDataRes {\n  [key: string]: {\n    [key: string]: string;\n  };\n}\n\n// ===================================================================================\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    description: string;\n    large_image: string;\n    small_white_image: string;\n    small_black_image: string;\n    description_page: string;\n    active_page: string;\n    purchase_page: string;\n    label: string;\n  };\n  price: {\n    original_price: string;\n    current_price: string;\n    discount: string;\n    discount_value: string;\n    renewal_type: string;\n    sale_id: string;\n  };\n  statistics: {\n    exposure_count: number;\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n@ts-ignore","relevantFileList":[],"filePath":"src/request/api.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" '1000000695',\r","deepseek-chat-lite":"'1000000695',","deepseek-chat":"```\n// Start Generation Here\n      userId: '10000","copilot":"'1000000695',"}},{"prefix":"import { SID_TYPE } from '@/config/constant';\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\nexport interface IGetI18nDataReq {\n  template_name: string[];\n  app_id: string;\n}\n// i18n多语言数据\nexport interface IGetI18nDataRes {\n  [key: string]: {\n    [key: string]: string;\n  };\n}\n\n// ===================================================================================\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    description: string;\n    large_image: string;\n    small_white_image: string;\n    small_black_image: string;\n    description_page: string;\n    active_page: string;\n    purchase_page: string;\n    label: string;\n  };\n  price: {\n    original_price: string;\n    current_price: string;\n    discount: string;\n    discount_value: string;\n    renewal_type: string;\n    sale_id: string;\n  };\n  statistics: {\n    exposure_count: number;\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  // 逗号隔开\n  maskCodeList: string;\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum COUPON_SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券包lei\nexport enum COUPON_BUNDLE_NAME {\n  STOCK_SCREENER = 'STOCK_SCREENER',\n  AINVEST = 'AINVEST',\n  PENNY_STOCKS = '","infill":"PENNY_STOCKS',\r\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',","suffix":"\r\n}\r\n\r\n// 优惠券item数据\r\nexport interface ICouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间（即使用截止时间）\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE;\r\n  // 订单id\r\n  orderId: string;\r\n  // sid\r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: COUPON_SID_TIME_TYPE;\r\n  // 优惠券所属平台\r\n  availableSystem: 'ios' | 'android';\r\n  // 优惠券所属包\r\n  availableAppName: COUPON_BUNDLE_NAME;\r\n  // 掩码\r\n  maskCode: string;\r\n  // 三方平台地址\r\n  tripartiteUrl: string;\r\n}\r\n\r\nexport interface IGetCouponByCodeListRes {\r\n  maskCodeList: string[];\r\n}\r\n\r\n// 优惠券领取\r\nexport interface IRedeemCouponByCodeProps {\r\n  maskCode: string;\r\n}\r\n\r\n// 优惠券领取结果\r\nexport enum REDEEM_BY_CODE_TYPE {\r\n  // 成功\r\n  SUCCESS = 'SUCCESS',\r\n  // 掩码数量已用完/不存在\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  // 不允许参与\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  // 奖券不存在\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  // 平台系统限制\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  // 用户ID不存在\r\n  USER_ID_NOT_FOUND = 'USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',\r\n}\r\n","relevantFile":"<file_path>src/request/api.ts\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n\n// ==================================================================================================\n\n// 请求商品列表 - 订阅中心\nexport const getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${EXT_BASE_URL}/od/subscription-center-api/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      // Cookie: 'userid=1000000695;sessionid=163139c43ec3a27463f21cf458f7715a0',\n      // 'X-Auth-Type': 'ths',\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// =================================================================================================\n\n// 优惠券查询 - 通过券码列表\nexport const getCouponListByCodeList = (data: IGetCouponByCodeListProps) => {\n  return customFetchAdapter<ICouponItem[]>({\n    url: `${BASE_URL}/gw/socialcenter/v1/activity/queryRewardByCodeList`,\n    method: 'get',\n    data,\n    headers: {\n      userId: '1000000695',\n    },\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<REDEEM_BY_CODE_TYPE>({\n    url: `${BASE_URL}/gw/socialcenter/v1/activity/redeemByCode`,\n    method: 'post',\n<file_path>src/hooks/useCoupon.ts\nimport { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ICouponItem } from '@/request/interface';\nimport { checkIsIOS } from '@/utils/localUtils';\nimport { BUNDLE_NAME_TYPE, getBundleNameLowerCase } from '@overseafront/utils';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // 当前平台\n  const currSystem = checkIsIOS() ? 'ios' : 'android';\n\n  // \n  const currBundleName = getBundleNameLowerCase();\n\n  const bundleNameMap = {\n    [BUNDLE_NAME_TYPE.AINVEST]: COU\n  }\n\n  const currBundleNameParam = \n\n  // 当前系统的优惠券列表\n  const currSystemCouponList = computed(() =>\n    couponListRef.value.filter(item => item.availableSystem === currSystem)\n  );\n\n  // 查询数据\n  async function queryData() {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList.toString() });\n      window.console.log('getCouponListByCodeList res', res);\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n      couponListRef.value = res;\n    } catch (err) {\n      window.console.log('getCouponListByCodeList err', err);\n      // loading\n      queryState.value = QUERY_STATE.FAIL;\n    }\n  }\n\n  return {\n    couponListRef,\n    queryData,\n    queryState,\n    currSystemCouponList,\n  };\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" PENNY_STOCKS',\r","deepseek-chat-lite":"PENNY_STOCKS',","deepseek-chat":"```\n// Start Generation Here\nexport enum COUPON_BUNDLE","copilot":"PENNY_STOCKS',\r\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: []) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi({ orgIds: codes })\n      .then(res => {\n        if (res.data.c)\n        getDefaultInstitutions();\n        window.$message","infill":".success('更新成功');","suffix":"\r\n      })\r\n      .catch(() => {\r\n        window.$message.error('更新失败');\r\n      });\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    defaultInstitutions,\r\n    getAdvancedData,\r\n    getDefaultInstitutions,\r\n    updateDefaultInstitutions,\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};\n\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\n    noCancel: true,\n  });\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":".success('更新成功');","deepseek-chat-lite":".success('更新成功');","deepseek-chat":"```\n// Start Generation Here\n          .then(res => {\n           ","copilot":".success('更新成功');"}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: []) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi({ orgIds: codes })\n      .then(res => {\n        if (res.data.code ===)\n        getDefaultInstitutions();\n        window.$message.success('更新成功');\n      })\n      .catch","infill":"(() => {\r\n        ","suffix":"window.$message.error('更新失败');\r\n      });\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    defaultInstitutions,\r\n    getAdvancedData,\r\n    getDefaultInstitutions,\r\n    updateDefaultInstitutions,\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};\n\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\n    noCancel: true,\n  });\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"(() => {\r","deepseek-chat-lite":"(() => {","deepseek-chat":"```\n// Start Generation Here\n      .catch(error => {\n       ","copilot":"(() => {\r\n        "}},{"prefix":"import { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: []) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi({ orgIds: codes })\n      .then(res => {\n        if (res.data.code === 1)\n        getDefaultInstitutions();\n        window.$message.success('更新成功');\n      })\n      .catch(() => {","infill":"window.$message.error('更新失败');\r\n      });","suffix":"\r\n  }\r\n\r\n  return {\r\n    institutions,\r\n    defaultInstitutions,\r\n    getAdvancedData,\r\n    getDefaultInstitutions,\r\n    updateDefaultInstitutions,\r\n  };\r\n});\r\n\r\nexport default useAdvancedStore;\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],\n      };\n    },\n  },\n];\n<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/http/request.ts\nimport { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (\n  data: Recordable,\n  config = {\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n    },\n  }\n) => {\n  return http.post<ListItem>(apis.edit, data, config);\n};\n\nexport const getDatailDataApi = (params: Recordable) => {\n  return http.get<ListItem>(apis.detail, params);\n};\n\nexport const getDefaultInstitutionsApi = () => {\n  return http.get<string[]>(apis.defaultInstitutions);\n};\n\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\n    noCancel: true,\n  });\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/stores/advanced.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\n        window.$message.error('更新失败","copilot":"window.$message.error('更新失败');\r\n      });"}},{"prefix":"import { SID_TYPE } from '@/config/constant';\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\nexport interface IGetI18nDataReq {\n  template_name: string[];\n  app_id: string;\n}\n// i18n多语言数据\nexport interface IGetI18nDataRes {\n  [key: string]: {\n    [key: string]: string;\n  };\n}\n\n// ===================================================================================\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    description: string;\n    large_image: string;\n    small_white_image: string;\n    small_black_image: string;\n    description_page: string;\n    active_page: string;\n    purchase_page: string;\n    label: string;\n  };\n  price: {\n    original_price: string;\n    current_price: string;\n    discount: string;\n    discount_value: string;\n    renewal_type: string;\n    sale_id: string;\n  };\n  statistics: {\n    exposure_count: number;\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  // 逗号隔开\n  maskCodeList: string;\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum COUPON_SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券包类型\nexport enum COUPON_BUNDLE_NAME {\n  STOCK_SCREENER = 'STOCK_SCREENER',\n  AINVEST = 'AINVEST',\n  PENNY_STOCKS = 'PENNY_STOCKS',\n  STOCK_SIMULATOR = '","infill":"STOCK_SIMULATOR',","suffix":"\r\n}\r\n\r\n// 优惠券item数据\r\nexport interface ICouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间（即使用截止时间）\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE;\r\n  // 订单id\r\n  orderId: string;\r\n  // sid\r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: COUPON_SID_TIME_TYPE;\r\n  // 优惠券所属平台\r\n  availableSystem: 'ios' | 'android';\r\n  // 优惠券所属包\r\n  availableAppName: COUPON_BUNDLE_NAME;\r\n  // 掩码\r\n  maskCode: string;\r\n  // 三方平台地址\r\n  tripartiteUrl: string;\r\n}\r\n\r\nexport interface IGetCouponByCodeListRes {\r\n  maskCodeList: string[];\r\n}\r\n\r\n// 优惠券领取\r\nexport interface IRedeemCouponByCodeProps {\r\n  maskCode: string;\r\n}\r\n\r\n// 优惠券领取结果\r\nexport enum REDEEM_BY_CODE_TYPE {\r\n  // 成功\r\n  SUCCESS = 'SUCCESS',\r\n  // 掩码数量已用完/不存在\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  // 不允许参与\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  // 奖券不存在\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  // 平台系统限制\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  // 用户ID不存在\r\n  USER_ID_NOT_FOUND = 'USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',\r\n}\r\n","relevantFile":"<file_path>src/request/api.ts\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n\n// ==================================================================================================\n\n// 请求商品列表 - 订阅中心\nexport const getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${EXT_BASE_URL}/od/subscription-center-api/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      // Cookie: 'userid=1000000695;sessionid=163139c43ec3a27463f21cf458f7715a0',\n      // 'X-Auth-Type': 'ths',\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// =================================================================================================\n\n// 优惠券查询 - 通过券码列表\nexport const getCouponListByCodeList = (data: IGetCouponByCodeListProps) => {\n  return customFetchAdapter<ICouponItem[]>({\n    url: `${BASE_URL}/gw/socialcenter/v1/activity/queryRewardByCodeList`,\n    method: 'get',\n    data,\n    headers: {\n      userId: '1000000695',\n    },\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<REDEEM_BY_CODE_TYPE>({\n    url: `${BASE_URL}/gw/socialcenter/v1/activity/redeemByCode`,\n    method: 'post',\n<file_path>src/hooks/useCoupon.ts\nimport { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ICouponItem } from '@/request/interface';\nimport { checkIsIOS } from '@/utils/localUtils';\nimport { BUNDLE_NAME_TYPE, getBundleNameLowerCase } from '@overseafront/utils';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // 当前平台\n  const currSystem = checkIsIOS() ? 'ios' : 'android';\n\n  // \n  const currBundleName = getBundleNameLowerCase();\n\n  const bundleNameMap = {\n    [BUNDLE_NAME_TYPE.AINVEST]: COU\n  }\n\n  const currBundleNameParam = \n\n  // 当前系统的优惠券列表\n  const currSystemCouponList = computed(() =>\n    couponListRef.value.filter(item => item.availableSystem === currSystem)\n  );\n\n  // 查询数据\n  async function queryData() {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList.toString() });\n      window.console.log('getCouponListByCodeList res', res);\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n      couponListRef.value = res;\n    } catch (err) {\n      window.console.log('getCouponListByCodeList err', err);\n      // loading\n      queryState.value = QUERY_STATE.FAIL;\n    }\n  }\n\n  return {\n    couponListRef,\n    queryData,\n    queryState,\n    currSystemCouponList,\n  };\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" STOCK_SIMULATOR',\r","deepseek-chat-lite":"STOCK_SIMULATOR',\r","deepseek-chat":"```\n// Start Generation Here\nexport enum COUPON_BUNDLE","copilot":"STOCK_SIMULATOR',"}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { COUPON_BUNDLE_NAME, ICouponItem } from '@/request/interface';\nimport { checkIsIOS } from '@/utils/localUtils';\nimport { BUNDLE_NAME_TYPE, getBundleNameLowerCase } from '@overseafront/utils';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // 当前平台\n  const currSystem = checkIsIOS() ? 'ios' : 'android';\n\n  // \n  const currBundleName = getBundleNameLowerCase();\n\n  const bundleNameMap = {\n    [BUNDLE_NAME_TYPE.AINVEST]: COUPON_BUNDLE_NAME.AINVEST","infill":",\r\n    [BUNDLE_NAME_TYPE.SCREENER]: COUPON_BUNDLE_NAME.STOCK_SCREENER,\r\n    [BUNDLE_NAME_TYPE.PENNY]: ","suffix":"\r\n  }\r\n\r\n  const currBundleNameParam = \r\n\r\n  // 当前系统的优惠券列表\r\n  const currSystemCouponList = computed(() =>\r\n    couponListRef.value.filter(item => item.availableSystem === currSystem)\r\n  );\r\n\r\n  // 查询数据\r\n  async function queryData() {\r\n    // loading\r\n    queryState.value = QUERY_STATE.LOADING;\r\n    try {\r\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList.toString() });\r\n      window.console.log('getCouponListByCodeList res', res);\r\n      // loading\r\n      queryState.value = QUERY_STATE.SUCCESS;\r\n      couponListRef.value = res;\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n\r\n  return {\r\n    couponListRef,\r\n    queryData,\r\n    queryState,\r\n    currSystemCouponList,\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  // 逗号隔开\n  maskCodeList: string;\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum COUPON_SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券包类型\nexport enum COUPON_BUNDLE_NAME {\n  STOCK_SCREENER = 'STOCK_SCREENER',\n  AINVEST = 'AINVEST',\n  PENNY_STOCKS = 'PENNY_STOCKS',\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;\n  // 订单id\n  orderId: string;\n  // sid\n  sid: SID_TYPE;\n  // 商品续费周期\n  sidTimeType: COUPON_SID_TIME_TYPE;\n  // 优惠券所属平台\n  availableSystem: 'ios' | 'android';","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ,","deepseek-chat-lite":",\r","deepseek-chat":"```\n// Start Generation Here\n    [BUNDLE_NAME_TYPE","copilot":",\r\n    [BUNDLE_NAME_TYPE.SCREENER]: COUPON_BUNDLE_NAME.STOCK_SCREENER,\r\n    [BUNDLE_NAME_TYPE.PENNY]: "}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { COUPON_BUNDLE_NAME, ICouponItem } from '@/request/interface';\nimport { checkIsIOS } from '@/utils/localUtils';\nimport { BUNDLE_NAME_TYPE, getBundleNameLowerCase } from '@overseafront/utils';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // 当前平台\n  const currSystem = checkIsIOS() ? 'ios' : 'android';\n\n  // \n  const currBundleName = getBundleNameLowerCase();\n\n  const bundleNameMap = {\n    [BUNDLE_NAME_TYPE.AINVEST]: COUPON_BUNDLE_NAME.AINVEST,\n    [BUNDLE_NAME_TYPE.SCREENER]: COUPON_BUNDLE_NAME.STOCK_SCREENER,\n    [BUNDLE_NAME_TYPE.PENNY]: COUPON_BUNDLE_NAME.PENNY_STOCKS","infill":",\r\n    [BUNDLE_NAME_TYPE.SIMULATOR]: COUPON_BUNDLE_NAME.STOCK_SIMULATOR,","suffix":"\r\n  }\r\n\r\n  // 当前系统的优惠券列表\r\n  const currSystemAndACouponList = computed(() =>\r\n    couponListRef.value.filter(item => item.availableSystem === currSystem)\r\n  );\r\n\r\n  // 查询数据\r\n  async function queryData() {\r\n    // loading\r\n    queryState.value = QUERY_STATE.LOADING;\r\n    try {\r\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList.toString() });\r\n      window.console.log('getCouponListByCodeList res', res);\r\n      // loading\r\n      queryState.value = QUERY_STATE.SUCCESS;\r\n      couponListRef.value = res;\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n\r\n  return {\r\n    couponListRef,\r\n    queryData,\r\n    queryState,\r\n    currSystemCouponList,\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  // 逗号隔开\n  maskCodeList: string;\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum COUPON_SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券包类型\nexport enum COUPON_BUNDLE_NAME {\n  STOCK_SCREENER = 'STOCK_SCREENER',\n  AINVEST = 'AINVEST',\n  PENNY_STOCKS = 'PENNY_STOCKS',\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;\n  // 订单id\n  orderId: string;\n  // sid\n  sid: SID_TYPE;\n  // 商品续费周期\n  sidTimeType: COUPON_SID_TIME_TYPE;\n  // 优惠券所属平台\n  availableSystem: 'ios' | 'android';","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ,","deepseek-chat-lite":",","deepseek-chat":"```\n// Start Generation Here\n    [BUNDLE_NAME_TYPE","copilot":",\r\n    [BUNDLE_NAME_TYPE.SIMULATOR]: COUPON_BUNDLE_NAME.STOCK_SIMULATOR,"}},{"prefix":"import Application, { NATIVE_ACTION } from '@/utils/methods/application';\nimport synchronizeProtocol from '@thsf2e/public-method/es/synchronize-protocol';\n\nexport default class Share {\n  /**\n   * 调用客户端分享功能\n   * @param {NativeShareData} shareData - 分享数据\n   * @param {string} [actionKey] - 客户端统计 key\n   * @param {string} callbackName - 回调函数标识\n   * @param {(nativeNotifyResult: unknown) => void} callback - 回调函数\n   */\n  static share(shareData: NativeShareData, actionKey?: string, callbackName?: string, callback?: (nativeNotifyResult: unknown) => void): void {\n    const options: NativeShareParam = {\n      type: 1,\n      bmpRes: 3,\n      actionKey: actionKey || 'medal-wall-share',\n      title: shareData.title,\n      content: shareData.desc,\n      url: shareData.link,\n      innerPlatforms: ['sns'],\n      forwardInfo: shareData.forwardInfo,\n      expand: shareData.expand,\n    };\n    if (shareData.imgUrl && typeof shareData.imgUrl !== 'undefined') {\n      options.bmpRes = 1;\n      options.bmpUrl = synchronizeProtocol(shareData.imgUrl);\n    }\n    commonMobile.callNativeHandler(\n      NATIVE_ACTION.HEXIN_SHARE,\n      JSON.stringify(options),\n      () => void 0,\n    );\n    if (callbackName && callback) {\n      Application.addNativeNotifyFunction(NATIVE_ACTION.NOTIFY_NATIVE_EVENT, callbackName, callback);\n    }\n  }\n\n  /**\n   * 调用客户端分享图片功能\n   * @param {string} url - 图片 base64 地址\n   */\n  static shareImage(url: string): void {\n    const options = {\n      type: 4,\n      bmpRes: 1,\n      actionKey: 'medal-share',\n      title: '',\n      content: '',\n      bmpUrl: url,\n      innerPlatforms: ['sns'],\n      shareInfo: {\n        mainImageUrl:","infill":" url,\n        meedDefaultQR: false,\n        logoImage","suffix":"\n      }\n    };\n    commonMobile.callNativeHandler(\n      NATIVE_ACTION.HEXIN_SHARE,\n      JSON.stringify(options),\n      () => void 0,\n    );\n  }\n}\n","relevantFile":"","relevantFileList":[],"filePath":"src/utils/methods/share.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" url,","deepseek-chat-lite":" url,","deepseek-chat":"```\n// Start Generation Here\n          synchronizeProtocol(url),\n          thumbnail","copilot":" url,\n        meedDefaultQR: false,\n        logoImage"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/report_search/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/report_search/finance/hot/back/orgid/set',\n};\n\nexport","infill":" const getAdvancedData","suffix":"Api = (params?: Recordable) => {\r\n  return http.get<Advanced>(apis.advanced, params);\r\n};\r\n\r\nexport const getListDataApi = (params: Recordable) => {\r\n  return http.get<ListResponse>(apis.list, params);\r\n};\r\n\r\nexport const editListDataApi = (\r\n  data: Recordable,\r\n  config = {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n    },\r\n  }\r\n) => {\r\n  return http.post<ListItem>(apis.edit, data, config);\r\n};\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(apis.detail, params);\r\n};\r\n\r\nexport const getDefaultInstitutionsApi = () => {\r\n  return http.get<string[]>(apis.defaultInstitutions);\r\n};\r\n\r\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\r\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\r\n    noCancel: true,\r\n  });\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/http/index.ts\n      if (config.noCancel) {\n        const noCancelRequestKey = config.url + '&' + config.method + '&' + (config.key || '');\n        noCancelPendingRequests.set(noCancelRequestKey, cancel);\n      } else {\n        pendingRequests.set(requestKey, cancel);\n      }\n    });\n    return config;\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n  (response: AxiosResponse) => {\n    // 在响应数据之前做些处理\n    const requestKey = response.config.url + '&' + response.config.method;\n    cancelPendingRequest(requestKey); // 取消重复请求\n    return response;\n  },\n  (error: AxiosError) => {\n    // 如果请求被取消，不执行任何操作\n    if (axios.isCancel(error)) {\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport interface Result<T = unknown> {\n  code: number;\n  message?: string | number;\n  subCode?: NumberAndString;\n  data: T;\n  error?: string;\n  [key: string]: any;\n}\n\nexport const http = {\n  get<T = any>(\n    url: string,\n    params?: Recordable,\n    config?: Recordable\n  ): Promise<AxiosResponse<Result<T>>> {\n    return instance.get<T, AxiosResponse<Result<T>>>(url, {\n      params,\n      ...(config || {}),\n    });\n  },\n  post<T = any>(\n    url: string,\n    data?: any,\n    config?: AxiosRequestConfig | Recordable\n  ): Promise<AxiosResponse<Result<T>>> {\n    return instance.post<T, AxiosResponse<Result<T>>>(url, data, config);\n  },\n};\nexport default instance;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: string[]) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi({ orgIds: codes })\n      .then(res => {\n        if (res.data.code === 1) {\n          getDefaultInstitutions();\n          window.$message.success('更新成功');\n        } else {\n          window.$message.error('更新失败');\n        }\n      })\n      .catch(() => {\n        window.$message.error('更新失败');\n      });\n  }\n\n  return {\n    institutions,\n    defaultInstitutions,\n    getAdvancedData,\n    getDefaultInstitutions,\n    updateDefaultInstitutions,\n  };\n});\n\nexport default useAdvancedStore;\n<file_path>src/main/resources/websource/financial_hots/mock/institutions.ts\nexport default [\n  {\n    url: '/standardgwapi/api/report_search/finance/hot/back/orgid/get',\n    method: 'get',\n    timeout: 500,\n    response: () => {\n      return {\n        code: 1,\n        data: [\n          '03130225',\n          '02600837',\n          '03131191',\n          '00075342',\n          '00009270',\n          '03132988',\n          '00214083',\n          '00064572',\n          '00074816',\n          '00090443',\n          '00064581',\n          '01000783',\n          '00061166',\n          '00087985',\n          '00078657',\n          '00067130',\n          '01000686',\n          '00084388',\n          '00077895',\n          '00065987',\n          '03150077',\n          '00083981',\n          '00200958',\n          '00064637',\n          '00081894',\n          '00065220',\n          '00065917',\n          '02600109',\n          '00064654',\n          '00074954',\n          '03131099',\n          '01000728',\n          '00090223',\n          '00084021',\n          '00211882',\n          '00220447',\n          '00086864',\n          '00019923',\n          '01000562',\n          '00054114',\n          '00071906',\n          '00076162',\n          '00064295',\n          '00224216',\n          '00049648',\n          '00046764',\n          '00055115',\n          '00071803',\n          '00086977',\n          '00070797',\n        ],","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  const getAdvancedData<file_sep> /src/api/index.ts","deepseek-chat-lite":" const getAdvanced","deepseek-chat":"```\n// Start Generation Here\nexport const getAdvancedDataApi = (params","copilot":" const getAdvancedData"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\nclass CreationApi extends ApiBase {\n\n  static urlMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // shan\n    remove: '/industry/report/manage/word/delete_batch',\n    reportList: '/industry/report/manage/word/list',\n    rename: '/industry/report/manage/word/rename',\n    export: '","infill":"/industry/export/word',","suffix":"\r\n  };\r\n\r\n  constructor() {\r\n    super(\"/standardgwapi/api\");\r\n  }\r\n\r\n  getCategoryList() {\r\n    const url\r\n  }\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri, params, isExport, prefix) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url, params, stringify = true, sKey = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" /industry/report/manage/word/export',","deepseek-chat-lite":"/industry/report/manage/word/export',","deepseek-chat":"```\n// Start Generation Here\n    export: '/industry/report/manage","copilot":"/industry/export/word',"}},{"prefix":"export interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport ","infill":"interface IUserComment {\r\n  icon: string;\r\n  nickname: string;\r\n  n","suffix":"icknamemultilang: string;\r\n  content: string;\r\n  contentmultilang: string;\r\n  title: string;\r\n  titlemultilang: string;\r\n  grade: string;\r\n  score: number;\r\n}\r\n\r\nexport interface IProductDescribe {\r\n  description: string;\r\n  descriptionmultilang: string;\r\n}\r\n\r\nexport interface IProductInfomation {\r\n  title: string;\r\n  titlemultilang: string;\r\n  icon: string;\r\n  describeList: IProductDescribe[];\r\n  productDescribeUrl: {\r\n    url: string;\r\n  };\r\n  commentList: IUserComment[];\r\n}\r\n\r\nexport interface IProductListConfigProductInfo {\r\n  // sid\r\n  product: string;\r\n  // 产品信息模块\r\n  productInfomation: IProductInfomation;\r\n  // 付费选股模块\r\n  premiumScreener: {};\r\n}\r\n\r\n// 运营中台 - 商品配置显示信息\r\nexport interface GetProductListConfigOfProductInfoProps {\r\n  payProductInfo: IProductListConfigProductInfo[];\r\n}\r\n\r\n// ===============================================================================\r\n\r\n// i18n多语言数据\r\nexport interface IGetI18nDataReq {\r\n  template_name: string[];\r\n  app_id: string;\r\n}\r\n// i18n多语言数据\r\nexport interface IGetI18nDataRes {\r\n  [key: string]: {\r\n    [key: string]: string;\r\n  };\r\n}\r\n\r\n// ===================================================================================\r\n\r\nexport interface IProductInfo {\r\n  goods: {\r\n    sid: string;\r\n    name: string;\r\n    icon: string;\r\n    description: string;\r\n    large_image: string;\r\n    small_white_image: string;\r\n    small_black_image: string;\r\n    description_page: string;\r\n    active_page: string;\r\n    purchase_page: string;\r\n    label: string;\r\n  };\r\n  price: {\r\n    original_price: string;\r\n    current_price: string;\r\n    discount: string;\r\n    discount_value: string;\r\n    renewal_type: string;\r\n    sale_id: string;\r\n  };\r\n  statistics: {\r\n    exposure_count: number;\r\n    subscription_count: number;\r\n  };\r\n}\r\n\r\n// 商品列表信息 - 订阅中心\r\nexport interface IGetProductListRes {\r\n  system_time: number;\r\n  purchase_list: IProductInfo[];\r\n  unpurchased_list: IProductInfo[];\r\n}\r\n\r\n// ===============================================================================\r\n\r\nexport interface IGetCouponByCodeListProps {\r\n  maskCodeList: string[];\r\n}\r\n\r\n// 优惠券领取\r\nexport interface IRedeemCouponByCodeProps {\r\n  maskCode: string;\r\n}\r\n\r\n// 优惠券领取结果\r\nexport enum REDEEM_BY_CODE_TYPE {\r\n  // 成功\r\n  SUCCESS = 'SUCCESS',\r\n  // 掩码数量已用完/不存在\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  // 不允许参与\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  // 奖券不存在\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  // 平台系统限制\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  // 用户ID不存在\r\n  USER_ID_NOT_FOUND = 'USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',\r\n}\r\n","relevantFile":"<file_path>src/request/api.ts\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n\n// ==================================================================================================\n\n// 请求商品列表 - 订阅中心\nexport const getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${EXT_BASE_URL}/od/subscription-center-api/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n<file_path>src/hooks/useCoupon.ts\nexport const useCoupon = () => {\n\n\n  \n};\n支付权限状态","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" interface IGetPayAuthorityStateReq {\r","deepseek-chat-lite":"interface IGetPayAuthorityStateRes {","deepseek-chat":"```\n// Start Generation Here\nexport interface IUserComment {\n  user","copilot":"interface IUserComment {\r\n  icon: string;\r\n  nickname: string;\r\n  n"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  add: ","infill":"prefix + '/report_search/finance/hot/back/event/add',","suffix":"\r\n  advanced: prefix + '/report_search/search/advanced_box',\r\n  defaultInstitutions: prefix + '/report_search/finance/hot/back/orgid/get',\r\n  setDefaultInstitutions: prefix + '/report_search/finance/hot/back/orgid/set',\r\n};\r\n\r\nexport const getAdvancedDataApi = (params?: Recordable) => {\r\n  return http.get<Advanced>(apis.advanced, params);\r\n};\r\n\r\nexport const getListDataApi = (params: Recordable) => {\r\n  return http.get<ListResponse>(apis.list, params);\r\n};\r\n\r\nexport const editListDataApi = (\r\n  data: Recordable,\r\n  config = {\r\n    headers: {\r\n      'content-type': 'application/x-www-form-urlencoded',\r\n    },\r\n  }\r\n) => {\r\n  return http.post<ListItem>(apis.edit, data, config);\r\n};\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(apis.detail, params);\r\n};\r\n\r\nexport const getDefaultInstitutionsApi = () => {\r\n  return http.get<string[]>(apis.defaultInstitutions);\r\n};\r\n\r\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\r\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\r\n    noCancel: true,\r\n  });\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/main.ts\nimport { createApp } from 'vue';\n\nimport pinia from '@/stores/index';\n\nimport App from './App.vue';\n\nimport { Message } from 'thsc-design-vue';\n\nwindow.$message = Message;\n\nconst app = createApp(App);\n\napp.use(pinia);\napp.mount('#app');\n<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: string[]) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi(codes)\n      .then(res => {\n        if (res.data.code === 1) {\n          getDefaultInstitutions();\n          window.$message.success('更新成功');\n        } else {\n          window.$message.error('更新失败');\n        }\n      })\n      .catch(() => {\n        window.$message.error('更新失败');\n      });\n  }\n\n  return {\n    institutions,\n    defaultInstitutions,\n    getAdvancedData,\n    getDefaultInstitutions,\n    updateDefaultInstitutions,\n  };\n});\n\nexport default useAdvancedStore;\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" prefix + '/list/add',","deepseek-chat-lite":"prefix + '/list/add',","deepseek-chat":"```\n// Start Generation Here\n  prefix + '/list/add',\n","copilot":"prefix + '/report_search/finance/hot/back/event/add',"}},{"prefix":"import { http } from './index';\nimport type { ListResponse, ListItem, Advanced } from './response';\n\nconst prefix = '/standardgwapi/api';\nexport const apis = {\n  list: prefix + '/list',\n  edit: prefix + '/list/edit',\n  detail: prefix + '/list/detail',\n  add: prefix + '/report_search/finance/hot/back/event/add',\n  advanced: prefix + '/report_search/search/advanced_box',\n  defaultInstitutions: prefix + '/report_search/finance/hot/back/orgid/get',\n  setDefaultInstitutions: prefix + '/report_search/finance/hot/back/orgid/set',\n};\n\nexport const getAdvancedDataApi = (params?: Recordable) => {\n  return http.get<Advanced>(apis.advanced, params);\n};\n\nexport const getListDataApi = (params: Recordable) => {\n  return http.get<ListResponse>(apis.list, params);\n};\n\nexport const editListDataApi = (data: Recordable) => {\n  return http.post<ListItem>(apis.edit, data, {\n    noCancel: true,\n  });\n};","infill":"export const addListDataApi = (data: Recordable) => {\r\n  return http.post(apis.add, data, {\r\n    noCancel: true,\r\n","suffix":"  }\r\n}\r\n\r\nexport const getDatailDataApi = (params: Recordable) => {\r\n  return http.get<ListItem>(apis.detail, params);\r\n};\r\n\r\nexport const getDefaultInstitutionsApi = () => {\r\n  return http.get<string[]>(apis.defaultInstitutions);\r\n};\r\n\r\nexport const setDefaultInstitutionsApi = (data: Recordable) => {\r\n  return http.post<string[]>(apis.setDefaultInstitutions, data, {\r\n    noCancel: true,\r\n  });\r\n};\r\n","relevantFile":"<file_path>src/main/resources/websource/financial_hots/src/stores/index.ts\nimport { createPinia } from \"pinia\";\n\nconst store = createPinia();\n\nexport default store;\n<file_path>src/main/resources/websource/financial_hots/vite.config.ts\n\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport { vitePluginForArco } from 'thsc-design-vue-tools';\nimport { viteMockServe } from 'vite-plugin-mock';\nfunction configMockplugin(isBuild: boolean) {\n  return viteMockServe({\n    mockPath: 'mock',\n    prodEnabled: false,\n    localEnabled: !isBuild,\n    logger: true,\n  });\n}\n\nconst config = require('./package.json');\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base = isProduction ? '/wifind_gateway/news_job/dist/financial_hots/' : './';\n\nconst cookie =\n  'v=A62aPCNot0lrd1Ol7_cjSaqQvEIkCuHcaz5FsO-y6cSzZsO-t1rxrPuOVYF8; sessionid=1db2a360ae802718717df3cc87938435f; jgbsessid=8949f0ffa46877367e1d6bc91e6ca6a7; THSFT_USERID=zhiyouqiang; u_name=zhiyouqiang; userid=602604572; user=OnpoaXlvdXFpYW5nOjo6Ojo1NCwxMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLDU0NTo6Ojo2MDI2MDQ1NzI6MTcxNjI1NjUwMTo6Ojo4NjQwMDo6MWRiMmEzNjBhZTgwMjcxODcxN2RmM2NjODc5Mzg0MzVmOmRlZmF1bHRfMTE6MA%3D%3D; ticket=7d9e8a8afb0889cf9aab324b8ce19f44; escapename=zhiyouqiang; version=1.10.12.406; securities=0; platform=w; ifindlang=cn; newguidever=2';\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base,\n  build: {\n    outDir: '../../static/dist/financial_hots/',\n  },\n  plugins: [\n    vue(),\n    vitePluginForArco({\n      style: 'css',\n    }),\n    configMockplugin(false),\n  ],\n  resolve: {\n    alias: {\n      '@': fileURLToPath(new URL('./src', import.meta.url)),\n    },\n  },\n  server: {\n    proxy: {\n      '/plugingwapi': {\n        target: 'http://172.19.80.62',\n        headers: {\n          cookie,\n        },\n      },\n      '/news_job': {\n        target: 'http://10.0.16.64:20805/',\n        headers: {\n          cookie,\n        },\n      },\n      '/standardgwapi': {\n        target: 'http://172.19.80.62',\n        headers: {\n          cookie,\n        },\n      },\n    },\n  },\n<file_path>src/main/resources/websource/financial_hots/src/http/response.ts\nexport type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: 0 | 1;\n  status: 0 | 1 | 2;\n  isvalid: 0 | 1;\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    content: {\n      text: string;\n      seq: number;\n    }[];\n  }[];\n};\n\nexport type ListItem = {\n  event: EventItem;\n  views: ViewItem[];\n};\n\nexport type ListResponse = {\n  total: number;\n  list: ListItem[];\n};\n\nexport type InstitutionItem = {\n  name: string;\n  code: string;\n  pyName: string;\n};\n\nexport type Advanced = {\n  common_selector: {\n    institutions: InstitutionItem[];\n  };\n};\n<file_path>src/main/resources/websource/financial_hots/src/stores/advanced.ts\nimport { defineStore } from 'pinia';\nimport { shallowRef, ref } from 'vue';\nimport {\n  getAdvancedDataApi,\n  getDefaultInstitutionsApi,\n  setDefaultInstitutionsApi,\n} from '@/http/request';\nimport type { InstitutionItem } from '@/http/response';\nconst useAdvancedStore = defineStore('advanced', () => {\n  const institutions = shallowRef<InstitutionItem[]>([]);\n\n  function getAdvancedData() {\n    getAdvancedDataApi().then(res => {\n      if (res.data.code === 1 && res.data.data && res.data.data.common_selector) {\n        institutions.value = res.data.data.common_selector.institutions || [];\n      }\n    });\n  }\n\n  const defaultInstitutions = ref<string[]>([]);\n\n  function getDefaultInstitutions() {\n    getDefaultInstitutionsApi().then(res => {\n      if (res.data.code === 1) {\n        defaultInstitutions.value = res.data.data || [];\n      }\n    });\n  }\n\n  function updateDefaultInstitutions(codes: string[]) {\n    defaultInstitutions.value = codes;\n    setDefaultInstitutionsApi(codes)\n      .then(res => {\n        if (res.data.code === 1) {\n          getDefaultInstitutions();\n          window.$message.success('更新成功');\n        } else {\n          window.$message.error('更新失败');\n        }\n      })\n      .catch(() => {\n        window.$message.error('更新失败');\n      });\n  }\n\n  return {\n    institutions,\n    defaultInstitutions,\n    getAdvancedData,\n    getDefaultInstitutions,\n    updateDefaultInstitutions,\n  };\n});\n\nexport default useAdvancedStore;","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\nexport const addEventApi = (data:","copilot":"export const addListDataApi = (data: Recordable) => {\r\n  return http.post(apis.add, data, {\r\n    noCancel: true,\r\n"}},{"prefix":"import { DealData, OffshoreQuotationData } from '@/types/apiResponse';\nimport { Compare } from '@/types/enums';\nimport { defineStore } from 'pinia';\nimport { Order } from 'thsc-ifind-bond-components/lib/StkTable/types';\nimport { QuickFilterDeal, QuickFilterItem, QuickFilterQuote } from './QuickFilter/type';\nimport { TableMode, TableTypeTab } from './enums';\nimport { isDealData } from './utils';\nimport { useScroll } from '@vueuse/core';\nimport { ref } from 'vue';\n\nexport function getDefaultQuickFilterItem(): QuickFilterItem {\n  return { selected: false, operator: Compare.GtEq, value: '0' };\n}\n/** 主要表格（实时成交，离岸报价）共享状态*/\nexport const useMainGridStore = defineStore('mainGrid', {\n  state: () => ({\n    /** 是否正在滚动，用于优化滚动加载性能。滚动时不加载走势图。 */\n    isScrolling: ref(false),\n    /** 当前选中的行 */\n    currentRow: null as OffshoreQuotationData | DealData | null,\n    /** 实时成交or离岸报价 */\n    currentTableType: TableTypeTab.Quote as TableTypeTab,\n    /** 只看有行情债券 */\n    onlyQuotes: true,\n    /** 表格模式，简易，列表 */\n    currentTableMode: TableMode.Easy,\n    /**快速筛选内容 */\n    quickFilter: {\n      [TableTypeTab.Deal]: {\n        yield: getDefaultQuickFilterItem(),\n        yieldCb: getDefaultQuickFilterItem(),\n        yieldPreClose: getDefaultQuickFilterItem(),\n        netPrice: getDefaultQuickFilterItem(),\n        netPriceCb: getDefaultQuickFilterItem(),\n        netPricePreClose: getDefaultQuickFilterItem(),\n      } as QuickFilterDeal,\n      [TableTypeTab.Quote]: {\n        yield: getDefaultQuickFilterItem(),\n        yieldIhs: getDefaultQuickFilterItem(),\n        yieldPreClose: getDefaultQuickFilterItem(),\n        netPrice: getDefaultQuickFilterItem(),\n        netPriceIhs: getDefaultQuickFilterItem(),\n        netPricePreClose: getDefaultQuickFilterItem(),\n      } as QuickFilterQuote,\n    } satisfies Record<TableTypeTab, Record<string, QuickFilterItem>>,\n    /** 表格排序状态 */\n    sortState: {\n      [TableTypeTab.Deal]: {\n        sortField: 'dateTime',\n        order: 'desc',\n      },\n      [TableTypeTab.Quote]: {\n        sortField: 'dateTime',\n        order: 'desc',\n      },\n    } as Record<TableTypeTab, { sortField: string; order: Order }>,\n  }),\n  getters: {\n    /** 当前选中的thsCode */\n    currentThsCode(): string | null | undefined {\n      if (isDealData(this.currentRow)) {\n        return this.currentRow?.thsCode;\n      }\n    },\n    /** 获取当前的快速筛选 */\n    currentQuickFilter(state): QuickFilterDeal | QuickFilterQuote {\n      return state.quickFilter[state.currentTableType];\n    },\n    /** 当前表格排序状态 */\n    currentSortState(state) {\n      return state.sortState[state.currentTableType];\n    },\n  },\n  actions: {\n    /** 更新当前的快速筛选 */\n    updateQuickFilter(filter: QuickFilterDeal | QuickFilterQuote) {\n      const filterState = this.currentQuickFilter;\n      for (const key in filterState) {\n        if (Object.prototype.hasOwnProperty.call(filterState, key)) {\n          (filterState as any)[key] = (filter as any)[key];\n        } else {\n          console.warn('key not found in quickFilter state');\n        }\n      }\n    },\n    listenIsScrolling(el:HTMLElement){\n      if(!el){\n        return\n      }\n      const {isScrolling} = useScroll(el)\n      this.isScrolling","infill":" = isScrolling;","suffix":"\r\n\r\n    }\r\n  },\r\n});\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/App/MainGrid/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" =isScrolling\r","deepseek-chat-lite":" = isScrolling","deepseek-chat":"```\n// Start Generation Here\n      isScrolling.value = true;","copilot":" = isScrolling;"}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: '0' | '1';\n  status: '0' | '1' | '2';\n  isvalid: '0' | '1';\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    institutionId: string;\n    institutionName: string;\n    content: {\n      text: string;\n      seq: number;\n      pos: number[];\n      real_pos: ","infill":"number[];","suffix":"\r\n    }[];\r\n  }[];\r\n};\r\n\r\nexport type ListItem = {\r\n  event: EventItem;\r\n  views: ViewItem[];\r\n};\r\n\r\nexport type ListResponse = {\r\n  total: number;\r\n  list: ListItem[];\r\n};\r\n\r\nexport type InstitutionItem = {\r\n  name: string;\r\n  code: string;\r\n  pyName: string;\r\n};\r\n\r\nexport type Advanced = {\r\n  common_selector: {\r\n    institutions: InstitutionItem[];\r\n  };\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" number[];\r","deepseek-chat-lite":"number[];\r","deepseek-chat":"```\n// Start Generation Here\n      {\n        x: number;\n","copilot":"number[];"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl","infill":"(CreationApi.uriMap.reportList);\r\n    return this.commonPost(url, params)","suffix":"\r\n  }\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url: string, params?: any, stringify: boolean = true, sKey: string = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"(CreationApi.uriMap.reportList);\r","deepseek-chat-lite":"(CreationApi.uriMap.reportList);","deepseek-chat":"```\n// Start Generation Here\n(CreationApi.uriMap.reportList","copilot":"(CreationApi.uriMap.reportList);\r\n    return this.commonPost(url, params)"}},{"prefix":"import axios from 'axios';\nconst instance = axios.create({});\nconst SUCCESS_CODE = 200;\nconst DEFAULT_TIMEOUT = 50000;\nexport const qs = {\n  stringify(data) {\n    const keys = Object.keys(data);\n    const sp = new URLSearchParams();\n    keys.forEach(\n      key => ![undefined, null].includes(data[key]) && sp.set(key, data[key])\n    );\n    return sp.toString();\n  },\n};\nexport const requestGet = (url, config = {}) => {\n  return instance.get(url, config).then(res => {\n    if (res.status === SUCCESS_CODE) {\n      return res.data;\n    } else {\n      throw new Error(`${res.statusText}`);\n    }\n  });\n};\nexport const requestPost = (url, data, config = {}, strngify = true) => {\n  return instance\n    .post(url, strngify ? qs.stringify(data) : data, {\n      headers: strngify\n        ? {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          }\n        : {},\n      ...config,\n    })\n    .then(res => {\n      if (res.status === SUCCESS_CODE) {\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url: string, params?: any, stringify: boolean = true, sKey: string = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n        params,\n        {\n          cancelToken: source.token,\n          timeout,\n          headers: {},\n        },\n        stringify\n      )\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n  commonGet<T>(url: string, sKey?: string, noCancel?:boolean): Promise","infill":"<T>","suffix":" {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Get');\n    if (!noCancel) {\n      this.cancelRequest(sourceKey);\n    }\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestGet(url, {\n        timeout,\n        cancelToken: source.token,\n      })\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n}\n","relevantFile":"<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/api/creation.ts\nimport ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet<{}>(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    return this.commonPost(url, params);\n  }\n}\n\nexport default new CreationApi();\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};","relevantFileList":[],"filePath":"source/fund-writing-platform/src/http/apiBase.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"<T> ","deepseek-chat-lite":"<T>","deepseek-chat":"```\n// Start Generation Here\n  commonGet<T>(url: string","copilot":"<T>"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\ntype CateGoryType = {\n  category: string,\n  value: string,\n};\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet<CateGoryType[]>(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    return this.commonPost(url, params);\n  }\n\n  removeReport(ids: ","infill":"string[]) {\r\n    const url = this.generateUrl(CreationApi.uriMap.remove);\r\n    return this.commonPost<(url, { ids });\r\n","suffix":"  }\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost<T>(url: string, params?: any, stringify: boolean = true, sKey: string = ''): Promise<T> {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" string[]) {\r","deepseek-chat-lite":"string[]) {","deepseek-chat":"```\n// Start Generation Here\nstring[]) {\n    const url = this","copilot":"string[]) {\r\n    const url = this.generateUrl(CreationApi.uriMap.remove);\r\n    return this.commonPost<(url, { ids });\r\n"}},{"prefix":"import { getCouponListByCodeList } from '@/request/api';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  async function queryData() {\n    try {\n      const res = await getCouponListByCodeList(","infill":"{ maskCodeList: couponCodeList }","suffix":");\r\n      console.log('res', res);\r\n    } catch (err) {}\r\n  }\r\n};\r\n","relevantFile":"<file_path>src/request/interface.ts\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\nexport interface IGetI18nDataReq {\n<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"couponCodeList);","deepseek-chat-lite":"couponCodeList);","deepseek-chat":"```\n// Start Generation Here\n        {\n          codeList: couponCode","copilot":"{ maskCodeList: couponCodeList }"}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  \n\n  async function queryData() {\n    // loading\n    queryState.value ","infill":"= QUERY_STATE.LOADING;","suffix":"\r\n    try {\r\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList });\r\n      window.console.log('getCouponListByCodeList res', res);\r\n      // loading\r\n      queryState.value = QUERY_STATE.SUCCESS;\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n    discount: string;\n    discount_value: string;\n    renewal_type: string;\n    sale_id: string;\n  };\n  statistics: {\n    exposure_count: number;\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  maskCodeList: string[];\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" = QUERY_STATE.LOADING;\r","deepseek-chat-lite":"= QUERY_STATE.LOADING;","deepseek-chat":"```\n// Start Generation Here\n    = QUERY_STATE.LOADING;","copilot":"= QUERY_STATE.LOADING;"}},{"prefix":"import axios from 'axios';\nconst instance = axios.create({});\nconst SUCCESS_CODE = 200;\nconst DEFAULT_TIMEOUT = 50000;\nexport const qs = {\n  stringify(data) {\n    const keys = Object.keys(data);\n    const sp = new URLSearchParams();\n    keys.forEach(\n      key => ![undefined, null].includes(data[key]) && sp.set(key, data[key])\n    );\n    return sp.toString();\n  },\n};\nexport const requestGet = (url, config = {}) => {\n  return instance.get(url, config).then(res => {\n    if (res.status === SUCCESS_CODE) {\n      return res.data;\n    } else {\n      throw new Error(`${res.statusText}`);\n    }\n  });\n};\nexport const requestPost = (url, data, config = {}, strngify = true) => {\n  return instance\n    .post(url, strngify ? qs.stringify(data) : data, {\n      headers: strngify\n        ? {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          }\n        : {},\n      ...config,\n    })\n    .then(res => {\n      if (res.status === SUCCESS_CODE) {\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost<T>(url: string, params?: any, stringify: boolean = true, sKey: string = ''): Promise<T> {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n        params,\n        {\n          cancelToken: source.token,\n          timeout,\n          headers: {},\n        },\n        stringify\n      )\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data as T);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n  commonGet<T>(url: string, sKey?: string, noCancel?:boolean): Promise<T> {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Get');\n    if (!noCancel) {\n      this.cancelRequest(sourceKey);\n    }\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestGet(url, {\n        timeout,\n        cancelToken: source.token,\n      })\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data as T);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n\n  clientDownload(url: string, filename: string) {\n    const encodeFilename","infill":" = window.encodeURIComponent(filename);","suffix":"\n    const downloadUrl = `ifind://!command=down&ifindCheckUrl=no&filename=${encodeFilename}&url=${url}`;\n    window.location.href = downloadUrl;\n}\n","relevantFile":"<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/api/creation.ts\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\ntype CateGoryType = {\n  category: string,\n  value: string,\n};\n\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet<CateGoryType[]>(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    return this.commonPost(url, params);\n  }\n\n  removeReport(ids: string[]) {\n    const url = this.generateUrl(CreationApi.uriMap.remove);\n    return this.commonPost<boolean>(url, { ids });\n  }\n\n  renameReport(params: { id: string, title: string }) {\n    const url = this.generateUrl(CreationApi.uriMap.rename);\n    return this.commonPost(url, params);\n  }\n\n  exportReport(seq: string, filename: string) {\n    const url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\n    const \n    const downloadUrl = `ifind://!command=down&ifindCheckUrl=no&filename=${encodeFilename}&url=${url}`;\n  }\n\n  \n}\n\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};","relevantFileList":[],"filePath":"source/fund-writing-platform/src/http/apiBase.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" =encodeURIComponent(filename);","deepseek-chat-lite":" = encodeURIComponent(filename);","deepseek-chat":"```\n// Start Generation Here\n    const encodeFilename = encodeURIComponent(filename","copilot":" = window.encodeURIComponent(filename);"}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ICouponItem } from '@/request/interface';\nimport { ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // \n  const 当前\n\n  async function queryData() {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList });\n      window.console.log('getCouponListByCodeList res', res);\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n      couponListRef.value","infill":" = res;","suffix":"\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n\r\n  return {\r\n    couponListRef,\r\n    queryData,\r\n    queryState,\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n    discount: string;\n    discount_value: string;\n    renewal_type: string;\n    sale_id: string;\n  };\n  statistics: {\n    exposure_count: number;\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  maskCodeList: string[];\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" =res.data.data.couponList;","deepseek-chat-lite":" = res.data;","deepseek-chat":"```\n// Start Generation Here\n      couponListRef.value = res.","copilot":" = res;"}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ICouponItem } from '@/request/interface';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  //\n  const currSystemCouponList = computed(() =>\n    couponListRef","infill":".value.filter(item => item.availableSystem === 'INIT')\r\n  );\r\n\r\n  // 查询数据","suffix":"\r\n  async function queryData() {\r\n    // loading\r\n    queryState.value = QUERY_STATE.LOADING;\r\n    try {\r\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList });\r\n      window.console.log('getCouponListByCodeList res', res);\r\n      // loading\r\n      queryState.value = QUERY_STATE.SUCCESS;\r\n      couponListRef.value = res;\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n\r\n  return {\r\n    couponListRef,\r\n    queryData,\r\n    queryState,\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  maskCodeList: string[];\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;\n  // 订单id\n  orderId: string;\n  // sid\n  sid: SID_TYPE;\n  // 商品续费周期\n  sidTimeType: SID_TIME_TYPE;\n  // 优惠券所属平台","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" .value.filter((item) => item.couponType === 'SYSTEM'),\r","deepseek-chat-lite":".value.filter((item) => item.type === 'system')","deepseek-chat":"```\n// Start Generation Here\n      .value.filter(coupon =>","copilot":".value.filter(item => item.availableSystem === 'INIT')\r\n  );\r\n\r\n  // 查询数据"}},{"prefix":"import { SID_TYPE } from '@/config/constant';\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\nexport interface IGetI18nDataReq {\n  template_name: string[];\n  app_id: string;\n}\n// i18n多语言数据\nexport interface IGetI18nDataRes {\n  [key: string]: {\n    [key: string]: string;\n  };\n}\n\n// ===================================================================================\n\nexport interface IProductInfo {\n  goods: {\n    sid: string;\n    name: string;\n    icon: string;\n    description: string;\n    large_image: string;\n    small_white_image: string;\n    small_black_image: string;\n    description_page: string;\n    active_page: string;\n    purchase_page: string;\n    label: string;\n  };\n  price: {\n    original_price: string;\n    current_price: string;\n    discount: string;\n    discount_value: string;\n    renewal_type: string;\n    sale_id: string;\n  };\n  statistics: {\n    exposure_count: number;\n    subscription_count: number;\n  };\n}\n\n// 商品列表信息 - 订阅中心\nexport interface IGetProductListRes {\n  system_time: number;\n  purchase_list: IProductInfo[];\n  unpurchased_list: IProductInfo[];\n}\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  // 逗号隔开\n  maskCodeList: string;\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum COUPON_SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n//\nexport enum COUPON_BUNDLE_NAME {\n  STOCK_SCREENER = 'STOCK_SCREENER',\n  AINVEST ","infill":"= 'AINVEST',\r\n  PENNY_STOCKS = 'PENNY_STOCKS',\r\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',","suffix":"\r\n}\r\n\r\n// 优惠券item数据\r\nexport interface ICouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间（即使用截止时间）\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE;\r\n  // 订单id\r\n  orderId: string;\r\n  // sid\r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: COUPON_SID_TIME_TYPE;\r\n  // 优惠券所属平台\r\n  availableSystem: 'ios' | 'android';\r\n  // 优惠券所属包\r\n  availableAppName: 'STOCK_SCREENER' | 'AINVEST' | 'PENNY_STOCKS' | 'STOCK_SIMULATOR';\r\n  // 掩码\r\n  maskCode: string;\r\n  // 三方平台地址\r\n  tripartiteUrl: string;\r\n}\r\n\r\nexport interface IGetCouponByCodeListRes {\r\n  maskCodeList: string[];\r\n}\r\n\r\n// 优惠券领取\r\nexport interface IRedeemCouponByCodeProps {\r\n  maskCode: string;\r\n}\r\n\r\n// 优惠券领取结果\r\nexport enum REDEEM_BY_CODE_TYPE {\r\n  // 成功\r\n  SUCCESS = 'SUCCESS',\r\n  // 掩码数量已用完/不存在\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  // 不允许参与\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  // 奖券不存在\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  // 平台系统限制\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  // 用户ID不存在\r\n  USER_ID_NOT_FOUND = 'USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',\r\n}\r\n","relevantFile":"<file_path>src/request/api.ts\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n\n// ==================================================================================================\n\n// 请求商品列表 - 订阅中心\nexport const getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${EXT_BASE_URL}/od/subscription-center-api/goods/list`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n      // Cookie: 'userid=1000000695;sessionid=163139c43ec3a27463f21cf458f7715a0',\n      // 'X-Auth-Type': 'ths',\n      // 'X-Auth-Version': '1.0',\n      // 'X-Auth-Udid': 'a4d6e3e4-3445-4e1e-af72-72bb2cae89e8',\n      // 'X-Auth-ProgId': '6666',\n      // platform: 'ios',\n      // 'Accept-Language': 'zh',\n    },\n    noEncrypt: true,\n    transmissionToNative: {\n      gateway: 'gms',\n    },\n  });\n\n// =================================================================================================\n\n// 优惠券查询 - 通过券码列表\nexport const getCouponListByCodeList = (data: IGetCouponByCodeListProps) => {\n  return customFetchAdapter<ICouponItem[]>({\n    url: `${BASE_URL}/gw/socialcenter/v1/activity/queryRewardByCodeList`,\n    method: 'get',\n    data,\n    headers: {\n      userId: '1000000695',\n    },\n  });\n};\n\n// 优惠券领取 - 券码兑换\nexport const redeemCouponByCode = (data: IRedeemCouponByCodeProps) => {\n  return customFetchAdapter<REDEEM_BY_CODE_TYPE>({\n    url: `${BASE_URL}/gw/socialcenter/v1/activity/redeemByCode`,\n    method: 'post',\n<file_path>src/hooks/useCoupon.ts\nimport { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { ICouponItem } from '@/request/interface';\nimport { checkIsIOS } from '@/utils/localUtils';\nimport { BUNDLE_NAME_TYPE, getBundleNameLowerCase } from '@overseafront/utils';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // 当前平台\n  const currSystem = checkIsIOS() ? 'ios' : 'android';\n\n  // \n  const currBundleName = getBundleNameLowerCase();\n\n  const bundleNameMap = {\n    [BUNDLE_NAME_TYPE.AINVEST]: COU\n  }\n\n  const currBundleNameParam = \n\n  // 当前系统的优惠券列表\n  const currSystemCouponList = computed(() =>\n    couponListRef.value.filter(item => item.availableSystem === currSystem)\n  );\n\n  // 查询数据\n  async function queryData() {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList.toString() });\n      window.console.log('getCouponListByCodeList res', res);\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n      couponListRef.value = res;\n    } catch (err) {\n      window.console.log('getCouponListByCodeList err', err);\n      // loading\n      queryState.value = QUERY_STATE.FAIL;\n    }\n  }\n\n  return {\n    couponListRef,\n    queryData,\n    queryState,\n    currSystemCouponList,\n  };\n};","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"= 'AINVEST',\r","deepseek-chat-lite":"= 'AINVEST',","deepseek-chat":"```\n// Start Generation Here\n  PENNY_STOCKS = 'P","copilot":"= 'AINVEST',\r\n  PENNY_STOCKS = 'PENNY_STOCKS',\r\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',"}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { COUPON_BUNDLE_NAME, ICouponItem } from '@/request/interface';\nimport { checkIsIOS } from '@/utils/localUtils';\nimport { BUNDLE_NAME_TYPE, getBundleNameLowerCase } from '@overseafront/utils';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // 当前平台\n  const currSystem = checkIsIOS() ? 'ios' : 'android';\n\n  // \n  const currBundleName = getBundleNameLowerCase();\n\n  const bundleNameMap = {\n    [BUNDLE_NAME_TYPE.AINVEST]: COUPON_BUNDLE_NAME.AINVEST,\n    [BUNDLE_NAME_TYPE.SCREENER]: COUPON_BUNDLE_NAME.STOCK_SCREENER","infill":",\r\n    [BUNDLE_NAME_TYPE.PENNY]: COUPON_BUNDLE_NAME.PENNY_STOCKS,\r\n    [BUNDLE_NAME_TYPE.SIMULATOR]: COUPON_BUNDLE_NAME.STOCK_SIMULATOR,","suffix":"\r\n  }\r\n\r\n  const currBundleNameParam = \r\n\r\n  // 当前系统的优惠券列表\r\n  const currSystemCouponList = computed(() =>\r\n    couponListRef.value.filter(item => item.availableSystem === currSystem)\r\n  );\r\n\r\n  // 查询数据\r\n  async function queryData() {\r\n    // loading\r\n    queryState.value = QUERY_STATE.LOADING;\r\n    try {\r\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList.toString() });\r\n      window.console.log('getCouponListByCodeList res', res);\r\n      // loading\r\n      queryState.value = QUERY_STATE.SUCCESS;\r\n      couponListRef.value = res;\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n\r\n  return {\r\n    couponListRef,\r\n    queryData,\r\n    queryState,\r\n    currSystemCouponList,\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n\n// ===============================================================================\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  // 逗号隔开\n  maskCodeList: string;\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum COUPON_SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券包类型\nexport enum COUPON_BUNDLE_NAME {\n  STOCK_SCREENER = 'STOCK_SCREENER',\n  AINVEST = 'AINVEST',\n  PENNY_STOCKS = 'PENNY_STOCKS',\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;\n  // 订单id\n  orderId: string;\n  // sid\n  sid: SID_TYPE;\n  // 商品续费周期\n  sidTimeType: COUPON_SID_TIME_TYPE;\n  // 优惠券所属平台\n  availableSystem: 'ios' | 'android';","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ,","deepseek-chat-lite":",","deepseek-chat":"```\n// Start Generation Here\n    [BUNDLE_NAME_TYPE","copilot":",\r\n    [BUNDLE_NAME_TYPE.PENNY]: COUPON_BUNDLE_NAME.PENNY_STOCKS,\r\n    [BUNDLE_NAME_TYPE.SIMULATOR]: COUPON_BUNDLE_NAME.STOCK_SIMULATOR,"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\nconst isDev = process.env.NODE_ENV === '","infill":"development';","suffix":"\r\nclass CreationApi extends ApiBase {\r\n\r\n  static uriMap = {\r\n    // 报告类型\r\n    categoryList: \"/industry/report/manage/category/list_by_user\",\r\n    // 批量删除\r\n    remove: '/industry/report/manage/word/delete_batch',\r\n    // 报告文件列表\r\n    reportList: '/industry/report/manage/word/list',\r\n    // 重命名\r\n    rename: '/industry/report/manage/word/rename',\r\n    // 导出文档\r\n    export: '/industry/export/word',\r\n  };\r\n\r\n  constructor() {\r\n    super(\"/standardgwapi/api\");\r\n  }\r\n\r\n  getCategoryList() {\r\n    if (isDev) {\r\n      return Promise.resolve([\r\n        {\r\n          \r\n        }\r\n      ]);\r\n    }\r\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\r\n    return this.commonGet(url);\r\n  }\r\n\r\n  getReportList(params: ReportParams) {\r\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\r\n    return this.commonPost(url, params).then(res => {\r\n      const { data } = res as { data: object[] };\r\n      return {\r\n        list: data || [],\r\n        total: data?.length || 0,\r\n      }\r\n    });\r\n  }\r\n\r\n  removeReport(ids: string[]) {\r\n    const url = this.generateUrl(CreationApi.uriMap.remove);\r\n    return this.commonPost(url, { ids });\r\n  }\r\n\r\n  renameReport(params: { id: string, title: string }) {\r\n    const url = this.generateUrl(CreationApi.uriMap.rename);\r\n    return this.commonPost(url, params);\r\n  }\r\n\r\n  exportReport(seq: string, filename: string) {\r\n    const url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\r\n    this.clientDownload(url, filename);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url: string, params?: any, stringify: boolean = true, sKey: string = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"development';\r","deepseek-chat-lite":"development';","deepseek-chat":"```\n// Start Generation Here\nconst isDev = process.env.NODE","copilot":"development';"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\nconst isDev = process.env.NODE_ENV === 'development';\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    if (isDev) {\n      return ","infill":"Promise.resolve([\r\n        {\r\n          category: ''\r\n        }\r\n      ]);","suffix":"\r\n    }\r\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\r\n    return this.commonGet(url);\r\n  }\r\n\r\n  getReportList(params: ReportParams) {\r\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\r\n    return this.commonPost(url, params).then(res => {\r\n      const { data } = res as { data: object[] };\r\n      return {\r\n        list: data || [],\r\n        total: data?.length || 0,\r\n      }\r\n    });\r\n  }\r\n\r\n  removeReport(ids: string[]) {\r\n    const url = this.generateUrl(CreationApi.uriMap.remove);\r\n    return this.commonPost(url, { ids });\r\n  }\r\n\r\n  renameReport(params: { id: string, title: string }) {\r\n    const url = this.generateUrl(CreationApi.uriMap.rename);\r\n    return this.commonPost(url, params);\r\n  }\r\n\r\n  exportReport(seq: string, filename: string) {\r\n    const url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\r\n    this.clientDownload(url, filename);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url: string, params?: any, stringify: boolean = true, sKey: string = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/assets/constants/index.ts\n];\n\nexport const VIEW_BUTTON_GROUP = [\n  {\n    icon: \"list\",\n    key: \"0\",\n  },\n  {\n    icon: \"view\",\n    key: \"1\",\n  },\n];\n\nexport const MATERIAL_FILTER_ALL = \"all\";\n\nexport const MATERIAL_FILTER_WORD = \"word\";\n\nexport const MATERIAL_FILTER_PDF = \"pdf\";\n\nexport const MATERIAL_FILTER_IMG = \"img\";\n\nexport const MATERIAL_TREE_DATA = [\n  {\n    title: window.$t(\"全部类型\"),\n    key: MATERIAL_FILTER_ALL,\n    children: [\n      {\n        title: window.$t(\"Word文档\"),\n        key: MATERIAL_FILTER_WORD,\n      },\n      {\n        title: window.$t(\"PDF文档\"),\n        key: MATERIAL_FILTER_PDF,\n      },\n      {\n        title: window.$t(\"图片\"),\n        key: MATERIAL_FILTER_IMG,\n      },\n    ],\n  },\n];\n\nexport const MATERIAL_ACTION_SHEET = [\n  {\n    icon: \"open\",\n    label: window.$t(\"打开\"),\n    key: ACTION_KEY_OPEN,\n  },\n  {\n    icon: \"edit\",\n    label: window.$t(\"重命名\"),\n    key: ACTION_KEY_RENAME,\n  },\n  {\n    icon: \"export-word\",\n    label: window.$t(\"导出文档\"),\n    key: ACTION_KEY_EXPORT_WORD,\n  },\n  {\n    icon: \"delete\",\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" {\r","deepseek-chat-lite":"this.mockGetCategoryList();","deepseek-chat":"```\n// Start Generation Here\n      return new Promise((resolve, reject)","copilot":"Promise.resolve([\r\n        {\r\n          category: ''\r\n        }\r\n      ]);"}},{"prefix":"import ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\nconst isDev = process.env.NODE_ENV === 'development';\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    if (isDev) {\n      return Promise.resolve([\n        {\n          category: '银行授信报告',\n          value: '银行授信报告',\n        }\n      ]);\n    }\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    if (isDev) {\n      return this.commonGet(url).then(res => {\n        const data = res as ","infill":"any[];","suffix":"\r\n        return {\r\n          list: data || [],\r\n          total: data?.length || 0,\r\n        }\r\n      });\r\n    }\r\n    return this.commonPost(url, params);\r\n  }\r\n\r\n  removeReport(ids: string[]) {\r\n    const url = this.generateUrl(CreationApi.uriMap.remove);\r\n    return this.commonPost(url, { ids });\r\n  }\r\n\r\n  renameReport(params: { id: string, title: string }) {\r\n    const url = this.generateUrl(CreationApi.uriMap.rename);\r\n    return this.commonPost(url, params);\r\n  }\r\n\r\n  exportReport(seq: string, filename: string) {\r\n    const url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\r\n    this.clientDownload(url, filename);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/vite.config.dev.ts\nimport { defineConfig } from \"vite\";\n\nexport default defineConfig({\n  server: {\n    open: true,\n    proxy: {\n      \"/standardgwstatic\": {\n        target: \"http://testft.10jqka.com.cn\",\n        changeOrigin: true,\n      },\n      \"/standardgwapi\": {\n        target: \"http://testft.10jqka.com.cn\",\n        changeOrigin: true,\n      },\n    },\n  },\n});\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url: string, params?: any, stringify: boolean = true, sKey: string = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestPost(\n        url,\n        params,\n        {\n          cancelToken: source.token,\n          timeout,\n          headers: {},\n        },\n        stringify\n      )\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data);\n        })\n        .catch(err => {\n          if (!err || err.message !== 'canceled') {\n            sourceMap[sourceKey] = null;\n            reject(err);\n          }\n        });\n    });\n  }\n  commonGet(url: string, sKey?: string, noCancel?:boolean) {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Get');\n    if (!noCancel) {\n      this.cancelRequest(sourceKey);\n    }\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {\n      requestGet(url, {\n        timeout,\n        cancelToken: source.token,\n      })\n        .then(res => {\n          sourceMap[sourceKey] = null;\n          resolve(res.data);\n        })\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" any;","deepseek-chat-lite":"any;\r","deepseek-chat":"```\n// Start Generation Here\n        {\n          id: '1',","copilot":"any[];"}},{"prefix":"import { QUERY_STATE } from '@/config/interface';\nimport { getCouponListByCodeList } from '@/request/api';\nimport { COUPON_BUNDLE_NAME, ICouponItem } from '@/request/interface';\nimport { checkIsIOS } from '@/utils/localUtils';\nimport { BUNDLE_NAME_TYPE, getBundleNameLowerCase } from '@overseafront/utils';\nimport { computed, ref } from 'vue';\n\nexport const useCoupon = (couponCodeList: string[]) => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 查询到的优惠券列表\n  const couponListRef = ref<ICouponItem[]>([]);\n\n  // 当前平台\n  const currSystem = checkIsIOS() ? 'ios' : 'android';\n\n  // 当前包\n  const currBundleName = getBundleNameLowerCase();\n\n  const bundleNameMap = {\n    [BUNDLE_NAME_TYPE.AINVEST]: COUPON_BUNDLE_NAME.AINVEST,\n    [BUNDLE_NAME_TYPE.SCREENER]: COUPON_BUNDLE_NAME.STOCK_SCREENER,\n    [BUNDLE_NAME_TYPE.PENNY]: COUPON_BUNDLE_NAME.PENNY_STOCKS,\n    [BUNDLE_NAME_TYPE.SIMULATOR]: COUPON_BUNDLE_NAME.STOCK_SIMULATOR,\n  };\n\n  // 当前系统/APP的优惠券列表\n  const currSystemAndAppCouponList = computed(() =>\n    couponListRef.value.filter(\n      item =>\n        item.availableSystem === currSystem &&\n        item.availableAppName === bundleNameMap[","infill":"currBundleName","suffix":"]\r\n    )\r\n  );\r\n\r\n  // 查询数据\r\n  async function queryData() {\r\n    // loading\r\n    queryState.value = QUERY_STATE.LOADING;\r\n    try {\r\n      const res = await getCouponListByCodeList({ maskCodeList: couponCodeList.toString() });\r\n      window.console.log('getCouponListByCodeList res', res);\r\n      // loading\r\n      queryState.value = QUERY_STATE.SUCCESS;\r\n      couponListRef.value = res;\r\n    } catch (err) {\r\n      window.console.log('getCouponListByCodeList err', err);\r\n      // loading\r\n      queryState.value = QUERY_STATE.FAIL;\r\n    }\r\n  }\r\n\r\n  return {\r\n    couponListRef,\r\n    queryData,\r\n    queryState,\r\n    currSystemAndAppCouponList,\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetI18nDataRes,\n  IGetProductListRes,\n  IGetCouponByCodeListProps,\n  ICouponItem,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情接口\nconst EXT_BASE_URL = IS_PRO ? '//extquota.ainvest.com' : BASE_URL;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/request/interface.ts\n// 查询优惠券信息\nexport interface IGetCouponByCodeListProps {\n  // 逗号隔开\n  maskCodeList: string;\n}\n\n// 优惠券状态\nexport enum COUPON_STATE {\n  // 已领取-未兑换\n  INIT = 'INIT',\n  // 已兑换-未使用\n  CLAIMING = 'CLAIMING',\n  // 已过期\n  EXPIRED = 'EXPIRED',\n  // 已核销\n  DISTRIBUTED = 'DISTRIBUTED',\n}\n\n// 商品周期\nexport enum COUPON_SID_TIME_TYPE {\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  SEMI_YEAR = 'SEMI_YEAR',\n  YEAR = 'YEAR',\n}\n\n// 优惠券包类型\nexport enum COUPON_BUNDLE_NAME {\n  STOCK_SCREENER = 'STOCK_SCREENER',\n  AINVEST = 'AINVEST',\n  PENNY_STOCKS = 'PENNY_STOCKS',\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',\n}\n\n// 优惠券item数据\nexport interface ICouponItem {\n  // 记录唯一id\n  recordId: string;\n  // 奖品唯一id\n  rewardId: string;\n  // 奖品名称\n  rewardName: string;\n  // 奖品描述\n  rewardDesc: string;\n  // 奖品价值\n  rewardWorth: string;\n  // 可索取截至时间（即使用截止时间）\n  deadline: string;\n  // 状态\n  state: COUPON_STATE;\n  // 订单id\n  orderId: string;\n  // sid\n  sid: SID_TYPE;\n  // 商品续费周期\n  sidTimeType: COUPON_SID_TIME_TYPE;\n  // 优惠券所属平台\n  availableSystem: 'ios' | 'android';\n  // 优惠券所属包\n  availableAppName: COUPON_BUNDLE_NAME;","relevantFileList":[],"filePath":"src/hooks/useCoupon.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"currBundleName],","deepseek-chat-lite":"currBundleName","deepseek-chat":"```\n// Start Generation Here\n          currBundleName as BUNDLE_","copilot":"currBundleName"}},{"prefix":"import { DealData, OffshoreQuotationData } from '@/types/apiResponse';\nimport { Compare } from '@/types/enums';\nimport { defineStore } from 'pinia';\nimport { Order } from 'thsc-ifind-bond-components/lib/StkTable/types';\nimport { QuickFilterDeal, QuickFilterItem, QuickFilterQuote } from './QuickFilter/type';\nimport { TableMode, TableTypeTab } from './enums';\nimport { isDealData } from './utils';\nimport { useScroll } from '@vueuse/core';\nimport { ref, watch } from 'vue';\n\nexport function getDefaultQuickFilterItem(): QuickFilterItem {\n  return { selected: false, operator: Compare.GtEq, value: '0' };\n}\n/** 主要表格（实时成交，离岸报价）共享状态*/\nexport const useMainGridStore = defineStore('mainGrid', {\n  state: () => ({\n    /** 是否正在滚动，用于优化滚动加载性能。滚动时不加载走势图。 */\n    isScrolling: false,\n    /** 当前选中的行 */\n    currentRow: null as OffshoreQuotationData | DealData | null,\n    /** 实时成交or离岸报价 */\n    currentTableType: TableTypeTab.Quote as TableTypeTab,\n    /** 只看有行情债券 */\n    onlyQuotes: true,\n    /** 表格模式，简易，列表 */\n    currentTableMode: TableMode.Easy,\n    /**快速筛选内容 */\n    quickFilter: {\n      [TableTypeTab.Deal]: {\n        yield: getDefaultQuickFilterItem(),\n        yieldCb: getDefaultQuickFilterItem(),\n        yieldPreClose: getDefaultQuickFilterItem(),\n        netPrice: getDefaultQuickFilterItem(),\n        netPriceCb: getDefaultQuickFilterItem(),\n        netPricePreClose: getDefaultQuickFilterItem(),\n      } as QuickFilterDeal,\n      [TableTypeTab.Quote]: {\n        yield: getDefaultQuickFilterItem(),\n        yieldIhs: getDefaultQuickFilterItem(),\n        yieldPreClose: getDefaultQuickFilterItem(),\n        netPrice: getDefaultQuickFilterItem(),\n        netPriceIhs: getDefaultQuickFilterItem(),\n        netPricePreClose: getDefaultQuickFilterItem(),\n      } as QuickFilterQuote,\n    } satisfies Record<TableTypeTab, Record<string, QuickFilterItem>>,\n    /** 表格排序状态 */\n    sortState: {\n      [TableTypeTab.Deal]: {\n        sortField: 'dateTime',\n        order: 'desc',\n      },\n      [TableTypeTab.Quote]: {\n        sortField: 'dateTime',\n        order: 'desc',\n      },\n    } as Record<TableTypeTab, { sortField: string; order: Order }>,\n  }),\n  getters: {\n    /** 当前选中的thsCode */\n    currentThsCode(): string | null | undefined {\n      if (isDealData(this.currentRow)) {\n        return this.currentRow?.thsCode;\n      }\n    },\n    /** 获取当前的快速筛选 */\n    currentQuickFilter(state): QuickFilterDeal | QuickFilterQuote {\n      return state.quickFilter[state.currentTableType];\n    },\n    /** 当前表格排序状态 */\n    currentSortState(state) {\n      return state.sortState[state.currentTableType];\n    },\n  },\n  actions: {\n    /** 更新当前的快速筛选 */\n    updateQuickFilter(filter: QuickFilterDeal | QuickFilterQuote) {\n      const filterState = this.currentQuickFilter;\n      for (const key in filterState) {\n        if (Object.prototype.hasOwnProperty.call(filterState, key)) {\n          (filterState as any)[key] = (filter as any)[key];\n        } else {\n          console.warn('key not found in quickFilter state');\n        }\n      }\n    },\n    listenIsScrolling(el:HTMLElement){\n      if(!el){\n        return\n      }\n      const {isScrolling} = useScroll(el);\n      const watch(isScrolling","infill":", (value) => {\r\n        t","suffix":"his.isScrolling = value;\r\n      });\r\n\r\n    }\r\n  },\r\n});\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/App/MainGrid/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":", (value) => {\r","deepseek-chat-lite":", (value) => {","deepseek-chat":"```\n// Start Generation Here\n        , value => {\n          this.","copilot":", (value) => {\r\n        t"}},{"prefix":"import { DealData, OffshoreQuotationData } from '@/types/apiResponse';\nimport { Compare } from '@/types/enums';\nimport { defineStore } from 'pinia';\nimport { Order } from 'thsc-ifind-bond-components/lib/StkTable/types';\nimport { QuickFilterDeal, QuickFilterItem, QuickFilterQuote } from './QuickFilter/type';\nimport { TableMode, TableTypeTab } from './enums';\nimport { isDealData } from './utils';\nimport { useScroll } from '@vueuse/core';\nimport { ref, watch } from 'vue';\n\nexport function getDefaultQuickFilterItem(): QuickFilterItem {\n  return { selected: false, operator: Compare.GtEq, value: '0' };\n}\n/** 主要表格（实时成交，离岸报价）共享状态*/\nexport const useMainGridStore = defineStore('mainGrid', {\n  state: () => ({\n    /** 是否正在滚动，用于优化滚动加载性能。滚动时不加载走势图。 */\n    isScrolling: false,\n    /** 当前选中的行 */\n    currentRow: null as OffshoreQuotationData | DealData | null,\n    /** 实时成交or离岸报价 */\n    currentTableType: TableTypeTab.Quote as TableTypeTab,\n    /** 只看有行情债券 */\n    onlyQuotes: true,\n    /** 表格模式，简易，列表 */\n    currentTableMode: TableMode.Easy,\n    /**快速筛选内容 */\n    quickFilter: {\n      [TableTypeTab.Deal]: {\n        yield: getDefaultQuickFilterItem(),\n        yieldCb: getDefaultQuickFilterItem(),\n        yieldPreClose: getDefaultQuickFilterItem(),\n        netPrice: getDefaultQuickFilterItem(),\n        netPriceCb: getDefaultQuickFilterItem(),\n        netPricePreClose: getDefaultQuickFilterItem(),\n      } as QuickFilterDeal,\n      [TableTypeTab.Quote]: {\n        yield: getDefaultQuickFilterItem(),\n        yieldIhs: getDefaultQuickFilterItem(),\n        yieldPreClose: getDefaultQuickFilterItem(),\n        netPrice: getDefaultQuickFilterItem(),\n        netPriceIhs: getDefaultQuickFilterItem(),\n        netPricePreClose: getDefaultQuickFilterItem(),\n      } as QuickFilterQuote,\n    } satisfies Record<TableTypeTab, Record<string, QuickFilterItem>>,\n    /** 表格排序状态 */\n    sortState: {\n      [TableTypeTab.Deal]: {\n        sortField: 'dateTime',\n        order: 'desc',\n      },\n      [TableTypeTab.Quote]: {\n        sortField: 'dateTime',\n        order: 'desc',\n      },\n    } as Record<TableTypeTab, { sortField: string; order: Order }>,\n  }),\n  getters: {\n    /** 当前选中的thsCode */\n    currentThsCode(): string | null | undefined {\n      if (isDealData(this.currentRow)) {\n        return this.currentRow?.thsCode;\n      }\n    },\n    /** 获取当前的快速筛选 */\n    currentQuickFilter(state): QuickFilterDeal | QuickFilterQuote {\n      return state.quickFilter[state.currentTableType];\n    },\n    /** 当前表格排序状态 */\n    currentSortState(state) {\n      return state.sortState[state.currentTableType];\n    },\n  },\n  actions: {\n    /** 更新当前的快速筛选 */\n    updateQuickFilter(filter: QuickFilterDeal | QuickFilterQuote) {\n      const filterState = this.currentQuickFilter;\n      for (const key in filterState) {\n        if (Object.prototype.hasOwnProperty.call(filterState, key)) {\n          (filterState as any)[key] = (filter as any)[key];\n        } else {\n          console.warn('key not found in quickFilter state');\n        }\n      }\n    },\n    listenIsScrolling(el:HTMLElement){\n      if(!el){\n        return\n      }\n      const {isScrolling} = useScroll(el);\n      cwatch(isScrolling, (value) => {","infill":" t","suffix":"his.isScrolling = value;\r\n      });\r\n\r\n    }\r\n  },\r\n});\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/App/MainGrid/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\nthis.isScrolling = value;\n","copilot":" t"}},{"prefix":"export const ERR_OK = 1;\n\nexport const STATUS_CODE_OK = \"0\";\n\nexport const SUCCESS_CODE_RISK_E","infill":"RROR = -99;","suffix":"\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n  },\n};\nexport const requestGet = (url, config = {}) => {\n  return instance.get(url, config).then(res => {\n    if (res.status === SUCCESS_CODE) {\n      return res.data;\n    } else {\n      throw new Error(`${res.statusText}`);\n    }\n  });\n};\nexport const requestPost = (url, data, config = {}, strngify = true) => {\n  return instance\n    .post(url, strngify ? qs.stringify(data) : data, {\n      headers: strngify\n        ? {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          }\n        : {},\n      ...config,\n    })\n    .then(res => {\n      if (res.status === SUCCESS_CODE) {\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n<file_path>source/fund-writing-platform/src/components/business/Invest/types.ts\nexport interface Props {\n  visible: boolean;\n}\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};","relevantFileList":[],"filePath":"source/fund-writing-platform/src/assets/constants/errorCode.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" XAMINE = \"1000\";","deepseek-chat-lite":"VALUATION = \"0\";","deepseek-chat":"```\n// Start Generation Here\nexport const SUCCESS_CODE_RISK_","copilot":"RROR = -99;"}},{"prefix":"import { SUCCESS_CODE_RISK_ERROR } from \"@/assets/constants/errorCode\";\nimport ApiBase from \"@/http/apiBase\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\nconst isDev = process.env.NODE_ENV === 'development';\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    if (isDev) {\n      return Promise.resolve([\n        {\n          category: '银行授信报告',\n          value: '银行授信报告',\n        }\n      ]);\n    }\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    if (isDev) {\n      return this.commonGet(url).then(res => {\n        const { data } = res as any;\n        return {\n          list: data || [],\n          total: data?.length || 0,\n        }\n      });\n    }\n    return this.commonPost(url, params);\n  }\n\n  removeReport(ids: string[]) {\n    const url = this.generateUrl(CreationApi.uriMap.remove);\n    return this.commonPost(url, { ids });\n  }\n\n  renameReport(params: { id: string, title: string }) {\n    const url = this.generateUrl(CreationApi.uriMap.rename);\n    return this.commonPost(url, params).then(res => {\n      \n      if (res.code === SUCCESS_CODE_RISK_ERROR) {\n        throw ","infill":"new Error(res.message);","suffix":"\r\n      }\r\n    });\r\n  }\r\n\r\n  exportReport(seq: string, filename: string) {\r\n    const url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\r\n    this.clientDownload(url, filename);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/assets/constants/errorCode.ts\nexport const ERR_OK = 1;\n\nexport const STATUS_CODE_OK = \"0\";\n\nexport const SUCCESS_CODE_RISK_ERROR = -99;\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n        : {},\n      ...config,\n    })\n    .then(res => {\n      if (res.status === SUCCESS_CODE) {\n        return res.data;\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url: string, params?: any, stringify: boolean = true, sKey: string = '') {","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" new Error('重命名失败');\r","deepseek-chat-lite":"new Error(res.message);\r","deepseek-chat":"```\n// Start Generation Here\n        throw new Error(\"Rename operation failed due","copilot":"new Error(res.message);"}},{"prefix":"import { SUCCESS_CODE_RISK_ERROR } from \"@/assets/constants/errorCode\";\nimport ApiBase from \"@/http/apiBase\";\nimport { Message } from \"thsc-design-vue\";\n\ntype ReportParams = {\n  page: string | number,\n  size: string | number,\n  category?: string,\n  keyword?: string,\n};\nconst isDev = process.env.NODE_ENV === 'development';\nclass CreationApi extends ApiBase {\n\n  static uriMap = {\n    // 报告类型\n    categoryList: \"/industry/report/manage/category/list_by_user\",\n    // 批量删除\n    remove: '/industry/report/manage/word/delete_batch',\n    // 报告文件列表\n    reportList: '/industry/report/manage/word/list',\n    // 重命名\n    rename: '/industry/report/manage/word/rename',\n    // 导出文档\n    export: '/industry/export/word',\n  };\n\n  constructor() {\n    super(\"/standardgwapi/api\");\n  }\n\n  getCategoryList() {\n    if (isDev) {\n      return Promise.resolve([\n        {\n          category: '银行授信报告',\n          value: '银行授信报告',\n        }\n      ]);\n    }\n    const url = this.generateUrl(CreationApi.uriMap.categoryList);\n    return this.commonGet(url);\n  }\n\n  getReportList(params: ReportParams) {\n    const url = this.generateUrl(CreationApi.uriMap.reportList);\n    if (isDev) {\n      return this.commonGet(url).then(res => {\n        const { data } = res as any;\n        return {\n          list: data || [],\n          total: data?.length || 0,\n        }\n      });\n    }\n    return this.commonPost(url, params);\n  }\n\n  removeReport(ids: string[]) {\n    const url = this.generateUrl(CreationApi.uriMap.remove);\n    return this.commonPost(url, { ids });\n  }\n\n  renameReport(params: { id: string, title: string }) {\n    const url = this.generateUrl(CreationApi.uriMap.rename);\n    return this.commonPost(url, params).then(res => {\n      const { code, message } = res as","infill":" any;","suffix":"\r\n      if (code === SUCCESS_CODE_RISK_ERROR) {\r\n        Message.error(message);\r\n        throw new Error(message);\r\n      }\r\n    });\r\n  }\r\n\r\n  exportReport(seq: string, filename: string) {\r\n    const url = this.generateUrl(CreationApi.uriMap.export, { seq }, true);\r\n    this.clientDownload(url, filename);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new CreationApi();\r\n","relevantFile":"<file_path>source/fund-writing-platform/src/assets/constants/errorCode.ts\nexport const ERR_OK = 1;\n\nexport const STATUS_CODE_OK = \"0\";\n\nexport const SUCCESS_CODE_RISK_ERROR = -99;\n<file_path>source/fund-writing-platform/src/api/index.ts\nimport http from \"@/http\";\n\n/*for example\nexport function getData(params) {\n  return http.get(\"url\", { params });\n}*/\n<file_path>source/fund-writing-platform/src/http/index.ts\nimport axios from \"axios\";\nimport { ERR_OK, STATUS_CODE_OK } from \"@/assets/constants/errorCode\";\n\nconst http = axios.create({\n  baseURL: \"/standardgwapi/\",\n  timeout: 30000,\n});\n\nconst get = (url: string, options?: any) => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(url, { ...options })\n      .then((res) => {\n        const { data } = res;\n        if (data?.code === ERR_OK || data?.status_code === STATUS_CODE_OK) {\n          resolve(data.data);\n        } else {\n          reject(data);\n        }\n      })\n      .catch((e) => {\n        reject(e);\n      });\n  });\n};\n\nexport default {\n  get,\n};\n<file_path>source/fund-writing-platform/src/http/apiBase.ts\n      } else {\n        throw new Error(`${res.statusText}`);\n      }\n    });\n};\nexport const CancelToken = axios.CancelToken;\nexport default class ApiBase {\n\n  prefix = '';\n  timeout = 0;\n  sourceMap = {};\n\n  constructor(prefix, timeout = DEFAULT_TIMEOUT) {\n    this.prefix = prefix;\n    this.timeout = timeout;\n    this.sourceMap = {};\n  }\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n  setPrefix(prefix) {\n    this.prefix = prefix;\n  }\n  cancelAll() {\n    const { sourceMap } = this;\n    Object.keys(sourceMap).forEach(source => {\n      this.cancelRequest(source);\n    });\n  }\n  cancelRequest(sourceKey) {\n    const { sourceMap } = this;\n    const source = sourceMap[sourceKey];\n    if (source) {\n      source.cancel('canceled');\n    }\n    sourceMap[sourceKey] = null;\n  }\n  getSourceKey(url, sKey, requestType = 'Get') {\n    const sourceKey = `common${requestType}_${sKey || url.split('?')[0]}`;\n    return sourceKey;\n  }\n  generateUrl(uri: string, params?: any, isExport?: boolean, prefix?: string) {\n    prefix = prefix || this.prefix;\n    if (!params) {\n      params = {};\n    }\n    const paramsStr = qs.stringify(params);\n    let url = `${prefix}${uri}${paramsStr ? '?' : ''}${paramsStr}`;\n    if (isExport) {\n      url = `${window.location.protocol}//${window.location.host}${url}`;\n    }\n    return url;\n  }\n  commonPost(url: string, params?: any, stringify: boolean = true, sKey: string = '') {\n    const { timeout, sourceMap } = this;\n    const sourceKey = this.getSourceKey(url, sKey, 'Post');\n    this.cancelRequest(sourceKey);\n    const source = CancelToken.source();\n    sourceMap[sourceKey] = source;\n    return new Promise((resolve, reject) => {","relevantFileList":[],"filePath":"source/fund-writing-platform/src/api/creation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  any;\r","deepseek-chat-lite":" any;","deepseek-chat":"```\n// Start Generation Here\n      if (code === SUCCESS_CODE_","copilot":" any;"}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     *\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    getCurrentTimeRange():","infill":" [string, string]","suffix":"{\r\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\r\n      if (this.currentTimeRange === TimeRangeType.Today) {\r\n        return [startDate, startDate];\r\n      }else {\r\n        const _\r\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\r\n      }\r\n    },\r\n  },\r\n  actions: {\r\n    async init() {\r\n      await this.getMemberList();\r\n      this.setDefaultCurrentMember();\r\n      // 广播\r\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\r\n    },\r\n    /**\r\n     * 获取监控成员列表\r\n     * - 不传参数则为当前选中的监控组合\r\n     */\r\n    async getMemberList(id?: SectorItem['id']) {\r\n      this.loading = true;\r\n      try {\r\n        const sectorSwitchStore = useSectorSwitcherStore();\r\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\r\n      } catch (err) {\r\n        console.warn(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};\n<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags(body: GetTagBody) {\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  [string, string] <file_sep> /src/store/monitorMember.ts","deepseek-chat-lite":" [string, string] {","deepseek-chat":"```\n// Start Generation Here\n      const startDate = dayjs(window","copilot":" [string, string]"}},{"prefix":"import { DealData, OffshoreQuotationData } from '@/types/apiResponse';\nimport { Compare } from '@/types/enums';\nimport { defineStore } from 'pinia';\nimport { Order } from 'thsc-ifind-bond-components/lib/StkTable/types';\nimport { QuickFilterDeal, QuickFilterItem, QuickFilterQuote } from './QuickFilter/type';\nimport { TableMode, TableTypeTab } from './enums';\nimport { isDealData } from './utils';\nimport { useScroll } from '@vueuse/core';\n\nexport function getDefaultQuickFilterItem(): QuickFilterItem {\n  return { selected: false, operator: Compare.GtEq, value: '0' };\n}\n/** 主要表格（实时成交，离岸报价）共享状态*/\nexport const useMainGridStore = defineStore('mainGrid', {\n  state: () => ({\n    /** 是否正在滚动，用于优化滚动加载性能。滚动时不加载走势图。 */\n    isScrolling: false,\n    /** 当前选中的行 */\n    currentRow: null as OffshoreQuotationData | DealData | null,\n    /** 实时成交or离岸报价 */\n    currentTableType: TableTypeTab.Quote as TableTypeTab,\n    /** 只看有行情债券 */\n    onlyQuotes: true,\n    /** 表格模式，简易，列表 */\n    currentTableMode: TableMode.Easy,\n    /**快速筛选内容 */\n    quickFilter: {\n      [TableTypeTab.Deal]: {\n        yield: getDefaultQuickFilterItem(),\n        yieldCb: getDefaultQuickFilterItem(),\n        yieldPreClose: getDefaultQuickFilterItem(),\n        netPrice: getDefaultQuickFilterItem(),\n        netPriceCb: getDefaultQuickFilterItem(),\n        netPricePreClose: getDefaultQuickFilterItem(),\n      } as QuickFilterDeal,\n      [TableTypeTab.Quote]: {\n        yield: getDefaultQuickFilterItem(),\n        yieldIhs: getDefaultQuickFilterItem(),\n        yieldPreClose: getDefaultQuickFilterItem(),\n        netPrice: getDefaultQuickFilterItem(),\n        netPriceIhs: getDefaultQuickFilterItem(),\n        netPricePreClose: getDefaultQuickFilterItem(),\n      } as QuickFilterQuote,\n    } satisfies Record<TableTypeTab, Record<string, QuickFilterItem>>,\n    /** 表格排序状态 */\n    sortState: {\n      [TableTypeTab.Deal]: {\n        sortField: 'dateTime',\n        order: 'desc',\n      },\n      [TableTypeTab.Quote]: {\n        sortField: 'dateTime',\n        order: 'desc',\n      },\n    } as Record<TableTypeTab, { sortField: string; order: Order }>,\n  }),\n  getters: {\n    /** 当前选中的thsCode */\n    currentThsCode(): string | null | undefined {\n      if (isDealData(this.currentRow)) {\n        return this.currentRow?.thsCode;\n      }\n    },\n    /** 获取当前的快速筛选 */\n    currentQuickFilter(state): QuickFilterDeal | QuickFilterQuote {\n      return state.quickFilter[state.currentTableType];\n    },\n    /** 当前表格排序状态 */\n    currentSortState(state) {\n      return state.sortState[state.currentTableType];\n    },\n  },\n  actions: {\n    /** 更新当前的快速筛选 */\n    updateQuickFilter(filter: QuickFilterDeal | QuickFilterQuote) {\n      const filterState = this.currentQuickFilter;\n      for (const key in filterState) {\n        if (Object.prototype.hasOwnProperty.call(filterState, key)) {\n          (filterState as any)[key] = (filter as any)[key];\n        } else {\n          console.warn('key not found in quickFilter state');\n        }\n      }\n    },\n    listenIsScrolling(el:HTMLElement){\n      if(!el){","infill":"return","suffix":"\r\n      }\r\n      const {isScrolling} = useScroll(el)\r\n      this.isScrolling = isScrolling;\r\n\r\n    }\r\n  },\r\n});\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/App/MainGrid/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\n        console.error('Element to listen for","copilot":"return"}},{"prefix":"import { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\nimport { useMonitorMemberStore } from './sharedState';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList =monitor\n  const body: GetTagBody = {\n    codeList: [], // TODO:\n    orgIdList: [],","infill":"\r\n    st","suffix":"artDate,\r\n    endDate,\r\n  };\r\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\r\n}\r\n","relevantFile":"<file_path>src/store/index.ts\nexport { useSectorSwitcherStore } from '@/App/Header/sharedState';\nexport { useMainGridStore } from '@/App/MainGrid/sharedState';\nexport { useMonitorMemberStore } from '@/App/MonitorMember/sharedState';\n<file_path>src/App/MonitorMember/sharedState.ts\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    /** 设置默认选中 */\n    setDefaultCurrentMember() {\n      if (this.memberList.length > 0) {\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};\n<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat-lite":" // TODO:","deepseek-chat":"```\n// Start Generation Here\n    orgIdList: monitorMemberState.","copilot":"\r\n    st"}},{"prefix":"import { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\nimport { useMonitorMemberStore } from './sharedState';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList: string[] = [];\n  const orgIdList: string[] = [];\n  monitorMemberState.memberList","infill":".forEach(it => {\r\n    if (it.type === '1') {\r\n      orgIdList.push(it.id);\r\n    } else {\r\n      codeList.push(it.id);\r\n    }\r\n  });","suffix":"\r\n  const body: GetTagBody = {\r\n    codeList, // TODO:\r\n    orgIdList,\r\n    startDate,\r\n    endDate,\r\n  };\r\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\r\n}\r\n","relevantFile":"<file_path>src/store/index.ts\nexport { useSectorSwitcherStore } from '@/App/Header/sharedState';\nexport { useMainGridStore } from '@/App/MainGrid/sharedState';\nexport { useMonitorMemberStore } from '@/App/MonitorMember/sharedState';\n<file_path>src/App/MonitorMember/sharedState.ts\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    /** 设置默认选中 */\n    setDefaultCurrentMember() {\n      if (this.memberList.length > 0) {\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};\n<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" .forEach(it => {\r","deepseek-chat-lite":".forEach(item => {","deepseek-chat":"```\n// Start Generation Here\n    .forEach(member => {\n     ","copilot":".forEach(it => {\r\n    if (it.type === '1') {\r\n      orgIdList.push(it.id);\r\n    } else {\r\n      codeList.push(it.id);\r\n    }\r\n  });"}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: '0' | '1';\n  status: '0' | '1' | '2';\n  isvalid: '0' | '1';\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    insti","infill":"tutionId: string;\r\n    institutionName: string;","suffix":"\r\n    content: {\r\n      text: string;\r\n      seq: number;\r\n      pos: number[];\r\n      real_pos: number[];\r\n    }[];\r\n  }[];\r\n};\r\n\r\nexport type ListItem = {\r\n  event: EventItem;\r\n  views: ViewItem[];\r\n};\r\n\r\nexport type ListResponse = {\r\n  total: number;\r\n  list: ListItem[];\r\n};\r\n\r\nexport type InstitutionItem = {\r\n  name: string;\r\n  code: string;\r\n  pyName: string;\r\n};\r\n\r\nexport type Advanced = {\r\n  common_selector: {\r\n    institutions: InstitutionItem[];\r\n  };\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" tution: string;\r","deepseek-chat-lite":"tution: string;\r","deepseek-chat":"```\n// Start Generation Here\n    content: {\n      text: string","copilot":"tutionId: string;\r\n    institutionName: string;"}},{"prefix":"export type EventItem = {\n  eventId: string;\n  title: string;\n  date: string;\n  background: string;\n  topicPrompt: string;\n  searchKey: string[];\n  orgIds: string[];\n  startDate: string;\n  endDate: string;\n  tags: string[];\n  online: '0' | '1';\n  status: '0' | '1' | '2';\n  isvalid: '0' | '1';\n};\nexport type ViewItem = {\n  view: string;\n  lists: {\n    institutionId: string;\n    insti","infill":"tutionName: string;","suffix":"\r\n    content: {\r\n      text: string;\r\n      seq: number;\r\n      pos: number[];\r\n      real_pos: number[];\r\n    }[];\r\n  }[];\r\n};\r\n\r\nexport type ListItem = {\r\n  event: EventItem;\r\n  views: ViewItem[];\r\n};\r\n\r\nexport type ListResponse = {\r\n  total: number;\r\n  list: ListItem[];\r\n};\r\n\r\nexport type InstitutionItem = {\r\n  name: string;\r\n  code: string;\r\n  pyName: string;\r\n};\r\n\r\nexport type Advanced = {\r\n  common_selector: {\r\n    institutions: InstitutionItem[];\r\n  };\r\n};\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/main/resources/websource/financial_hots/src/http/response.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" tutionName: string;\r","deepseek-chat-lite":"tutionName: string;","deepseek-chat":"```\n// Start Generation Here\n    content: {\n      text: string","copilot":"tutionName: string;"}},{"prefix":"import { COUPON_STATUS } from '@/config/interface';\nimport { redeemCouponByCode } from '@/request/api';\nimport { REDEEM_BY_CODE_TYPE } from '@/request/interface';\nimport { toast } from '@overseafront/utils';\nimport { Ref, ref } from 'vue';\n\nexport default (redeemCode: Ref<string>) => {\n  // 优惠券状态\n  const currCouponState = ref(COUPON_STATUS.TO_CLAIM);\n\n  // 通过code兑换优惠券\n  async function redeemByCode() {\n    try {\n      const res = await redeemCouponByCode({ maskCode: redeemCode.value });\n      window.console.log('redeemCouponByCode res', res);\n      toast(res);\n      if (res === REDEEM_BY_CODE_TYPE.SUCCESS) {\n        currCouponState.value","infill":" = COUPON_STATUS.TO_USE;","suffix":"\r\n      } else {\r\n        currCouponState.value = COUPON_STATUS.CLAIM_FAIL;\r\n      }\r\n    } catch (err) {\r\n      window.console.log('redeemCouponByCode err', err);\r\n    }\r\n  }\r\n\r\n  return PageTransitionEvent\r\n};\r\n","relevantFile":"<file_path>src/config/interface.ts\n/** 语言类型 */\nexport type Lang = 'zh' | 'en';\n\n/** 股票代码 */\nexport type StockCode = string;\n/** 市场代码 */\nexport type MarketCode = string;\n\n/** 股票基本类型 */\nexport interface BaseStock {\n  code: StockCode;\n  market: MarketCode;\n}\n\n// 请求状态\nexport enum QUERY_STATE {\n  INIT = 'init',\n  LOADING = 'loading',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n  SUCCESS_EMPTY = 'success-empty',\n}\n\n// 优惠券状态\nexport enum COUPON_STATUS {\n  // 未领取（初始状态）\n  TO_CLAIM = 'to_claim',\n  // 未使用（即已领取且可使用）\n  TO_USE = 'to_use',\n  // 领取失败（系统/包不对，其他原因等）\n  CLAIM_FAIL = 'claim_fail',\n}\n<file_path>src/request/api.ts\n  IGetCouponByCodeListProps,\n  ICouponItem,\n  REDEEM_BY_CODE_TYPE,\n  IRedeemCouponByCodeProps,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO, IS_TEST } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情host\nconst EXT_HOST = IS_TEST ? '//ainvest-extquote.touzime.com' : '//extquota.ainvest.com';\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>","relevantFileList":[],"filePath":"src/hooks/useCouponStatus.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  = COUPON_STATUS.CLAIM_SUCCESS;\r","deepseek-chat-lite":" = COUPON_STATUS.CLAIMED;","deepseek-chat":"```\n// Start Generation Here\n        currCouponState.value = CO","copilot":" = COUPON_STATUS.TO_USE;"}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { API_TIME_FMT } from '@/utils/const';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport dayjs from 'dayjs';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport { SortType, TimeRangeType } from './types/enums';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      const sectorSwitchStore = useSectorSwitcherStore();\n      // 获取\n      getMemberList(id || sectorSwitchStore.current.id)\n        .then(data => {\n          this.memberList = data;\n        })\n        .catch","infill":"(err => {\r\n          console.error(err);\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        })","suffix":";\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { useMonitorMemberStore } from './sharedState';\nimport { GetTagBody } from './types/apiRequest';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList: string[] = [];\n  const orgIdList: string[] = [];\n  monitorMemberState.memberList.forEach(it => {\n    // TODO:\n    if (it.type === '1') {\n      orgIdList.push(it.id);\n    } else {\n      codeList.push(it.id);\n    }\n  });\n  const body: GetTagBody = { codeList, orgIdList, startDate, endDate };\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"(() => {\r","deepseek-chat-lite":"(err => {","deepseek-chat":"```\n// Start Generation Here\n(() => {\n  this.loading =","copilot":"(err => {\r\n          console.error(err);\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        })"}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { API_TIME_FMT } from '@/utils/const';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport dayjs from 'dayjs';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport { SortType, TimeRangeType } from './types/enums';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      const sectorSwitchStore = useSectorSwitcherStore();\n      // 获取\n      getMemberList(id || sectorSwitchStore.current.id)\n        .then(data => {\n          this.memberList = data;\n        })\n        .catch(err => {\n          console.error(err);\n        }","infill":")\r\n        .finally(() => {\r\n          this.loading = false;\r\n        })","suffix":";\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { useMonitorMemberStore } from './sharedState';\nimport { GetTagBody } from './types/apiRequest';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList: string[] = [];\n  const orgIdList: string[] = [];\n  monitorMemberState.memberList.forEach(it => {\n    // TODO:\n    if (it.type === '1') {\n      orgIdList.push(it.id);\n    } else {\n      codeList.push(it.id);\n    }\n  });\n  const body: GetTagBody = { codeList, orgIdList, startDate, endDate };\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":")","deepseek-chat-lite":")","deepseek-chat":"```\n// Start Generation Here\n        .finally(() => {\n          this","copilot":")\r\n        .finally(() => {\r\n          this.loading = false;\r\n        })"}},{"prefix":"import { SID_TYPE } from '@/config/constant';\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\nexport interface IGetI18nDataReq {\\","infill":"interface IGoodsItem {\r\n  type: string;\r\n  list: IProductInfo[];\r\n}","suffix":"\r\n\r\n// 商品列表信息 - 订阅中心\r\nexport interface IGetProductListRes {\r\n  goods: IGoodsItem[]\r\n  system_time: number;\r\n  purchase_list: IProductInfo[];\r\n  unpurchased_list: IProductInfo[];\r\n}\r\n\r\n// ===============================================================================\r\n// 查询优惠券信息\r\nexport interface IGetCouponByCodeListProps {\r\n  // 逗号隔开\r\n  maskCodeList: string;\r\n}\r\n\r\n// 优惠券状态\r\nexport enum COUPON_STATE {\r\n  // 已领取-未兑换\r\n  INIT = 'INIT',\r\n  // 已兑换-未使用\r\n  CLAIMING = 'CLAIMING',\r\n  // 已过期\r\n  EXPIRED = 'EXPIRED',\r\n  // 已核销\r\n  DISTRIBUTED = 'DISTRIBUTED',\r\n}\r\n\r\n// 商品周期\r\nexport enum COUPON_SID_TIME_TYPE {\r\n  MONTH = 'MONTH',\r\n  QUARTER = 'QUARTER',\r\n  SEMI_YEAR = 'SEMI_YEAR',\r\n  YEAR = 'YEAR',\r\n}\r\n\r\n// 优惠券包类型\r\nexport enum COUPON_BUNDLE_NAME {\r\n  STOCK_SCREENER = 'STOCK_SCREENER',\r\n  AINVEST = 'AINVEST',\r\n  PENNY_STOCKS = 'PENNY_STOCKS',\r\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',\r\n}\r\n\r\n// 优惠券item数据\r\nexport interface ICouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间（即使用截止时间）\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE;\r\n  // 订单id\r\n  orderId: string;\r\n  // sid\r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: COUPON_SID_TIME_TYPE;\r\n  // 优惠券所属平台\r\n  availableSystem: 'ios' | 'android';\r\n  // 优惠券所属包\r\n  availableAppName: COUPON_BUNDLE_NAME;\r\n  // 掩码\r\n  maskCode: string;\r\n  // 三方平台地址\r\n  tripartiteUrl: string;\r\n}\r\n\r\nexport interface IGetCouponByCodeListRes {\r\n  maskCodeList: string[];\r\n}\r\n\r\n// 优惠券领取\r\nexport interface IRedeemCouponByCodeProps {\r\n  maskCode: string;\r\n}\r\n\r\n// 优惠券领取结果\r\nexport enum REDEEM_BY_CODE_TYPE {\r\n  // 成功\r\n  SUCCESS = 'SUCCESS',\r\n  // 掩码数量已用完/不存在\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  // 不允许参与\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  // 奖券不存在\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  // 平台系统限制\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  // 用户ID不存在\r\n  USER_ID_NOT_FOUND = 'USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',\r\n}\r\n","relevantFile":"<file_path>src/hooks/useCouponStatus.ts\nimport { COUPON_BUSINESS_STATUS, QUERY_STATE } from '@/config/interface';\nimport { redeemCouponByCode } from '@/request/api';\nimport { REDEEM_BY_CODE_TYPE } from '@/request/interface';\nimport { toast } from '@overseafront/utils';\nimport { Ref, ref } from 'vue';\n\nexport default () => {\n  // 优惠券状态\n  const currCouponStatus = ref(COUPON_BUSINESS_STATUS.TO_CLAIM);\n\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 通过code兑换优惠券\n  async function redeemByCode(redeemCode: string) {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await redeemCouponByCode({ maskCode: redeemCode });\n      window.console.log('redeemCouponByCode res', res);\n      toast(res);\n      if (res === REDEEM_BY_CODE_TYPE.SUCCESS) {\n        currCouponStatus.value = COUPON_BUSINESS_STATUS.TO_USE;\n      } else {\n        currCouponStatus.value = COUPON_BUSINESS_STATUS.CLAIM_FAIL;\n      }\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n    } catch (err) {\n      window.console.log('redeemCouponByCode err', err);\n      // loading\n      queryState.value = QUERY_STATE.FAIL;\n    }\n  }\n\n  return {\n    redeemByCode,\n    currCouponStatus,\n    queryState,\n  };\n};\n<file_path>src/config/interface.ts\n/** 语言类型 */\nexport type Lang = 'zh' | 'en';\n\n/** 股票代码 */\nexport type StockCode = string;\n/** 市场代码 */\nexport type MarketCode = string;\n\n/** 股票基本类型 */\nexport interface BaseStock {\n  code: StockCode;\n  market: MarketCode;\n}\n\n// 请求状态\nexport enum QUERY_STATE {\n  INIT = 'init',\n  LOADING = 'loading',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n  SUCCESS_EMPTY = 'success-empty',\n}\n\n// 优惠券状态\nexport enum COUPON_BUSINESS_STATUS {\n  // 未领取（初始状态）\n  TO_CLAIM = 'to_claim',\n  // 未使用（即已领取且可使用）\n  TO_USE = 'to_use',\n  // 领取失败（系统/包不对，其他原因等）\n  CLAIM_FAIL = 'claim_fail',\n}\n<file_path>src/request/api.ts\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n\n// ==================================================================================================\n\n// 请求商品列表 - 订阅中心\nexport const getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/goods/info/v1/category`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n<file_path>src/hooks/useProductListOfSubscription.ts\n          icon: 'https://testo.thsi.cn/mobileweb-upload-static-server.file/ab2f14fe-a451-4038-9a80-4f2dfcd8f2de.png',\n          large_image:\n            'https://testo.thsi.cn/mobileweb-upload-static-server.file/8d05e69f-65e1-4eec-9970-b4c86686544a.png',\n          purchase_page:\n            'http://test.lighthorse.io:6060/frontPage/pay/common-product-pay/index.html#/?sid=10008&comefrom=subscription',\n          // small_black_image:\n          //   'https://testo.thsi.cn/mobileweb-upload-static-server.file/7520aadf-0286-417e-80bb-0a1a40c71ad8.png',\n          // small_white_image:\n          //   'https://testo.thsi.cn/mobileweb-upload-static-server.file/9dc188d1-0d22-4bd5-b580-59287ef3f45b.png',\n        },\n        price: {\n          current_price: 'Try Free',\n          original_price: '$30.00',\n        },\n        statistics: {\n          exposure_count: 0,\n          subscription_count: 100,\n        },\n      },\n      {\n        goods: {\n          sid: '10007',\n          name: 'trend sight',\n          description: 'This is the',\n          icon: 'https://testo.thsi.cn/mobileweb-upload-static-server.file/ab2f14fe-a451-4038-9a80-4f2dfcd8f2de.png',\n          large_image:\n            'https://testo.thsi.cn/mobileweb-upload-static-server.file/8d05e69f-65e1-4eec-9970-b4c86686544a.png',\n          purchase_page:\n            'http://test.lighthorse.io:6060/frontPage/pay/common-product-pay/index.html#/?sid=10008&comefrom=subscription',\n        },\n        price: {\n          current_price: '$19.90/月',\n        },\n        statistics: {\n          exposure_count: 0,\n          subscription_count: 100,\n        },\n      },\n      {\n        goods: {\n          sid: '10012',\n          name: 'Aime Basic',\n          description:\n            'This is the purchase list for the subscription This is the purchase list for the subscription',\n          icon: 'https://testo.thsi.cn/mobileweb-upload-static-server.file/ab2f14fe-a451-4038-9a80-4f2dfcd8f2de.png',\n          large_image:\n            'https://testo.thsi.cn/mobileweb-upload-static-server.file/8d05e69f-65e1-4eec-9970-b4c86686544a.png',\n          purchase_page:\n            'http://test.lighthorse.io:6060/frontPage/pay/common-product-pay/index.html#/?sid=10008&comefrom=subscription',\n        },\n        price: {\n          current_price: '$9.9/mo',\n        },\n        statistics: {\n          exposure_count: 0,\n          subscription_count: 100,\n        },\n      },\n      {\n        goods: {","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"deepseek-chat-lite":"n  lang: string; }","deepseek-chat":"```\n// Start Generation Here\nexport interface IGetI18nData","copilot":"interface IGoodsItem {\r\n  type: string;\r\n  list: IProductInfo[];\r\n}"}},{"prefix":"interface GetMedalCategoryParams {\n  // 类别名称\n  medalCategoryName: string,\n  // 审核状态\n  onOffLine: string,\n  page: number,\n  pageSize: number,\n}\n// 勋章类别数据\ninterface MedalCategory {\n  id?: number,\n  // 勋章类别名称\n  name?: string,\n  description?: string,\n  // 上下线状态\n  onOffLine?: number,\n  // 勋章系列数量\n  medalSerialCount?: number,\n  // 勋章类别排序\n  categoryRank?: string,\n  // 类别类型　ｃｏｍｍｏｎ","infill":":普通类别 2:专题类别","suffix":"\n  type?: string,\n}\n// 获取勋章类别表格数据\ninterface GetMedalCategoryResult {\n  medalCategoryDtoList: MedalCategory[],\n  // 总数\n  size: number,\n}\n// 类别上下线请求参数\ninterface OnOrOfflineParams {\n  // 类别id\n  categoryId?: number,\n  // 上下线状态\n  onOffLine: number,\n}\n","relevantFile":"","relevantFileList":[],"filePath":"src/types/category.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ：普通勋章　ｓｐｅｃｉａｌ：特殊勋章","deepseek-chat":"```\n// Start Generation Here\n  // 勋章类别创建时间\n","copilot":":普通类别 2:专题类别"}},{"prefix":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from '@/router';\nconst app = createApp(App);\nimport i18n from '@/assets/lang';\nimport '@atom/ainvest-tokens/dist/variables.css';\nimport { initTheme } from '@atom/ainvest-tokens';\ninitTheme({\n  cluster: 'ainvest',\n});\n\n// apm\napp.config.errorHandler = (error, vm, info) => {\n  try {\n    window.ClientMonitor.reportFrameErrors(\n      {\n        category: 'vue',\n        grade: 'error',\n        errorUrl: window.location.href,\n        message: info,\n        stack: error.stack,\n      },\n      error\n    );\n  } catch (e) {\n    window.console.warn(e);\n  }\n};\n\n// #region 日期插件配置\n// 导入日期插件\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear';\ndayjs.extend(utc);\ndayjs.extend(timezone);\ndayjs.extend(quarterOfYear);\nwindow.dayjs = dayjs;\n// #endregion\n\n// #region 全局状态管理\n// 导入 pinia 状态管理器\nimport { createPinia } from 'pinia';\nconst pinia = createPinia();\napp.use(pinia);\n// 导入状态数据库\nimport { useMainStore } from './store';\nimport {\n  getLang,\n  getTheme,\n  getStockCodeMode,\n  getNativeAppVersion,\n  registerChangeTheme,\n  registerOnShow,\n  registerOnHide,\n} from '@overseafront/utils';\n\nimport { changeThemeCbProxy, onHideCbProxy, onShowCbProxy } from '@/utils/cbProxy';\n\nconst store = useMainStore();\nconst lang = getLang();\n\nconst theme = getTheme();\nconst appVersion = getNativeAppVersion();\nconst stockCodeMode = getStockCodeMode();\n// store 初始化数据\nstore.setLang(lang);\nstore.setTheme(theme);\nstore.setStockCodeMode(stockCodeMode);\nstore.setAppInfo({\n  appVersion,\n});\n// 重置主题样式\nif (theme === 'dark') {\n  document.documentElement.setAttribute('theme-mode', 'dark');\n}\n\n// @ts-ignore\nregisterChangeTheme(changeThemeCbProxy.registerCb());\nregisterOnShow(onShowCbProxy.registerCb());\nregisterOnHide(onHideCbProxy.registerCb());\nchangeThemeCbProxy.on('setTheme', (resp: any) => {\n  const { themeType, chgColor } = resp.data;\n  const themeLabel = 'theme-mode';\n  window.console.log('chgColor==>', chgColor);\n  const newTheme = +themeType === 0 ? 'light' : 'dark';\n  const newClassName = newTheme === 'dark' ? 'dark' : '';\n  document.documentElement.setAttribute(themeLabel, newClassName);\n  store.setTheme(newTheme);\n  const stockColorMode = +chgColor === 0 ? '' : 'reverse';\n  document.documentElement.setAttribute('stock-color-mode', stockColorMode);\n  store.setStockCodeMode(chgColor);\n});\n// #endregion\n\n// #region http请求配置\n// @ts-ignore\nimport httpRequest from '@overseafront/http-request';\nimport { BT_CODE } from './config/project';\nimport elk from '@/utils/elk';\n// 初始化elk\nelk.init({\n  btcode: BT_CODE,\n});\n\nconst httpRequestConfig = {\n  btcode: BT_CODE,\n  baseURL: '',\n  lang: 'en',\n  env: 'test',\n  isRequestByNative: false,\n  // token: '16bacbbf5ab0e589a29fe44b8e6a3aaf1', // has auth\n  // token: '19e4a5a46e5f319d571361b804e2b3b60',\n  ...(IS_DEV\n    ? {\n        token: '12fa4e37a0a5f2c494df5e5f761e49532',\n        fingerprint: '8f3fa168-5040-45cf-8de1-58a2cd3c83ab',\n      }\n    : {}),\n};\napp.use(httpRequest, httpRequestConfig);\n// #endregion\n\n// 全局公共样式\nimport '@/assets/styles/index.less';\n\n// #region main函数\nimport {\n  ConfigProvider,\n  Popup,\n  Skeleton,\n  Image","infill":" as VanImage,","suffix":"\r\n} from 'vant';\r\n// NOTE: vant 3.x/4.x 自动按需引入组件样式会有问题 暂时全部引入 等待官方修复后再按需引入\r\n// import 'vant/lib/index.css';\r\nimport 'vant/es/popup/style/index';\r\nimport 'vant/es/skeleton/style/index';\r\nimport 'vant/es/image/style/index';\r\n\r\nfunction useVant() {\r\n  app\r\n    .use(ConfigProvider)\r\n    .use(Popup)\r\n    .use(Skeleton)\r\n}\r\n\r\nimport directives from '@/directives';\r\nimport { IS_DEV } from './config/env';\r\n\r\nfunction initRender() {\r\n  useVant();\r\n  app.use(router).use(i18n).use(directives);\r\n  app.mount('#app');\r\n}\r\n\r\ninitRender();\r\n","relevantFile":"<file_path>src/request/interface.ts\n}\n/**\n * @startId 翻页请求时，上一页的最后一条id\n * @tab 请求所属tab，取自tab接口的当前param\n * @size 每页请求数据量\n * @lang 语言模式\n */\nexport interface QueryBatchParams {\n  startId: string;\n  tab?: string;\n  size: number;\n  lang: string;\n  terminal?: 'app' | 'web';\n}\n\n/**\n * @newsId 资讯ID\n * @contentId 底层页相关id\n * @title 资讯标题\n * @summary 资讯摘要\n * @content 正文\n * @source 数据源\n * @coverImage 封面图信息\n * @tagList 标签列表 （行情信息）\n * @publishTime 发布时间（毫秒）\n * @newsType 类型 （快讯/长文等）\n * @newsFrom 生产源 （manual表示人工，还有aigc/auto/third_part）\n * @newsFormat 格式（common表示图文，video表示视频）\n * @readTime 阅读时长\n * @topped 是否置顶\n * @lang 语言模式\n * @additionInfo 附加信息相关账户/解读信息\n */\nexport interface ListData {\n  newsId: string;\n  contentId: string;\n  title: string;\n  summary: string;\n  content: string;\n  coverImage?: CoverImage;\n  topped?: boolean;\n  tagList?: TagList[];\n  source?: string;\n  sourceUrl?: string;\n  publishTime?: number;\n  newsType?: string;\n  newsFormat?: 'common' | 'video';\n  newsFrom?: string;\n  lang?: string;\n  additionInfo?: Partial<AdditionInfo> | null;\n  charge?: Charge;\n}\n\nexport enum Charge {\n  free = 0,\n  charge,\n}\n\nexport interface AdditionInfo {\n  account: {\n<file_path>src/request/api.ts\nimport { ListData, QueryBatchParams } from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV } from '@/config/env';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const queryBatch = (data: QueryBatchParams) =>\n  customFetchAdapter<ListData[]>({\n    url: `${BASE_URL}/gw/news_f10/v1/headline/queryBatch`,\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data,\n  });\n\n// ==================================================================================================","relevantFileList":[],"filePath":"src/main.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ,","deepseek-chat-lite":",","deepseek-chat":"```\n// Start Generation Here\nimport { Button } from 'vant';","copilot":" as VanImage,"}},{"prefix":"import { SID_TYPE } from '@/config/constant';\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: string;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\nexport interface IGetI18nDataReq {\\","infill":"IProductInfo[];","suffix":"\r\n}\r\n\r\n// 商品列表信息 - 订阅中心\r\nexport interface IGetProductListRes {\r\n  goods: IGoodsItem[]\r\n}\r\n\r\n// ===============================================================================\r\n// 查询优惠券信息\r\nexport interface IGetCouponByCodeListProps {\r\n  // 逗号隔开\r\n  maskCodeList: string;\r\n}\r\n\r\n// 优惠券状态\r\nexport enum COUPON_STATE {\r\n  // 已领取-未兑换\r\n  INIT = 'INIT',\r\n  // 已兑换-未使用\r\n  CLAIMING = 'CLAIMING',\r\n  // 已过期\r\n  EXPIRED = 'EXPIRED',\r\n  // 已核销\r\n  DISTRIBUTED = 'DISTRIBUTED',\r\n}\r\n\r\n// 商品周期\r\nexport enum COUPON_SID_TIME_TYPE {\r\n  MONTH = 'MONTH',\r\n  QUARTER = 'QUARTER',\r\n  SEMI_YEAR = 'SEMI_YEAR',\r\n  YEAR = 'YEAR',\r\n}\r\n\r\n// 优惠券包类型\r\nexport enum COUPON_BUNDLE_NAME {\r\n  STOCK_SCREENER = 'STOCK_SCREENER',\r\n  AINVEST = 'AINVEST',\r\n  PENNY_STOCKS = 'PENNY_STOCKS',\r\n  STOCK_SIMULATOR = 'STOCK_SIMULATOR',\r\n}\r\n\r\n// 优惠券item数据\r\nexport interface ICouponItem {\r\n  // 记录唯一id\r\n  recordId: string;\r\n  // 奖品唯一id\r\n  rewardId: string;\r\n  // 奖品名称\r\n  rewardName: string;\r\n  // 奖品描述\r\n  rewardDesc: string;\r\n  // 奖品价值\r\n  rewardWorth: string;\r\n  // 可索取截至时间（即使用截止时间）\r\n  deadline: string;\r\n  // 状态\r\n  state: COUPON_STATE;\r\n  // 订单id\r\n  orderId: string;\r\n  // sid\r\n  sid: SID_TYPE;\r\n  // 商品续费周期\r\n  sidTimeType: COUPON_SID_TIME_TYPE;\r\n  // 优惠券所属平台\r\n  availableSystem: 'ios' | 'android';\r\n  // 优惠券所属包\r\n  availableAppName: COUPON_BUNDLE_NAME;\r\n  // 掩码\r\n  maskCode: string;\r\n  // 三方平台地址\r\n  tripartiteUrl: string;\r\n}\r\n\r\nexport interface IGetCouponByCodeListRes {\r\n  maskCodeList: string[];\r\n}\r\n\r\n// 优惠券领取\r\nexport interface IRedeemCouponByCodeProps {\r\n  maskCode: string;\r\n}\r\n\r\n// 优惠券领取结果\r\nexport enum REDEEM_BY_CODE_TYPE {\r\n  // 成功\r\n  SUCCESS = 'SUCCESS',\r\n  // 掩码数量已用完/不存在\r\n  MASK_CODE_NOT_FOUND = 'MASK_CODE_NOT_FOUND',\r\n  // 不允许参与\r\n  CHECK_LIMITED = 'CHECK_LIMITED',\r\n  // 奖券不存在\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  // 平台系统限制\r\n  PLARFORM_LIMITED = 'PLARFORM_LIMITED',\r\n  // 用户ID不存在\r\n  USER_ID_NOT_FOUND = 'USER_ID_NOT_FOUND',\r\n  // 系统异常\r\n  SYSTEM_ERROR = 'SYSTEM_ERROR',\r\n}\r\n","relevantFile":"<file_path>src/hooks/useCouponStatus.ts\nimport { COUPON_BUSINESS_STATUS, QUERY_STATE } from '@/config/interface';\nimport { redeemCouponByCode } from '@/request/api';\nimport { REDEEM_BY_CODE_TYPE } from '@/request/interface';\nimport { toast } from '@overseafront/utils';\nimport { Ref, ref } from 'vue';\n\nexport default () => {\n  // 优惠券状态\n  const currCouponStatus = ref(COUPON_BUSINESS_STATUS.TO_CLAIM);\n\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 通过code兑换优惠券\n  async function redeemByCode(redeemCode: string) {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await redeemCouponByCode({ maskCode: redeemCode });\n      window.console.log('redeemCouponByCode res', res);\n      toast(res);\n      if (res === REDEEM_BY_CODE_TYPE.SUCCESS) {\n        currCouponStatus.value = COUPON_BUSINESS_STATUS.TO_USE;\n      } else {\n        currCouponStatus.value = COUPON_BUSINESS_STATUS.CLAIM_FAIL;\n      }\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n    } catch (err) {\n      window.console.log('redeemCouponByCode err', err);\n      // loading\n      queryState.value = QUERY_STATE.FAIL;\n    }\n  }\n\n  return {\n    redeemByCode,\n    currCouponStatus,\n    queryState,\n  };\n};\n<file_path>src/config/interface.ts\n/** 语言类型 */\nexport type Lang = 'zh' | 'en';\n\n/** 股票代码 */\nexport type StockCode = string;\n/** 市场代码 */\nexport type MarketCode = string;\n\n/** 股票基本类型 */\nexport interface BaseStock {\n  code: StockCode;\n  market: MarketCode;\n}\n\n// 请求状态\nexport enum QUERY_STATE {\n  INIT = 'init',\n  LOADING = 'loading',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n  SUCCESS_EMPTY = 'success-empty',\n}\n\n// 优惠券状态\nexport enum COUPON_BUSINESS_STATUS {\n  // 未领取（初始状态）\n  TO_CLAIM = 'to_claim',\n  // 未使用（即已领取且可使用）\n  TO_USE = 'to_use',\n  // 领取失败（系统/包不对，其他原因等）\n  CLAIM_FAIL = 'claim_fail',\n}\n<file_path>src/request/api.ts\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });\n\n// ==================================================================================================\n\n// 请求商品列表 - 订阅中心\nexport const getProductListOfSubscription = () =>\n  customFetchAdapter<IGetProductListRes>({\n    url: `${EXT_HOST}/od/subscription-center-api/goods/info/v1/category`,\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json',\n<file_path>src/hooks/useProductListOfSubscription.ts\n          icon: 'https://testo.thsi.cn/mobileweb-upload-static-server.file/ab2f14fe-a451-4038-9a80-4f2dfcd8f2de.png',\n          large_image:\n            'https://testo.thsi.cn/mobileweb-upload-static-server.file/8d05e69f-65e1-4eec-9970-b4c86686544a.png',\n          purchase_page:\n            'http://test.lighthorse.io:6060/frontPage/pay/common-product-pay/index.html#/?sid=10008&comefrom=subscription',\n          // small_black_image:\n          //   'https://testo.thsi.cn/mobileweb-upload-static-server.file/7520aadf-0286-417e-80bb-0a1a40c71ad8.png',\n          // small_white_image:\n          //   'https://testo.thsi.cn/mobileweb-upload-static-server.file/9dc188d1-0d22-4bd5-b580-59287ef3f45b.png',\n        },\n        price: {\n          current_price: 'Try Free',\n          original_price: '$30.00',\n        },\n        statistics: {\n          exposure_count: 0,\n          subscription_count: 100,\n        },\n      },\n      {\n        goods: {\n          sid: '10007',\n          name: 'trend sight',\n          description: 'This is the',\n          icon: 'https://testo.thsi.cn/mobileweb-upload-static-server.file/ab2f14fe-a451-4038-9a80-4f2dfcd8f2de.png',\n          large_image:\n            'https://testo.thsi.cn/mobileweb-upload-static-server.file/8d05e69f-65e1-4eec-9970-b4c86686544a.png',\n          purchase_page:\n            'http://test.lighthorse.io:6060/frontPage/pay/common-product-pay/index.html#/?sid=10008&comefrom=subscription',\n        },\n        price: {\n          current_price: '$19.90/月',\n        },\n        statistics: {\n          exposure_count: 0,\n          subscription_count: 100,\n        },\n      },\n      {\n        goods: {\n          sid: '10012',\n          name: 'Aime Basic',\n          description:\n            'This is the purchase list for the subscription This is the purchase list for the subscription',\n          icon: 'https://testo.thsi.cn/mobileweb-upload-static-server.file/ab2f14fe-a451-4038-9a80-4f2dfcd8f2de.png',\n          large_image:\n            'https://testo.thsi.cn/mobileweb-upload-static-server.file/8d05e69f-65e1-4eec-9970-b4c86686544a.png',\n          purchase_page:\n            'http://test.lighthorse.io:6060/frontPage/pay/common-product-pay/index.html#/?sid=10008&comefrom=subscription',\n        },\n        price: {\n          current_price: '$9.9/mo',\n        },\n        statistics: {\n          exposure_count: 0,\n          subscription_count: 100,\n        },\n      },\n      {\n        goods: {","relevantFileList":[],"filePath":"src/request/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat-lite":"n  lang: string; }","deepseek-chat":"```\n// Start Generation Here\n  lang: string;\n  templateId","copilot":"IProductInfo[];"}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters:{\n    /**\n     * \n     * @returns [startDate, endDate]\n     */\n    getCurrentTimeRange(){\n      if","infill":"(this.currentTimeRange === TimeRangeType.Today){\r\n        \r\n      }\r\n      if(t","suffix":"his.currentTimeRange === TimeRangeType.Week){\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    async init() {\r\n      await this.getMemberList();\r\n      this.setDefaultCurrentMember();\r\n      // 广播\r\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\r\n    },\r\n    /**\r\n     * 获取监控成员列表\r\n     * - 不传参数则为当前选中的监控组合\r\n     */\r\n    async getMemberList(id?: SectorItem['id']) {\r\n      this.loading = true;\r\n      try {\r\n        const sectorSwitchStore = useSectorSwitcherStore();\r\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\r\n      } catch (err) {\r\n        console.warn(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};\n<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags(body: GetTagBody) {\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" (this.currentTimeRange === TimeRangeType.Today){\r","deepseek-chat-lite":"(this.currentTimeRange === TimeRangeType.Today){","deepseek-chat":"```\n// Start Generation Here\n      if (this.currentTimeRange === Time","copilot":"(this.currentTimeRange === TimeRangeType.Today){\r\n        \r\n      }\r\n      if(t"}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters:{\n    /**\n     * \n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    getCurrentTimeRange(){\n      if(this.currentTimeRange === TimeRangeType.Today){\n        \n      }","infill":"if(this.currentTimeRange === TimeRangeType.Week){\r\n     ","suffix":" }\r\n    }\r\n  },\r\n  actions: {\r\n    async init() {\r\n      await this.getMemberList();\r\n      this.setDefaultCurrentMember();\r\n      // 广播\r\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\r\n    },\r\n    /**\r\n     * 获取监控成员列表\r\n     * - 不传参数则为当前选中的监控组合\r\n     */\r\n    async getMemberList(id?: SectorItem['id']) {\r\n      this.loading = true;\r\n      try {\r\n        const sectorSwitchStore = useSectorSwitcherStore();\r\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\r\n      } catch (err) {\r\n        console.warn(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};\n<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags(body: GetTagBody) {\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" else if(this.currentTimeRange === TimeRangeType.Yesterday){\r","deepseek-chat-lite":"else if(this.currentTimeRange === TimeRangeType.Yesterday){","deepseek-chat":"```\n// Start Generation Here\n        const today = new Date();\n       ","copilot":"if(this.currentTimeRange === TimeRangeType.Week){\r\n     "}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     *\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    getCurrentTimeRange(): [string, string]{\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      }\n      if (this.currentTimeRange === TimeRangeType.Week) {\n        return [","infill":"dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];","suffix":"\r\n      }\r\n    },\r\n  },\r\n  actions: {\r\n    async init() {\r\n      await this.getMemberList();\r\n      this.setDefaultCurrentMember();\r\n      // 广播\r\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\r\n    },\r\n    /**\r\n     * 获取监控成员列表\r\n     * - 不传参数则为当前选中的监控组合\r\n     */\r\n    async getMemberList(id?: SectorItem['id']) {\r\n      this.loading = true;\r\n      try {\r\n        const sectorSwitchStore = useSectorSwitcherStore();\r\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\r\n      } catch (err) {\r\n        console.warn(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};\n<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags(body: GetTagBody) {\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" startDate, dayjs(startDate).add(6, 'day').format(API_TIME_FMT)];","deepseek-chat-lite":"dayjs(window.curDate).subtract(6, 'day').format(API_TIME_FMT), startDate];","deepseek-chat":"```\n// Start Generation Here\n          dayjs(window.curDate).","copilot":"dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];"}},{"prefix":"import { ComponentConfig } from '@/common/api/interface';\nimport { getComponentList } from '@/common/api/index';\nimport { RegionComponent, RegionConfig, AreaConfig, areaMap } from '@/components/Middle/interface';\nimport loadScript from 'load-script';\nimport { ref } from 'vue';\nimport { cloneDeep } from 'lodash';\nimport { nextTick } from 'vue';\nconst components = ref<Record<string, { name: string; component: ComponentConfig[] }>>({});\n\nconst descriptEnum: Record<keyof typeof areaMap, string> = {\n  TITLE: '标题',\n  SUMMARY: '摘要',\n  CONTENT: '正文',\n};\nlet regions = ref<RegionConfig[]>([\n  {\n    area: areaMap.TITLE,\n    description: '标题',\n    components: [],\n  },\n  {\n    area: areaMap.SUMMARY,\n    description: '摘要',\n    components: [],\n  },\n  {\n    area: areaMap.CONTENT,\n    description: '正文',\n    areaConfig: {\n      polishStyle: '不润色',\n      aiConfig: {\n        model: '',\n        temperature: 0,\n        maxToken: 0,\n        account: '',\n        business: '',\n        translateType: 'text',\n      },\n      prompt: '',\n    },\n    components: [],\n  },\n]);\nconst regionDataLoading = ref<Record<areaMap, boolean>>({\n  TITLE: false,\n  SUMMARY: false,\n  CONTENT: false,\n});\nexport const useRegionData = () => {\n  const addRegionData = (\n    regionData: RegionConfig,\n    component: ComponentConfig,\n    dragEndIndex: number | null\n  ) => {\n    const { area } = regionData;\n    const { type, resultPath, editorPath, id, key, region, icon, name } = component;\n\n    // 智能文本组件的组件默认初始配置\n    const textComponentConfig = {\n      executeConfig: {\n        // 标题或者摘要区域，默认不开启【内容单独成段】\n        singleParagraph: area === 'CONTENT' ? 1 : 0,\n      }\n    }\n\n    const addComponent = () => {\n      console.log('添加组件')\n      const config:RegionComponent = {\n        type,\n        name: '',\n        editorPath,\n        id: id!,\n        key,\n        resultPath,\n        componentCode: window[key]?.default,\n        componentConfig: type === 'TEXT' ? textComponentConfig : {},\n        extraData: {\n          region,\n          icon,\n          name,\n        },\n        componentRef: ","infill":"ref(null),","suffix":"\n        // dataSource: {\n        //   selectedDataSource: [],\n        //   selectedDataSourceCascaderData: []\n        // }\n      };\n      //不为null表示在中间插入\n      if (dragEndIndex !== null) {\n        regionData.components.splice(dragEndIndex + 1, 0, config);\n      } else {\n        regionData.components.push(config);\n      }\n    };\n    if (regionData.components.findIndex(item => item.id === component.id) === -1) {\n      if (window[key]) {\n        addComponent();\n        regionDataLoading.value[area] = false;\n      } else {\n        regionDataLoading.value[area] = true;\n\n        loadScript(component.editorPath, err => {\n          if (err) {\n            regionDataLoading.value[area] = false;\n            return;\n          }\n          addComponent();\n          regionDataLoading.value[area] = false;\n        });\n      }\n    }\n  };\n\n  //初始化组件的配置，用于动态渲染\n  const initComponentCode = (editorPath: string, component: RegionComponent): Promise<boolean> => {\n    return new Promise((resolve, reject) => {\n      if (window[component.key]) {\n        resolve(true);\n      } else {\n        loadScript(editorPath, err => {\n          if (err) {\n            reject(false);\n          } else {\n            resolve(true);\n          }\n        });\n      }\n    });\n  };\n\n  // 初始化组件列表\n  const initComponentList = async () => {\n    components.value = await getComponentList();\n  };\n\n  const initRegionData = async (regionData: RegionConfig[]) => {\n    const currentRegionData = cloneDeep(regionData || regions.value);\n    const componentformatData = new Map();\n    //构建map对象，方便获取\n    for (let componentKey in components.value) {\n      const item = components.value[componentKey];\n      item.component.forEach(component => {\n        const { key, region, name, icon } = component;\n        /** 历史问题，进行兼容，只取组件名，排除组件版本的干扰 */\n        const componentName = key.split('@')[0] || key;\n        if (!componentformatData.has(componentName)) {\n          componentformatData.set(componentName, { region, name, icon });\n        }\n      });\n    }\n    const result: Promise<boolean>[] = [];\n    const editorPath: string[] = [];\n\n    currentRegionData.forEach(region => {\n      region.description = descriptEnum[region.area];\n      region.components.forEach(component => {\n        //去除重复的js请求\n        if (!editorPath.includes(component.editorPath)) {\n          editorPath.push(component.editorPath);\n          result.push(initComponentCode(component.editorPath, component));\n        }\n      });\n    });\n    regionDataLoading.value = {\n      TITLE: true,\n      SUMMARY: true,\n      CONTENT: true,\n    };\n\n    Promise.all(result).then(() => {\n      currentRegionData.forEach(region => {\n        region.components.forEach(component => {\n          component.componentCode = window[component.key].default;\n          /** 历史问题，进行兼容，只取组件名，排除组件版本的干扰 */\n          const componentName = component.key.split('@')[0] || component.key;\n          component.extraData = componentformatData.get(componentName);\n        });\n      });\n      regions.value = currentRegionData;\n      regionDataLoading.value = {\n        TITLE: false,\n        SUMMARY: false,\n        CONTENT: false,\n      };\n    });\n  };\n  const deleteComponent = (region: RegionConfig, index: number) => {\n    region.components.splice(index, 1);\n  };\n  const setReginAreaConfig = (newVal: AreaConfig) => {\n    regions.value.find(item => item.area === areaMap.CONTENT)!.areaConfig! = newVal;\n  };\n  \n  //设置组件数据\n  const setComponentConfig = (\n    regionIndex: number,\n    componentIndex: number,\n    componentData: Object\n  ) => {\n    regions.value[regionIndex].components[componentIndex].componentConfig = {\n      ... regions.value[regionIndex].components[componentIndex].componentConfig,\n      ...componentData\n    };\n  };\n\n  //设置组件名字\n  const setComponentName = (component: RegionComponent, name: string) => {\n    component.name = name;\n  };\n  //拷贝组件，注意id需要重新生成\n  const copyComponent = (\n    region: RegionConfig,\n    conmponentIndex: number,\n    component: RegionComponent,\n    regionIndex: number\n  ) => {\n    const currentComponentConfig =\n      regions.value[regionIndex].components[conmponentIndex].componentConfig;\n    const currentCopyComponent = {\n      ...component,\n      id: String(+new Date()),\n      componentConfig: currentComponentConfig,\n    };\n    //更新区域信息\n    region.components.splice(conmponentIndex + 1, 0, cloneDeep(currentCopyComponent));\n  };\n\n  return {\n    addRegionData,\n    deleteComponent,\n    regions,\n    initRegionData,\n    setReginAreaConfig,\n    setComponentName,\n    setComponentConfig,\n    copyComponent,\n    components,\n    regionDataLoading,\n    initComponentList,\n  };\n};\n","relevantFile":"<file_path>types/conditons.ts\nexport enum ConditionFlag {\n  and = 'and',\n  or = 'or',\n}\n\nexport const flagMap: Record<ConditionFlag, string> = {\n  and: '且',\n  or: '或',\n};\n\ninterface ICondition {\n  flag: ConditionFlag;\n  conditions: {\n    sourceName: string; // 数据源名称：表.列\n    sourceKey: string; // 格式：$_表id_表名\n    express: string; // 对比表达式\n    targetType: 'VALUE' | 'FIELD'; // VALUE表示常量; FIELD表示从数据源获取\n    targetValue: string; // targetType值是VALUE时传这个\n    targetName: string; // targetType值是FIELD时传这个,数据源名称：表.列\n    targetKey: string; // targetType值是FIELD时传这个,格式：$_表id_表名\n  }[];\n}\nexport interface IConditionGroup {\n  flag: ConditionFlag;\n  conditionList: ICondition[];\n}\n<file_path>src/hooks/useTriggerData.ts\nimport { CascaderData } from '@/components/Common/interface';\nimport { IDataSourceConfigForDisplay } from 'types/data-source'\n\nimport { ref } from 'vue';\n\nconst allTableData = ref<Datasource[]>([]);   // 所有数据表\nconst noParamsTableData = ref<Datasource[]>([]);  // 无参数据表\nconst parameterlessTable = ref<CascaderData[]>([]);  // 无参数据表级联数据\nconst allTable = ref<CascaderData[]>([]); // 所有数据表级联数据\n// const dataSourceConfigForDisplay = ref<IDataSourceConfigForDisplay[]>([]); // 用于展示的数据源\n\nconst optionConfig = ref<Options>({\n  distributeOptions: {\n    personal: [],\n    business: [],\n  },\n  aiConfigOptions: [],\n  conditionOptions: [],\n  accountOptions: [],\n  logicalOptions: [],\n  serviceOptions: []\n} as unknown as Options);\nexport const useTriggerData = () => {\n  const initTableData = async () => {\n    enum sourceListType {\n      all = '2',\n      noParams = '0',\n    }\n    getDataSourceList(sourceListType.all).then(data => {\n      allTableData.value = data;\n      initAllTable();\n    });\n    getDataSourceList(sourceListType.noParams).then(data => {\n      noParamsTableData.value = data;\n      initParameterlessTable();\n    });\n\n    optionConfig.value = await getOptionsConfig();\n    optionConfig.value.logicalOptions = (await getLogicalList()).map(item => {\n      return {\n        label: item.name,\n        value: item.id,\n      };\n    });\n  };\n  const initParameterlessTable = () => {\n    //构建无参表的数据\n    parameterlessTable.value = noParamsTableData.value.map(item => {\n      return {\n        value: String(item.id),\n        label: item.name,\n        isLeaf: false,\n        children: item.fieldList\n          ? item.fieldList.map(field => {\n              return {\n                value: field,\n                label: field,\n              };\n            })\n          : [],\n<file_path>src/components/Middle/interface/index.ts\nimport { IDataSource, ICascaderData, IDataSourceConfig, IDataSourceConfigForDisplay, IConditionGroupForDisplay } from 'types/data-source'\nimport { IConditionGroup } from 'types/conditons';\nimport {Ref} from 'vue'\nexport enum areaMap {\n  TITLE = 'TITLE',\n  SUMMARY = 'SUMMARY',\n  CONTENT = 'CONTENT',\n}\nexport interface AiConfig {\n  model: string;\n  temperature: number;\n  maxToken: number;\n  account: string;\n  business: string;\n  translateType: 'text' | 'html';\n}\nexport interface RegionComponent {\n  extraData?: any;\n  type: string;\n  name: string;\n  componentConfig: {\n    dataSourceConfig?: IDataSourceConfig[];  // 数据源配置(y已选择的数据源配置)\n    conditionGroup?: IConditionGroup[]; // 组件执行条件（组）\n    executeConfig?: any;  // 执行配置\n  };\n  id: string;  // 组件id\n  key: string;\n  time?: string | number;\n  componentCode?: string;\n  editorPath: string;\n  resultPath: string;\n  componentRef: Ref<any>;\n  // regionType?: string[];\n  // region?: string[];\n  // dataSource: {\n  //   selectedDataSource: IDataSource[];  // 选中的数据源\n  //   selectedDataSourceCascaderData: ICascaderData[];  // 选中的数据源级联数据\n  // }\n  // displayData: {\n  //   // 用于展示的数据源\n  //   dataSourceConfigForDisplay: IDataSourceConfigForDisplay[];\n  //   // 用于展示的条件组\n  //   conditionGroupForDisplay: IConditionGroupForDisplay[];\n  // }\n \n}\nexport interface AreaConfig {\n  polishStyle: string;\n  aiConfig: AiConfig;\n  prompt: string;\n}\nexport interface RegionConfig {\n  area: keyof typeof areaMap;\n  description?: string;\n  areaConfig?: AreaConfig;\n  components: RegionComponent[];\n}","relevantFileList":[],"filePath":"src/hooks/useRegionData.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" null,","deepseek-chat-lite":"null,","deepseek-chat":"```\n// Start Generation Here\n        ref(null),\n// End Generation","copilot":"ref(null),"}},{"prefix":"import { BASE_HOST, IS_PRO } from './env';\n\n// 通用支付页路径\nexport const COMMON_PAY_PAGE_PATH = `${BASE_HOST}/frontPage/pay/common-product-pay/index.html`;\n\n// 订阅中心页面\nexport const COMMON_SUBSCRIPTION_URL = `lh://Setting/subscriptions`;\n\n// 反馈页面（feedback）\nexport const FEEDBACK_PATH = {\n  HOME: `${BASE_HOST}/frontPage/regular/feedback/index.html?showH5TitleBar=1&moduleType=subscriptions`,\n  FEEDBACK: `${BASE_HOST}/frontPage/regular/feedback/index.html#/feedback?showH5TitleBar=1&moduleType=subscriptions`,\n};\n\n// 要闻地址\nexport const NEWS_HEADLINES_PATH = `${BASE_HOST}/frontPage/regular/scene-headlines/index.html#/home`;\n\nexport const qaConfig = {\n  home: [\n    'Your trading and investment mentor.',\n    'Take a tour of AInvest with Aime.',\n  ],\n  headline: [\n    `Check out the latest financial insights I've compiled.`,\n  ],\n  magic: [\n    `Practice using Magic Signal through a fun game! Follow the hints below to start the game.`,\n  ]\n}\n\n// magic signal 介绍列表\nexport const magicS","infill":"ignalIntroList = [\r\n  'Auto technical analysis',\r\n  'Up to 64% prediction accuracy',\r\n  'Powered by Cutting-edge Al technology',\r\n];","suffix":"\r\n","relevantFile":"","relevantFileList":[],"filePath":"src/config/constant.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ignalIntroList = [\r","deepseek-chat-lite":"ignalList = [\r","deepseek-chat":"```\n// Start Generation Here\nexport const magicSignalIntroList = [\n","copilot":"ignalIntroList = [\r\n  'Auto technical analysis',\r\n  'Up to 64% prediction accuracy',\r\n  'Powered by Cutting-edge Al technology',\r\n];"}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    getCurrentTimeRange(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        const _a: TimeRangeType.Week","infill":" = TimeRangeType.Week; // ts check","suffix":"\r\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\r\n      }\r\n    },\r\n  },\r\n  actions: {\r\n    async init() {\r\n      await this.getMemberList();\r\n      this.setDefaultCurrentMember();\r\n      // 广播\r\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\r\n    },\r\n    /**\r\n     * 获取监控成员列表\r\n     * - 不传参数则为当前选中的监控组合\r\n     */\r\n    async getMemberList(id?: SectorItem['id']) {\r\n      this.loading = true;\r\n      try {\r\n        const sectorSwitchStore = useSectorSwitcherStore();\r\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\r\n      } catch (err) {\r\n        console.warn(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};\n<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags(body: GetTagBody) {\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  = TimeRangeType.Week;\r","deepseek-chat-lite":" | TimeRangeType.Month = this.currentTimeRange;\r","deepseek-chat":"```\n// Start Generation Here\n        : TimeRangeType.Week | Time","copilot":" = TimeRangeType.Week; // ts check"}},{"prefix":"import { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\nimport { useMonitorMemberStore } from './sharedState';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const body:GetTagBody = {}\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;","infill":"body.startDate = startDate;\r\n  body.endDate = endDate;","suffix":"\r\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\r\n}\r\n","relevantFile":"<file_path>src/store/index.ts\nexport { useSectorSwitcherStore } from '@/App/Header/sharedState';\nexport { useMainGridStore } from '@/App/MainGrid/sharedState';\nexport { useMonitorMemberStore } from '@/App/MonitorMember/sharedState';\n<file_path>src/App/MonitorMember/sharedState.ts\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    /** 设置默认选中 */\n    setDefaultCurrentMember() {\n      if (this.memberList.length > 0) {\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};\n<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\n  body.codeList = monitorMemberState","copilot":"body.startDate = startDate;\r\n  body.endDate = endDate;"}},{"prefix":"import { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\nimport { useMonitorMemberStore } from './sharedState';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const body:GetTagBody = {}\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  body.startDate = startDate;","infill":"body.endDate = endDate;","suffix":"\r\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\r\n}\r\n","relevantFile":"<file_path>src/store/index.ts\nexport { useSectorSwitcherStore } from '@/App/Header/sharedState';\nexport { useMainGridStore } from '@/App/MainGrid/sharedState';\nexport { useMonitorMemberStore } from '@/App/MonitorMember/sharedState';\n<file_path>src/App/MonitorMember/sharedState.ts\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    /** 设置默认选中 */\n    setDefaultCurrentMember() {\n      if (this.memberList.length > 0) {\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};\n<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat":"```\n// Start Generation Here\n  body.endDate = endDate;","copilot":"body.endDate = endDate;"}},{"prefix":"/** 语言类型 */\nexport type Lang = 'zh' | 'en';\n\n/** 股票代码 */\nexport type StockCode = string;\n/** 市场代码 */\nexport type MarketCode = string;\n\n/** 股票基本类型 */\nexport interface BaseStock {\n  code: StockCode;\n  market: MarketCode;\n}\n\n// 请求状态\nexport enum QUERY_STATE {\n  INIT = 'init',\n  LOADING = 'loading',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n  SUCCESS_EMPTY = 'success-empty',\n}\n\n\n// 优惠券状态","infill":"export enum COUPON_STATUS {\r\n  UNCLAIM = 'unclaim',\r\n  \r\n\r\n","suffix":"}","relevantFile":"<file_path>src/request/api.ts\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });","relevantFileList":[],"filePath":"src/config/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\nexport enum COUPON_STATE {\n","copilot":"export enum COUPON_STATUS {\r\n  UNCLAIM = 'unclaim',\r\n  \r\n\r\n"}},{"prefix":"/** 语言类型 */\nexport type Lang = 'zh' | 'en';\n\n/** 股票代码 */\nexport type StockCode = string;\n/** 市场代码 */\nexport type MarketCode = string;\n\n/** 股票基本类型 */\nexport interface BaseStock {\n  code: StockCode;\n  market: MarketCode;\n}\n\n// 请求状态\nexport enum QUERY_STATE {\n  INIT = 'init',\n  LOADING = 'loading',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n  SUCCESS_EMPTY = 'success-empty',\n}\n\n\n// 优惠券状态\nexport enum COUPON_STATUS {\n  // 未领取\n  UNCLAIM ","infill":"= 'unclaim',\r\n  // 未使用（即已领取qie）\r\n  UNUSE = 'unuse',","suffix":"\r\n\r\n}","relevantFile":"<file_path>src/request/api.ts\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });","relevantFileList":[],"filePath":"src/config/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" = 'unclaim',\r","deepseek-chat-lite":"= 'unclaim',","deepseek-chat":"```\n// Start Generation Here\n  // 已领取\n  CLAIM","copilot":"= 'unclaim',\r\n  // 未使用（即已领取qie）\r\n  UNUSE = 'unuse',"}},{"prefix":"import { SID_TYPE } from '@/config/constant';\nimport { getPayAuthorityState } from '@/request/api';\nimport { IGetPayAuthorityStateReq } from '@/request/interface';\nimport { ref } from 'vue';\n\nexport default () => {\n  // ","infill":"商品权限列表","suffix":"\r\n  const productAuthListRef = ref<IGetPayAuthorityStateReq[]>([]);\r\n\r\n  const queryS\r\n\r\n  // 获取当前用户商品权限\r\n  async function queryData() {\r\n    const sidArr = [\r\n      SID_TYPE.MAGIC_PORTFOLIO,\r\n      SID_TYPE.MAGIC_DAY_TRADING,\r\n      SID_TYPE.AIME_CHAT_BASIC,\r\n      SID_TYPE.AIME_CHAT_PRO,\r\n      SID_TYPE.DAILY_AINSIGHT,\r\n      SID_TYPE.MAGIC_SIGNAL,\r\n      SID_TYPE.TREND_SIGHT,\r\n      SID_TYPE.PEAK_SEEKER,\r\n    ];\r\n    try {\r\n      const res = await getPayAuthorityState({ sid: sidArr.toString() });\r\n      productAuthListRef.value = res;\r\n      console.log('getPayAuthorityState res', res);\r\n    } catch (err) {\r\n      console.log('getPayAuthorityState err', err);\r\n    }\r\n  }\r\n\r\n  getUserProductListAuthority();\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetCouponByCodeListProps,\n  ICouponItem,\n  REDEEM_BY_CODE_TYPE,\n  IRedeemCouponByCodeProps,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO, IS_TEST } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情host\nconst EXT_HOST = IS_TEST ? '//ainvest-extquote.touzime.com' : '//extquota.ainvest.com';\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/hooks/usePayProductInfo.ts\nimport { Ref, ref, watch } from 'vue';\nimport { getProductListConfigOfProductInfo, getI18nData } from '@/request/api';\nimport { IProductListConfigProductInfo } from '@/request/interface';\nimport { QUERY_STATE } from '@/config/interface';\nimport { getLang } from '@overseafront/utils';\nimport { I18N_APP_ID } from '@/config/constant';\n\n// payProductInfo - 所有商品\nexport default () => {\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 商品基本信息列表\n  const productInfoListRef: Ref<IProductListConfigProductInfo[]> = ref([]);\n\n  async function getI18nDataByKeys() {\n    let i18nKeyArr: string[] = [];\n    productInfoListRef.value.forEach(i => {\n      const { titlemultilang, commentList, describeList } = i.productInfomation;\n      i18nKeyArr.push(titlemultilang);\n      commentList.forEach(j => {\n        i18nKeyArr.push(j.titlemultilang);\n        i18nKeyArr.push(j.nicknamemultilang);\n        i18nKeyArr.push(j.contentmultilang);\n      });\n      describeList.forEach(j => {\n        i18nKeyArr.push(j.descriptionmultilang);\n      });\n    });\n    try {\n      const lang = getLang();\n      const res = await getI18nData({ template_name: i18nKeyArr, app_id: I18N_APP_ID });\n      window.console.log('replaceI18nData res', res);\n      productInfoListRef.value.forEach(i => {\n        const { titlemultilang, commentList, describeList } = i.productInfomation;\n        i.productInfomation.title = res?.[titlemultilang]?.[lang] || i.productInfomation.title;\n        commentList.forEach(j => {\n          j.title = res?.[j.titlemultilang]?.[lang] || j.title;\n          j.nickname = res?.[j.nicknamemultilang]?.[lang] || j.nickname;\n          j.content = res?.[j.contentmultilang]?.[lang] || j.content;\n        });\n        describeList.forEach(j => {\n          j.description = res?.[j.descriptionmultilang]?.[lang] || j.description;\n        });\n      });\n    } catch (err) {\n      window.console.log('replaceI18nData err', err);\n    }\n  }\n\n  // 获取数据\n  async function queryData() {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await getProductListConfigOfProductInfo();\n      window.console.log('getProductListConfigOfProductInfo res ', res);\n      productInfoListRef.value = res.payProductInfo;\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n<file_path>src/request/interface.ts\nimport { SID_TYPE } from '@/config/constant';\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateReq {\n  sid: number | string;\n}\n\n// 支付权限状态\nexport interface IGetPayAuthorityStateRes {\n  sid: string;\n  authenticate: boolean;\n}\n\n// ===============================================================================\n\nexport interface IUserComment {\n  icon: string;\n  nickname: string;\n  nicknamemultilang: string;\n  content: string;\n  contentmultilang: string;\n  title: string;\n  titlemultilang: string;\n  grade: string;\n  score: number;\n}\n\nexport interface IProductDescribe {\n  description: string;\n  descriptionmultilang: string;\n}\n\nexport interface IProductInfomation {\n  title: string;\n  titlemultilang: string;\n  icon: string;\n  describeList: IProductDescribe[];\n  productDescribeUrl: {\n    url: string;\n  };\n  commentList: IUserComment[];\n}\n\nexport interface IProductListConfigProductInfo {\n  // sid\n  product: SID_TYPE;\n  // 产品信息模块\n  productInfomation: IProductInfomation;\n  // 付费选股模块\n  premiumScreener: {};\n}\n\n// 运营中台 - 商品配置显示信息\nexport interface GetProductListConfigOfProductInfoProps {\n  payProductInfo: IProductListConfigProductInfo[];\n}\n\n// ===============================================================================\n\n// i18n多语言数据\n<file_path>src/hooks/useCouponStatus.ts\nimport { COUPON_BUSINESS_STATUS, QUERY_STATE } from '@/config/interface';\nimport { redeemCouponByCode } from '@/request/api';\nimport { REDEEM_BY_CODE_TYPE } from '@/request/interface';\nimport { toast } from '@overseafront/utils';\nimport { Ref, ref } from 'vue';\n\nexport default () => {\n  // 优惠券状态\n  const currCouponStatus = ref(COUPON_BUSINESS_STATUS.TO_CLAIM);\n\n  // 请求状态\n  const queryState = ref(QUERY_STATE.INIT);\n\n  // 通过code兑换优惠券\n  async function redeemByCode(redeemCode: string) {\n    // loading\n    queryState.value = QUERY_STATE.LOADING;\n    try {\n      const res = await redeemCouponByCode({ maskCode: redeemCode });\n      window.console.log('redeemCouponByCode res', res);\n      toast(res);\n      if (res === REDEEM_BY_CODE_TYPE.SUCCESS) {\n        currCouponStatus.value = COUPON_BUSINESS_STATUS.TO_USE;\n      } else {\n        currCouponStatus.value = COUPON_BUSINESS_STATUS.CLAIM_FAIL;\n      }\n      // loading\n      queryState.value = QUERY_STATE.SUCCESS;\n    } catch (err) {\n      window.console.log('redeemCouponByCode err', err);\n      // loading\n      queryState.value = QUERY_STATE.FAIL;\n    }\n  }\n\n  return {\n    redeemByCode,\n    currCouponStatus,\n    queryState,\n  };\n};","relevantFileList":[],"filePath":"src/hooks/useUserProductAuthority.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" 获取当前用户商品权限\r","deepseek-chat-lite":"获取当前用户商品权限\r","deepseek-chat":"```\n// Start Generation Here\n  const queryState = ref(QUERY_","copilot":"商品权限列表"}},{"prefix":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from '@/router';\nconst app = createApp(App);\nimport i18n from '@/assets/lang';\nimport '@atom/ainvest-tokens/dist/variables.css';\nimport { initTheme } from '@atom/ainvest-tokens';\ninitTheme({\n  cluster: 'ainvest',\n});\n\n// apm\napp.config.errorHandler = (error, vm, info) => {\n  try {\n    window.ClientMonitor.reportFrameErrors(\n      {\n        category: 'vue',\n        grade: 'error',\n        errorUrl: window.location.href,\n        message: info,\n        stack: error.stack,\n      },\n      error\n    );\n  } catch (e) {\n    window.console.warn(e);\n  }\n};\n\n// #region 日期插件配置\n// 导入日期插件\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear';\ndayjs.extend(utc);\ndayjs.extend(timezone);\ndayjs.extend(quarterOfYear);\nwindow.dayjs = dayjs;\n// #endregion\n\n// #region 全局状态管理\n// 导入 pinia 状态管理器\nimport { createPinia } from 'pinia';\nconst pinia = createPinia();\napp.use(pinia);\n// 导入状态数据库\nimport { useMainStore } from './store';\nimport {\n  getLang,\n  getTheme,\n  getStockCodeMode,\n  getNativeAppVersion,\n  registerChangeTheme,\n  registerOnShow,\n  registerOnHide,\n} from '@overseafront/utils';\n\nimport { changeThemeCbProxy, onHideCbProxy, onShowCbProxy } from '@/utils/cbProxy';\n\nconst store = useMainStore();\nconst lang = getLang();\n\nconst theme = getTheme();\nconst appVersion = getNativeAppVersion();\nconst stockCodeMode = getStockCodeMode();\n// store 初始化数据\nstore.setLang(lang);\nstore.setTheme(theme);\nstore.setStockCodeMode(stockCodeMode);\nstore.setAppInfo({\n  appVersion,\n});\n// 重置主题样式\nif (theme === 'dark') {\n  document.documentElement.setAttribute('theme-mode', 'dark');\n}\n\n// @ts-ignore\nregisterChangeTheme(changeThemeCbProxy.registerCb());\nregisterOnShow(onShowCbProxy.registerCb());\nregisterOnHide(onHideCbProxy.registerCb());\nchangeThemeCbProxy.on('setTheme', (resp: any) => {\n  const { themeType, chgColor } = resp.data;\n  const themeLabel = 'theme-mode';\n  window.console.log('chgColor==>', chgColor);\n  const newTheme = +themeType === 0 ? 'light' : 'dark';\n  const newClassName = newTheme === 'dark' ? 'dark' : '';\n  document.documentElement.setAttribute(themeLabel, newClassName);\n  store.setTheme(newTheme);\n  const stockColorMode = +chgColor === 0 ? '' : 'reverse';\n  document.documentElement.setAttribute('stock-color-mode', stockColorMode);\n  store.setStockCodeMode(chgColor);\n});\n// #endregion\n\n// #region http请求配置\n// @ts-ignore\nimport httpRequest from '@overseafront/http-request';\nimport { BT_CODE } from './config/project';\nimport elk from '@/utils/elk';\n// 初始化elk\nelk.init({\n  btcode: BT_CODE,\n});\n\nconst httpRequestConfig = {\n  btcode: BT_CODE,\n  baseURL: '',\n  lang: 'en',\n  env: 'test',\n  isRequestByNative: false,\n  // token: '16bacbbf5ab0e589a29fe44b8e6a3aaf1', // has auth\n  // token: '19e4a5a46e5f319d571361b804e2b3b60',\n  ...(IS_DEV\n    ? {\n        token: '12fa4e37a0a5f2c494df5e5f761e49532',\n        fingerprint: '8f3fa168-5040-45cf-8de1-58a2cd3c83ab',\n      }\n    : {}),\n};\napp.use(httpRequest, httpRequestConfig);\n// #endregion\n\n// 全局公共样式\nimport '@/assets/styles/index.less';\n\n// #region main函数\nimport {\n  ConfigProvider,\n  Popup,\n  Skeleton,\n  Image as VanImage,\n  Icon,\n} from 'vant';\n// NOTE: vant 3.x/4.x 自动按需引入组件样式会有问题 暂时全部引入 等待官方修复后再按需引入\n// import 'vant/lib/index.css';\nimport 'vant/es/popup/style/index';\nimport 'vant/es/skeleton/style/index';\nimport 'vant/es/image/","infill":"style/index';\r\nimport ","suffix":"\r\n\r\nfunction useVant() {\r\n  app\r\n    .use(ConfigProvider)\r\n    .use(Popup)\r\n    .use(Skeleton)\r\n    .use(VanImage)\r\n}\r\n\r\nimport directives from '@/directives';\r\nimport { IS_DEV } from './config/env';\r\n\r\nfunction initRender() {\r\n  useVant();\r\n  app.use(router).use(i18n).use(directives);\r\n  app.mount('#app');\r\n}\r\n\r\ninitRender();\r\n","relevantFile":"<file_path>src/request/interface.ts\n}\n/**\n * @startId 翻页请求时，上一页的最后一条id\n * @tab 请求所属tab，取自tab接口的当前param\n * @size 每页请求数据量\n * @lang 语言模式\n */\nexport interface QueryBatchParams {\n  startId: string;\n  tab?: string;\n  size: number;\n  lang: string;\n  terminal?: 'app' | 'web';\n}\n\n/**\n * @newsId 资讯ID\n * @contentId 底层页相关id\n * @title 资讯标题\n * @summary 资讯摘要\n * @content 正文\n * @source 数据源\n * @coverImage 封面图信息\n * @tagList 标签列表 （行情信息）\n * @publishTime 发布时间（毫秒）\n * @newsType 类型 （快讯/长文等）\n * @newsFrom 生产源 （manual表示人工，还有aigc/auto/third_part）\n * @newsFormat 格式（common表示图文，video表示视频）\n * @readTime 阅读时长\n * @topped 是否置顶\n * @lang 语言模式\n * @additionInfo 附加信息相关账户/解读信息\n */\nexport interface ListData {\n  newsId: string;\n  contentId: string;\n  title: string;\n  summary: string;\n  content: string;\n  coverImage?: CoverImage;\n  topped?: boolean;\n  tagList?: TagList[];\n  source?: string;\n  sourceUrl?: string;\n  publishTime?: number;\n  newsType?: string;\n  newsFormat?: 'common' | 'video';\n  newsFrom?: string;\n  lang?: string;\n  additionInfo?: Partial<AdditionInfo> | null;\n  charge?: Charge;\n}\n\nexport enum Charge {\n  free = 0,\n  charge,\n}\n\nexport interface AdditionInfo {\n  account: {\n<file_path>src/request/api.ts\nimport { ListData, QueryBatchParams } from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV } from '@/config/env';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const queryBatch = (data: QueryBatchParams) =>\n  customFetchAdapter<ListData[]>({\n    url: `${BASE_URL}/gw/news_f10/v1/headline/queryBatch`,\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data,\n  });\n\n// ==================================================================================================","relevantFileList":[],"filePath":"src/main.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" style/index';\r","deepseek-chat-lite":"style/index';","deepseek-chat":"```\n// Start Generation Here\nimport { Icon } from 'vant';","copilot":"style/index';\r\nimport "}},{"prefix":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from '@/router';\nconst app = createApp(App);\nimport i18n from '@/assets/lang';\nimport '@atom/ainvest-tokens/dist/variables.css';\nimport { initTheme } from '@atom/ainvest-tokens';\ninitTheme({\n  cluster: 'ainvest',\n});\n\n// apm\napp.config.errorHandler = (error, vm, info) => {\n  try {\n    window.ClientMonitor.reportFrameErrors(\n      {\n        category: 'vue',\n        grade: 'error',\n        errorUrl: window.location.href,\n        message: info,\n        stack: error.stack,\n      },\n      error\n    );\n  } catch (e) {\n    window.console.warn(e);\n  }\n};\n\n// #region 日期插件配置\n// 导入日期插件\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear';\ndayjs.extend(utc);\ndayjs.extend(timezone);\ndayjs.extend(quarterOfYear);\nwindow.dayjs = dayjs;\n// #endregion\n\n// #region 全局状态管理\n// 导入 pinia 状态管理器\nimport { createPinia } from 'pinia';\nconst pinia = createPinia();\napp.use(pinia);\n// 导入状态数据库\nimport { useMainStore } from './store';\nimport {\n  getLang,\n  getTheme,\n  getStockCodeMode,\n  getNativeAppVersion,\n  registerChangeTheme,\n  registerOnShow,\n  registerOnHide,\n} from '@overseafront/utils';\n\nimport { changeThemeCbProxy, onHideCbProxy, onShowCbProxy } from '@/utils/cbProxy';\n\nconst store = useMainStore();\nconst lang = getLang();\n\nconst theme = getTheme();\nconst appVersion = getNativeAppVersion();\nconst stockCodeMode = getStockCodeMode();\n// store 初始化数据\nstore.setLang(lang);\nstore.setTheme(theme);\nstore.setStockCodeMode(stockCodeMode);\nstore.setAppInfo({\n  appVersion,\n});\n// 重置主题样式\nif (theme === 'dark') {\n  document.documentElement.setAttribute('theme-mode', 'dark');\n}\n\n// @ts-ignore\nregisterChangeTheme(changeThemeCbProxy.registerCb());\nregisterOnShow(onShowCbProxy.registerCb());\nregisterOnHide(onHideCbProxy.registerCb());\nchangeThemeCbProxy.on('setTheme', (resp: any) => {\n  const { themeType, chgColor } = resp.data;\n  const themeLabel = 'theme-mode';\n  window.console.log('chgColor==>', chgColor);\n  const newTheme = +themeType === 0 ? 'light' : 'dark';\n  const newClassName = newTheme === 'dark' ? 'dark' : '';\n  document.documentElement.setAttribute(themeLabel, newClassName);\n  store.setTheme(newTheme);\n  const stockColorMode = +chgColor === 0 ? '' : 'reverse';\n  document.documentElement.setAttribute('stock-color-mode', stockColorMode);\n  store.setStockCodeMode(chgColor);\n});\n// #endregion\n\n// #region http请求配置\n// @ts-ignore\nimport httpRequest from '@overseafront/http-request';\nimport { BT_CODE } from './config/project';\nimport elk from '@/utils/elk';\n// 初始化elk\nelk.init({\n  btcode: BT_CODE,\n});\n\nconst httpRequestConfig = {\n  btcode: BT_CODE,\n  baseURL: '',\n  lang: 'en',\n  env: 'test',\n  isRequestByNative: false,\n  // token: '16bacbbf5ab0e589a29fe44b8e6a3aaf1', // has auth\n  // token: '19e4a5a46e5f319d571361b804e2b3b60',\n  ...(IS_DEV\n    ? {\n        token: '12fa4e37a0a5f2c494df5e5f761e49532',\n        fingerprint: '8f3fa168-5040-45cf-8de1-58a2cd3c83ab',\n      }\n    : {}),\n};\napp.use(httpRequest, httpRequestConfig);\n// #endregion\n\n// 全局公共样式\nimport '@/assets/styles/index.less';\n\n// #region main函数\nimport {\n  ConfigProvider,\n  Popup,\n  Skeleton,\n  Image as VanImage,\n  Icon,\n} from 'vant';\n// NOTE: vant 3.x/4.x 自动按需引入组件样式会有问题 暂时全部引入 等待官方修复后再按需引入\n// import 'vant/lib/index.css';\nimport 'vant/es/popup/style/index';\nimport 'vant/es/skeleton/style/index';\nimport 'vant/es/image/style/index';\nimport 'vant/es","infill":"/icon/style/index';","suffix":"\r\n\r\nfunction useVant() {\r\n  app\r\n    .use(ConfigProvider)\r\n    .use(Popup)\r\n    .use(Skeleton)\r\n    .use(VanImage)\r\n    .use(Icon)\r\n}\r\n\r\nimport directives from '@/directives';\r\nimport { IS_DEV } from './config/env';\r\n\r\nfunction initRender() {\r\n  useVant();\r\n  app.use(router).use(i18n).use(directives);\r\n  app.mount('#app');\r\n}\r\n\r\ninitRender();\r\n","relevantFile":"<file_path>src/request/interface.ts\n}\n/**\n * @startId 翻页请求时，上一页的最后一条id\n * @tab 请求所属tab，取自tab接口的当前param\n * @size 每页请求数据量\n * @lang 语言模式\n */\nexport interface QueryBatchParams {\n  startId: string;\n  tab?: string;\n  size: number;\n  lang: string;\n  terminal?: 'app' | 'web';\n}\n\n/**\n * @newsId 资讯ID\n * @contentId 底层页相关id\n * @title 资讯标题\n * @summary 资讯摘要\n * @content 正文\n * @source 数据源\n * @coverImage 封面图信息\n * @tagList 标签列表 （行情信息）\n * @publishTime 发布时间（毫秒）\n * @newsType 类型 （快讯/长文等）\n * @newsFrom 生产源 （manual表示人工，还有aigc/auto/third_part）\n * @newsFormat 格式（common表示图文，video表示视频）\n * @readTime 阅读时长\n * @topped 是否置顶\n * @lang 语言模式\n * @additionInfo 附加信息相关账户/解读信息\n */\nexport interface ListData {\n  newsId: string;\n  contentId: string;\n  title: string;\n  summary: string;\n  content: string;\n  coverImage?: CoverImage;\n  topped?: boolean;\n  tagList?: TagList[];\n  source?: string;\n  sourceUrl?: string;\n  publishTime?: number;\n  newsType?: string;\n  newsFormat?: 'common' | 'video';\n  newsFrom?: string;\n  lang?: string;\n  additionInfo?: Partial<AdditionInfo> | null;\n  charge?: Charge;\n}\n\nexport enum Charge {\n  free = 0,\n  charge,\n}\n\nexport interface AdditionInfo {\n  account: {\n<file_path>src/request/api.ts\nimport { ListData, QueryBatchParams } from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV } from '@/config/env';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const queryBatch = (data: QueryBatchParams) =>\n  customFetchAdapter<ListData[]>({\n    url: `${BASE_URL}/gw/news_f10/v1/headline/queryBatch`,\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data,\n  });\n\n// ==================================================================================================","relevantFileList":[],"filePath":"src/main.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" /icon/style/index';","deepseek-chat-lite":"/icon/style/index';","deepseek-chat":"```\n// Start Generation Here\nimport { useQuery } from 'vue-","copilot":"/icon/style/index';"}},{"prefix":"import { COUPON_STATUS } from '@/config/interface';\nimport { redeemCouponByCode } from '@/request/api';\nimport { REDEEM_BY_CODE_TYPE } from '@/request/interface';\nimport { toast } from '@overseafront/utils';\nimport { Ref, ref } from 'vue';\n\nexport default (redeemCode: Ref<string>) => {\n  // 优惠券状态\n  const currCouponStatus = ref(COUPON_STATUS.TO_CLAIM);\n\n  // 通过code兑换优惠券\n  async function redeemByCode() {\n    try {\n      const res = await redeemCouponByCode({ maskCode: redeemCode.value });\n      window.console.log('redeemCouponByCode res', res);\n      toast(res);\n      if (res === REDEEM_BY_CODE_TYPE.SUCCESS) {\n        currCouponStatus.value = COUPON_STATUS.TO_USE;\n      } else {\n        currCouponStatus","infill":".value = COUPON_STATUS.CLAIM_FAIL;","suffix":"\r\n      }\r\n    } catch (err) {\r\n      window.console.log('redeemCouponByCode err', err);\r\n    }\r\n  }\r\n\r\n  return {\r\n    redeemByCode,\r\n    currCouponStatus,\r\n  };\r\n};\r\n","relevantFile":"<file_path>src/request/api.ts\n  IGetCouponByCodeListProps,\n  ICouponItem,\n  REDEEM_BY_CODE_TYPE,\n  IRedeemCouponByCodeProps,\n} from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV, IS_PRO, IS_TEST } from '@/config/env';\nimport elk, { ELK_CODE, ELK_TYPE } from '@/utils/elk';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n// 运营中台配置\nconst configUrl = `${BASE_URL}/gw/mobileweb-dynamicconfig/open/api/v1/config_list?key=`;\n\n// 扶摇url\nconst fuyaoUrl = `${BASE_URL}/gw/fuyao-gateway/fuyao`;\n\n// 扩展行情host\nconst EXT_HOST = IS_TEST ? '//ainvest-extquote.touzime.com' : '//extquota.ainvest.com';\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        const { config: resConfig, headers, data: resData, status } = res;\n        // 三方id为空\n        elk.sendElk({\n          code: ELK_CODE.HTTP_BUSINESS_ERROR,\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n<file_path>src/config/interface.ts\n/** 语言类型 */\nexport type Lang = 'zh' | 'en';\n\n/** 股票代码 */\nexport type StockCode = string;\n/** 市场代码 */\nexport type MarketCode = string;\n\n/** 股票基本类型 */\nexport interface BaseStock {\n  code: StockCode;\n  market: MarketCode;\n}\n\n// 请求状态\nexport enum QUERY_STATE {\n  INIT = 'init',\n  LOADING = 'loading',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n  SUCCESS_EMPTY = 'success-empty',\n}\n\n// 优惠券状态\nexport enum COUPON_STATUS {\n  // 未领取（初始状态）\n  TO_CLAIM = 'to_claim',\n  // 未使用（即已领取且可使用）\n  TO_USE = 'to_use',\n  // 领取失败（系统/包不对，其他原因等）\n  CLAIM_FAIL = 'claim_fail',\n}","relevantFileList":[],"filePath":"src/hooks/useCouponStatus.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":".value = COUPON_STATUS.TO_CLAIM;","deepseek-chat-lite":".value = COUPON_STATUS.FAIL;","deepseek-chat":"```\n// Start Generation Here\n          .value = COUPON_STATUS","copilot":".value = COUPON_STATUS.CLAIM_FAIL;"}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters:{\n    /**\n     * \n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    getCurrentTimeRange(){\n      const startDate = dayjs(window.curDate","infill":").format('YYYY-MM-DD')\r\n      if(this.currentTimeRange === TimeRangeType.Today){\r\n        return [startDate,startDate]","suffix":"\r\n      }\r\n      if(this.currentTimeRange === TimeRangeType.Week){\r\n        \r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    async init() {\r\n      await this.getMemberList();\r\n      this.setDefaultCurrentMember();\r\n      // 广播\r\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\r\n    },\r\n    /**\r\n     * 获取监控成员列表\r\n     * - 不传参数则为当前选中的监控组合\r\n     */\r\n    async getMemberList(id?: SectorItem['id']) {\r\n      this.loading = true;\r\n      try {\r\n        const sectorSwitchStore = useSectorSwitcherStore();\r\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\r\n      } catch (err) {\r\n        console.warn(err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};\n<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags(body: GetTagBody) {\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":").startOf('day').format('YYYY-MM-DD');\r","deepseek-chat-lite":").format('YYYY-MM-DD');","deepseek-chat":"```\n// Start Generation Here\n        .startOf('day').format('","copilot":").format('YYYY-MM-DD')\r\n      if(this.currentTimeRange === TimeRangeType.Today){\r\n        return [startDate,startDate]"}},{"prefix":"import { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\nimport { useMonitorMemberStore } from './sharedState';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags(body: GetTagBody) {\n  const monitorMemberState ","infill":"= useMonitorMemberStore();\r\n  const { startDate, endDate } = monitorMemberState.getCurrentTimeRange;","suffix":"\r\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\r\n}\r\n","relevantFile":"<file_path>src/store/index.ts\nexport { useSectorSwitcherStore } from '@/App/Header/sharedState';\nexport { useMainGridStore } from '@/App/MainGrid/sharedState';\nexport { useMonitorMemberStore } from '@/App/MonitorMember/sharedState';\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};\n<file_path>src/App/MonitorMember/sharedState.ts\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    getCurrentTimeRange(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    /** 设置默认选中 */\n    setDefaultCurrentMember() {\n      if (this.memberList.length > 0) {\n<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" = useMonitorMemberStore();\r","deepseek-chat-lite":"= useMonitorMemberStore();","deepseek-chat":"```\n// Start Generation Here\n  = useMonitorMemberStore();\n ","copilot":"= useMonitorMemberStore();\r\n  const { startDate, endDate } = monitorMemberState.getCurrentTimeRange;"}},{"prefix":"import { http } from '@/http';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\nimport { apiList } from '@/http/apiList';\nimport { GetTagBody } from './types/apiRequest';\nimport { useMonitorMemberStore } from './sharedState';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList  = []\n  const body: GetTagBody = {\n    codeList: [], // TODO:\n    orgIdList: [],","infill":"\r\n    sta","suffix":"rtDate,\r\n    endDate,\r\n  };\r\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\r\n}\r\n","relevantFile":"<file_path>src/store/index.ts\nexport { useSectorSwitcherStore } from '@/App/Header/sharedState';\nexport { useMainGridStore } from '@/App/MainGrid/sharedState';\nexport { useMonitorMemberStore } from '@/App/MonitorMember/sharedState';\n<file_path>src/App/MonitorMember/sharedState.ts\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { SortType, TimeRangeType } from './types/enums';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport dayjs from 'dayjs';\nimport { API_TIME_FMT } from '@/utils/const';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    /** 设置默认选中 */\n    setDefaultCurrentMember() {\n      if (this.memberList.length > 0) {\n<file_path>src/App/MonitorMember/types/apiRequest.ts\n/** 获取异动标签返回结果类型 */\nexport type GetTagBody = {\n  /**债券代码列表 */\n  codeList: string[];\n  /** 机构id列表 */\n  orgIdList: string[];\n  startDate: string;\n  endDate: string;\n};\n<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/request.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat-lite":" // TODO:","deepseek-chat":"```\n// Start Generation Here\n    orgIdList: monitorMemberState.","copilot":"\r\n    sta"}},{"prefix":"import { BASE_HOST, IS_PRO } from './env';\n\n// 通用支付页路径\nexport const COMMON_PAY_PAGE_PATH = `${BASE_HOST}/frontPage/pay/common-product-pay/index.html`;\n\n// 订阅中心页面\nexport const COMMON_SUBSCRIPTION_URL = `lh://Setting/subscriptions`;\n\n// 反馈页面（feedback）\nexport const FEEDBACK_PATH = {\n  HOME: `${BASE_HOST}/frontPage/regular/feedback/index.html?showH5TitleBar=1&moduleType=subscriptions`,\n  FEEDBACK: `${BASE_HOST}/frontPage/regular/feedback/index.html#/feedback?showH5TitleBar=1&moduleType=subscriptions`,\n};\n\n// 要闻地址","infill":"export const NEWS_PATH = `${BASE_HOST}/frontPage/regular/scene-headlines/index.html#/home#/home/micro-scene-headlines`;","suffix":"\r\n\r\nexport const qaConfig = {\r\n  home: [\r\n    'Your trading and investment mentor.',\r\n    'Take a tour of AInvest with Aime.',\r\n  ],\r\n  headline: [\r\n    `Check out the latest financial insights I've compiled.`,\r\n  ],\r\n  magic: [\r\n    `Practice using Magic Signal through a fun game! Follow the hints below to start the game.`,\r\n  ]\r\n}\r\n","relevantFile":"<file_path>src/utils/formatTime.ts\n * @returns\n */\nexport const formatESTTime = function (timestamp?: number, format = 'YYYYMMDD') {\n  // 美东时区标记\n  return window.dayjs(timestamp).tz().format(format);\n};\n\n/**\n * 传入时间戳是否为美东时间 今天\n * @param timestamp\n * @returns\n */\nexport const isESTToday = function (timestamp: number) {\n  // 美东时间今天的日期\n  const todayESTDate = formatESTTime();\n  // 美东时间传入时间戳的日期\n  const timestampDate = formatESTTime(timestamp);\n  return todayESTDate === timestampDate;\n};\n\n/**\n * 传入时间戳是否为美东时间 昨天\n * @param timestamp\n * @returns\n */\nexport const isESTYesterday = function (timestamp: number) {\n  const yesterdayOffset = -1;\n  // 美东时间昨天的日期\n  const yesterdayESTDate = window.dayjs().tz().add(yesterdayOffset, 'day').format('YYYYMMDD');\n  // 美东时间传入时间戳的日期\n  const timestampDate = formatESTTime(timestamp);\n  return yesterdayESTDate === timestampDate;\n};\n\n/**\n * 传入时间戳是否为美东时间 今年\n * @param timestamp\n * @returns\n */\nexport const isESTThisYear = function (timestamp: number) {\n  const thisYear = window.dayjs().tz().get('year');\n  const getYear = window.dayjs(timestamp).tz().get('year');\n  return thisYear === getYear;\n};\n\n/**\n * 获取昨天及以前的日期文案\n * @param timestamp\n * @param currTimestamp\n * @param isZh\n * @returns\n */\nconst getMoreYesterdayDate = (timestamp: number, currTimestamp: number, isZh: boolean = false) => {\n  // 获取是否是昨天、今年（美东）\n  const isYesterday = isESTYesterday(timestamp);\n  const isThisYear = isESTThisYear(timestamp);\n  if (isYesterday) {\n    // 昨天\n    return `${isZh ? '昨天' : 'Yesterday '}`;\n  } else if (isThisYear) {\n<file_path>src/main.ts\n// 初始化elk\nelk.init({\n  btcode: BT_CODE,\n});\n\nconst httpRequestConfig = {\n  btcode: BT_CODE,\n  baseURL: '',\n  lang: 'en',\n  env: 'test',\n  isRequestByNative: false,\n  // token: '16bacbbf5ab0e589a29fe44b8e6a3aaf1', // has auth\n  // token: '19e4a5a46e5f319d571361b804e2b3b60',\n  ...(IS_DEV\n    ? {\n        token: '12fa4e37a0a5f2c494df5e5f761e49532',\n        fingerprint: '8f3fa168-5040-45cf-8de1-58a2cd3c83ab',\n      }\n    : {}),\n};\napp.use(httpRequest, httpRequestConfig);\n// #endregion\n\n// 全局公共样式\nimport '@/assets/styles/index.less';\n\n// #region main函数\nimport {\n  ConfigProvider,\n  Popup,\n  Skeleton,\n  Image as VanImage,\n  Icon,\n} from 'vant';\n// NOTE: vant 3.x/4.x 自动按需引入组件样式会有问题 暂时全部引入 等待官方修复后再按需引入\n// import 'vant/lib/index.css';\nimport 'vant/es/popup/style/index';\nimport 'vant/es/skeleton/style/index';\nimport 'vant/es/image/style/index';\nimport 'vant/es/icon/style/index';\n\nfunction useVant() {\n  app\n    .use(ConfigProvider)\n    .use(Popup)\n    .use(Skeleton)\n    .use(VanImage)\n    .use(Icon)\n}\n\nimport directives from '@/directives';\nimport { IS_DEV } from './config/env';\n\nfunction initRender() {\n  useVant();\n  app.use(router).use(i18n).use(directives);\n  app.mount('#app');\n}\n\ninitRender();\n<file_path>src/request/api.ts\nimport { ListData, QueryBatchParams } from './interface';\nimport httpRequest from '@overseafront/http-request';\nimport { API_HOST, IS_DEV } from '@/config/env';\n\nconst BASE_URL = IS_DEV ? '' : API_HOST;\n\n/** 自定义请求适配器 打印请求相应 */\nfunction customFetchAdapter<Res>(config: any) {\n  window.console.log('-----------config-------------', config);\n  return new Promise<Res>(async (resolve, reject) => {\n    try {\n      const res = await httpRequest.send(config);\n      const { data } = res;\n      window.console.log(`%c ${config.url}-->res data:\\n`, 'color: #409EFF', config.data, data);\n      // 判断status_code字段\n      if (data.hasOwnProperty('status_code') && data.status_code !== 0) {\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const queryBatch = (data: QueryBatchParams) =>\n  customFetchAdapter<ListData[]>({\n    url: `${BASE_URL}/gw/news_f10/v1/headline/queryBatch`,\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    data,\n  });\n\n// ==================================================================================================\n<file_path>src/utils/localUtils.ts\n  }\n};\n\n// 判断并添加http协议\nexport function addHttpProtocol(uri: string): string {\n  const hasHttp = uri.indexOf('http') !== -1;\n  if (hasHttp) {\n    return uri;\n  } else {\n    return `${document.location.protocol}${uri}`;\n  }\n}\n\n// 获取aime的comefrom参数\nexport const getAimeComefrom = () => {\n  const platformStr = checkIsIOS() ? 'iOS' : 'Android';\n  const bundleName = getBundleNameLowerCase();\n  // 映射comefrom中包名\n  const bundleNameStrObj = {\n    [BUNDLE_NAME_TYPE.AINVEST]: 'Ainvest',\n    [BUNDLE_NAME_TYPE.SCREENER]: 'Screener',\n    [BUNDLE_NAME_TYPE.SIMULATOR]: 'PaperTrading',\n    [BUNDLE_NAME_TYPE.PENNY]: 'PennyStocks',\n  };\n  const bundleNameStr = bundleNameStrObj[bundleName] || 'Ainvest';\n  return `${platformStr}${bundleNameStr}PayIntroduce`;\n};\n\n// 获取aime的协议路径\nexport function getAimeUrl() {\n  const comefrom = getAimeComefrom();\n\n  // 科技包\n  const AIME_INNER_URL = `https://tech.ainvest.com/webapp/?comefrom=${comefrom}`;\n\n  const AIME_URL = `lh://Webview/openKuahoo?url=${encodeURIComponent(AIME_INNER_URL)}`;\n\n  return AIME_URL;\n}\n\n// 初始化回流对象 TODO\nexport function initBackwash(ffid: string) {\n  if (!checkIsInApp()) {\n    backwash.init({});\n  }\n}\n\n// 触发回流 TODO\nexport function startToBackwash() {\n  backwash.startApp('')\n}\n\nexport const uniqueFunc = <T extends Record<string, any>>(arr: T[], uniId: string): T[] => {\n  const res = new Map();\n  return arr.filter(item => !res.has(item[uniId]) && res.set(item[uniId], true));\n};\n\n/** 获取账号落地页url */\nexport const getAccountLandingPageUrl = (param: { accountId: string }) =>\n  `${BASE_HOST}/frontPage/regular/discover-education/accountLandingPage.html?accountId=${param.accountId}`;","relevantFileList":[],"filePath":"src/config/constant.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" ","deepseek-chat":"```\n// Start Generation Here\nexport const IMPORTANT_NEWS_PATH","copilot":"export const NEWS_PATH = `${BASE_HOST}/frontPage/regular/scene-headlines/index.html#/home#/home/micro-scene-headlines`;"}},{"prefix":"/** 语言类型 */\nexport type Lang = 'zh' | 'en';\n\n/** 股票代码 */\nexport type StockCode = string;\n/** 市场代码 */\nexport type MarketCode = string;\n\n/** 股票基本类型 */\nexport interface BaseStock {\n  code: StockCode;\n  market: MarketCode;\n}\n\n// 请求状态\nexport enum QUERY_STATE {\n  INIT = 'init',\n  LOADING = 'loading',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n  SUCCESS_EMPTY = 'success-empty',\n}\n\n\n// 优惠券状态\nexport enum COUPON_STATUS {\n  // 未领取\n  UNCLAIM = 'unclaim',\n  // 未使用（即已领取且可使用）\n  UNU","infill":"SE = 'unuse',","suffix":"\r\n  // \r\n}","relevantFile":"<file_path>src/request/api.ts\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });","relevantFileList":[],"filePath":"src/config/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" SED = 'unused',","deepseek-chat-lite":"SED = 'unused',\r","deepseek-chat":"```\n// Start Generation Here\n  // 已使用\n  USED","copilot":"SE = 'unuse',"}},{"prefix":"/** 语言类型 */\nexport type Lang = 'zh' | 'en';\n\n/** 股票代码 */\nexport type StockCode = string;\n/** 市场代码 */\nexport type MarketCode = string;\n\n/** 股票基本类型 */\nexport interface BaseStock {\n  code: StockCode;\n  market: MarketCode;\n}\n\n// 请求状态\nexport enum QUERY_STATE {\n  INIT = 'init',\n  LOADING = 'loading',\n  SUCCESS = 'success',\n  FAIL = 'fail',\n  SUCCESS_EMPTY = 'success-empty',\n}\n\n\n// 优惠券状态\nexport enum COUPON_STATUS {\n  // 未领取（初始状态）\n  TO_CLAIM = 'to_claim',\n  // 未使用（即已领取且可使用）\n  TO_USE = 'to_use',\n  // \n  NO_USE =","infill":" 'no_use',","suffix":"\r\n}","relevantFile":"<file_path>src/request/api.ts\n          type: ELK_TYPE.ERROR,\n          message: `inner query fail, status code: ${data.status_code}, status msg: ${data.status_msg}`,\n          extObj: {\n            traceId: resConfig.headers['Ovse-Trace'],\n            url: resConfig.url,\n            reqHeader: JSON.stringify(resConfig.headers),\n            reqBody: resConfig.data,\n            httpStatusCode: status,\n            resHeader: JSON.stringify(headers),\n            resBody: JSON.stringify(resData),\n          },\n        });\n        reject(data);\n        return;\n      }\n      resolve(data.data);\n    } catch (error: any) {\n      window.console.error('query error', error);\n      window.console.log(error);\n      reject(error?.response?.data);\n    }\n  });\n}\n\n// 获取用户当前权限状态\nexport const getPayAuthorityState = (data: IGetPayAuthorityStateReq) =>\n  customFetchAdapter<IGetPayAuthorityStateRes[]>({\n    url: `${BASE_URL}/gw/auth/v1/pay/getPermission`,\n    method: 'get',\n    data,\n  });\n\n// 获取运营中台配置的商品列表信息（商品信息）\nexport const getProductListConfigOfProductInfo = () =>\n  customFetchAdapter<GetProductListConfigOfProductInfoProps>({\n    url: configUrl + 'payProductInfo',\n    method: 'get',\n  });\n\n// 获取多语言内容\nexport const getI18nData = (data: IGetI18nDataReq) =>\n  customFetchAdapter<IGetI18nDataRes>({\n    url: `${fuyaoUrl}/multilingual_query_service/multilingual/v1/template_query`,\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n// 请求faq文章列表\nexport const getUserArticle = (data: { socialAccount: string; startId?: string; batch: number }) =>\n  customFetchAdapter({\n    data,\n    url: `${BASE_URL}/gw/socialcenter/v1/edu/article/userArticles`,\n    method: 'get',\n    headers: {\n      lang: 'en',\n    },\n  });","relevantFileList":[],"filePath":"src/config/interface.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"  'no_use',","deepseek-chat-lite":" 'no_use',\r","deepseek-chat":"```\n// Start Generation Here\n  // 已使用\n  USED","copilot":" 'no_use',"}},{"prefix":"import { get, post } from '../axios';\nimport qs from 'qs';\nimport { apiList } from '../config/index';\nimport { loopPostParams } from '../types/server';\n\nexport default {\n  //飞研创作循环调用接口知道有数据返回\n  addAITask: async (param: loopPostParams, cancelToken: any) => {\n    let data: any = {};\n    await post({\n      url: apiList.addAITask,\n      data: param,\n      cancelToken: cancelToken.token,\n      config: {\n        headers: {\n          'content-type': 'application/json'\n        }\n      }\n    }).then(rsp => {\n      /* eslint-disable no-unused-expressions */\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n\n  // 我的指标-新增节点\n  getAITask: async (params: any = {}, cancelToken: any) => {\n    let data: any = {};\n    await get({\n      url: apiList.getAITask,\n      config: { params,cancelToken: cancelToken.token }\n    }).then(rsp => {\n      /* eslint-disable no-unused-expressions */\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n  // 通过接口判断是否有等待的任务","infill":"getAITaskStatus: async (params: any = {}, cancelToken: any) => {\r\n    let data: any = {};\r\n    await get({\r\n      url: apiList.judgeWait,\r\n      config: { params },\r\n    }).then(rsp => {\r\n      /* eslint-disable no-unused-expressions */\r\n      rsp && (data = rsp);\r\n    });\r\n    return d","suffix":"ata;\r\n  },\r\n};\r\n","relevantFile":"<file_path>src/main.ts\n// editorCore\nimport './config/customStatus';\nimport './config/editor-config';\nimport './core/main';\n// VXETable.setup({\n//   i18n: (key, args) => XEUtils.toFormatString(XEUtils.get(zhCN, key), args),\n// });\n\n// 应用于客户端的时候，防止一些快捷键被客户端截取\ntry {\n  (window as any).API.use('SetKeyFilter', 'backspace, delete, enter');\n} catch (error) {\n  console.log(error)\n}\n\nif (process.env.VUE_APP_BURIAL_POINT && JSON.parse(process.env.VUE_APP_BURIAL_POINT)) {\n  // 开启埋点\n  burialPoint.open();\n  burialPoint.setNodePrefix('repilot');\n  burialPoint.setUrlPrefix('/research_pilot_service');\n}\n\n\nconst app = createApp(App);\n\napp.use(router);\n\napp.use(Button)\n  .use(Input)\n  .use(AutoComplete)\n  .use(Tree)\n  .use(Popover)\n  .use(Radio)\n  .use(Select)\n  .use(Checkbox)\n  .use(DatePicker)\n  .use(ConfigProvider)\n  .use(StyleProvider)\n  .use(Switch)\n  .use(Collapse)\n  .use(Row)\n  .use(Col)\n  .use(Modal)\n  .use(Upload)\n  .use(InputNumber)\n  .use(AntTable)\n  .use(Dropdown)\n  .use(Menu)\n  .use(message as any)\n  .use(Cascader)\n  .use(Pagination)\n  .use(Slider)\n  .use(Tooltip)\n  .use(Divider)\n  .use(Spin)\n  .use(Empty)\n  .use(Form)\n  .use(Tag)\n  .use(TreeSelect)\n  \n<file_path>src/hooks/useLLMTask.ts\n// hooks  处理过程 返回数据 返回外界需要调用的方法\n\nexport default function useLLMTask() {\n  \n  return {\n\n  };\n}","relevantFileList":[],"filePath":"src/server/AICreation.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":"\r","deepseek-chat":"```\n// Start Generation Here\n  checkPendingTask: async (params:","copilot":"getAITaskStatus: async (params: any = {}, cancelToken: any) => {\r\n    let data: any = {};\r\n    await get({\r\n      url: apiList.judgeWait,\r\n      config: { params },\r\n    }).then(rsp => {\r\n      /* eslint-disable no-unused-expressions */\r\n      rsp && (data = rsp);\r\n    });\r\n    return d"}},{"prefix":"import AICreation from \"../server/AICreation\";\n\nexport default async function useLLMTask() {\n  const status = '","infill":"success","suffix":"';\r\n  const status = await AICreation.getAITaskStatus()\r\n  return {\r\n    status,\r\n  };\r\n}","relevantFile":"<file_path>src/main.ts\n// 测试环境工具\nimport './hooks/windowTestTool'; \n// editorCore\nimport './config/customStatus';\nimport './config/editor-config';\nimport './core/main';\n// VXETable.setup({\n//   i18n: (key, args) => XEUtils.toFormatString(XEUtils.get(zhCN, key), args),\n// });\n\n// 应用于客户端的时候，防止一些快捷键被客户端截取\ntry {\n  (window as any).API.use('SetKeyFilter', 'backspace, delete, enter');\n} catch (error) {\n  console.log(error)\n}\n\nif (process.env.VUE_APP_BURIAL_POINT && JSON.parse(process.env.VUE_APP_BURIAL_POINT)) {\n  // 开启埋点\n  burialPoint.open();\n  burialPoint.setNodePrefix('repilot');\n  burialPoint.setUrlPrefix('/research_pilot_service');\n}\n\n\nconst app = createApp(App);\n\napp.use(router);\n\napp.use(Button)\n  .use(Input)\n  .use(AutoComplete)\n  .use(Tree)\n  .use(Popover)\n  .use(Radio)\n  .use(Select)\n  .use(Checkbox)\n  .use(DatePicker)\n  .use(ConfigProvider)\n  .use(StyleProvider)\n  .use(Switch)\n  .use(Collapse)\n  .use(Row)\n  .use(Col)\n  .use(Modal)\n  .use(Upload)\n  .use(InputNumber)\n  .use(AntTable)\n  .use(Dropdown)\n  .use(Menu)\n  .use(message as any)\n  .use(Cascader)\n  .use(Pagination)\n  .use(Slider)\n  .use(Tooltip)\n  .use(Divider)\n  .use(Spin)\n  .use(Empty)\n  .use(Form)\n  .use(Tag)\n<file_path>src/server/AICreation.ts\nimport { get, post } from '../axios';\nimport qs from 'qs';\nimport { apiList } from '../config/index';\nimport { loopPostParams } from '../types/server';\n\nexport default {\n  //飞研创作循环调用接口知道有数据返回\n  addAITask: async (param: loopPostParams, cancelToken: any) => {\n    let data: any = {};\n    await post({\n      url: apiList.addAITask,\n      data: param,\n      cancelToken: cancelToken.token,\n      config: {\n        headers: {\n          'content-type': 'application/json'\n        }\n      }\n    }).then(rsp => {\n      /* eslint-disable no-unused-expressions */\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n\n  // 我的指标-新增节点\n  getAITask: async (params: any = {}, cancelToken: any) => {\n    let data: any = {};\n    await get({\n      url: apiList.getAITask,\n      config: { params,cancelToken: cancelToken.token }\n    }).then(rsp => {\n      /* eslint-disable no-unused-expressions */\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n  // 通过接口判断是否有等待的任务\n  getAITaskStatus: async () => {\n    let data = false;\n    await get({\n      url: apiList.judgeWait,\n    }).then(rsp => {\n      /* eslint-disable no-unused-expressions */\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n};\nhooks  处理过程 返回数据 返回外界需要调用的方法","relevantFileList":[],"filePath":"src/hooks/useLLMTask.ts","template":"typescript","multiRes":{"deepseek-chat-lite":"idle';","deepseek-chat":"```\n// Start Generation Here\nawait AICreation.getAIT","copilot":"success"}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { API_TIME_FMT } from '@/utils/const';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport dayjs from 'dayjs';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport { SortType, TimeRangeType } from './types/enums';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n     getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n        const sectorSwitchStore = useSectorSwitcherStore();\n       getMemberList(id || sectorSwitchStore.current.id).then(data =","infill":"> {\r\n          this.memberList = data;\r\n        }\r\n       ","suffix":").catch(() => {}).finally(() => {\r\n          this.loading = false;\r\n       });\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { useMonitorMemberStore } from './sharedState';\nimport { GetTagBody } from './types/apiRequest';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList: string[] = [];\n  const orgIdList: string[] = [];\n  monitorMemberState.memberList.forEach(it => {\n    // TODO:\n    if (it.type === '1') {\n      orgIdList.push(it.id);\n    } else {\n      codeList.push(it.id);\n    }\n  });\n  const body: GetTagBody = { codeList, orgIdList, startDate, endDate };\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" > {\r","deepseek-chat-lite":"> {","deepseek-chat":"```\n// Start Generation Here\n> {\n  this.memberList =","copilot":"> {\r\n          this.memberList = data;\r\n        }\r\n       "}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { API_TIME_FMT } from '@/utils/const';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport dayjs from 'dayjs';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { getMemberChangeTags, getMemberList } from './request';\nimport { MemberItemData } from './types';\nimport { SortType, TimeRangeType } from './types/enums';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n      // getMemberTag\n      const tags = await getMemberChangeTags();\n      // 填充memberList.tagList\n      tags.forEach(tag => {","infill":"const member = this.memberList.find(it => it.id === tag.code);\r\n        if (member) {\r\n          member.tagList = \r\n          const [];\r\n      ","suffix":"  }\r\n      })\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { useMonitorMemberStore } from './sharedState';\nimport { GetTagBody } from './types/apiRequest';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getMemberChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList: string[] = [];\n  const orgIdList: string[] = [];\n  monitorMemberState.memberList.forEach(it => {\n    // TODO:\n    if (it.type === '1') {\n      orgIdList.push(it.id);\n    } else {\n      codeList.push(it.id);\n    }\n  });\n  const body: GetTagBody = { codeList, orgIdList, startDate, endDate };\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\n        const member = this.memberList.","copilot":"const member = this.memberList.find(it => it.id === tag.code);\r\n        if (member) {\r\n          member.tagList = \r\n          const [];\r\n      "}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { API_TIME_FMT } from '@/utils/const';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport dayjs from 'dayjs';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { getMemberChangeTags, getMemberList } from './request';\nimport { MemberItemData, MemberTagListItem } from './types';\nimport { MemberTagType, SortType, TimeRangeType } from './types/enums';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n      // getMemberTag\n      const tags = await getMemberChangeTags();\n      // 填充memberList.tagList\n      tags.forEach(tag => {\n        const member = this.memberList.find(it => it.id === tag.code);\n        if (member) {\n          const tagList:MemberTagListItem[] = [];","infill":"if (tag.quoteChangeNum) tagList.push({ type: MemberTagType.Quote, value: +tag.quoteChangeNum });\r\n          if (tag.dealChangeNum) tagList.push({ type: 'deal', value: +tag.dealChangeNum });\r\n          if (tag.opinionWarnNum) tagList.push({ type: 'opinion', value: +tag.opinionWarnNum });\r\n          if (tag.MajorEventNum) tagList.push({ type: 'event', value: +tag.MajorEventNum });\r\n          if (tag.newIssueNum) tagList.push({ type: 'issue', value: +tag.newIssueNum });\r\n          if (tag.ratingChangeNum) tagList.push({ type: 'rating', value: +tag.ratingChangeNum });\r\n          ","suffix":"member.tagList = tagList; \r\n        }\r\n      })\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};\n<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { useMonitorMemberStore } from './sharedState';\nimport { GetTagBody } from './types/apiRequest';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getMemberChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList: string[] = [];\n  const orgIdList: string[] = [];\n  monitorMemberState.memberList.forEach(it => {\n    // TODO:\n    if (it.type === '1') {\n      orgIdList.push(it.id);\n    } else {\n      codeList.push(it.id);\n    }\n  });\n  const body: GetTagBody = { codeList, orgIdList, startDate, endDate };\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" \r","deepseek-chat":"```\n// Start Generation Here\n          tagList.push({\n            type","copilot":"if (tag.quoteChangeNum) tagList.push({ type: MemberTagType.Quote, value: +tag.quoteChangeNum });\r\n          if (tag.dealChangeNum) tagList.push({ type: 'deal', value: +tag.dealChangeNum });\r\n          if (tag.opinionWarnNum) tagList.push({ type: 'opinion', value: +tag.opinionWarnNum });\r\n          if (tag.MajorEventNum) tagList.push({ type: 'event', value: +tag.MajorEventNum });\r\n          if (tag.newIssueNum) tagList.push({ type: 'issue', value: +tag.newIssueNum });\r\n          if (tag.ratingChangeNum) tagList.push({ type: 'rating', value: +tag.ratingChangeNum });\r\n          "}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { API_TIME_FMT } from '@/utils/const';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport dayjs from 'dayjs';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { getMemberChangeTags, getMemberList } from './request';\nimport { MemberItemData, MemberTagListItem } from './types';\nimport { MemberTagType, SortType, TimeRangeType } from './types/enums';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n      // getMemberTag\n      const tags = await getMemberChangeTags();\n      // 填充memberList.tagList\n      tags.forEach(tag => {\n        const member = this.memberList.find(it => it.id === tag.code);\n        if (member) {\n          const tagList:MemberTagListItem[] = [];\n          if (tag.quoteChangeNum) tagList.push({ type: MemberTagType.Quote, value: +tag.quoteChangeNum });\n          if (tag.dealChangeNum) tagList.push({ type: M, value: +tag.dealChangeNum });\n          if (tag.opinionWarnNum) tagList.push({ type: 'opinion', value: +tag.opinionWarnNum });","infill":"if (tag.MajorEventNum) tagList.push({ type: 'event', value: +tag.MajorEventNum });\r\n          if (tag.newIssueNum) tagList.push({ type: 'issue', value: +tag.newIssueNum });\r\n          if (tag.ratingChangeNum) tagList.push({ type: 'rating', value: +tag.ratingChangeNum });\r\n          ","suffix":"member.tagList = tagList; \r\n        }\r\n      })\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};\n<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { useMonitorMemberStore } from './sharedState';\nimport { GetTagBody } from './types/apiRequest';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getMemberChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList: string[] = [];\n  const orgIdList: string[] = [];\n  monitorMemberState.memberList.forEach(it => {\n    // TODO:\n    if (it.type === '1') {\n      orgIdList.push(it.id);\n    } else {\n      codeList.push(it.id);\n    }\n  });\n  const body: GetTagBody = { codeList, orgIdList, startDate, endDate };\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\n          if (tag.dealChangeNum)","copilot":"if (tag.MajorEventNum) tagList.push({ type: 'event', value: +tag.MajorEventNum });\r\n          if (tag.newIssueNum) tagList.push({ type: 'issue', value: +tag.newIssueNum });\r\n          if (tag.ratingChangeNum) tagList.push({ type: 'rating', value: +tag.ratingChangeNum });\r\n          "}},{"prefix":"import { SectorItem } from '@/types/apiResponse';\nimport { API_TIME_FMT } from '@/utils/const';\nimport { useLoading } from '@/utils/hooks/useLoading';\nimport dayjs from 'dayjs';\nimport { defineStore } from 'pinia';\nimport { useSectorSwitcherStore } from '../Header/sharedState';\nimport { getMemberChangeTags, getMemberList } from './request';\nimport { MemberItemData, MemberTagListItem } from './types';\nimport { MemberTagType, SortType, TimeRangeType } from './types/enums';\n\n/** 监控成员公共状态 */\nexport const useMonitorMemberStore = defineStore('monitorMember', {\n  state: () => ({\n    /** 是否加载数据中 */\n    loading: useLoading(false),\n    /** 当前选中排序 */\n    currentSort: SortType.Default,\n    /** 当前选中时间 */\n    currentTimeRange: TimeRangeType.Today,\n    /** 当前选中的member */\n    currentMember: {} as MemberItemData,\n    memberList: [] as MemberItemData[],\n  }),\n  getters: {\n    /**\n     * 获取当前时间范围\n     * @returns [startDate, endDate] YYYY-MM-DD\n     */\n    currentTimeRangeArr(): [string, string] {\n      const startDate = dayjs(window.curDate).format(API_TIME_FMT);\n      if (this.currentTimeRange === TimeRangeType.Today) {\n        return [startDate, startDate];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a: TimeRangeType.Week = TimeRangeType.Week; // ts check\n        return [dayjs(startDate).subtract(7, 'day').format(API_TIME_FMT), startDate];\n      }\n    },\n  },\n  actions: {\n    async init() {\n      await this.getMemberList();\n      this.setDefaultCurrentMember();\n      // 广播\n      // GlobalEventBus.dispatchEvent(GlobalEventBus.EventName.MonitorMembersInit);\n    },\n    /**\n     * 获取监控成员列表\n     * - 不传参数则为当前选中的监控组合\n     */\n    async getMemberList(id?: SectorItem['id']) {\n      this.loading = true;\n      try {\n        const sectorSwitchStore = useSectorSwitcherStore();\n        this.memberList = await getMemberList(id || sectorSwitchStore.current.id);\n      } catch (err) {\n        console.warn(err);\n      } finally {\n        this.loading = false;\n      }\n      // getMemberTag\n      const tags = await getMemberChangeTags();\n      // 填充memberList.tagList\n      tags.forEach(tag => {\n        const member = this.memberList.find(it => it.id === tag.code);\n        if (member) {\n          const tagList:MemberTagListItem[] = [];\n          if (tag.quoteChangeNum) tagList.push({ type: MemberTagType.Quote, value: +tag.quoteChangeNum });\n          if (tag.dealChangeNum) tagList.push({ type: MemberTagType., value: +tag.dealChangeNum });\n          if (tag.opinionWarnNum) tagList.push({ type: 'opinion', value: +tag.opinionWarnNum });\n          if (tag.MajorEventNum) tagList.push({ type: 'event', value: +tag.MajorEventNum });\n          if (tag.newIssueNum) tagList.push({ type: 'issue', value: +tag.newIssueNum });","infill":"if (tag.ratingChangeNum) tagList.push({ type: 'rating', value: +tag.ratingChangeNum });\r\n          ","suffix":"member.tagList = tagList; \r\n        }\r\n      })\r\n    },\r\n    /** 设置默认选中 */\r\n    setDefaultCurrentMember() {\r\n      if (this.memberList.length > 0) {\r\n        this.currentMember = this.memberList[0] || {};\r\n      }\r\n    },\r\n  },\r\n});\r\n","relevantFile":"<file_path>src/App/MonitorMember/request.ts\nimport { http } from '@/http';\nimport { apiList } from '@/http/apiList';\nimport { useMonitorMemberStore } from './sharedState';\nimport { GetTagBody } from './types/apiRequest';\nimport { MemberTagType } from './types/enums';\nimport { MemberItemData, MemberTagItem } from './types/index';\n\n/** 获取监控成员列表 */\nexport function getMemberList(id: string) {\n  const mockData: MemberItemData[] = [\n    {\n      id: '1',\n      type: '1',\n      name: '远洋控股集团(中国)有限公司',\n      tagList: [\n        { type: MemberTagType.Quote, value: 20 },\n        { type: MemberTagType.Deal, value: 7 },\n        { type: MemberTagType.PublicOpinion, value: 7 },\n        { type: MemberTagType.Event, value: 7 },\n        { type: MemberTagType.Rating, value: 7 },\n        { type: MemberTagType.Issue, value: 7 },\n      ],\n    },\n    ...Array.from({ length: 200 }).map((it, i) => ({\n      id: 'bond-' + i,\n      type: '2',\n      name: '远洋控股集团(中国)有限公司' + i,\n    })),\n  ];\n  // 延迟返回\n  return new Promise<MemberItemData[]>(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 300);\n  });\n}\n\n/** 获取异动标签列表 */\nexport function getMemberChangeTags() {\n  const monitorMemberState = useMonitorMemberStore();\n  const [startDate, endDate] = monitorMemberState.currentTimeRangeArr;\n  const codeList: string[] = [];\n  const orgIdList: string[] = [];\n  monitorMemberState.memberList.forEach(it => {\n    // TODO:\n    if (it.type === '1') {\n      orgIdList.push(it.id);\n    } else {\n      codeList.push(it.id);\n    }\n  });\n  const body: GetTagBody = { codeList, orgIdList, startDate, endDate };\n  return http.post<MemberTagItem[]>(apiList.getChangeLabel, { body });\n}\n<file_path>src/App/MonitorMember/types/index.ts\nimport { MemberTagType } from './enums';\n\n/** 监控成员一项 */\nexport type MemberItemData = {\n  id: string;\n  /** 监控成员类型，主体，债券 */\n  type: string;\n  /** 监控成员名称 */\n  name: string;\n  /** 监控成员标签列表 */\n  tagList?: MemberTagListItem[];\n};\n\nexport type MemberTagListItem = {\n  type: MemberTagType;\n  value: number;\n};\n\n/** 异动标签 */\nexport type MemberTagItem = {\n  /**代码或机构id*/ code: string;\n  /**报价异动*/ quoteChangeNum: string;\n  /**成交异动*/ dealChangeNum: string;\n  /**舆情预警*/ opinionWarnNum: string;\n  /**重大事件*/ MajorEventNum: string;\n  /**新债发行*/ newIssueNum: string;\n  /**评级变动*/ ratingChangeNum: string;\n};","relevantFileList":[],"filePath":"src/App/MonitorMember/sharedState.ts","template":"typescript","multiRes":{"deepseek-chat":"```\n// Start Generation Here\n          if (tag.ratingChangeNum)","copilot":"if (tag.ratingChangeNum) tagList.push({ type: 'rating', value: +tag.ratingChangeNum });\r\n          "}},{"prefix":"interface GetMedalCategoryParams {\n  // 类别名称\n  medalCategoryName: string,\n  // 审核状态\n  onOffLine: string,\n  page: number,\n  pageSize: number,\n}\n// 勋章类别数据\ninterface MedalCategory {\n  id?: number,\n  // 勋章类别名称\n  name?: string,\n  description?: string,\n  // 上下线状态\n  onOffLine?: number,\n  // 勋章系列数量\n  medalSerialCount?: number,\n  // 勋章类别排序\n  categoryRank?: string,\n  // 类别类型 common:普通勋章 gudong:股东勋章\n  type?: string,\n}\n// 获取勋章类别表格数据\ninterface GetMedalCategoryResult {\n  medalCategoryDtoList: MedalCategory[],\n  // 总数\n  size: number,\n}\n// 类别上下线请求参数\ninterface OnOrOfflineParams {\n  // 类别id\n  categoryId?: number,\n  // 上下线状态\n  onOffLine: number,\n}\n// 类别、系列顺序排序配置項请求参数\ninterface SortParams {\n  // 排序的层级 1:类别 2:系列\n  type?: number,\n  // 类别id\n  cate","infill":"goryId?: number,","suffix":"\n}\n\n","relevantFile":"<file_path>src/api/constant.ts\n\n// 接口状态码\nexport enum STATUS_CODE {\n  SUCCESS = 0,\n}\n\n// 搜索股票\nexport const SEARCH_STOCK = process.env.VUE_APP_API_STOCK;\n\n// 搜索话题\nexport const SEARCH_TOPIC = process.env.VUE_APP_API_TOPIC;\n\n// 搜索圈子\nexport const SEARCH_CIRCLE = process.env.VUE_APP_API_CIRCLE;\n\nconst category = process.env.VUE_APP_API_CATEGORY;\nconst series = process.env.VUE_APP_API_SERIES;\nconst user = process.env.VUE_APP_API_USER;\nconst audit = process.env.VUE_APP_API_AUDIT;\n\n// 类别管理相关接口\nexport const GET_CATEGORY_TABLE = `${category}/page_query`;\nexport const UPDATE_CATEGORY = `${category}/update`;\nexport const ON_OFFLINE_CATEGORY = `${category}/on_off_line`;\n\n/* 系列管理相关接口 */\n// 获取系列表格数据\nexport const GET_SERIES_TABLE = `${series}/page_query`;\n// 获取系列详情\nexport const GET_SERIES_DETAIL = `${series}/get_one`;\n// 修改系列\nexport const UPDATE_SERIES = `${series}/update`;\n// 获取logo图片列表\nexport const GET_LOGO_LIST = `${series}/query_log_url`;\n// 获取勋章系列历史操作记录\nexport const GET_SERIES_OPERATION_RECORD = `${series}/history/page_query`;\n// 勋章系列上线、下线\nexport const ON_OFFLINE_SERIES = `${series}/on_off_line`;\n\n/* 勋章管理相关接口 */\n// 获取勋章表格数据\nexport const GET_MEDAL_TABLE = `${user}/page_query`;\n// 发放勋章\nexport const DISTRIBUTE_MEDAL = `${user}/distribute`;\n// 删除勋章\nexport const DELETE_MEDAL = `${user}/remove_medal_by_id`;\n// 添加备注\nexport const ADD_REMARK = `${user}/add_remark`;\n\n/* 审批管理相关接口 */\n// 获取审核表格数据\nexport const GET_AUDIT_TABLE = `${audit}/query_to_audit_list`;\n// 审核操作\nexport const AUDIT_OPERATION = `${audit}/result`;\n<file_path>src/api/category.ts\nimport * as request from '@thsf2e/public-method/request/common-request';\nimport {\n  GET_CATEGORY_TABLE,\n  UPDATE_CATEGORY,\n  ON_OFFLINE_CATEGORY,\n} from './constant';\n\n/**\n * 获取勋章类别表格数据\n * @param {GetMedalCategoryParams} param 查询参数对象\n * @returns {GetMedalCategoryResult} 查询结果\n */\nexport const getCatogory = async (param: GetMedalCategoryParams): Promise<GetMedalCategoryResult> => {\n  return request.postData<GetMedalCategoryResult>(\n    GET_CATEGORY_TABLE,\n    {\n      ...param,\n    },\n    {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n};\n/**\n * 修改勋章类别\n * @param {MedalCategory} param 修改请求参数\n */\nexport const updateCatogory = async (param: MedalCategory): Promise<void> => {\n  return request.postData<void>(\n    UPDATE_CATEGORY,\n    {\n      ...param,\n    },\n    {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n};\n/**\n * 勋章类别上线/下线\n * @param {OnOrOfflineParams} param 请求参数\n */\nexport const onOffLineCatogoryRequest = async (param: OnOrOfflineParams): Promise<void> => {\n  return request.postData<void>(\n    ON_OFFLINE_CATEGORY,\n    {\n      ...param,\n    },\n    {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n};\n类别相关接口\n1. 获取类别列表","relevantFileList":[],"filePath":"src/types/category.d.ts","template":"typescript","multiRes":{"CodeQwen1.5-7B":" goryId?: number,","deepseek-chat-lite":"goryId?: number,","deepseek-chat":"```\n// Start Generation Here\n  // 类别id\n  categoryId","copilot":"goryId?: number,"}}]