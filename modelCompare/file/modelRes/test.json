[{"prefix":"<template>\n  <div id=\"app\">\n    <div class=\"chart\" ref=\"chartDom\"></div>\n    <div class=\"chart\" ref=\"chartDom1\"></div>\n    <div class=\"chart\" ref=\"chartDom2\"></div>\n    <div class=\"chart\" ref=\"chartDom3\"></div>\n  </div>\n</template>\n\n<script>\nimport echartsUI, { cerateIfindOption } from 'thsc-ifind-echarts-ui'\nimport * as echarts from 'echarts';\nimport {\n  generateChartOption,\n} from '../../package/index';\nimport configInstance from '../../package/configInstance';\nimport mockData from './mockData';\nimport mockData1 from './mockData1';\nimport mockData2 from './mockData2';\nimport mockData3 from './mockData3';\n\nechartsUI.registerTheme(echarts);\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      msg1: '',\n      msg2: '',\n    };\n  },\n  methods: {\n    // 去除用户设置的样式\n    removeUserStyle(option) {\n      option.dataZoom = {\"show\": true}","infill":";\r\n      option.xAxis = {\r\n        type: 'category',\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n      };","suffix":"\r\n    },\r\n    renderChart(chartDom, indicators, soureData, chartOptionVariable, useIFinDUi = false) {\r\n      const myChart = echarts.init(chartDom, 'ifind');\r\n      const chartSize = {\r\n        width: myChart.getWidth(),\r\n        height: myChart.getHeight(),\r\n      };\r\n      let option = generateChartOption(indicators, soureData, chartOptionVariable, chartSize);\r\n\r\n      if (useIFinDUi) {\r\n        console.log('option1', JSON.parse(JSON.stringify(option)));\r\n        option = cerateIfindOption(option, myChart);\r\n        console.log('option2', JSON.parse(JSON.stringify(option)));\r\n      }\r\n      myChart.setOption(option);\r\n    },\r\n  },\r\n  mounted() {\r\n    window.cf = configInstance.getInstance();\r\n    // cf.setConfig({\r\n    //   lineStyle_width: 10\r\n    // }, 'normal-chart', 'line');\r\n    this.renderChart(\r\n      this.$refs.chartDom,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n      true,\r\n    );\r\n    this.renderChart(\r\n      this.$refs.chartDom1,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n    );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom2,\r\n    //   mockData2.indicators,\r\n    //   mockData2.soureData,\r\n    //   mockData2.chartOptionVariable,\r\n    // );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom3,\r\n    //   mockData3.indicators,\r\n    //   mockData3.soureData,\r\n    //   mockData3.chartOptionVariable,\r\n    // );\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  .chart {\r\n    width: 500px;\r\n    height: 300px;\r\n    border: 1px solid;\r\n  }\r\n}\r\n</style>\r\n","relevantFile":"","relevantFileList":[],"filePath":"demo/src/App.vue","template":"vue","multiRes":{"copilot":";\r\n      option.xAxis = {\r\n        type: 'category',\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n      };"}},{"prefix":"<template>\n  <div id=\"app\">\n    <div class=\"chart\" ref=\"chartDom\"></div>\n    <div class=\"chart\" ref=\"chartDom1\"></div>\n    <div class=\"chart\" ref=\"chartDom2\"></div>\n    <div class=\"chart\" ref=\"chartDom3\"></div>\n  </div>\n</template>\n\n<script>\nimport echartsUI, { cerateIfindOption } from 'thsc-ifind-echarts-ui'\nimport * as echarts from 'echarts';\nimport {\n  generateChartOption,\n} from '../../package/index';\nimport configInstance from '../../package/configInstance';\nimport mockData from './mockData';\nimport mockData1 from './mockData1';\nimport mockData2 from './mockData2';\nimport mockData3 from './mockData3';\nimport { yaxisVariable } from '../../package/defaultConfig';\n\nechartsUI.registerTheme(echarts);\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      msg1: '',\n      msg2: '',\n    };\n  },\n  methods: {\n    // 去除用户设置的样式\n    removeUserStyle(option) {\n      option.lenged = { data: option.series.map","infill":"((item) => item.name)","suffix":"};\r\n      option.dataZoom = {\"show\": true};\r\n      option.tooltip = {trigger: 'axis', alwaysShowContent: true};\r\n      option.xAxis = {\r\n        type: option.xAxis.type,\r\n        data: option.xAxis.data,\r\n      };\r\n      option.yAxis = option.yAxis.map((item) => {\r\n        return {\r\n          type: item.type,\r\n          name: item.name,\r\n        };\r\n      });\r\n      option.series = option.series.map((item) => {\r\n        return {\r\n          yAxisIndex: item.yAxisIndex,\r\n          type: item.type,\r\n          data: item.data,\r\n          name: item.name,\r\n        };\r\n      });\r\n      return option\r\n    },\r\n    renderChart(chartDom, indicators, soureData, chartOptionVariable, useIFinDUi = false) {\r\n      const myChart = echarts.init(chartDom, 'ifind');\r\n      const chartSize = {\r\n        width: myChart.getWidth(),\r\n        height: myChart.getHeight(),\r\n      };\r\n      let option = generateChartOption(indicators, soureData, chartOptionVariable, chartSize);\r\n\r\n      if (useIFinDUi) {\r\n        console.log('option1', JSON.parse(JSON.stringify(option)));\r\n        option = this.removeUserStyle(option);\r\n        option = cerateIfindOption(option, myChart);\r\n        console.log('option2', JSON.parse(JSON.stringify(option)));\r\n      }\r\n      myChart.setOption(option);\r\n    },\r\n  },\r\n  mounted() {\r\n    window.cf = configInstance.getInstance();\r\n    // cf.setConfig({\r\n    //   lineStyle_width: 10\r\n    // }, 'normal-chart', 'line');\r\n    this.renderChart(\r\n      this.$refs.chartDom,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n      true,\r\n    );\r\n    this.renderChart(\r\n      this.$refs.chartDom1,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n    );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom2,\r\n    //   mockData2.indicators,\r\n    //   mockData2.soureData,\r\n    //   mockData2.chartOptionVariable,\r\n    // );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom3,\r\n    //   mockData3.indicators,\r\n    //   mockData3.soureData,\r\n    //   mockData3.chartOptionVariable,\r\n    // );\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  .chart {\r\n    width: 500px;\r\n    height: 300px;\r\n    border: 1px solid;\r\n  }\r\n}\r\n</style>\r\n","relevantFile":"","relevantFileList":[],"filePath":"demo/src/App.vue","template":"vue","multiRes":{"copilot":"((item) => item.name)"}},{"prefix":"<template>\n  <div id=\"app\">\n    <div class=\"chart\" ref=\"chartDom\"></div>\n    <div class=\"chart\" ref=\"chartDom1\"></div>\n    <div class=\"chart\" ref=\"chartDom2\"></div>\n    <div class=\"chart\" ref=\"chartDom3\"></div>\n  </div>\n</template>\n\n<script>\nimport echartsUI, { cerateIfindOption } from 'thsc-ifind-echarts-ui'\nimport * as echarts from 'echarts';\nimport {\n  generateChartOption,\n} from '../../package/index';\nimport configInstance from '../../package/configInstance';\nimport mockData from './mockData';\nimport mockData1 from './mockData1';\nimport mockData2 from './mockData2';\nimport mockData3 from './mockData3';\n\nechartsUI.registerTheme(echarts);\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      msg1: '',\n      msg2: '',\n    };\n  },\n  methods: {\n    // 去除用户设置的样式\n    removeUserStyle(option) {\n      option.dataZoom = {\"show\": true};\n      option.xAxis = {\n        type: option.xAxis","infill":".type,","suffix":"\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n      };\r\n    },\r\n    renderChart(chartDom, indicators, soureData, chartOptionVariable, useIFinDUi = false) {\r\n      const myChart = echarts.init(chartDom, 'ifind');\r\n      const chartSize = {\r\n        width: myChart.getWidth(),\r\n        height: myChart.getHeight(),\r\n      };\r\n      let option = generateChartOption(indicators, soureData, chartOptionVariable, chartSize);\r\n\r\n      if (useIFinDUi) {\r\n        console.log('option1', JSON.parse(JSON.stringify(option)));\r\n        option = cerateIfindOption(option, myChart);\r\n        console.log('option2', JSON.parse(JSON.stringify(option)));\r\n      }\r\n      myChart.setOption(option);\r\n    },\r\n  },\r\n  mounted() {\r\n    window.cf = configInstance.getInstance();\r\n    // cf.setConfig({\r\n    //   lineStyle_width: 10\r\n    // }, 'normal-chart', 'line');\r\n    this.renderChart(\r\n      this.$refs.chartDom,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n      true,\r\n    );\r\n    this.renderChart(\r\n      this.$refs.chartDom1,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n    );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom2,\r\n    //   mockData2.indicators,\r\n    //   mockData2.soureData,\r\n    //   mockData2.chartOptionVariable,\r\n    // );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom3,\r\n    //   mockData3.indicators,\r\n    //   mockData3.soureData,\r\n    //   mockData3.chartOptionVariable,\r\n    // );\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  .chart {\r\n    width: 500px;\r\n    height: 300px;\r\n    border: 1px solid;\r\n  }\r\n}\r\n</style>\r\n","relevantFile":"","relevantFileList":[],"filePath":"demo/src/App.vue","template":"vue","multiRes":{"copilot":".type,"}},{"prefix":"<template>\n  <div id=\"app\">\n    <div class=\"chart\" ref=\"chartDom\"></div>\n    <div class=\"chart\" ref=\"chartDom1\"></div>\n    <div class=\"chart\" ref=\"chartDom2\"></div>\n    <div class=\"chart\" ref=\"chartDom3\"></div>\n  </div>\n</template>\n\n<script>\nimport echartsUI, { cerateIfindOption } from 'thsc-ifind-echarts-ui'\nimport * as echarts from 'echarts';\nimport {\n  generateChartOption,\n} from '../../package/index';\nimport configInstance from '../../package/configInstance';\nimport mockData from './mockData';\nimport mockData1 from './mockData1';\nimport mockData2 from './mockData2';\nimport mockData3 from './mockData3';\nimport { yaxisVariable } from '../../package/defaultConfig';\n\nechartsUI.registerTheme(echarts);\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      msg1: '',\n      msg2: '',\n    };\n  },\n  methods: {\n    // 去除用户设置的样式\n    removeUserStyle(option) {\n      option.dataZoom = {\"show\": true};\n      option.tooltip = {trigger};\n      option.xAxis = {\n        type: option.xAxis.type,\n        data: option.xAxis.data,\n      };\n      option.series = option.series.map((item) => {\n        return {\n          yAxisIndex: ","infill":"item.yAxisIndex,","suffix":"\r\n          type: item.type,\r\n          data: item.data,\r\n          name: item.name,\r\n        };\r\n      });\r\n    },\r\n    renderChart(chartDom, indicators, soureData, chartOptionVariable, useIFinDUi = false) {\r\n      const myChart = echarts.init(chartDom, 'ifind');\r\n      const chartSize = {\r\n        width: myChart.getWidth(),\r\n        height: myChart.getHeight(),\r\n      };\r\n      let option = generateChartOption(indicators, soureData, chartOptionVariable, chartSize);\r\n\r\n      if (useIFinDUi) {\r\n        console.log('option1', JSON.parse(JSON.stringify(option)));\r\n        option = cerateIfindOption(option, myChart);\r\n        console.log('option2', JSON.parse(JSON.stringify(option)));\r\n      }\r\n      myChart.setOption(option);\r\n    },\r\n  },\r\n  mounted() {\r\n    window.cf = configInstance.getInstance();\r\n    // cf.setConfig({\r\n    //   lineStyle_width: 10\r\n    // }, 'normal-chart', 'line');\r\n    this.renderChart(\r\n      this.$refs.chartDom,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n      true,\r\n    );\r\n    this.renderChart(\r\n      this.$refs.chartDom1,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n    );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom2,\r\n    //   mockData2.indicators,\r\n    //   mockData2.soureData,\r\n    //   mockData2.chartOptionVariable,\r\n    // );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom3,\r\n    //   mockData3.indicators,\r\n    //   mockData3.soureData,\r\n    //   mockData3.chartOptionVariable,\r\n    // );\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  .chart {\r\n    width: 500px;\r\n    height: 300px;\r\n    border: 1px solid;\r\n  }\r\n}\r\n</style>\r\n","relevantFile":"","relevantFileList":[],"filePath":"demo/src/App.vue","template":"vue","multiRes":{"copilot":"item.yAxisIndex,"}},{"prefix":"<template>\n  <div id=\"app\">\n    <div class=\"chart\" ref=\"chartDom\"></div>\n    <div class=\"chart\" ref=\"chartDom1\"></div>\n    <div class=\"chart\" ref=\"chartDom2\"></div>\n    <div class=\"chart\" ref=\"chartDom3\"></div>\n  </div>\n</template>\n\n<script>\nimport echartsUI, { cerateIfindOption } from 'thsc-ifind-echarts-ui'\nimport * as echarts from 'echarts';\nimport {\n  generateChartOption,\n} from '../../package/index';\nimport configInstance from '../../package/configInstance';\nimport mockData from './mockData';\nimport mockData1 from './mockData1';\nimport mockData2 from './mockData2';\nimport mockData3 from './mockData3';\nimport { yaxisVariable } from '../../package/defaultConfig';\n\nechartsUI.registerTheme(echarts);\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      msg1: '',\n      msg2: '',\n    };\n  },\n  methods: {\n    // 去除用户设置的样式\n    removeUserStyle(option) {\n      option.dataZoom = {\"show\": true};\n      option.tooltip = {trigger:","infill":" 'axis', alwaysShowContent: true};","suffix":"\r\n      option.xAxis = {\r\n        type: option.xAxis.type,\r\n        data: option.xAxis.data,\r\n      };\r\n      option.series = option.series.map((item) => {\r\n        return {\r\n          yAxisIndex: item.yAxisIndex,\r\n          type: item.type,\r\n          data: item.data,\r\n          name: item.name,\r\n        };\r\n      });\r\n    },\r\n    renderChart(chartDom, indicators, soureData, chartOptionVariable, useIFinDUi = false) {\r\n      const myChart = echarts.init(chartDom, 'ifind');\r\n      const chartSize = {\r\n        width: myChart.getWidth(),\r\n        height: myChart.getHeight(),\r\n      };\r\n      let option = generateChartOption(indicators, soureData, chartOptionVariable, chartSize);\r\n\r\n      if (useIFinDUi) {\r\n        console.log('option1', JSON.parse(JSON.stringify(option)));\r\n        option = cerateIfindOption(option, myChart);\r\n        console.log('option2', JSON.parse(JSON.stringify(option)));\r\n      }\r\n      myChart.setOption(option);\r\n    },\r\n  },\r\n  mounted() {\r\n    window.cf = configInstance.getInstance();\r\n    // cf.setConfig({\r\n    //   lineStyle_width: 10\r\n    // }, 'normal-chart', 'line');\r\n    this.renderChart(\r\n      this.$refs.chartDom,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n      true,\r\n    );\r\n    this.renderChart(\r\n      this.$refs.chartDom1,\r\n      mockData.indicators,\r\n      mockData.soureData,\r\n      mockData.chartOptionVariable,\r\n    );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom2,\r\n    //   mockData2.indicators,\r\n    //   mockData2.soureData,\r\n    //   mockData2.chartOptionVariable,\r\n    // );\r\n    // this.renderChart(\r\n    //   this.$refs.chartDom3,\r\n    //   mockData3.indicators,\r\n    //   mockData3.soureData,\r\n    //   mockData3.chartOptionVariable,\r\n    // );\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  .chart {\r\n    width: 500px;\r\n    height: 300px;\r\n    border: 1px solid;\r\n  }\r\n}\r\n</style>\r\n","relevantFile":"","relevantFileList":[],"filePath":"demo/src/App.vue","template":"vue","multiRes":{"copilot":" 'axis', alwaysShowContent: true};"}}]