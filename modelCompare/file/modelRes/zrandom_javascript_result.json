[
  {
    "prefix": "\"use strict\";\n// 信任https证书\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\";\n// process.env.NODE_EXTRA_CA_CERTS = 'D:/FiddlerRoot.pem';\n\n// 命名规范：所有变量命名和方法名符合驼峰规范，当是全局变量或方法时，变量名前加ths_前缀\nconst ths_PROXY_DOMAIN = [\n  \"copilot-proxy.githubusercontent.com\",\n  \"copilot-telemetry.githubusercontent.com\",\n  \"copilot-telemetry-service.githubusercontent.com\",\n  'default.exp-tas.com',\n  'api.github.com',\n  'copilot-api.github.com',\n  'gh.io',\n  'api.githubcopilot.com',\n  'copilot-api.githubcopilot.com',\n  'github.com',\n  'repositorypolicy.azurewebsites.net',\n  'origin-tracker.githubusercontent.com',\n  'docs.github.com',\n  'dc.services.visualstudio.com',\n  'breeze.aimon.applicationinsights.io',\n  'dc-int.services.visualstudio.com'\n];\nlet ths_logAgent;\n// 默认先为登录Hipilot状态，如果检测到未登录再关闭，减少对用户使用体验的影响\nlet ths_isLogin = true;\n// 读取.git文件用到\nconst ths_fs = require(\"fs\");\nconst ths_os = require(\"os\");\nconst ths_child_process = require(\"child_process\");\n// ctx代表当前插件运行上下文，即运行环境，具体函数执行基本要使用ctx.get()方法执行。调用该函数的入口在业务代码中\nconst ths_ProxyStart = (ctx) => {\n  try {\n    // 注册向idea.log中打印日志的方法\n    const log = new d0(1, \"URL_PROXY\");\n    ths_logAgent = (text) => {\n      log.info(ctx, text);\n    }\n    // 代理所有url请求\n    ths_ProxyURL(ctx);\n  } catch (error) {\n    ths_logAgent(`[test] [error] ${error}`);\n  }\n}\n\n// 代理所有url请求\nconst ths_ProxyURL = (ctx) => {\n  const URL_PROXY = URL;\n  // 代理域名\n  const proxyDomain = 'copilot-proxy.myhexin.com';\n  // 代理域名需要加上一级路由\n  const proxyPrefixPath = '/copilot-ai-plugins';\n  // 公司域名的请求不做代理\n  const thsDomain = '10jqka.com.cn';\n  try {\n    URL = class URL extends URL_PROXY {\n      // 记录原始请求url\n      SOURCE_URL = '';\n      constructor(input, base) {\n        if (!ths_isLogin) {\n          ths_logAgent(`[test] url_proxy cancel. ${input}`);\n          super(input, base);\n          this.SOURCE_URL = input;\n          return;\n        }\n        let _input = input;\n        let _base = base;\n        // PROXY_DOMAIN中的域名才支持代理（这里整理了copilot中所有的域名，包含文档类的域名）\n        const proxyURLItem = ths_PROXY_DOMAIN.find((item) => input.includes(item));\n        if (proxyURLItem && !input.includes(proxyDomain) && !input.includes(thsDomain)) {\n          _input = appendDomain(input, proxyDomain, proxyPrefixPath);\n        } else if (base && base.includes(proxyDomain)) {\n          _base = void 0;\n          _input = `${base}${input.replace(/^\\//, '')}`;\n        } else {\n          console.log('[test]URL hook', input, base);\n        }\n        _input = _input.replace('https://', 'http://');\n        ths_logAgent(`[test] url_proxy ${_input} ${input} ${proxyURLItem} ${input.includes(proxyDomain)}`);\n\n        super(_input, _base);\n        this.SOURCE_URL = input;\n      }\n      get host() {\n        let url = this.SOURCE_URL;\n        // if (this.SOURCE_URL.includes(proxyDomain)) {\n        //   url = this.SOURCE_URL.replace(proxyDomain, '').replace(proxyPrefixPath, '').replace(/\\//, '').replace('http://', 'https://');\n        // }\n        // ths_logAgent(`[test] url ${url}`);\n        return new URL_PROXY(url).host;\n      }\n    };\n  } catch (error) {\n    console.error(error);\n  }\n  const appendDomain = (url, domain, _path = \"\") => {\n    const _url = new URL_PROXY(url);\n    if (_url.hostname === domain) return url;\n    return `${_url.protocol}//${domain}${_path !== \"\" ? _path + \"/\" : \"/\"}${\n      _url.hostname\n    }${_url.pathname}${_url.search}`;\n  };\n};\n// 写入log的请求\nconst ths_reportLog = (ctx, logData) => {\n  ctx.get($0).fetch('http://copilot-proxy.myhexin.com/copilot-ai-plugins/stat-logs', {\n    method: 'POST',\n    body: JSON.stringify(logData),\n  });\n  ths_logAgent(`[test] report log: ${JSON.stringify(logData)}`);\n}\n\n// 存储打开的文件路径，即workspace路径\nvar ths_workspaceFolders = [];\n// 存储所有已打开窗口的git路径，使用调用该变量的入口在业务代码中\nlet ths_gitPaths = [];\n// 找当前路径下的git仓库，如果找不到，就找上一级路径，直到找到或到根目录\nconst ths_findGitPath = (basePath) => {\n  function _getGitPath(path) {\n    const gitPath = `${path}/.git/config`;\n    if (ths_fs?.existsSync && ths_fs.existsSync(gitPath)) {\n      const fileContent = ths_fs.readFileSync(gitPath, \"utf8\");\n      // 读取.git文件中的remote.origin.url\n      return {\n        workspacePath: path,\n        gitPath: fileContent.match(/url = (.*)/)[1]\n      }\n    } else {\n      // 不存在.git文件，则向上一级查找\n      ths_logAgent(`[test] not git path. ${path}`);\n      ths_fs.readdir(gitPath, (err, files) => {",
    "infill": "if (err) {\n          ths_logAgent(`[test] readdir error. ${err}`);\n        }\n        ths_logAgent(`[test] readdir files. ${JSON.stringify(files)}`);",
    "suffix": "\n      })\n      const parentPath = path.split('/').slice(0, -1).join('/');\n      if (parentPath === '') {\n        return null;\n      }\n      return _getGitPath(parentPath);\n    }\n  }\n  return _getGitPath(basePath);\n}\nconst ths_findGitPathByExec = (basePath) => {\n  return new Promise((resolve, reject) => {\n    if (ths_os.platform() === 'linux') {\n      ths_logAgent(`1111`);\n      ths_child_process.exec('git remote -v', {cwd: basePath}, deal);\n    } else {\n      ths_child_process.exec('git remote -v', {cwd: basePath}, deal);\n    }\n    // ths_child_process.execFile('sudo', ['/usr/bin/git', 'remote', '-v'], {cwd: basePath, shell: '/bin/bash'}, (err, stdout, stderr) => {\n    // ths_child_process.exec('git remote -v', {cwd: basePath}, (err, stdout, stderr) => {\n    \n\n    function deal(err, stdout, stderr) {\n      if (err) {\n        ths_logAgent(`[test] get git remote error. ${err}`);\n        reject(err);\n        return;\n      }\n      if (stderr) {\n        ths_logAgent(`[test] get git remote stderr. ${err}`);\n        reject(err);\n        return;\n      }\n      const remoteUrl = stdout.split('\\n')[0].split('\\t')[1].split(' ')[0];\n      resolve(remoteUrl);\n    }\n  });\n}\n// 找到当前项目的根路径，即工作空间项目绝对路径\nconst ths_findWorkspacePathByExec = (basePath) => {\n  return new Promise((resolve, reject) => {\n    ths_child_process.exec('git rev-parse --show-toplevel', {cwd: basePath}, (err, stdout, stderr) => {\n    // ths_child_process.execFile('sudo', ['/usr/bin/git', 'rev-parse', '--show-toplevel'], {cwd: basePath}, (err, stdout, stderr) => {\n      if (err) {\n        ths_logAgent(`[test] get git remote error. ${err}`);\n        reject(err);\n        return;\n      }\n      if (stderr) {\n        ths_logAgent(`[test] get git remote stderr. ${err}`);\n        reject(err);\n        return;\n      }\n      const workspacePath = stdout.trim();\n      resolve(workspacePath);\n    });\n  });\n\n}\n// 上传当前工作空间项目绝对路径、sessionId、machineId，并等待登录验证\nconst ths_reportPath = (ctx, basePath) => {\n  const projectPathData = {\n    machine_id: ctx.get(kl).machineId,\n    session_id: ctx.get(kl).sessionId,\n    project_path: basePath,\n    remote_svc: 'intellij-copilot'\n  };\n  ths_reportLog(ctx, {\n    type: 'projectPath',\n    data: projectPathData\n  });\n  setTimeout(() => {\n    ths_checkHipilot(ctx);\n  }, 60000);\n};\n// 添加/删除header中的git路径\nconst ths_changeGitPaths = (ctx, gitPath, type) => {\n  if (!gitPath) return;\n  ths_logAgent(`[test] ${type} gitPath : ${gitPath}`);\n  if (type === 'add') {\n    if (!ths_gitPaths.includes(gitPath)) {\n      ths_gitPaths.push(gitPath);\n    }\n  } else if (type === 'remove') {\n    if (ths_gitPaths.includes(gitPath)) {\n      ths_gitPaths = ths_gitPaths.filter(path => path !== gitPath);\n    }\n  }\n  ths_logAgent(`[test] gitPath list: ${JSON.stringify(ths_gitPaths)}`);\n}\n// 工作空间调整回调。调用该函数的入口在业务代码中\nconst ths_changeWorkspaceFolders = (ctx, changeData) => {\n  ths_logAgent(`[test] didChangeWorkspaceFolders. ${JSON.stringify(changeData)}`);\n  const { added, removed } = changeData;\n\n  const addedUri = added?.[0]?.uri?.startsWith('file:///');\n  const removedUri = removed?.[0]?.uri?.startsWith('file:///');\n\n  // 一个changeData中，addedUri和removedUri不可能同时存在，同一个path会反复触发添加和删除\n  let uri = '';\n  if (addedUri) {\n    uri = added[0].uri.replace('file:///', '');\n  } else if (removedUri) {\n    uri = removed[0].uri.replace('file:///', '');\n  }\n  // 根据uri获取git仓库地址和workspace\n  ths_findGitPathByExec(uri).then(gitPath => {\n    ths_logAgent(`[test] get gitPath: ${gitPath}`);\n    ths_findWorkspacePathByExec(uri).then(workspacePath => {\n      ths_logAgent(`[test] get workspacePath: ${workspacePath}`);\n      dealPath(gitPath, workspacePath);\n    });\n  }).catch(err => {\n    // 如果通过exec获取不到git地址，则读取当前地址对于的.git文件\n    const pathObj = ths_findGitPath(uri);\n    if (pathObj) {\n      dealPath(pathObj.gitPath, pathObj.workspacePath);\n      ths_logAgent(`[test] get pathObj: ${JSON.stringify(pathObj)}`);\n    } else {\n      dealPath(\"\", uri);\n    }\n  });\n\n  function dealPath(gitPath, workspacePath) {\n    ths_logAgent(`[test] dealPath: ${gitPath} ${workspacePath}`);\n    if (addedUri) {\n      // 如果ths_workspaceFolders中有路径是uri的前缀，说明不是项目根路径，也忽略\n      const notRootPath = ths_workspaceFolders.some((val) => {return workspacePath.startsWith(val)})\n      if (workspacePath && !ths_workspaceFolders.includes(workspacePath) && !notRootPath) {\n        ths_workspaceFolders.push(workspacePath);\n        // 通知服务端本地项目路径变化\n        ths_reportPath(ctx, workspacePath);\n        ths_changeGitPaths(ctx, gitPath, 'add');\n      }\n    } else if (removedUri) {\n      if (workspacePath && ths_workspaceFolders.includes(workspacePath)) {\n        ths_workspaceFolders = ths_workspaceFolders.filter(folder => folder !== workspacePath);\n        ths_changeGitPaths(ctx, gitPath, 'remove');\n      }\n    }\n  }\n}\n\n// 验证是否登录Hipilot，如果未登录，则关闭续写功能\nconst ths_checkHipilot = (ctx) => {\n  ctx.get($0).fetch('http://10.217.128.15/code-cvn/copilot/queryCopilotUser', {\n  // ctx.get($0).fetch('http://rtahz.10jqka.com.cn/code-cvn/copilot/queryCopilotUser', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: {\n      machine_id: ctx.get(kl).machineId,\n      session_id: ctx.get(kl).sessionId,\n      remote_svc: \"intellij-copilot\"\n      // \"machine_id\":\"fbc9be2d9542e3150bdff697b032acaae5b9fb05f75dc3f9bac50b30f41d564b\",\n      // \"session_id\":\"c3310c1f-fda2-4d12-aed3-7120c25481d41715689663114\",\n    },\n  })\n  .then(res => res.json())\n  .then((res) => {\n    ths_logAgent(`[test] check login: ${JSON.stringify(res)}`);\n    // 接口还没上线，先不处理\n    if (res.status === 404) {\n      ths_isLogin = true;\n    } else if (res.data && res.data.machine_id) {\n      ths_isLogin = true;\n    } else {\n      ths_isLogin = false;\n      ths_winNotify(ctx, '登录Hipilot插件后才能正常使用Copilot');\n    }\n    ths_logAgent(`[test] isLogin: ${ths_isLogin}`);\n  })\n  .catch(err => {\n    ths_reportLog(ctx, {\n      type: 'checkLoginError',\n      data: JSON.stringify(err)\n    });\n    ths_logAgent(`[test] check login error: ${JSON.stringify(err)}`);\n  });\n}\n// 弹窗\nconst ths_winNotify = (ctx, message) => {\n  ctx.get(Xd).showWarningMessage(message)\n}\n\n// ---------------------------------------------------------------------\n\n\nvar J6e = Object.create;\nvar CS = Object.defineProperty;\nvar Q6e = Object.getOwnPropertyDescriptor;\nvar X6e = Object.getOwnPropertyNames;\nvar Z6e = Object.getPrototypeOf,\n  eye = Object.prototype.hasOwnProperty;\nvar tye = (e, t, r) =>\n  t in e\n    ? CS(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })\n    : (e[t] = r);\nvar l = (e, t) => CS(e, \"name\", { value: t, configurable: !0 });\nvar Jt = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports);\nvar rye = (e, t, r, n) => {\n  if ((t && typeof t == \"object\") || typeof t == \"function\")\n    for (let s of X6e(t))\n      !eye.call(e, s) &&\n        s !== r &&\n        CS(e, s, {\n          get: () => t[s],\n          enumerable: !(n = Q6e(t, s)) || n.enumerable,\n        });\n  return e;\n};\nvar Mr = (e, t, r) => (\n  (r = e != null ? J6e(Z6e(e)) : {}),\n  rye(\n    t || !e || !e.__esModule\n      ? CS(r, \"default\", { value: e, enumerable: !0 })\n      : r,\n    e\n  )\n);\nvar nc = (e, t, r) => (tye(e, typeof t != \"symbol\" ? t + \"\" : t, r), r),\n  $O = (e, t, r) => {\n    if (!t.has(e)) throw TypeError(\"Cannot \" + r);\n  };\nvar Ai = (e, t, r) => (\n    $O(e, t, \"read from private field\"), r ? r.call(e) : t.get(e)\n  ),\n  H0 = (e, t, r) => {\n    if (t.has(e))\n      throw TypeError(\"Cannot add the same private member more than once\");\n    t instanceof WeakSet ? t.add(e) : t.set(e, r);\n  },\n  N0 = (e, t, r, n) => (\n    $O(e, t, \"write to private field\"), n ? n.call(e, r) : t.set(e, r), r\n  );\nvar Kf = (e, t, r) => ($O(e, t, \"access private method\"), r);\nvar _Z = Jt((HO) => {\n  var CZ =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\n      \"\"\n    );\n  HO.encode = function (e) {\n    if (0 <= e && e < CZ.length) retu",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "Editor/intellij-copilot/copilot-client/dist/agent.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "{\n          if (!files.includes('.git') || !files.includes('config')) {\n            return null;\n          }\n        }",
      "CodeQwen2.5-7B": "",
      "copilot": "if (err) {\n          ths_logAgent(`[test] readdir error. ${err}`);\n        }\n        ths_logAgent(`[test] readdir files. ${JSON.stringify(files)}`);",
      "CodeQwen1.5-7B": ""
    }
  },
  {
    "prefix": "window.registerPlatformAndAction = ({ platformConfig }) => {\n  console.log(platformConfig);\n  //依次执行otherplatform的verify，都不满足适用defalut的\n  const { defaultPlatform, otherPlatform } = platformConfig;\n  let usingPlatform = defaultPlatform;\n  for (let i = 0; i < otherPlatform.length; i++) {\n    let currentPlatform = otherPlatform[i];\n    const { verify } = currentPlatform;\n    if (verify && verify()) {\n      usingPlatform = currentPlatform;\n      break;\n    }\n  }\n  //获取到当前平台,提取配置\n  const { key, statPrefix, cssKey, action } = usingPlatform;\n  //把当前platform的key注入到window的_platform_config,\n  window._platform_config = {\n    platform: usingPlatform.key,\n    statId: usingPlatform.statPrefix,\n  };\n  //同时把当前平台的cssKey注入到body的class里面\n  document.body.classList.add(usingPlatform.cssKey);\n  window._action_config = {\n    ...action,\n  };\n};\n\nwindow.registerPlatformAndAction({\n  platformConfig: {\n    defaultPlatform: {\n      key: 'ainvest',\n      cssKey: 'f10-in-pc',\n      statPrefix: 'lhsa',\n      action: {\n        jump: (arg) => {\n            const ",
    "infill": "{ url,cb } = arg;\r\n            \r\n",
    "suffix": "\r\n        },\r\n      },\r\n    },\r\n    otherPlatform: [\r\n      {\r\n        des: 'pc',\r\n        uniqueKey: 'f10-in-pc',\r\n        verify: () => !!window._pc_jsBridge_,\r\n        statPrefix: 'lhsa_pc',\r\n        action: {\r\n          jump: arg => {\r\n            //pc下跳转适用pc提供的pai\r\n          },\r\n        },\r\n      },\r\n      {\r\n        des: 'web',\r\n        uniqueKey: 'f10-in-web',\r\n        verify: () => !!window._web_jsBridge_,\r\n        statPrefix: 'lhsa_web',\r\n        action: {\r\n          jump: arg => {\r\n            //web下跳转都走网页的默认新页面跳转\r\n            const { url } = arg;\r\n            window.open(url);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/1.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "{ url } = arg;\n            window.location.href = url;",
      "CodeQwen2.5-7B": "{ url } = arg;\r",
      "copilot": "{ url,cb } = arg;\r\n            \r\n",
      "CodeQwen1.5-7B": " { url } = arg;\r"
    }
  },
  {
    "prefix": "window.registerPlatformAndAction = ({ platformConfig }) => {\n  console.log(platformConfig);\n  //依次执行otherplatform的verify，都不满足适用defalut的\n  const { defaultPlatform, otherPlatform } = platformConfig;\n  let usingPlatform = defaultPlatform;\n  for (let i = 0; i < otherPlatform.length; i++) {\n    let currentPlatform = otherPlatform[i];\n    const { verify } = currentPlatform;\n    if (verify && verify()) {\n      usingPlatform = currentPlatform;\n      break;\n    }\n  }\n  //获取到当前平台,提取配置\n  const { key, statPrefix, cssKey, action } = usingPlatform;\n  //把当前platform的key注入到window的_platform_config,\n  window._platform_config = {\n    platform: key,\n    statId: statPrefix,\n  };\n  //同时把当前平台的cssKey注入到body的class里面\n  document.body.classList.add(cssKey);\n  //注入handler\n  const handlerAction = {};\n  for(let key of Object.keys(action)){",
    "infill": "handlerAction[key] = (config) => {\r\n      const { handler } = config;\r\n      if (handler && handler[key]) {\r\n        handler[key](config);\r\n        return;\r\n      }\r\n      action[key](config);\r",
    "suffix": "\n    };\r\n  }\r\n  window._action_config = {\r\n    ...handlerAction,\r\n  };\r\n};\r\n\r\n// 事件扩展性 1.1个事件在多端侧的逻辑（响应与不响应）不一样 \r\n// 2.各自有通用的默认逻辑 \r\n// 3.通用默认逻辑也有存在区别，部分跳转只走端内（非端内不响应或者走引流页）,部分跳转端内走端内跳转，端外走端外打开\r\n\r\nwindow._action_config.jump({\r\n  arg:{\r\n      url:'https://www.baidu.com',\r\n      option:{}\r\n  },\r\n  handler:{\r\n      ainvest:()=>{\r\n          console.log('ainvest')\r\n      },\r\n      pc:()=>{\r\n          console.log('pc')\r\n      },\r\n      web:()=>{\r\n          console.log('web')\r\n      }\r\n  }\r\n })\r\n\r\n\r\nwindow.supportPlatform = {\r\n  ainvestConfig: {\r\n    key: 'ainvest',\r\n    cssKey: 'f10-in-pc',\r\n    statPrefix: 'lhsa',\r\n  },\r\n  pcConfig: {\r\n    key: 'pc',\r\n    cssKey: 'f10-in-pc',\r\n    statPrefix: 'lhsa_pc',\r\n  },\r\n  webConfig: { key: 'web', cssKey: 'f10-in-web', statPrefix: 'lhsa_web' },\r\n};\r\n\r\n\r\n// handler逻辑注入到registerPlatformAndAction里面\r\n// 需求分析 1.handler提供端侧自定义 否则走默认的端侧逻辑\r\nwindow.registerPlatformAndAction({\r\n  platformConfig: {\r\n    defaultPlatform: {\r\n      ...window.supportPlatform.ainvestConfig,\r\n      action: {\r\n        jump: config => {\r\n          const { arg, handler } = config;\r\n          //handler 用于同端侧的跳转也无法统一，逻辑较多的情况\r\n          if (handler && handler[]) {\r\n            handler({\r\n              ...config,\r\n              handler: null,\r\n            });\r\n            return;\r\n          }\r\n          //这里调用原生的跳转方法\r\n          //\r\n        },\r\n      },\r\n    },\r\n    otherPlatform: [\r\n      {\r\n        ...window.supportPlatform.pcConfig,\r\n        verify: () => !!window._pc_jsBridge_,\r\n        action: {\r\n          jump: config => {\r\n            //pc下跳转适用pc提供的pai\r\n          },\r\n        },\r\n      },\r\n      {\r\n        ...window.supportPlatform.webConfig,\r\n        verify: () => !!window._web_jsBridge_,\r\n        action: {\r\n          jump: config => {\r\n            //web下跳转都走网页的默认新页面跳转\r\n            if (!enable) {\r\n              return;\r\n            }\r\n            const { url } = config;\r\n            window.open(url);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/1.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "\n      handlerAction[key] = (config)=>{\n          const finalConfig = {\n            ...config,\n            ...action[key]\n          };\n          action[key] && action[key](finalConfig);\n      }",
      "CodeQwen2.5-7B": "\r",
      "copilot": "handlerAction[key] = (config) => {\r\n      const { handler } = config;\r\n      if (handler && handler[key]) {\r\n        handler[key](config);\r\n        return;\r\n      }\r\n      action[key](config);\r",
      "CodeQwen1.5-7B": ""
    }
  },
  {
    "prefix": "import { Boot } from '@wangeditor/editor';\nimport {\n  shallowRef,\n  ref,\n  getCurrentInstance,\n  onMounted,\n  onBeforeUnmount,\n  nextTick,\n  watch,\n} from 'vue';\nimport { module } from '@/views/operation/Agent/components/Editor/module';\n\nBoot.registerModule(module);\n\nexport default props => {\n  const editor = shallowRef();\n  const editorConfig = {\n    placeholder: '',\n    autoFocus: false,\n    hoverbarKeys: {\n      text: {\n        menuKeys: [],\n      },\n    },\n  };\n\n  const modeValue = ref(valueString2Html(props.value));\n\n  const instance = getCurrentInstance();\n  // cascader container ref\n  const container = ref();\n  // cascader ref\n  const cascader = ref();\n  const current = ref();\n\n  const popVisible = ref(false);\n  const positionStyle = ref();\n\n  const addElement = () => {\n    // 构造变量节点\n    const element = {\n      type: 'variate',\n      value: ref(''),\n      children: [{ text: '' }],\n    };\n    editor.value?.insertNode(element);\n    // editor.value?.updateView()\n  };\n  // 手动触发更新\n  const updateVariData = () => {\n    editor.value?.updateView();\n  };\n  const handleOpenCascader = elem => {\n    current.value = elem;\n    if (!editor.value) {\n      return;\n    }\n    const position = editor.value.getSelectionPosition();\n    let key;\n    const result = {};\n    for (key in position) {\n      if (position.hasOwnProperty(key)) {\n        let value = Number.parseInt(position[key]);\n        if (key === 'top') {\n          const NUMBER_22 = 22;\n          value -= NUMBER_22;\n        }\n        if (key === 'left') {\n          const NUMBER_30 = 30;\n          value -= NUMBER_30;\n        }\n        result[key] = value + 'px';\n      }\n    }\n    positionStyle.value = result;\n    popVisible.value = true;\n  };\n  // 选中值\n  const handleCascaderChange = (val, nodeName) => {\n    console.log(val, nodeName);\n    if (!current.value) {\n      return;\n    }\n    // 标签传值格式为：{{ [nodeId].[var",
    "infill": "iateId] | node名称.variateId",
    "suffix": "}}\r\n    current.value.value.value = `${val.join('.')} | ${nodeName}.${val[1]}`;\r\n    popVisible.value = false;\r\n    // updateVariData()\r\n    modeValue.value = editor.value?.getHtml();\r\n    syncEmitModel();\r\n  };\r\n\r\n  // 同步更新model\r\n  const syncEmitModel = () => {\r\n    const data = modeValue.value;\r\n    const rst = html2ValueString(data);\r\n\r\n    instance?.emit('update:value', rst);\r\n  };\r\n\r\n  // html转为值\r\n  function html2ValueString(str) {\r\n    const rst = str\r\n      .replace(/<p>(.+)<\\/p>/, (a, b) => b)\r\n      .replace(\r\n        /<span data-w-e-type=variate data-w-e-is-void data-w-e-is-inline data-value='(.*?)'><\\/span>/g,\r\n        (a, b) => `{{${b}}}`\r\n      );\r\n    return rst;\r\n  }\r\n\r\n  // 值转为html\r\n  function valueString2Html(str) {\r\n    const value = str.replace(\r\n      /{{(.*?)}}/g,\r\n      (a, b) =>\r\n        `<span data-w-e-type=variate data-w-e-is-void data-w-e-is-inline data-value='${b}'></span>`\r\n    );\r\n    const rst = `<p>${value}</p>`;\r\n    return rst;\r\n  }\r\n\r\n  const handleFocus = () => {\r\n    editor.value?.focus();\r\n  };\r\n  const handleCreated = editorDom => {\r\n    editor.value = editorDom;\r\n    // 监听变量点击\r\n    editor.value?.on('variClick', handleOpenCascader);\r\n    editor.value.on('toggle-index', val => {\r\n      if (!current.value) {\r\n        return;\r\n      }\r\n      current.value.value.value = val;\r\n      updateVariData();\r\n      syncEmitModel();\r\n    });\r\n  };\r\n  const handleChange = () => {\r\n    syncEmitModel();\r\n  };\r\n  // 全局注册的mousedown事件\r\n  const gloablMouseDown = e => {\r\n    let target = e.target;\r\n    if (target.shadowRoot && e.composed) {\r\n      target = e.composedPath()[0] || target;\r\n    }\r\n    const elements = [\r\n      container.value,\r\n      ...document.querySelectorAll('.editor-cascader'),\r\n    ];\r\n\r\n    // 点击非 container，trigger区域，隐藏下拉\r\n    if (\r\n      popVisible.value &&\r\n      elements.every(ele => ele && !ele.contains(target) && ele !== target)\r\n    ) {\r\n      popVisible.value = false;\r\n    }\r\n  };\r\n  // 禁止默认粘贴事件\r\n  const customPaste = (_editor, event, callback) => {\r\n    const text = event.clipboardData.getData('text/plain');\r\n    _editor.insertText(text);\r\n    callback(false);\r\n  };\r\n\r\n  onMounted(() => {\r\n    window.addEventListener('mousedown', gloablMouseDown);\r\n  });\r\n\r\n  onBeforeUnmount(() => {\r\n    window.removeEventListener('mousedown', gloablMouseDown);\r\n    if (editor.value) {\r\n      editor.value.destroy();\r\n    }\r\n  });\r\n\r\n  return {\r\n    modeValue,\r\n    cascader,\r\n    container,\r\n    editor,\r\n    popVisible,\r\n    positionStyle,\r\n    editorConfig,\r\n    handleChange,\r\n    handleCascaderChange,\r\n    handleFocus,\r\n    handleCreated,\r\n    addElement,\r\n    customPaste,\r\n  };\r\n};\r\n",
    "relevantFile": "<file_path>src/views/operation/Agent/components/Editor/module/render-element.js\n};\n\n// 渲染变量节点到编辑器\nconst renderVariable = (elem, children, editor) => {\n  const { value } = elem;\n  // 公共的事件处理\n  const commonEvent = {\n    click() {\n      editor.emit('variClick', elem);\n    },\n    mousedown(e) {\n      e.preventDefault();\n    },\n    contextmenu(e) {\n      e.preventDefault();\n    },\n  };\n  // 未设置的btn\n  const defaultVnode = h(\n    'span',\n    {\n      style: {\n        ...commonStyle,\n        ...defaultStyle,\n      },\n      dataset: {\n        customType: 'variate',\n      },\n      on: {\n        ...commonEvent,\n      },\n    },\n    '选择变量'\n  );\n  // 设置后的btn\n  const variableVnode = h(\n    'span',\n    {\n      style: {\n        ...commonStyle,\n        ...variStyle,\n      },\n      dataset: {\n        customType: 'variate',\n      },\n      on: {\n        ...commonEvent,\n      },\n    },\n    `${value.value}`\n  );\n  return value.value ? variableVnode : defaultVnode;\n};\n\n// 注册renderElem\nexport const renderElemConf = {\n  type: 'variate',\n  renderElem: renderVariable,\n};\n<file_path>src/views/operation/Agent/hooks/useVariate.js\n          type: 'String',\n        },\n        {\n          key: 'uemail',\n          type: 'String',\n        }],\n      },\n    };\n    keys.forEach(key => {\n      rst[key] = varObj.value?.[key];\n    });\n    return rst;\n  };\n\n  // 获取当前所传nodeId对应节点的可用变量\n  const getAvailableVarObjByNode = ({ key, isTool = false }) => {\n    if (isTool) {\n      const paths = getPathToStartByNodeId(key);\n      const filtedPaths = [...paths];\n      if (paths.length !== 0) {\n        // 工具链上的节点，变量域等同于父节点\n        const NUMBER_2 = 2;\n        filtedPaths.splice(-NUMBER_2, NUMBER_2);\n      }\n      const rst = getAvailableVarObj(filtedPaths);\n      return rst;\n    } else {\n      const paths = getPathToStartByNodeId(key);\n      const filtedPaths = paths.filter(path => path !== key);\n      const rst = getAvailableVarObj(filtedPaths);\n      return rst;\n    }\n  };\n\n  const getVarObjFromNodeList = () => {\n    const rstVarObj = {};\n    nodeList.value?.nodes?.forEach(node => {\n      if (node.id === 'start') {\n        rstVarObj[node.id] = {};\n        rstVarObj[node.id].name = node.data.name;\n        rstVarObj[node.id].data = node.data.inputs;\n      } else {\n        rstVarObj[node.id] = {};\n        rstVarObj[node.id].name = node.data.name;\n        rstVarObj[node.id].data = node.data.outputs;\n      }\n    });\n    initVarObj(rstVarObj);\n  };\n\n  watch(\n    [nodeList],\n    () => {\n      getVarObjFromNodeList();\n    },\n    {\n      deep: true,\n    }\n  );",
    "relevantFileList": [],
    "filePath": "src/views/operation/Agent/hooks/useEditor.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "key",
      "CodeQwen2.5-7B": "iableId] | [nodeName].[variableId] }}\r",
      "copilot": "iateId] | node名称.variateId",
      "CodeQwen1.5-7B": " iableName] }}\r"
    }
  },
  {
    "prefix": "export const stocksMock = {\n    type: 'Buy',\n    forecastList: [\n        {\n            code: 'TSLA', market: 185, name: 'tslvxa',\n            rating: {\n                currentRating: '强烈推荐',\n                lastRating: '跑输大盘',\n                isChanged: false,\n                currentRatingDate: '2021-08-12',\n                isPositive: ",
    "infill": "true,",
    "suffix": "\n            },\n            intraday_last_price: 123.23,\n            price_forecast: 'bullish',\n            change_pc: 12.33,\n            net_signal: 1,\n            explain_prompt: 'test AAPL',\n        },\n        {\n            code: 'AAPL', market: 185, name: 'applxe applxe applxe applxe applxe',\n            intraday_last_price: 0.23444,\n            price_forecast: 'bearish',\n            change_pc: -9.5532,\n            net_signal: 2,\n            explain_prompt: 'test AAPL',\n        },\n        {\n            code: 'META', market: 185, name: 'metxa',\n            intraday_last_price: 4.3243,\n            price_forecast: 'bullish',\n            change_pc: -5.55232,\n            net_signal: 3,\n            explain_prompt: 'test AAPL',\n        },\n    ]\n};",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "packages/mylist-analyst-card/src/api/mock.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "true",
      "CodeQwen2.5-7B": "true,",
      "copilot": "true,",
      "CodeQwen1.5-7B": " true,"
    }
  },
  {
    "prefix": "/* eslint-disable import/prefer-default-export */\nimport configInstance from './configInstance';\n\nconst cfInstance = configInstance.getInstance();\n\nconst chartConfig = cfInstance.getConfig();\n\n/**\n * 判断是否是相对值单位\n * @param {*} unit\n * @returns\n */\nexport const isRateUnit = (unit) => unit && (unit === '%' || unit === '点' || unit === '‰' || unit.indexOf('=100') > -1);\n\nexport const objectMerge = (object = {}, source = {}) => {\n  const obj = {};\n  const keys = Object.keys(object);\n  keys.forEach((key) => {\n    obj[key] = typeof(source[key]) === 'undefined' ? object[key] : source[key];\n  });\n  return obj;\n};\n/**\n * 根据系列获取完成的系列类型\n * @param {*} serie\n * @returns 图表类型\n */\nexport const getSerieTypeBySerie = (serie) => {\n  if (serie.type === 'line_area') {\n    if (serie.lineStyle === 'step') {\n      return 'line_area_step';\n    } if (serie.lineStyle === 'smooth') {\n      return 'line_area_smooth';\n    }\n    return 'line_area';\n  }\n  if (serie.type === 'line') {\n    if (serie.lineStyle === 'step') {\n      return 'line_step';\n    } if (serie.lineStyle === 'smooth') {\n      return 'line_smooth';\n    }\n    return 'line';\n  }\n  if (serie.type === 'line_area_stack') {\n    if (serie.lineStyle === 'step') {\n      return 'line_area_stack_step';\n    } if (serie.lineStyle === 'smooth') {\n      return 'line_area_stack_smooth';\n    }\n    return 'line_area_stack';\n  }\n  if (serie.type === 'line_area_percentstack') {\n    if (serie.lineStyle === 'step') {\n      return 'line_area_percentstack_step';\n    } if (serie.lineStyle === 'smooth') {\n      return 'line_area_percentstack_smooth';\n    }\n    return 'line_area_percentstack';\n  }\n  return serie.type;\n};\n\nexport const getStyleSetting = (serieType) => {\n  // line_area, line\n  if (serieType.indexOf('line_area') > -1) {\n    return ['line_area', serieType];\n  }\n  if (serieType.indexOf('line') > -1) {\n    return ['line', serieType];\n  }\n  if (serieType.indexOf('bar') > -1) {\n    return ['bar', serieType];\n  }\n  if (serieType.indexOf('pie') > -1) {\n    return ['pie', serieType];\n  }\n  return [serieType || 'line'];\n};\n/**\n * 根据系列设置指标\n * @param {*} indicator\n * @param {*} serie\n * @returns\n */\nconst getNewIndicatorBySerie = (indicator, serie) => {\n  const serieType = getSerieTypeBySerie(serie);\n  const styleSetting = getStyleSetting(serieType);\n  const { yAxisIndex } = serie;\n  return {\n    ...indicator,\n    yAxisIndex: (yAxisIndex === 0 || yAxisIndex === 1) ? yAxisIndex : indicator.yAxisIndex,\n    styleSetting,\n    graphColor: serie.graphColor,\n  };\n};\n\nconst getIndicatorColor = (chartClassify, chartType) => {\n  const chartClassifyConfig = chartConfig[chartClassify];\n  const chartClassifyColor = chartClassifyConfig.color;\n  const chartTypeColor = chartClassifyConfig[chartType].color;\n  return chartTypeColor.length > 0 ? chartTypeColor : chartClassifyColor;\n}\n\n/**\n * 给指标包装 轴线 颜色 样式设置 是否选中参数\n * @param {*} indicator\n * @param {*} chartType\n * @returns\n */\nexport const packIndicator = (\n  chartClassify = cfInstance.getDefaultChartClassify(), \n  chartType = cfInstance.getDefaultChartType(), \n  indicator,\n) => {\n  const color = getIndicatorColor(chartClassify, chartType)\n  return {\n    ...indicator,\n    yAxisIndex: 0,",
    "infill": " { type: option.xAxis.type, data: option.xAxis.data },\r\n    yAxis: option.yAxis.map((yAxis) => ({ name: tiem, type: 'value' })),",
    "suffix": "\r\n  };\r\n};",
    "relevantFile": "<file_path>package/generateChartOption.js\nimport generateData, { filterDataByDate } from './generateData';\nimport generateVariable from './generateVariable';\nimport generateOption from './generateOption';\nimport generateDateRange from './generateDateRange';\nimport generateIndicators from './generateIndicators';\n\nconst TWO = 2;\n\nfunction calculateAverage(arrays) {\n  // eslint-disable-next-line prefer-destructuring\n  const length = arrays[0].length;\n  const result = [];\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < length; i++) {\n    let sum = 0;\n    let count = 0;\n    // eslint-disable-next-line no-restricted-syntax\n    for (const array of arrays) {\n      if (!array[i].value && i !== 0) {\n        array[i].value = array[i - 1].value;\n      }\n      const valueNumber = parseFloat(array[i].value);\n      // eslint-disable-next-line no-restricted-globals\n      if (!isNaN(valueNumber)) {\n        sum += valueNumber;\n        // eslint-disable-next-line no-plusplus\n        count++;\n      }\n    }\n    const average = count > 0 ? sum / count : 0;\n    const value = average.toFixed(TWO) === '0.00' ? '' : average.toFixed(TWO);\n    result.push({ value, lock: false });\n  }\n  return result;\n}\nconst generateChartOption = (indicators, soureData, chartOptionVariable, chartSize, updateDataRange = true, useIFindUI = true) => {\n  const { chartClassify, dateRange = {}, avgEnabled } = chartOptionVariable;\n  const seriesVariable = chartOptionVariable.series || [];\n  const chartData = generateData(chartClassify, soureData, indicators);\n  let newDateRange = {};\n  if (updateDataRange || JSON.stringify(dateRange) === '{}') {\n    newDateRange = generateDateRange(chartClassify, dateRange, chartData.dateRange);\n  } else {\n    newDateRange = dateRange;\n  }\n  const chartSeries = generateIndicators(chartClassify, indicators, newDateRange, seriesVariable, avgEnabled, chartData.x);\n  chartOptionVariable = generateVariable(chartSeries, chartOptionVariable);\n  const { xAxis, series } = filterDataByDate(chartClassify, newDateRange, chartData.x, chartData.ySeries);\n  if (chartClassify === 'season-chart' && chartOptionVariable.avgEnabled) {\n    series.push(calculateAverage(JSON.parse(JSON.stringify(series))));\n  }\n  let option = generateOption(chartOptionVariable, xAxis, series, chartSize);\n  if (useIFindUI) {\n    option = { ...option, iFindUI: true };\n  }\n  return ;\n};\n\nexport default generateChartOption;\n<file_path>package/generateIndicators.js\n      styleSetting: ['bar', 'bar'],\n      displayId: serieId,\n      yAxisIndex: seriesMap[serieId] ? seriesMap[serieId].yAxisIndex : 0,\n      graphColor: seriesMap[serieId] ? seriesMap[serieId].graphColor : color[index % color.length],\n      unit: isEqual ? indicator.unit : '',\n      frequency: indicator.frequency,\n    });\n  });\n  return graphIndicators;\n};\n\nconst generateNonsequPieIndicators = (nonsequXAxisData, dateRange, indicator, seriesMap) => {\n  const graphIndicators = [];\n  const color = getIndicatorColor(CHART_CLASSIFY.NONSEQU_PIE, indicator.styleSetting[indicator.styleSetting.length - 1]);\n  for (let i = 0; i < nonsequXAxisData.length; i++) {\n    if (nonsequXAxisData[i].date === dateRange.date) {\n      nonsequXAxisData[i].value.forEach((xAxis, index) => {\n        let serieId = indicator.displayId;\n        serieId = `${serieId}-${xAxis}`;\n        graphIndicators.push({\n          name: xAxis,\n          styleSetting: indicator.styleSetting,\n          displayId: serieId,\n          yAxisIndex: seriesMap[serieId] ? seriesMap[serieId].yAxisIndex : index,\n          graphColor: seriesMap[serieId] ? seriesMap[serieId].graphColor : color[index % color.length],\n          unit: indicator.unit,\n          frequency: indicator.frequency,\n        });\n      });\n      break;\n    }\n  }\n  return graphIndicators;\n};\n\n/**\n * 生成图表系列\n * @param {*} chartClassify 图表分类\n * @param {*} indicators 指标\n * @param {*} dateRange 当前选中的时间范围\n * @returns\n */\nconst generateGraphIndicators = (\n  chartClassify,\n  indicators,\n  dateRange,\n  series,\n  addAvg,\n  nonsequXAxisData,\n) => {\n  if (!indicators.length) {\n    throw new Error('指标数据为空');\n  }\n  const seriesMap = {};\n  (series || []).forEach((serie) => {\n    seriesMap[serie.id] = serie;\n  });\n  let graphIndicators = [];\n  const indicator = indicators[0];\n  const isEqual = indicators.every((item) => item.unit === indicator.unit);",
    "relevantFileList": [],
    "filePath": "package/tool.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "isSelected: true,\n    color,\n    styleSetting: getStyleSetting(chartType),",
      "CodeQwen2.5-7B": "",
      "copilot": " { type: option.xAxis.type, data: option.xAxis.data },\r\n    yAxis: option.yAxis.map((yAxis) => ({ name: tiem, type: 'value' })),",
      "CodeQwen1.5-7B": " \r"
    }
  },
  {
    "prefix": "/**\n * 检查第一个矩形是否完全包含在第二个矩形中。\n *\n * @param {Object} rect1 第一个矩形。\n * @param {Object} rect2 第二个矩形。\n * @returns {boolean} 如果第一个矩形完全包含在第二个矩形中，则为 true，否则为 false。\n */\nexport const isEnclosed = (rect1, rect2) => {\n  return (\n    rect1.x >= rect2.x &&\n    rect1.y >= rect2.y &&\n    rect1.x + rect1.width <= rect2.x + rect2.width &&\n    rect1.y + rect1.height <= rect2.y + rect2.height\n  );\n}\n\n\n/**\n * 将包含矩形信息的数组转换为树。\n *\n * @param {Array<Object>} layers 矩形数组，每个矩形都具有 x、y、width 和 height 属性。\n * @returns {Object} 表示树的根节点。\n */\nexport const buildTree = (layers) => {\n  const tree = { children: [] };\n\n  for (const layer of layers) {\n    let added = false;\n    const traverse = (node) => {\n      const tmpChildren = [];\n      for (const child of node.children) {\n        if (isEnclosed(layer.rect, child.rect)) {\n          tmpChildren.push(child);\n        }\n      }\n      if(tmpChildren.length",
    "infill": " > 0) {\r\n        layer.children = tmpChildren;\r\n        \r\n      }",
    "suffix": "\r\n      node.children.push({ ...layer, children: [] });\r\n      added = true;\r\n    };\r\n    traverse(tree);\r\n\r\n  }\r\n\r\n  return tree;\r\n}",
    "relevantFile": "<file_path>chrome-extension/public/listener.js\n    if (message.type === 'update-layers') {\n      initLayer();\n    }\n  });\n  const sendMsg = async (msg) => {\n    const res = await chrome.runtime.sendMessage(msg);\n    console.log(res);\n  };\n\n  // 初始化图层并发送给service-worker\n  const initLayer = () => {\n    const pageName = iframeDocument.title.slice(0, iframeDocument.title.indexOf(' - '));\n    const iframeSrc = iframe.src;\n    const iframeId = iframeSrc.split('?')[1];\n\n    const obj = JSON.parse(localStorage.getItem('d2c_layer'));\n    if (obj?.id === iframeId) {\n      const dataObject = obj.data;\n      const newObj = dataObject.artboards.find(item => item.name === pageName);\n      sendMsg({\n        type: 'init',\n        data: newObj\n      });\n    } else {\n      fetch(iframeSrc)\n        .then(response => response.text())\n        .then(data => {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(data, 'text/html');\n          const scripts = doc.querySelectorAll('script');\n          const scriptContent = scripts[scripts.length - 1].textContent;\n          // 剔除开头固定的\"let data = \"和结尾固定的\"meaxure.render(data);\"以及一些空格\n          const dataObject = JSON.parse(scriptContent.slice(20, -35));\n          localStorage.setItem('d2c_layer', JSON.stringify({\n            id: iframeId,\n            data: dataObject\n          }));\n\n          const newObj = dataObject.artboards.find(item => item.name === pageName);\n          if (newObj) {\n            sendMsg({\n              type: 'init',\n              data: newObj\n            });\n          }\n        });\n    }\n  };\n\n\n  iframeDocument.addEventListener('click', (e) => {\n    if (e.target.classList.contains('layer')) {\n      sendMsg({\n        type: 'select',\n        data: e.target.classList[1].slice(6)\n      });\n    }\n  });\n\n\n<file_path>chrome-extension/dist/listener.js\n    if (message.type === 'update-layers') {\n      initLayer();\n    }\n  });\n  const sendMsg = async (msg) => {\n    await chrome.runtime.sendMessage(msg);\n  };\n\n  // 初始化图层并发送给service-worker\n  const initLayer = () => {\n    const pageName = iframeDocument.title.slice(0, iframeDocument.title.indexOf(' - '));\n    const iframeSrc = iframe.src;\n    const iframeId = iframeSrc.split('?')[1];\n\n    const obj = JSON.parse(localStorage.getItem('d2c_layer'));\n    if (obj?.id === iframeId) {\n      const dataObject = obj.data;\n      const newObj = dataObject.artboards.find(item => item.name === pageName);\n      sendMsg({\n        type: 'init',\n        data: newObj\n      });\n    } else {\n      fetch(iframeSrc)\n        .then(response => response.text())\n        .then(data => {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(data, 'text/html');\n          const scripts = doc.querySelectorAll('script');\n          const scriptContent = scripts[scripts.length - 1].textContent;\n          // 剔除开头固定的\"let data = \"和结尾固定的\"meaxure.render(data);\"以及一些空格\n          const dataObject = JSON.parse(scriptContent.slice(20, -35));\n          localStorage.setItem('d2c_layer', JSON.stringify({\n            id: iframeId,\n            data: dataObject\n          }));\n\n          const newObj = dataObject.artboards.find(item => item.name === pageName);\n          if (newObj) {\n            sendMsg({\n              type: 'init',\n              data: newObj\n            });\n          }\n        });\n    }\n  };\n\n\n  iframeDocument.addEventListener('click', (e) => {\n    if (e.target.classList.contains('layer')) {\n      sendMsg({\n        type: 'select',\n        data: e.target.classList[1].slice(6)\n      });\n    }\n  });\n\n\n})()\n<file_path>chrome-extension/src/routes/index.js\n\nimport Generator from '../views/Generator.vue'\nimport LayerPreview from '../views/LayerPreview.vue'\n\nconst routes = [\n  {\n    path: '/layer-preview',\n    name: 'Layer Preview',\n    component: LayerPreview\n  },\n  {\n    path: '/generator',\n    name: 'Code Generator',\n    component: Generator\n  }\n]\n\nexport default routes\n<file_path>chrome-extension/src/store/index.js\nimport { defineStore } from 'pinia';\nimport { buildTree } from './shape';\n\nexport const useLayerStore = defineStore('layer', {\n  state: () => ({\n    layers: null,\n    currentLayer: 0,\n  }),\n  actions: {\n    initPages(layers) {\n      console.log(new Date());\n      this.layers = buildTree(layers);\n      console.log(new Date(), this.layers);\n    },\n    setCurrentLayer(id) {\n      this.currentLayer = id;\n    }\n  },\n  getters: {\n    getLayerChildren(state) {\n      const currentLayer = state.layers.find(item => item.objectID === state.currentLayer);\n      const { x, y, width, height } = currentLayer.rect;\n      const children = state.layers.filter(({ rect }) => {\n        return rect.x >= x && rect.y >= y && rect.x + rect.width <= x + width && rect.y + rect.height <= y + height;\n      })\n      console.log(children);\n      return children;\n    }\n  },\n});",
    "relevantFileList": [],
    "filePath": "chrome-extension/src/store/shape.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "> 0) {\n        tmpChildren.forEach(item => {\n          node.children.push(item);\n        })\n        added = true;\n      }",
      "CodeQwen2.5-7B": " > 0) {\r",
      "copilot": " > 0) {\r\n        layer.children = tmpChildren;\r\n        \r\n      }",
      "CodeQwen1.5-7B": " >0){\r"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { sleep } from '@/utils/index'\nimport { calLabelLayout } from '../ChainChart/utils/index'\nimport { NodeBgLinearGradientMap, NodeBarLinearGradient } from './common'\n\n\n\nexport class NTProgressive {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n\n    this.data = [\n      {\n        name: '滚筒洗衣机',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n    ]\n\n    this.initLayout = null\n    this.gridLayouts = null\n    this.calLayout()\n\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2],\n      slient: true,\n    })\n    this.zr.add(this.rootGroup)\n\n    this.render()\n\n  }\n\n  calLayout() {\n    this.initLayout = {\n      position: [0, 0],\n      scale: 1,\n    }\n    this.toLayout",
    "infill": " = {\r\n      position: [0, 0],\r\n      scale: 1,\r\n    }\r\n",
    "suffix": "  }\r\n\r\n  async render() {\r\n    // this.showNode(0)\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      if (i > 0 && i % 4 === 0) {\r\n        await this.blurAllNodes(0)\r\n        this.rootGroup.removeAll()\r\n        await sleep(500)\r\n      }\r\n      this.blurAllNodes(0.1)\r\n      const nodeGroup = await this.showNode(i)\r\n      await Promise.all([this.playNode(nodeGroup, i), this.resumeAllNodes()])\r\n      await sleep(500)\r\n    }\r\n  }\r\n\r\n  blurAllNodes(toOpacity = 0.1) {\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: toOpacity\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  resumeAllNodes() {\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  showNode(index) {\r\n    const nodeData = this.data[index]\r\n    const fromLayout = this.initLayout\r\n    let nodeGroup = new zrender.Group({\r\n      position: fromLayout.position.slice(),\r\n      scale: [fromLayout.scale, fromLayout.scale],\r\n    })\r\n    const width = 428\r\n    const height = 538\r\n    nodeGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2 - 5,\r\n        y: - height / 2 - 5,\r\n        width: width + 10,\r\n        height: height + 10,\r\n        r: 17.28,\r\n      },\r\n      style: {\r\n        fill: '#FFFFFF',\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowBlur: 20,\r\n        shadowColor: 'rgba(3,25,40,0.16)'\r\n      },\r\n    }))\r\n    // \r\n    const imageEl = new zrender.Image({\r\n      style: {\r\n        image: nodeData.image,\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: width,\r\n      },\r\n    })\r\n    const nodeMask = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        r: 16,\r\n      },\r\n    })\r\n    imageEl.setClipPath(nodeMask)\r\n    nodeGroup.add(imageEl)\r\n    // \r\n    const textBg = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2 + 298,\r\n        width: width,\r\n        height: 240,\r\n        r: [0, 0, 16, 16],\r\n      },\r\n      style: {\r\n        fill: NodeBgLinearGradientMap['contain'],\r\n      },\r\n    })\r\n    nodeGroup.add(textBg)\r\n    // 横条\r\n    nodeGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - 364 / 2,\r\n        y: - height / 2 + 423,\r\n        width: 364,\r\n        height: 2,\r\n       },\r\n      style: {\r\n        fill: NodeBarLinearGradient,\r\n      },\r\n    }))\r\n    // \r\n    const { fontSize } = calLabelLayout({\r\n      width: width - 24,\r\n      text: nodeData.name,\r\n      maxFontSize: 48,\r\n      minFontSize: 12,\r\n      isBold: true\r\n    })\r\n    nodeGroup.add(new zrender.Text({\r\n      style: {\r\n        text: nodeData.name,\r\n        textLineHeight: fontSize,\r\n        fontSize: fontSize,\r\n        fontFamily: 'MicrosoftYaHei',\r\n        fontWieght: 'bold',\r\n        fill: '#FFFFFF',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        x: 0,\r\n        y: - height / 2 + 423 + 28 + 24,\r\n      },\r\n    }))\r\n    // \r\n    nodeGroup.traverse(child => {\r\n      child.attr({\r\n        style: {\r\n          opacity: 0.1\r\n        }\r\n      })\r\n    })\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      nodeGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  playNode(nodeGroup, index) {\r\n    const toLayout = this.gridLayouts[index % 4]\r\n    return new Promise((resolve) => {\r\n      nodeGroup.animateTo({\r\n        position: toLayout.position.slice(),\r\n        scale: [toLayout.scale, toLayout.scale],\r\n      }, {\r\n        duration: 1000,\r\n        easing: 'cubicOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.zr.dispose()\r\n  }\r\n}",
    "relevantFile": "<file_path>src/views/Home/components/Chain/nodeTopo/common.js\nimport * as zrender from '@/third/zrender/zrender'\n\nexport const NodeBgLinearGradientMap = {\n  up: new zrender.LinearGradient(\n    0,\n    0,\n    0,\n    1,\n    [\n      { offset: 0.07, color: 'rgba(78,134,146,0.00)' },\n      { offset: 0.54, color: '#042C34' },\n    ]\n  ),\n  contain: new zrender.LinearGradient(\n    0,\n    0,\n    0,\n    1,\n    [\n      { offset: 0.07, color: 'rgba(149,140,81,0.00)' },\n      { offset: 0.54, color: '#332D03' },\n    ]\n  ),\n  down: new zrender.LinearGradient(\n    0,\n    0,\n    0,\n    1,\n    [\n      { offset: 0.07, color: 'rgba(65,120,131,0.00)' },\n      { offset: 0.54, color: '#043B46' },\n    ]\n  )\n}\n\nexport const NodeBarLinearGradient = new zrender.LinearGradient(\n  0,\n  0,\n  1,\n  0,\n  [\n    { offset: 0, color: 'rgba(255,255,255,0.00)' },\n    { offset: 0.2, color: 'rgba(255,255,255,1)' },\n    { offset: 0.8, color: 'rgba(255,255,255,1)' },\n    { offset: 1, color: 'rgba(255,255,255,0.00)' },\n  ]\n)\n<file_path>src/views/Home/components/Chain/nodeTopo/NTParallel.js\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { sleep } from '@/utils/index'\nimport { calLabelLayout } from '../ChainChart/utils/index'\nimport { NodeBgLinearGradientMap, NodeBarLinearGradient } from './common'\n\nexport class NTParallel {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n\n    this.data = [\n      {\n        name: '滚筒洗衣机',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n    ]\n\n    this.initLayout = null\n    this.gridLayouts = null",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTProgressive.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "= []",
      "CodeQwen2.5-7B": "s = [\r",
      "copilot": " = {\r\n      position: [0, 0],\r\n      scale: 1,\r\n    }\r\n",
      "CodeQwen1.5-7B": "  = {\r"
    }
  },
  {
    "prefix": "module.exports = {\n    \"collectCoverage\": true,\n    \"coverageReporters\": [\"html\", \"text-summary\"],\n    \"transformIgnorePatterns\": [\"/node_modules/\"],\n    \"collectCoverageFrom\": [\"**/*.{js,vue}\", \"!**/node_modules/**\"],\n    \"transform\": {\n        \"^.+\\\\.vue$\": \"vue-jest\",\n        \"^.+\\\\.js$\": \"babel-jest\"\n    },\n    \"mo",
    "infill": "duleFileExtensions\": [\"js\", \"vue\"],",
    "suffix": "\n}",
    "relevantFile": "<file_path>packages/certification/src/test/test.js\n// const { describe } = require(\"node:test\");\n// import Button from '../component/buttons';\n// q:  Cannot find module '../component/buttons' from 'packages/certification/src/test/test.js'\n// a:  \nconst Button = require('../component/buttons.vue').default;\n\ndescribe('Button', () => {\n    it('should be defined', () => {\n        expect(Button).toBeDefined();\n    })\n    it('should be a function', () => {\n        expect(typeof Button).toBe('function');\n    })\n    it('should return a button element', () => {\n        const button = Button();\n        expect(button.tagName).toBe('BUTTON');\n    })\n    it('should return a button element with the text \"Click me\"', () => {\n        const button = Button();\n        expect(button.textContent).toBe('Click me');\n    })\n    it('should return a button element with the text \"Click me\"', () => {\n        const button = Button('Submit');\n        expect(button.textContent).toBe('Submit');\n    })\n})",
    "relevantFileList": [],
    "filePath": "jest.config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "duleNameMapper\": {\n        \"^@/(.*)$\": \"<rootDir>/src/$1\"\n    }",
      "CodeQwen2.5-7B": "duleFileExtensions\": [",
      "copilot": "duleFileExtensions\": [\"js\", \"vue\"],",
      "CodeQwen1.5-7B": " duleFileExtensions\": ["
    }
  },
  {
    "prefix": "import Vue from 'vue'\nimport CommandBox from '@/components/CommandBox/CommandBox.vue'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  computed: {\n    fullActiveTabMode() {\n      return this.activeTab + ",
    "infill": "(this.activeTab === 'edb' ? `_${this.activeTabMode}` : '')",
    "suffix": "\r\n    }\r\n  },\r\n  created () {\r\n    this.commandBoxInstance = null\r\n  },\r\n  mounted () {\r\n    // this.openCommandBox()\r\n    window.addEventListener('beforeunload', this.saveCommandBoxPosition)\r\n  },\r\n  beforeDestroy () {\r\n    this.closeCommandBox()\r\n    // this.commandBoxInstance = null\r\n  },\r\n  methods: {\r\n    saveCommandBoxPosition() {\r\n      if (this.commandBoxInstance) {\r\n        localStorage.setItem(\r\n          'edb_commandBox_position',\r\n          JSON.stringify(this.commandBoxInstance.position)\r\n        )\r\n      }\r\n    },\r\n    // 触发命令框\r\n    triggerCommandBox (data) {\r\n      // console.log('triggerCommandBox', data)\r\n      if (data.action === 'focusCommandBox') {\r\n        let initPosition\r\n        try {\r\n          initPosition = JSON.parse(localStorage.getItem('edb_commandBox_position'))\r\n        } catch (e) { console.log(e) }\r\n        this.openCommandBox({\r\n          initMode: data.args,\r\n          // initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 74 }\r\n          initPosition: initPosition || (data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 174 })\r\n        }).then(() => {\r\n          this.commandBoxInstance.focus()\r\n        })\r\n      } else if (data.action === 'switchCommandBoxMode') {\r\n        this.switchCommandBoxMode({\r\n          mode: data.args\r\n        })\r\n      } else if (data.action === 'syncSelectItems') {\r\n        if (this.commandBoxInstance) {\r\n          this.commandBoxInstance.syncSelectItems({\r\n            selectItems: data.args,\r\n          })\r\n        }\r\n      }\r\n    },\r\n    openCommandBox ({ initMode, initPosition }) {\r\n      if (!this.commandBoxInstance) {\r\n        const CommandBoxComponent = Vue.extend(CommandBox)\r\n        const _this = this\r\n        this.commandBoxInstance = new CommandBoxComponent({\r\n          beforeCreate () {\r\n            this._i18n = _this._i18n \r\n          },\r\n          propsData: {\r\n            ContainerRef: this,\r\n            initMode,\r\n            initPosition,\r\n          }\r\n        })\r\n        // this.commandBoxInstance.$on('hide', () => {\r\n        //   this.onCommandBoxHide()\r\n        // })\r\n        let mountEl = document.createElement('div')\r\n        document.body.appendChild(mountEl)\r\n        this.commandBoxInstance.$mount(mountEl)\r\n        return this.$nextTick()\r\n      } else {\r\n        this.commandBoxInstance.open()\r\n        return Promise.resolve()\r\n      }\r\n    },\r\n    // onCommandBoxHide () {\r\n    // },\r\n    closeCommandBox () {\r\n      if (this.commandBoxInstance) {\r\n        this.commandBoxInstance.$destroy()\r\n        document.body.removeChild(this.commandBoxInstance.$el)\r\n        this.commandBoxInstance = null\r\n      }\r\n    },\r\n    switchCommandBoxMode({ mode }) {\r\n      if (this.commandBoxInstance) {\r\n        // if (mode) {\r\n        //   this.commandBoxInstance.show()\r\n        //   this.commandBoxInstance.switchMode(mode)\r\n        // } else {\r\n        //   this.commandBoxInstance.hide()\r\n        // }\r\n        if (mode) {\r\n          this.commandBoxInstance.switchMode(mode)\r\n        }\r\n      }\r\n    },\r\n  },\r\n}\r\n",
    "relevantFile": "<file_path>src/views/Home/mixins/homeMixinMainLayout.js\n// 主页 - 主布局逻辑\n\nvar leftWidthMemory = 500;\nvar rightTopHeightPercentMemory = 40;\nexport default {\n  watch: {\n    '$edbStore.states.mainLayoutState.leftWidth'() {\n      this.leftFieldRefreshContentWidth();\n    }\n  },\n  beforeCreate() {\n    let leftWidth = parseInt(localStorage.getItem('edb_layout_leftWidth')) || 500;\n    if (leftWidth >= window.innerWidth) {\n      leftWidth = 500;\n    }\n    let rightTopHeightPercent = parseInt(localStorage.getItem('edb_layout_rightTopHeightPercent')) || 40;\n    if (rightTopHeightPercent >= 100) {\n      rightTopHeightPercent = 40;\n    }\n    leftWidthMemory = leftWidth;\n    rightTopHeightPercentMemory = rightTopHeightPercent;\n  },\n  created() {\n    this.$edbStore.states.mainLayoutState.leftWidth = leftWidthMemory;\n    this.$edbStore.states.mainLayoutState.rightTopHeight = (window.innerHeight - 36) * rightTopHeightPercentMemory / 100;\n    this.$edbStore.states.mainLayoutState.rightWidth = window.innerWidth - leftWidthMemory;\n  }\n};\n<file_path>src/views/Home/mixins/homeMixinCommandBox.js\n\nexport default {\n  // data () {\n  //   return {\n  //   }\n  // },\n  created () {\n    // 设置搜索模式\n    this.$edbStore.states.searchMode = 'commandBox'\n  },\n  methods: {\n    reactCommandBox(data) {\n      if (data.action === 'closeCommandBox') {\n        this.$edbStore.states.commandBoxState.active = false\n      } else if (data.action === 'locateIndex') {\n        this.locateIndex(data.args)\n      } else if (data.action === 'locateAddIndex') {\n        this.locateIndex(data.args)\n        this.batchAddIndex([data.args])        \n      } else if (data.action === 'addSubjectToDrawtool') {\n        this.addSubjectToDrawtool(data.args)\n      } else if (data.action === 'doSearch') {\n        this.getActiveLeftTabRef().doSearch(data.args)\n      } else if (data.action === 'batchAddIndexAndExtractData') {\n        this.batchAddIndexAndExtractData(data.args)\n      } else if (data.action === 'delectSearchSelectItem') {\n        this.getActiveLeftTabRef().delectSearchSelectItem(data.args)\n      } else if (data.action === 'addSearchSelectItem') {\n        this.getActiveLeftTabRef().addSearchSelectItem(data.args)\n      } else if (data.action === 'fillupSearchList') {\n        this.getActiveLeftTabRef().fillupSearchList(data.args)\n      } else if (data.action === 'syncSearchListESState') {\n        this.getActiveLeftTabRef().syncSearchListESState(data.args)\n      }\n    },\n    getActiveLeftTabRef() {\n      if (this.activeLeftTab === 'IndexSelect') {\n        return this.$refs.indexSelectRef\n      } else if (this.activeLeftTab === 'Dataset') {\n        return this.$refs.datasetRef\n      } else if (this.activeLeftTab === 'Selfbuilt') {\n        return this.$refs.selfbuiltRef\n      }\n    },\n  }\n}",
    "relevantFileList": [],
    "filePath": "src/pages/dashboard/mixins/commandBoxMixin.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "'-' + this.activeMode",
      "CodeQwen2.5-7B": "'_' + this.activeTabMode",
      "copilot": "(this.activeTab === 'edb' ? `_${this.activeTabMode}` : '')",
      "CodeQwen1.5-7B": " '.' + this.activeTabMode\r"
    }
  },
  {
    "prefix": "/**\n * 多端适配方法\n */\n\n\n/**\n * 注册端侧平台和行为，进行多端行为收口\n * platformConfig参数说明：\n * {\n *   defaultPlatform: platForm 默认平台配置，未匹配到其他平台时，默认使用此配置\n *   otherPlatform: [platForm] 其他平台配置数组\n * }\n * platForm:{\n *   key: string 平台标识，\n *   statPrefix？: string 埋点前缀，\n *   cssKey？: string css类名，样式覆盖使用\n *   verify: function 验证函数，返回true时使用此平台配置\n *   action: { [funcName]: function } 行为配置\n * }\n * 逻辑说明：根据各平台的配置的verfiy确定当前使用的端侧平台；确定端侧平台后，像body注入cssKey或者key，同时给所有action进行handler注入处理\n * handler的作用是",
    "infill": "提供端侧自定义逻辑，如果没有提供，就走默认的端侧逻辑\r\n * handler的key是平台标识，value是对应的处理函数",
    "suffix": "\r\n */\r\nexport const registerPlatformAndAction = ({ platformConfig }) => {\r\n  //依次执行otherplatform的verify，都不满足适用defalut的\r\n  const { defaultPlatform, otherPlatform } = platformConfig;\r\n  let usingPlatform = defaultPlatform;\r\n  for (let i = 0; i < otherPlatform.length; i++) {\r\n    let currentPlatform = otherPlatform[i];\r\n    const { verify } = currentPlatform;\r\n    if (verify && verify()) {\r\n      usingPlatform = currentPlatform;\r\n      break;\r\n    }\r\n  }\r\n  //获取到当前平台,提取配置\r\n  const { key, statPrefix, cssKey, action } = usingPlatform;\r\n  //同时把当前平台的cssKey注入到body的class里面 //如果未声明csskey，就使用key\r\n  document.body.classList.add(cssKey || key);\r\n  //注入handler\r\n  const handlerAction = {};\r\n  for (let funcName of Object.keys(action)) {\r\n    handlerAction[funcName] = (config) => {\r\n      const { handler } = config;\r\n      //handler如果声明对于当前平台的处理，优先使用handler的处理\r\n      if (handler && handler[key]) {\r\n        handler[key](config);\r\n        return;\r\n      }\r\n      action[funcName](config);\r\n    };\r\n  }\r\n  const _action_config = {\r\n    ...handlerAction,\r\n  };\r\n\r\n};\r\n\r\nwindow.supportPlatform = {\r\n  ainvestConfig: {\r\n    key: \"ainvest\",\r\n    cssKey: \"f10-in-pc\",\r\n    statPrefix: \"lhsa\",\r\n  },\r\n  pcConfig: {\r\n    key: \"pc\",\r\n    cssKey: \"f10-in-pc\",\r\n    statPrefix: \"lhsa_pc\",\r\n  },\r\n  webConfig: { key: \"web\", cssKey: \"f10-in-web\", statPrefix: \"lhsa_web\" },\r\n};\r\n\r\n// handler逻辑注入到registerPlatformAndAction里面\r\n// 需求分析 1.handler提供端侧自定义 否则走默认的端侧逻辑\r\nwindow.registerPlatformAndAction({\r\n  platformConfig: {\r\n    defaultPlatform: {\r\n      ...window.supportPlatform.ainvestConfig,\r\n      action: {\r\n        jump: (config) => {\r\n          const { arg } = config;\r\n          //通用逻辑\r\n        },\r\n      },\r\n    },\r\n    otherPlatform: [\r\n      {\r\n        ...window.supportPlatform.pcConfig,\r\n        verify: () => !!window._pc_jsBridge_,\r\n        action: {\r\n          jump: (config) => {\r\n            //pc下跳转适用pc提供的pai\r\n            const { arg } = config;\r\n            //通用逻辑\r\n          },\r\n        },\r\n      },\r\n      {\r\n        ...window.supportPlatform.webConfig,\r\n        verify: () => !!window._web_jsBridge_,\r\n        action: {\r\n          jump: (config) => {\r\n            const { arg: { url } = {} } = config;\r\n            if (!url) {\r\n              // handle empty url case\r\n              return;\r\n            }\r\n            //通用逻辑\r\n            window.open(url);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n",
    "relevantFile": "<file_path>src/formatTime/formatTime.js\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\n  };\n  for (let k in opt) {\n    ret = new RegExp(\"(\" + k + \")\").exec(formatDate);\n    if (ret) {\n      formatDate = formatDate.replace(\n        ret[1],\n        parseInt(opt[k]) < 10 ? \"0\" + opt[k] : opt[k]\n      );\n    }\n  }\n  return formatDate;\n}\n\n/**\n * 格式化当前日期\n * seperator为'-' 输出 YYYY-MM-DD\n * @param {string} seperator 分隔符\n *\n */\nexport function formatNowDate(seperator = \"\") {\n  const formatStr = `YYYY${seperator}mm${seperator}dd`;\n  return dateFormat(\"\", formatStr);\n}\n\n/**\n * 国际化格式化当前日期\n *\n * @param {string} time  时间戳 1609725002000 或者合法时间格式 1999-9-19\n * @param {string } locale 当前语言\n * @param {boolean } config   使用特殊格式配置\n *                            useEnOther:boolean  英文下是否使用另一种格式（09/19/1999）默认false\n *                            hideYear:boolean 是否隐藏年份的返回  只返回09-19 Dec 9 09/19 默认false\n * return\n * 标准格式  中文 1999-09-19  英文 （Dec 9,1999）\n * 英文另一种格式09/19/1999\n * 隐藏年份 09-19 Dec 9 09/19\n * //默认（包括其他语言 德语等）返回中文的格式  中文的locale 分为zh和zh-hans 都支持\n */\n\nexport function formateLocaleDate(time, locale, config = {}) {\n  locale = locale ? locale : getLang();\n  const { useEnOther = false, hideYear = false } = config;\n  if (useEnOther) {\n    return dateFormat(time, hideYear ? \"mm/dd\" : \"mm/dd/YYYY\");\n  }\n  if (locale !== \"en\") {\n    //中文或者其他语言 都走中文格式\n    const fmt = hideYear ? \"mm-dd\" : \"YYYY-mm-dd\";\n    return dateFormat(time, fmt);\n  }\n  let date = time ? new Date(time) : new Date();\n  if (isNaN(date.getTime())) {\n    throw new Error(\"Invalid Date\");\n  }\n  let options = { month: \"short\", day: \"numeric\" };\n  if (!hideYear) options[\"year\"] = \"numeric\";\n  return date.toLocaleDateString(locale, options);\n}\n<file_path>__test__/formatTime/formatTime.spec.js\n  });\n\n  test(\"参数错误\", () => {\n    expect(() => dateFormat(\"2020-14-04\", \"\")).toThrowError(Error);\n    // expect(dateFormat('2020-14-04', '')).rejects.toThrow('参数错误Invalid Date');\n  });\n});\n\ndescribe(\"formatNowDate\", () => {\n  test(\"参数为空\", () => {\n    expect(formatNowDate(\"\")).toBe(getDate(\"\"));\n    // expect(dateFormat('2020-14-04', '')).rejects.toThrow('参数错误Invalid Date');\n  });\n\n  test(\"参数不传\", () => {\n    expect(formatNowDate()).toBe(getDate(\"\"));\n    // expect(dateFormat('2020-14-04', '')).rejects.toThrow('参数错误Invalid Date');\n  });\n\n  test(\"参数为-\", () => {\n    expect(formatNowDate(\"-\")).toBe(getDate(\"-\"));\n    // expect(dateFormat('2020-14-04', '')).rejects.toThrow('参数错误Invalid Date');\n  });\n});\n\ndescribe(\"formateLocaleDate\", () => {\n  test(\"中文 默认\", () => {\n    expect(formateLocaleDate(\"2022-02-28\", \"zh\")).toBe(\"2022-02-28\");\n  });\n  test(\"中文 新简写 默认\", () => {\n    expect(formateLocaleDate(\"2022-02-28\", \"zh-hans\")).toBe(\"2022-02-28\");\n  });\n  test(\"德语 默认\", () => {\n    expect(formateLocaleDate(\"2022-02-28\", \"de\")).toBe(\"2022-02-28\");\n  });\n  test(\"中文 隐藏年份\", () => {\n    expect(formateLocaleDate(\"2022-02-28\", \"zh\", { hideYear: true })).toBe(\n      \"02-28\"\n    );\n  });\n  test(\"英文 默认\", () => {\n    expect(formateLocaleDate(\"2022-02-28\", \"en\")).toBe(\"Feb 28, 2022\");\n  });\n  test(\"英文 隐藏年份\", () => {\n    expect(formateLocaleDate(\"2022-02-28\", \"en\", { hideYear: true })).toBe(\n      \"Feb 28\"\n    );\n  });\n  test(\"英文 特殊格式\", () => {\n    expect(formateLocaleDate(\"2022-02-28\", \"en\", { useEnOther: true })).toBe(\n      \"02/28/2022\"\n    );\n  });\n  test(\"英文 隐藏年份 特殊格式\", () => {\n    expect(\n      formateLocaleDate(\"2022-02-28\", \"en\", {\n        hideYear: true,\n        useEnOther: true,\n      })\n    ).toBe(\"02/28\");\n<file_path>1.js\n//   },\n//   handler:{\n//       ainvest:()=>{\n//           console.log('ainvest')\n//       },\n//       pc:()=>{\n//           console.log('pc')\n//       },\n//       web:()=>{\n//           console.log('web')\n//       }\n//   }\n//  })\n\nwindow.supportPlatform = {\n  ainvestConfig: {\n    key: 'ainvest',\n    cssKey: 'f10-in-pc',\n    statPrefix: 'lhsa',\n  },\n  pcConfig: {\n    key: 'pc',\n    cssKey: 'f10-in-pc',\n    statPrefix: 'lhsa_pc',\n  },\n  webConfig: { key: 'web', cssKey: 'f10-in-web', statPrefix: 'lhsa_web' },\n};\n\n// handler逻辑注入到registerPlatformAndAction里面\n// 需求分析 1.handler提供端侧自定义 否则走默认的端侧逻辑\nwindow.registerPlatformAndAction({\n  platformConfig: {\n    defaultPlatform: {\n      ...window.supportPlatform.ainvestConfig,\n      action: {\n        jump: config => {\n          const { arg } = config;\n          //通用逻辑\n        },\n      },\n    },\n    otherPlatform: [\n      {\n        ...window.supportPlatform.pcConfig,\n        verify: () => !!window._pc_jsBridge_,\n        action: {\n          jump: config => {\n            //pc下跳转适用pc提供的pai\n            const { arg } = config;\n            //通用逻辑\n          },\n        },\n      },\n      {\n        ...window.supportPlatform.webConfig,\n        verify: () => !!window._web_jsBridge_,\n        action: {\n          jump: config => {\n            const { arg: { url } = {} } = config;\n            if (!url) {",
    "relevantFileList": [],
    "filePath": "src/commonUtils/deviceAdapter.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "对于当前平台的action处理进行覆盖或者注入",
      "CodeQwen2.5-7B": "，如果当前平台有声明handler，优先使用handler的处理，否则使用默认的处理",
      "copilot": "提供端侧自定义逻辑，如果没有提供，就走默认的端侧逻辑\r\n * handler的key是平台标识，value是对应的处理函数",
      "CodeQwen1.5-7B": " ：\r"
    }
  },
  {
    "prefix": "/**\n * 多端适配方法\n */\n\nimport { checkIsInApp,jumpWebPage } from \"@overseafront/utils\";\nimport { getBroker, getUrlParams } from \"./commonUtils\";\n\n/**\n * 注册端侧平台和行为，进行多端行为收口\n * platformConfig参数说明：\n * {\n *   defaultPlatform: platForm 默认平台配置，未匹配到其他平台时，默认使用此配置\n *   otherPlatform: [platForm] 其他平台配置数组\n * }\n * platForm:{\n *   key: string 平台标识，\n *   verify: function 验证函数，返回true时使用此平台配置\n *   cssKey？: string css类名，样式覆盖使用\n *   自定义扩展字段（内部不使用），比如statPrefix？: string 埋点前缀，可用于不同平台的埋点前缀区分\n *   action: { [funcName]: function } 行为配置\n * }\n * 逻辑说明：根据各平台的配置的verfiy确定当前使用的端侧平台；确定端侧平台后，像body注入cssKey或者key，同时给所有action进行handler注入处理\n * handler的作用是提供端侧自定义逻辑，如果没有提供，就走默认的端侧逻辑\n * handler的key是平台标识，value是对应的处理函数\n * 返回值：{ currentPlatform, actionConfig } currentPlatform是当前使用的平台配置（用户提供），actionConfig是注入handler后处理函数配置\n */\nexport const registerPlatformAndAction = ({ platformConfig }) => {\n  //依次执行otherplatform的verify，都不满足适用defalut的\n  const { defaultPlatform, otherPlatform } = platformConfig;\n  let usingPlatform = defaultPlatform;\n  for (let i = 0; i < otherPlatform.length; i++) {\n    let currentPlatform = otherPlatform[i];\n    const { verify } = currentPlatform;\n    if (verify && verify()) {\n      usingPlatform = currentPlatform;\n      break;\n    }\n  }\n  //获取到当前平台,提取配置\n  const { key, cssKey, action } = usingPlatform;\n  //同时把当前平台的cssKey注入到body的class里面 //如果未声明csskey，就使用key\n  document.body.classList.add(cssKey || key);\n  //注入handler\n  const handlerAction = {};\n  if (action) {\n    for (let funcName of Object.keys(action)) {\n      handlerAction[funcName] = (config) => {\n        const { handler } = config ?? {};\n        //handler如果声明对于当前平台的处理，优先使用handler的处理\n        if (handler && handler[key]) {\n          handler[key](config);\n          return;\n        }\n        action[funcName](config);\n      };\n    }\n  }\n  const _action_config = {\n    ...handlerAction,\n  };\n  return {\n    currentPlatform: usingPlatform,\n    actionConfig: _action_config,\n  };\n};\nexport const f10OverSeaPlatformConfig = {\n  ainvestConfig: {\n    key: \"ainvest\",\n    cssKey: \"f10-in-ainvest\",\n    statPrefix: \"lhsa\",\n    verify: () => checkIsInApp(),\n    action:{\n      jump:(config)=>{\n        const {arg:{url,option,open}= {}} ",
    "infill": "= config;\r\n        if(!url){\r\n          return;\r\n        }\r\n        const jumpWebPage",
    "suffix": "\r\n\r\n      }\r\n    }\r\n  },\r\n  pcConfig: {\r\n    key: \"pc\",\r\n    cssKey: \"f10-in-pc\",\r\n    statPrefix: \"lhspc\",\r\n    verify: () => getBroker() === \"pc\",\r\n  },\r\n  webConfig: {\r\n    key: \"web\",\r\n    cssKey: \"f10-in-web\",\r\n    statPrefix: \"lhsws\",\r\n    // web可能是bowerbird嵌入，需要根据插入的参数判断\r\n    verify: () => getUrlParams(\"clientsource\") === \"web\",\r\n  },\r\n};\r\n\r\nexport const f10Platform = new f10Platform();\r\n\r\nexport const f10PlatFormInit = ()=>{\r\n    const { currentPlatform, actionConfig } = registerPlatformAndAction({\r\n      platformConfig:f10PlatformConfig,\r\n    });\r\n    if(cb)\r\n}\r\n\r\nexport const f10DevicePlatformAction = {\r\n  webJump: (url) => {\r\n    let _url = addClientSource(url, \"web\");\r\n    window.open(_url);\r\n  },\r\n  pcJump: (url) => {\r\n    try {\r\n      const pcOpenUrl = window.AinvestWindows.openUrl;\r\n      pcOpenUrl(JSON.stringify({ url }));\r\n    } catch (e) {\r\n      window.open(url);\r\n    }\r\n  },\r\n};\r\n// url 添加后缀参数clientsource=xxx 用于区分不同端\r\nconst addClientSource = (url, type) => {\r\n  if (url.indexOf(\"?\") > -1) {\r\n    return `${url}&clientsource=${type}`;\r\n  }\r\n  return `${url}?clientsource=${type}`;\r\n};\r\n\r\n/** 使用demo\r\nconst {currentPlatform，actionConfig} = registerPlatformAndAction({\r\n  platformConfig: {\r\n    defaultPlatform: {\r\n      ...window.supportPlatform.ainvestConfig,\r\n      action: {\r\n        jump: (config) => {\r\n          const { arg } = config;\r\n          //通用逻辑\r\n        },\r\n      },\r\n    },\r\n    otherPlatform: [\r\n      {\r\n        ...window.supportPlatform.pcConfig,\r\n        verify: () => !!window._pc_jsBridge_,\r\n        action: {\r\n          jump: (config) => {\r\n            //pc下跳转适用pc提供的pai\r\n            const { arg } = config;\r\n            //通用逻辑\r\n          },\r\n        },\r\n      },\r\n      {\r\n        ...window.supportPlatform.webConfig,\r\n        verify: () => !!window._web_jsBridge_,\r\n        action: {\r\n          jump: (config) => {\r\n            const { arg: { url } = {} } = config;\r\n            if (!url) {\r\n              // handle empty url case\r\n              return;\r\n            }\r\n            //通用逻辑\r\n            window.open(url);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n**/\r\n",
    "relevantFile": "<file_path>__test__/commonUtils/registerPlatformAndAction.spec.js\n  test(\"如果没有其他平台匹配，则应设置默认平台\", () => {\n    const platformConfig = {\n      defaultPlatform: {\n        key: \"default\",\n        cssKey: \"default-css\",\n        action: {\n          func1: jest.fn(),\n          func2: jest.fn(),\n        },\n      },\n      otherPlatform: [\n        {\n          key: \"platform1\",\n          cssKey: \"platform1-css\",\n          verify: jest.fn().mockReturnValue(false),\n          action: {\n            func1: jest.fn(),\n            func2: jest.fn(),\n          },\n        },\n        {\n          key: \"platform2\",\n          cssKey: \"platform2-css\",\n          verify: jest.fn().mockReturnValue(false),\n          action: {\n            func1: jest.fn(),\n            func2: jest.fn(),\n          },\n        },\n      ],\n    };\n\n    const { currentPlatform, actionConfig } = registerPlatformAndAction({\n      platformConfig,\n    });\n\n    expect(currentPlatform).toEqual(platformConfig.defaultPlatform);\n    expect(\n      document.body.classList.contains(platformConfig.defaultPlatform.cssKey)\n    ).toBe(true);\n    expect(actionConfig.func1).toBeDefined();\n    expect(actionConfig.func2).toBeDefined();\n  });\n\n  test(\"如果验证函数返回true，则应设置匹配的平台\", () => {\n    const platformConfig = {\n      defaultPlatform: {\n        key: \"default\",\n        cssKey: \"default-css\",\n        action: {\n          func1: jest.fn(),\n          func2: jest.fn(),\n        },\n      },\n      otherPlatform: [\n        {\n          key: \"platform1\",\n          cssKey: \"platform1-css\",\n          verify: jest.fn().mockReturnValue(false),\n          action: {",
    "relevantFileList": [],
    "filePath": "src/commonUtils/deviceAdapter.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "= config;\n        if(!url){\n          return;\n        }\n        if(open){\n          window.open(url);\n          return ;\n        }\n        jumpWebPage(url,option);",
      "CodeQwen2.5-7B": "= config;\r",
      "copilot": "= config;\r\n        if(!url){\r\n          return;\r\n        }\r\n        const jumpWebPage",
      "CodeQwen1.5-7B": " = config;\r"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { scale } from 'zrender/lib/core/vector'\n\nexport class NTParallel {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.className = 'cc-canvas'\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n\n    this.data = [\n      {\n        name: '滚筒洗衣机',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      }\n    ]\n\n    this.gridLayouts = null\n\n  }\n\n  calLayout() {\n    this.initLayout = {\n      x: 0,\n      y: 0,\n      scale:",
    "infill": " 1,",
    "suffix": "\r\n    }\r\n    this.gridLayouts = [\r\n      {\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n      }\r\n    ]\r\n  }\r\n\r\n  render() {\r\n\r\n  }\r\n}",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/ChainChartDetail.js\n  area: NDArea,\n  revenue: NDRevenue,\n  value: NDValue,\n  index: NDIndex,\n  news: NDNews,\n  report: NDReport,\n\n  bl_product: BLProduct,\n  bl_subscribe: BLSubscribe,\n  bl_advertisement: BLAdvertisement,\n  bl_datadriven: BLDatadriven,\n  bl_franchise: BLFranchise,\n  bl_crownfund: BLCrownfund,\n  bl_reverseinnovation: BLReverseinnovation,\n  bl_service: BLService,\n  bl_directsales: BLDirectsales,\n  bl_freemium: BLFreemium,\n  bl_platform: BLPlatform,\n  bl_shareeconomy: BLShareeconomy,\n\n  nodetopo: NodeTopo,\n}\n\nfunction mixinDetail(ChainChart) {\n  ChainChart.prototype.initNodeDetailState = function () {\n    this.currentNodeDetailIns = null\n  }\n  ChainChart.prototype.showNodeDetail = function (nodeId, detailType) {\n    this.destroyNodeDetail()\n    // const nodeItem = this.store.chartData.nodes.find(item => item.id === nodeId)\n    // if (!nodeItem) {\n    //   return\n    // }\n    let containerEl = document.createElement('div')\n    containerEl.className = 'node-detail-container'\n    this.container.appendChild(containerEl)\n    let insEl = document.createElement('div')\n    containerEl.appendChild(insEl)\n    const Ctor = Vue.extend(nodeDetailComponentMap[detailType])\n    this.currentNodeDetailIns = new Ctor({\n      // beforeCreate () {\n      //   this.nodeItem = nodeItem\n      // }\n    })\n    this.currentNodeDetailIns.$on('renderFinish', () => {\n      this.currentNodeDetailIns.play && this.currentNodeDetailIns.play()\n    })\n    this.currentNodeDetailIns.$mount(insEl)\n  }\n  ChainChart.prototype.destroyNodeDetail = function () {\n    if (this.currentNodeDetailIns) {\n      this.currentNodeDetailIns.$destroy()\n      this.container.removeChild(this.currentNodeDetailIns.$el.parentNode)\n      this.currentNodeDetailIns = null\n    }\n  }\n\n}\n\nexport default mixinDetail\n<file_path>src/views/Home/components/Chain/ChainChart/painter/nodes/Node1.js\nimport * as zrender from '@/third/zrender/zrender'\nimport Node12Common from './Node12Common'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { parseTextLines, calNodePosition } from '../../utils/index'\nimport { Node1BgLinearGradientMap, Node1MaskLinearGradient } from '../../utils/config'\n\nclass Node1 extends Node12Common {\n  constructor({ cc, parentGroup, data }) {\n    super({ cc, parentGroup, data })\n\n    this.textElsMemory = null\n    \n    this.init()\n  }\n  renderNode() {\n    const data = this.data\n    this.nodeGroup.add(new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius + 12\n      },\n      style: {\n        fill: Node1BgLinearGradientMap[data.streamType],\n      },\n      classNames: ['node-1-bg-shadow', `node-1-bg-shadow-${data.streamType}`]\n    }))\n    this.nodeGroup.add(new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius + 1\n      },\n      style: {\n        fill: '#FFFFFF',\n        stroke: '#FFFFFF',\n        lineWidth: 1,\n      },\n      classNames: ['node-1-bg-el', `node-1-bg-el-${data.streamType}`]\n    }))\n    // \n    const imageEl = new zrender.Image({\n      style: {\n        // image: data.image,\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n        x: -data.radius,\n        y: -data.radius,\n        width: data.radius * 2,\n        height: data.radius * 2\n      },\n      classNames: ['node-1-image-el']\n    })\n    const imageClipPathEl = new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius\n      },\n    })\n    imageEl.setClipPath(imageClipPathEl)",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTParallel.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "1",
      "CodeQwen2.5-7B": " 1,\r",
      "copilot": " 1,",
      "CodeQwen1.5-7B": "  1"
    }
  },
  {
    "prefix": "import { defineStore } from 'pinia';\nimport { buildTree } from './shape';\n\nexport const useLayerStore = defineStore('layer', {\n  state: () => ({\n    layers: null,\n    currentLayer: 0,\n  }),\n  actions: {\n    initPages(layers) {\n      console.log(new Date());\n      this.layers = buildTree(layers);\n      console.log(new Date(), this.layers);\n    },\n    setCurrentLayer(id) {\n      this.currentLayer = id;\n    }\n  },\n  getters: {\n    getLayerChildren(state) {\n      const qu",
    "infill": "eue = [state.layers];\r\n      let currentLayer = null;\r\n      while (queue.length > 0) {\r\n        const node = queue.shift();\r\n        if (node.objectID === state.currentLayer) {\r\n          currentLayer = node;\r\n          break;\r\n        }\r\n        queue.push(...node.children);\r\n      }",
    "suffix": "\r\n      return currentLayer;\r\n    }\r\n  },\r\n});",
    "relevantFile": "<file_path>chrome-extension/src/routes/index.js\n\nimport Generator from '../views/Generator.vue'\nimport LayerPreview from '../views/LayerPreview.vue'\n\nconst routes = [\n  {\n    path: '/layer-preview',\n    name: 'Layer Preview',\n    component: LayerPreview\n  },\n  {\n    path: '/generator',\n    name: 'Code Generator',\n    component: Generator\n  }\n]\n\nexport default routes\n<file_path>chrome-extension/public/listener.js\n    if (message.type === 'update-layers') {\n      initLayer();\n    }\n  });\n  const sendMsg = async (msg) => {\n    const res = await chrome.runtime.sendMessage(msg);\n    console.log(res);\n  };\n\n  // 初始化图层并发送给service-worker\n  const initLayer = () => {\n    const pageName = iframeDocument.title.slice(0, iframeDocument.title.indexOf(' - '));\n    const iframeSrc = iframe.src;\n    const iframeId = iframeSrc.split('?')[1];\n\n    const obj = JSON.parse(localStorage.getItem('d2c_layer'));\n    if (obj?.id === iframeId) {\n      const dataObject = obj.data;\n      const newObj = dataObject.artboards.find(item => item.name === pageName);\n      sendMsg({\n        type: 'init',\n        data: newObj\n      });\n    } else {\n      fetch(iframeSrc)\n        .then(response => response.text())\n        .then(data => {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(data, 'text/html');\n          const scripts = doc.querySelectorAll('script');\n          const scriptContent = scripts[scripts.length - 1].textContent;\n          // 剔除开头固定的\"let data = \"和结尾固定的\"meaxure.render(data);\"以及一些空格\n          const dataObject = JSON.parse(scriptContent.slice(20, -35));\n          localStorage.setItem('d2c_layer', JSON.stringify({\n            id: iframeId,\n            data: dataObject\n          }));\n\n          const newObj = dataObject.artboards.find(item => item.name === pageName);\n          if (newObj) {\n            sendMsg({\n              type: 'init',\n              data: newObj\n            });\n          }\n        });\n    }\n  };\n\n\n  iframeDocument.addEventListener('click', (e) => {\n    if (e.target.classList.contains('layer')) {\n      sendMsg({\n        type: 'select',\n        data: e.target.classList[1].slice(6)\n      });\n    }\n  });\n\n\n<file_path>chrome-extension/dist/listener.js\n    console.log('receipt: ', message);\n    if (message.type === 'update-layers') {\n      initLayer();\n    }\n  });\n  const sendMsg = async (msg) => {\n    await chrome.runtime.sendMessage(msg);\n  };\n\n  // 初始化图层并发送给service-worker\n  const initLayer = () => {\n    const pageName = iframeDocument.title.slice(0, iframeDocument.title.indexOf(' - '));\n    const iframeSrc = iframe.src;\n    const iframeId = iframeSrc.split('?')[1];\n\n    const obj = JSON.parse(localStorage.getItem('d2c_layer'));\n    if (obj?.id === iframeId) {\n      const dataObject = obj.data;\n      const newObj = dataObject.artboards.find(item => item.name === pageName);\n      sendMsg({\n        type: 'init',\n        data: newObj\n      });\n    } else {\n      fetch(iframeSrc)\n        .then(response => response.text())\n        .then(data => {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(data, 'text/html');\n          const scripts = doc.querySelectorAll('script');\n          const scriptContent = scripts[scripts.length - 1].textContent;\n          // 剔除开头固定的\"let data = \"和结尾固定的\"meaxure.render(data);\"以及一些空格\n          const dataObject = JSON.parse(scriptContent.slice(20, -35));\n          localStorage.setItem('d2c_layer', JSON.stringify({\n            id: iframeId,\n            data: dataObject\n          }));\n\n          const newObj = dataObject.artboards.find(item => item.name === pageName);\n          if (newObj) {\n            sendMsg({\n              type: 'init',\n              data: newObj\n            });\n          }\n        });\n    }\n  };\n\n\n  iframeDocument.addEventListener('click', (e) => {\n    if (e.target.classList.contains('layer')) {\n      sendMsg({\n        type: 'select',\n        data: e.target.classList[1].slice(6)\n      });\n    }\n  });\n\n\n<file_path>chrome-extension/src/store/shape.js\n/**\n * 检查第一个矩形是否完全包含在第二个矩形中。\n *\n * @param {Object} rect1 第一个矩形。\n * @param {Object} rect2 第二个矩形。\n * @returns {boolean} 如果第一个矩形完全包含在第二个矩形中，则为 true，否则为 false。\n */\nexport const isEnclosed = (rect1, rect2) => {\n  return (\n    rect1.x >= rect2.x &&\n    rect1.y >= rect2.y &&\n    rect1.x + rect1.width <= rect2.x + rect2.width &&\n    rect1.y + rect1.height <= rect2.y + rect2.height\n  );\n}\n\n\n/**\n * 将包含矩形信息的数组转换为树。\n *\n * @param {Array<Object>} layers 矩形数组，每个矩形都具有 x、y、width 和 height 属性。\n * @returns {Object} 表示树的根节点。\n */\nexport const buildTree = (layers) => {\n  const tree = { children: [] };\n\n  for (const layer of layers) {\n    let added = false;\n    const traverse = (node) => {\n      const tmpChildren = [];\n      for (const child of node.children) {\n        if (isEnclosed(layer.rect, child.rect)) {\n          traverse(child);\n          added = true;\n        } else if (isEnclosed(child.rect, layer.rect)) {\n          tmpChildren.push(child);\n        }\n      }\n      if (tmpChildren.length > 0) {\n        node.children = node.children.filter((child) => !tmpChildren.includes(child));\n        node.children.push({ ...layer, children: tmpChildren });\n      } else if (!added) {\n        node.children.push({ ...layer, children: [] });\n      }\n    };\n    traverse(tree);\n\n  }\n  console.log(tree);\n  return tree;\n}",
    "relevantFileList": [],
    "filePath": "chrome-extension/src/store/index.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "eriedLayer = state.layers.children.find(layer => layer.id === state.currentLayer);",
      "CodeQwen2.5-7B": "ery = state.layers.find((item) => item.id === state.currentLayer);\r",
      "copilot": "eue = [state.layers];\r\n      let currentLayer = null;\r\n      while (queue.length > 0) {\r\n        const node = queue.shift();\r\n        if (node.objectID === state.currentLayer) {\r\n          currentLayer = node;\r\n          break;\r\n        }\r\n        queue.push(...node.children);\r\n      }",
      "CodeQwen1.5-7B": "ery = (id) => {\r"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\"\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\"\n}\n// 经典风格\nconst blackThemeConfig = {\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\"\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined;\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}",
    "infill": "(data)\n                    if (itemValue > 0) {\n                        context.fillStyle = this.config.marketTextColor.up\n                    } else if (itemValue < 0) {\n                        cont",
    "suffix": "ext.fillStyle = this.config.marketTextColor.down\n                    } else {\n                        \n                    }\n                }\n                context.fillText(data, -posX + x, pos + 20)\n                context.restore()\n            } else {\n                context.fillRect(-posX + colItem.leftPos, pos,\n                                    colItem.width * this.r, height)\n                if (isOver) {\n                    context.fillStyle = this.config.hoverLineColor\n                    context.fillRect(-posX + colItem.leftPos, pos + height - 1,\n                                        colItem.width * this.r, 1)\n                }\n                if (isSelected) {\n                    context.fillStyle = this.config.selectedBackgroundColor\n                    context.fillRect(-posX + colItem.leftPos, pos + 0.5,\n                                    colItem.width * this.r,  height - 0.5)\n                }\n                context.fillStyle = customStyle.fontColor === undefined ?\n                                         this.config.fontColor : customStyle.fontColor\n                if (colItem.colorType === 'main') {\n                    context.fillStyle = this.config.mainTextColor\n                }\n                if (colItem.colorType === 'market') {\n                    context.fillStyle = this.config.marketTextColor.down\n                }\n                context.fillText(data, -posX + x, pos + 20)\n            }\n            if (lastFont) {\n                context.font = lastFont\n            }\n        }\n\n        //if (drawConf === undefined) {\n        context.beginPath()\n        // context.strokeStyle = '#f00'\n        context.moveTo(0, pos + 0.5)\n        context.lineTo(\n                            Math.min(-posX + this.column[this.column.length - 1].rightPos,\n                            this.canvasWidth), pos + 0.5)\n        context.stroke()\n        //}\n    }\n    logError(value) {\n        console.log(value)\n    }\n    setOverRow(value) {\n        if (value !== this.overRowValue) {\n            const temp = this.overRowValue\n            this.overRowValue = value\n            if (value !== undefined && temp !== undefined) {\n                this.askForReDraw({ drawOnly: [temp, value] })\n                return\n            }\n\n            if (value !== undefined) {\n                this.askForReDraw({ drawOnly: [value] })\n                return\n            }\n\n            if (temp !== undefined) {\n                this.askForReDraw({ drawOnly: [temp] })\n                return\n            }\n        }\n    }\n    TouchStart(e, offsetLeft, offsetTop) {\n        if (this.scrollView && this.scrollView.OnTouchStart(e, offsetLeft, offsetTop)) {\n            return\n        }\n\n        if (e.changedTouches.length === 1) {\n            const y = e.changedTouches[0].pageY - offsetTop\n            const x = e.changedTouches[0].pageX - offsetLeft\n            this.touchClick = {timeout: setTimeout(() => {\n                if (this.dataIndex === undefined) { return }\n                if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n                    const row = this.findRowByPos(y)\n                    const col = this.findColByPos(x)\n\n                    if (y > this.headerHeight) {\n                        if (row !== null && typeof row.select === \"object\") {\n                            row.select.isExpended = !row.select.isExpended\n                            this.askForReDraw()\n                            this.reCalcForScrollView()\n                        }\n                        this.fireClick(row === null ? null : row.select, col)\n                    } else {\n                        const colSplit = this.findColSplit(x)\n                        if (colSplit !== null) {\n                            this.columnResize = {x, col: this.column[colSplit]}\n                            return\n                        }\n\n                        this.clickOnHeader(col)\n                        this.fireClickHeader(col)\n                    }\n                } else {\n                    const result =  this.findColAndRowInRowMode(x, y)\n                    if (result === null) { return }\n                    const {col, row} = result\n                    if (col === null) {\n                        row.isExpended = !row.isExpended\n                        this.askForReDraw()\n                        this.reCalcForScrollView()\n                    }\n                }\n            }, 250), x, y}\n        } else {\n            this.clearTouchClick()\n        }\n    }\n    TouchMove(e, offsetLeft, offsetTop) {\n        const x = e.changedTouches[0].pageX - offsetLeft\n        if (this.resizeColIfNeed(x)) {\n            return\n        }\n\n        if (this.scrollView) {\n            this.scrollView.OnTouchMove(e, offsetLeft, offsetTop)\n        }\n        if (this.touchClick) {\n            if (e.changedTouches.length !== 1) {\n                this.clearTouchClick()\n                return\n            }\n\n            const y = e.changedTouches[0].pageY - offsetTop\n            if (Math.abs(x - this.touchClick.x) > 4 || Math.abs(y - this.touchClick.y) > 4) {\n                this.clearTouchClick()\n            }\n        }\n    }\n    TouchEnd(e, offsetLeft, offsetTop) {\n        this.columnResize = undefined\n\n        if (this.scrollView) {\n            this.scrollView.OnTouchEnd(e)\n        }\n    }\n\n    calcRect(col, row) {\n        if (!this.scrollView ) {\n            return\n        }\n\n        const topPos = this.findTopPosByRow(row)\n        if (topPos === undefined) {\n            return\n        }\n\n        const y = (topPos - this.scrollView.getPosY()) / this.r\n        const x = -(this.scrollView.getPosX() / this.r) + (col.leftPos / this.r)\n        const top = y\n        const left = x\n\n        let clipTop\n        const clipRight = undefined\n        const clipBottom = undefined\n        let clipLeft\n\n        if (y < this.headerHeight) {\n            // rect(<top>, <right>, <bottom>, <left>)\n            if (x < 0) {\n                clipTop = -y + this.headerHeight\n                clipLeft = -x\n            } else {\n                clipTop = -y + this.headerHeight\n            }\n        } else if (x < 0) {\n            clipLeft = -x\n        }\n\n        return {\n            cellHeight: this.cellHeight,\n            clipBottom,\n            clipLeft,\n            clipRight,\n            clipTop,\n            left,\n            top,\n            width: col.width,\n            x,\n            y,\n        }\n    }\n\n    findColSplit(x) {\n        if (this.scrollView === undefined) { return null }\n        const posXNeg = -this.scrollView.getPosX()\n        for (let i = 0; i < this.column.length; i++) {\n            const d = ((posXNeg + this.column[i].rightPos) / this.r) - x\n            if (-3 <= d && d <= 3) {\n                return i\n            }\n        }\n        return null\n    }\n\n    findColAndRowInRowMode(x, y) {\n        if (this.dataIndex === undefined || this.scrollView === undefined) { return null }\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) { return null }\n        let pos = -this.scrollView.getPosY() / this.r\n        const cellHeight = this.cellHeight\n        const find = (index) => {\n            let i\n            if (index.type === CanvasTableIndexType.GroupItems) {\n                for (i = 0; i < index.list.length; i++) {\n                    const item = index.list[i]\n                    if (pos < y && y < pos + cellHeight) {\n                        return {row: item, col: null}\n                    }\n\n                    pos += cellHeight\n                    if (item.isExpended) {\n                        const result = find(item.child)\n                        if (result != null) {\n                            return result\n                        }\n                    }\n                }\n            } else {\n                for (i = 0; i < index.list.length; i++) {\n                    const item = index.list[i]\n                    if (pos < y && y < pos + cellHeight) {\n                ",
    "relevantFile": "<file_path>src/components/canvasTable/CircularBuffer.js\nexport default class CircularBuffer {\n    constructor(length, allowOverFlow) {\n        this.length = length\n        this.allowOverFlow = allowOverFlow\n        this.buffer = new Array(this.length)\n    }\n    size() {\n        return this.count\n    }\n    pop() {\n        if (this.count === 0) {\n            throw new Error('empty')\n        }\n        const i = this.pointerRead\n        this.pointerRead = (this.length * this.pointerRead + 1) % this.length\n        this.count--\n        const temp = this.buffer[i]\n        if (temp === undefined) {\n            throw new Error('undefined')\n        }\n        this.buffer[i] = undefined\n        return temp\n    }\n    push(item) {\n        if (!this.allowOverFlow && this.count === this.length) {\n            throw new Error('overflow')\n        }\n        this.buffer[this.pointerWrite] = item\n        this.pointerWrite = (this.length + this.pointerWrite + 1) % this.length\n        if (this.count === this.length) {\n            this.pointerRead = this.pointerWrite\n        } else {\n            this.count++\n        }\n    }\n    clear() {\n        this.pointerRead = 0;\n        this.pointerWrite = 0;\n        this.count = 0;\n        this.buffer = new Array(this.length);\n    }\n    export() {\n        const result = [];\n        while (this.size() > 0) {\n            result[result.length] = this.pop();\n        }\n        return result;\n    }\n}\n<file_path>src/components/canvasTable/CanvasTable.js\nimport CustomCanvasTable from \"./CustomCanvasTable\"\nimport ScrollView from \"./ScrollView\"\nfunction TouchEventToCanvasTableTouchEvent(event) {\n    const x = {changedTouches: [], touchs: []};\n    let i;\n    for (i = 0; i < event.changedTouches.length; i++) {\n        x.changedTouches.push({\n            pageX: event.changedTouches[i].pageX,\n            pageY: event.changedTouches[i].pageY\n        });\n    }\n    for (i = 0; i < event.touches.length; i++) {\n        x.touches.push({\n            pageX: event.touches[i].pageX,\n            pageY: event.touches[i].pageY\n        });\n    }\n}\n\nexport default class CanvasTable extends CustomCanvasTable {\n    constructor(canvas, col, data, config) {\n        super(config)\n        this.data = data\n        this.canvas = (typeof canvas === 'string') ? document.getElementById(canvas) : canvas\n        const context = this.canvas.getContext('2d')\n        if (context === null) { throw new Error('context is null')}\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)\n        this.context = context\n        this.scrollView = new ScrollView(\n            this.context, this,\n            config ? config.scrollView : undefined, \n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n    }\n    resize() {\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ";",
      "CodeQwen2.5-7B": "",
      "copilot": "(data)\n                    if (itemValue > 0) {\n                        context.fillStyle = this.config.marketTextColor.up\n                    } else if (itemValue < 0) {\n                        cont",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "import axios from \"axios\";\n\nconst request = axios.create({\n  baseURL: \"localhost:3000\",\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"X-DashScope-SSE\": \"enable\",\n    Authorization: `Bearer sk-cef42a9dbe6a4eb5a858150c8f7330f1`,\n  },\n});\n\nexport const chat = async (prompt) => {\n  const requestData = {\n    model: 'qwen-turbo',\n    input: {\n      message: [{\n        role: 'user',\n        content: `You are a professional Vue developer\n        You get the layer information of the reference UI design draft from the user and then build a single-page application\n        Use Vue and CSS.\n        You may also receive subsequent prompts asking you to improve the generated Vue application.\n        - Make sure the application looks exactly the same as the layer information.\n        - Pay close attention to background color, text color, font size, font family,\n        Padding, margins, borders, etc. Color and size should match exactly.\n        - Use the exact text from the screenshot.\n        - Do not add comments in your code such as \"<!-- Add additional navigation links as needed -->\" and \"<!-- ...Other news items... -->\" instead of writing the full content code. Write complete code.\n        - Repeat elements as needed to match the screenshot. For example, if there are 15 projects, the code should have 15 projects. Don't leave comments like \"<!--Repeat for every news item-->\" or something bad will happen.\n        - For images, use the placeholder image from https://placehold.co and include a detailed description of the image in the alt text so that the image generation AI can generate the image later.\n        - \n        The returned result must contain only codes. Below is the layer information:\n        <layer>${prompt}</layer>`\n      }]\n    }\n  };\n  const { data } = await request.post(\"/proxy\", {\n    url: \"https://api.openai.com/v1/engines/davinci-codex/completions\",\n    method: ",
    "infill": "\"post\",\r\n    data: requestData,",
    "suffix": "\r\n  });\r\n  console.log(data);\r\n  return data;\r\n}",
    "relevantFile": "<file_path>proxy-interface/server.js\nconst express = require('express');\nconst axios = require('axios');\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(express.json());\n\n// 设置跨域请求头\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n});\n\n// 中转接口\napp.post('/proxy', async (req, res) => {\n  try {\n    const { url, method, data } = req.body;\n    if (!url) {\n      throw new Error('URL parameter is required');\n    }\n\n    const response = await axios({\n      method: method || 'post',\n      url,\n      data,\n    });\n    \n    res.json(response.data);\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\napp.listen(PORT, () => {\n  console.log(`Proxy server is running on port ${PORT}`);\n});",
    "relevantFileList": [],
    "filePath": "chrome-extension/src/api/index.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "\"POST\",\n    data: requestData,",
      "CodeQwen2.5-7B": "\"POST\",\r",
      "copilot": "\"post\",\r\n    data: requestData,",
      "CodeQwen1.5-7B": " \"POST\","
    }
  },
  {
    "prefix": "/* eslint-disable import/prefer-default-export */\nimport { generateChartOption } from '@thsc-ifind-irp/vdl-generate-chart-option';\nimport server from '@/server';\nimport { niceNumber } from './niceNumber';\n\nconst sourceData = {};\n\nconst generateParams = indicators => ({\n  zb_str: indicators.map(item => item.indexId).join(','),\n  zb_rtime: new Array(indicators.length).fill(0).join(','),\n  displayid: indicators.map(item => item.displayId).join(','),\n  formula: indicators.map(item => item.formula || '0').join('$$'),\n  zb_point: indicators.map(item => (item.point || item.point === 0 ? item.point : '2')).join(','),\n  zb_unit: indicators.map(item => item.zb_unit || '1').join(','),\n  zb_custom: indicators.map(item => (item.edit ? item.id : '')).join(','),\n  browser: indicators.map(item => (item.indexType === 4 ? item.indexParam : '0')).join('$$'),\n  emptyType: indicators.map(item => (item.indexType === 4 || item.indexType === -1 ? item.emptyDataType : '')).join(','),\n  wt: 'json',\n  usage: 'flagship-store',\n});\n\nexport const getChartData = async indicators => {\n  if (indicators.length && indicators[0].indexType === 0) {\n    const awaitList = [];\n    for (let i = 0; i < indicators.length; i += 1) {\n      const formData = new FormData();\n      formData.append('id', indicators[i].id);\n      formData.append('displayId', indicators[i].displayId);\n      formData.append('datebegin', '');\n      formData.append('dateend', '');\n      // eslint-disable-next-line no-loop-func\n      awaitList.push(server.getNonSequZbData(formData).then(res => {\n        sourceData[res.displayId] = res;\n      }));\n    }\n    await Promise.all(awaitList);\n  } else {\n    const params = generateParams(indicators);\n    await server.getZbData(params).then(rsp => {\n      const tables = rsp.tables || [];\n      tables.forEach(tableData => {\n        sourceData[tableData.displayid] = tableData;\n      });\n    });\n  }\n};\n\n// 筛选需要请求数据的指标，如果已经在sourceData里有的指标就不需要请求了\nconst filterIndicators = indicators => indicators.filter(item => !sourceData[item.displayId]);\n\nconst hasDounbleY = series => !series.every(item => item.yAxisIndex === series[0].yAxisIndex);\n\nconst getYAxisMaxMin = (series, yAxis) => {\n  const yAxisMaxMin = {\n    0: null,\n    1: null,\n  };\n  let leftData = [];\n  let rightData = [];\n  const dounbleY = hasDounbleY(series)\n  && series.length > 1;\n  series.forEach(item => {\n    if (item.yAxisIndex === 0) {\n      leftData = leftData.concat(item.data ? item.data.map(data => data.value) : []);\n    }\n    if (item.yAxisIndex === 1) {\n      rightData = rightData.concat(item.data ? item.data.map(data => data.value) : []);\n    }\n  });\n  if (leftData.length) {\n    const leftMax = Math.max(...leftData);\n    const leftMin = Math.min(...leftData);\n    const { max, min, interval } = niceNumber(leftMax, leftMin);\n    yAxisMaxMin[0] = { max, min, interval };\n  }\n  if (rightData.length) {\n    const rightMax = Math.max(...rightData);\n    const rightMin = Math.min(...rightData);\n    const { max, min, interval } = niceNumber(rightMax, rightMin);\n    yAxisMaxMin[1] = { max, min, interval };\n  }\n  if (!dounbleY) {\n    const name = yAxis[0].name ? yAxis[0].name : yAxis[1].name;\n    yAxisMaxMin[0] = yAxisMaxMin[0] || yAxisMaxMin[1] || {};\n    yAxisMaxMin[0].name = name;\n    yAxisMaxMin[1] = yAxisMaxMin[1] || yAxisMaxMin[0];\n    yAxisMaxMin[1].name = name;\n  }\n  return yAxisMaxMin;\n};\n\nconst getSerieName = (series, serie) => {\n  if (!hasDounbleY(series)) {\n    return serie.name;\n  }\n  if (serie.yAxisIndex) {\n    return `${serie.name}（右轴）`;\n  }\n  return serie.name;\n};\n\nconst tooltipFormatter = (data, series, yAxis) => {\n  if (data) {\n    const createIcon = function createIcon(seriesType, color) {\n      if (seriesType === 'line') {\n        return `<span\\n              style=\"display: inline-block;margin-right: 4px;border-radius: 1px;width: 8px;height: 8px;background-color: ${color};transform: rotate(45deg)  translate(-1px, -1px);\"></span>`;\n      }\n      if (seriesType === 'bar' || seriesType === 'treemap') {\n        return `<span style=\"display: inline-block;margin-right: 4px;border-radius: 2px;width: 10px;height: 10px;background-color: ${color};\"></span>`;\n      }\n      return `<span style=\"display: inline-block;margin-right: 4px;border-radius: 10px;width: 10px;height: 10px;background-color: ${color};\"></span>`;\n    };\n    const getUnit = seriesIndex => {\n      const { yAxisIndex } = series[seriesIndex];\n      return yAxis[yAxisIndex].name;\n    };\n    const getPieUnit = dataIndex => {\n      const { unit } = series.data[dataIndex];\n      return unit;\n    };\n    const getValue = val => val",
    "infill": " ? parseFloat(val).toLocaleString() : val;",
    "suffix": "\r\n\r\n    let title = null;\r\n\r\n    let content = [];\r\n    if (data.length) {\r\n      title = `<div style=\"font-size: 14px; color: #474762; font-weight: 700; line-height: 30px;border-bottom: 1px solid #ECECF7;padding: 0 8px\">${data[0].name}</div>`;\r\n      content = data.map(item => `<div style=\"margin: 0px 0 8px 0; line-height: 1; padding: 0 8px\">\\n            <div style=\"margin: 8px 0 0; line-height: 1\">\\n              ${createIcon(item.seriesType, item.color)}<span\\n                style=\"font-size: 14px;color: #474762;font-weight: 400;margin-left: 2px;\">${item.seriesName}</span><span\\n                style=\"float: right;margin-left: 20px;font-size: 14px;color: #474762;\">${getValue(item.va)}${getUnit(item.seriesIndex)}</span>\\n              <div style=\"clear: both\"></div>\\n            </div>\\n            <div style=\"clear: both\"></div>\\n          </div>`);\r\n    } else if (data.seriesType) {\r\n      title = `<div style=\"font-size: 14px; color: #474762; font-weight: 700; line-height: 30px;border-bottom: 1px solid #ECECF7;padding: 0 8px\">${data.seriesName}</div>`;\r\n      content.push(`<div style=\"margin: 0px 0 8px 0; line-height: 1; padding: 0 8px\">\\n            <div style=\"margin: 8px 0 0; line-height: 1\">\\n              ${createIcon(data.seriesType, data.color)}<span\\n                style=\"font-size: 14px;color: #474762;font-weight: 400;margin-left: 2px;\">${data.name}</span><span\\n                style=\"float: right;margin-left: 20px;font-size: 14px;color: #474762;\">${data.value}${getPieUnit(data.dataIndex)}</span>\\n              <div style=\"clear: both\"></div>\\n            </div>\\n            <div style=\"clear: both\"></div>\\n          </div>`);\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n    return `<div style=\"margin: 0px 0 0; line-height: 1\">\\n        <div style=\"margin: 0px 0 0; line-height: 1\">\\n          ${title}\\n          <div style=\"margin:0 0 0 0; line-height: 1\">\\n\\n          ${content.join('')}\\n            \\n            <div style=\"clear: both\"></div>\\n          </div>\\n          <div style=\"clear: both\"></div>\\n        </div>\\n        <div style=\"clear: both\"></div>\\n      </div>\\n      `;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst setIFinDOption = (option, title) => {\r\n  const newOption = {};\r\n  if (option.series.type === 'pie') {\r\n    newOption.legend = { data: option.series.data.map(item => item.name), type: 'scroll' };\r\n  } else {\r\n    newOption.legend = {\r\n      data: option.series.map(item => getSerieName(option.series, item)),\r\n      type: 'scroll',\r\n    };\r\n  }\r\n  newOption.dataZoom = { show: true };\r\n  if (option.series.type === 'pie') {\r\n    newOption.tooltip = {\r\n      show: true,\r\n      formatter: data => tooltipFormatter(data, option.series, option.yAxis),\r\n    };\r\n  } else {\r\n    newOption.tooltip = { trigger: 'axis', confine: true, formatter: data => tooltipFormatter(data, option.series, option.yAxis) };\r\n  }\r\n\r\n  if (option.series.type !== 'pie') {\r\n    const yAxisMaxMin = getYAxisMaxMin(option.series, option.yAxis);\r\n    newOption.xAxis = {\r\n      type: option.xAxis.type,\r\n      data: option.xAxis.data,\r\n    };\r\n    newOption.yAxis = option.yAxis.map((item, index) => ({\r\n      show: true,\r\n      type: item.type,\r\n      name: item.name,\r\n      ...yAxisMaxMin[index],\r\n    }));\r\n  }\r\n\r\n  if (option.series.type === 'pie') {\r\n    newOption.series = {\r\n      type: 'pie',\r\n      radius: option.series.radius,\r\n      roseType: option.series.roseType,\r\n      name: title,\r\n      data: option.series.data.map(item => ({\r\n        name: item.name,\r\n        value: item.value,\r\n        originValue: item.originValue,\r\n      })),\r\n    };\r\n    delete newOption.series.itemStyle;\r\n  } else {\r\n    newOption.series = option.series.map(item => ({\r\n      areaStyle: item.areaStyle ? {} : null,\r\n      connectNulls: item.connectNulls,\r\n      yAxisIndex: item.yAxisIndex,\r\n      type: item.type,\r\n      data: item.data || [],\r\n      name: getSerieName(option.series, item),\r\n    }));\r\n  }\r\n  return newOption;\r\n};\r\n\r\nexport const getOption = async (title, indicators, variable, chartSize) => {\r\n  const fetchDataIndicators = filterIndicators(indicators);\r\n  await getChartData(fetchDataIndicators);\r\n  let option = generateChartOption(indicators, sourceData, variable, chartSize);\r\n  option = setIFinDOption(option, title);\r\n  return option;\r\n};\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/utils/chart.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "{\n      if (val === undefined || val === null) return '-';\n      return val;\n    };",
      "CodeQwen2.5-7B": "ue;\r",
      "copilot": " ? parseFloat(val).toLocaleString() : val;",
      "CodeQwen1.5-7B": "  ? val.toFixed(2) : '-';\r"
    }
  },
  {
    "prefix": "    controller: openController\n  },\n  catalog_tree: {\n    prefix: '/catalog_tree/',\n    controller: catalogTreeController\n  },\n  program: {\n    prefix: '/program/',\n    controller: programController\n  },\n  service_identifier: {\n    prefix: '/service_identifier/',\n    controller: serviceIdentifierController\n  },\n  rely_interface: {\n    prefix: '/rely_interface/',\n    controller: relyInterfaceController\n  },\n  service_program: {\n    prefix: '/service_program/',\n    controller: serviceProgramController\n  },\n  program_version: {\n    prefix: '/program_version/',\n    controller: programVersionController\n  },\n  user_follow: {\n    prefix: '/user_follow/',\n    controller: userFollowController\n  },\n  max_version: {\n    prefix: '/max_version/',\n    controller: maxVersionController\n  },\n  interface_request_result: {\n    prefix: '/interface_request_result/',\n    controller: interfaceRequestResultController\n  },\n  mock_statis_count: {\n    prefix: '/mock_statis_count/',\n    controller: mockStatisCountController\n  },\n  gpt_talk:{\n    prefix: '/gpt_talk/',\n    controller: gptTalkController\n  },\n  quality_config: {\n    prefix: '/quality_config/',\n    controller: qualityConfigController\n  },\n  params_statics: {\n    prefix: '/params_statics/',\n    controller: paramsStaticsController\n  },\n  gpt_answer_statics: {\n    prefix: '/gpt_answer_statics/',\n    controller: gptAnswerStaticsController\n  },\n  params_config: {\n    prefix: '/params_config/',\n    controller: paramsConfigController\n  },\n  interface_service_relation: {\n    prefix: '/interface_service_relation/',\n    controller: interfaceServiceRelationController\n  },\n  redis: {\n    prefix: '/redis/',\n    controller: redisController\n  }\n};\n\nlet routerConfig = {\n  similar_statics: [\n    {\n      action: 'set',\n      path: 'set',\n      method: 'get'\n    },\n    {\n      action: 'getAllProjectList',\n      path: 'get_all_project_list',\n      method: 'get'\n    },\n    {\n      action: 'getProjectStatics',\n      path: 'get_project_statics',\n      method: 'get'\n    },\n    {\n      action: 'getMemberCount',\n      path: 'get_member_count',\n      method: 'get'\n    },\n    {\n      action: 'getInterfaceByUid',\n      path: 'get_interface_by_uid',\n      method: 'get'\n    }\n  ],\n  group: [\n    {\n      action: 'list',\n      path: 'list',\n      method: 'get'\n    },\n    {\n      action: 'add',\n      path: 'add',\n      method: 'post'\n    },\n    {\n      action: 'up',\n      path: 'up',\n      method: 'post'\n    },\n    {\n      action: 'del',\n      path: 'del',\n      method: 'post'\n    },\n    {\n      action: 'addMember',\n      path: 'add_member',\n      method: 'post'\n    },\n    {\n      action: 'changeMemberRole',\n      path: 'change_member_role',\n      method: 'post'\n    },\n    {\n      action: 'delMember',\n      path: 'del_member',\n      method: 'post'\n    },\n    {\n      action: 'getMemberList',\n      path: 'get_member_list',\n      method: 'get'\n    },\n    {\n      action: 'get',\n      path: 'get',\n      method: 'get'\n    }\n  ],\n  parent_group:[\n    {\n      action: 'getParentList',\n      path: 'get_parent_list',\n      method: 'get'\n    }\n  ],\n  user: [\n    {\n      action: 'getMemberByProId',\n      path: 'get_member_by_pro_id',\n      method: 'get'\n    },\n    {\n      action: 'getGroupByCluster',\n      path: 'get_group_by_cluster',\n      method: 'get'\n    },\n    {\n      action: 'getGroup',\n      path: 'getGroup',\n      method: 'get'\n    },\n    {\n      action: 'updateGroup',\n      path: 'updateGroup',\n      method: 'post'\n    },\n    {\n      action: 'queryGroup',\n      path: 'queryGroup',\n      method: 'get'\n    },\n    {\n      action: 'login',\n      path: 'login',\n      method: 'post'\n    },\n    {\n      action: 'reg',\n      path: 'reg',\n      method: 'post'\n    },\n    {\n      action: 'list',\n      path: 'list',\n      method: 'get'\n    },\n    {\n      action: 'listByIds',\n      path: 'list_by_ids',\n      method: 'post'\n    },\n    {\n      action: 'findById',\n      path: 'find',\n      method: 'get'\n    },\n    {\n      action: 'update',\n      path: 'update',\n      method: 'post'\n    },\n    {\n      action: 'del',\n      path: 'del',\n      method: 'post'\n    },\n    {\n      action: 'getLoginStatus',\n      path: 'status',\n      method: 'get'\n    },\n    {\n      action: 'logout',\n      path: 'logout',\n      method: 'get'\n    },\n    {\n      action: 'loginByToken',\n      path: 'login_by_token',\n      method: 'all'\n    },\n    {\n      action: 'getLdapAuth',\n      path: 'login_by_ldap',\n      method: 'all'\n    },\n    {\n      action: 'handleThirdLogin',\n      path: 'login_by_ths',\n      method: 'all'\n    },\n    {\n      action: 'upStudy',\n      path: 'up_study',\n      method: 'get'\n    },\n    {\n      action: 'changePassword',\n      path: 'change_password',\n      method: 'post'\n    },\n    {\n      action: 'search',\n      path: 'search',\n      method: 'get'\n    },\n    {\n      action: 'project',\n      path: 'project',\n      method: 'get'\n    },\n    {\n      action: 'avatar',\n      path: 'avatar',\n      method: 'get'\n    },\n    {\n      action: 'uploadAvatar',\n      path: 'upload_avatar',\n      method: 'post'\n    }\n  ],\n  project: [\n    {\n      action: 'upSet',\n      path: 'upset',\n      method: 'post'\n    },\n    {\n      action: 'getEnv',\n      path: 'get_env',\n      method: 'get'\n    },\n    {\n      action: 'add',\n      path: 'add',\n      method: 'post'\n    },\n    {\n      action: 'list',\n      path: 'list',\n      method: 'get'\n    },\n    {\n      action: 'get',\n      path: 'get',\n      method: 'get'\n    },\n    {\n      action: 'up',\n      path: 'up',\n      method: 'post'\n    },\n    {\n      action: 'bind',\n      path: 'bind',\n      method: 'post'\n    },\n    {\n      action: 'del',\n      path: 'del',\n      method: 'post'\n    },\n    {\n      action: 'addMember',\n      path: 'add_member',\n      method: 'post'\n    },\n    {\n      action: 'delMember',\n      path: 'del_member',\n      method: 'post'\n    },\n    {\n      action: 'changeMemberRole',\n      path: 'change_member_role',\n      method: 'post'\n    },\n    {\n      action: 'changeMemberEmailNotice',\n      path: 'change_member_email_notice',\n      method: 'post'\n    },\n    {\n      action: 'getMemberList',\n      path: 'get_member_list',\n      method: 'get'\n    },\n    {\n      action: 'search',\n      path: 'search',\n      method: 'get'\n    },\n    {\n      action: 'upEnv',\n      path: 'up_env',\n      method: 'post'\n    },\n    {\n      action: 'upTag',\n      path: 'up_tag',\n      method: 'post'\n    },\n    {\n      action: 'token',\n      path: 'token',\n      method: 'get'\n    },\n    {\n      action: 'updateToken',\n      path: 'update_token',\n      method: 'get'\n    },\n    {\n      action: 'checkProjectName',\n      path: 'check_project_name',\n      method: 'get'\n    },\n    {\n      action: 'copy',\n      path: 'copy',\n      method: 'post'\n    },\n    {\n      action: 'swaggerUrl',\n      path: 'swagger_url',\n      method: 'get'\n    },\n    {\n      action: 'getAllDocker',\n      path: 'get_all_docker',\n      method: 'get'\n    },\n    {\n      action: 'getArsenal',\n      path: 'get_arsenal_api',\n      method: 'get'\n    }\n  ],\n  interface_rank: [\n    {\n      action: 'set',\n      path: 'set',\n      method: 'post'\n    },\n    {\n      action: 'get',\n      path: 'get',\n      method: 'get'\n    },\n    {\n      action: 'list',\n      path: 'list',\n      method: 'post'\n    },\n    {\n      action: 'getAuth',\n      path: 'getAuth',\n      method: 'get'\n    },\n    {\n      action: 'getuser',\n      path: 'getuser',\n      method: 'get'\n    }\n  ],\n  interface_statics: [\n    {\n      action: 'setInterfaceInfo',\n      path: 'set_interface_info',\n      method: 'get'\n    },\n    {\n      action: 'getlist',\n      path: 'get_list',\n      method: 'get'\n    },\n    {\n      action: 'updateStatics',\n      path: 'update_statics',\n      method: 'get'\n    },\n    {\n    ",
    "infill": "{\r\n      action: 'set',\r\n      path: 'v1/set',\r\n      method: 'get'\r\n    }, ",
    "suffix": "\r\n  ]\r\n};\r\n\r\nlet pluginsRouterPath = [];\r\n\r\nfunction addPluginRouter(config) {\r\n  if (!config.path || !config.controller || !config.action) {\r\n    throw new Error('Plugin Route config Error');\r\n  }\r\n  let method = config.method || 'GET';\r\n  let routerPath = '/plugin/' + config.path;\r\n  if (pluginsRouterPath.indexOf(routerPath) > -1) {\r\n    throw new Error('Plugin Route path conflict, please try rename the path');\r\n  }\r\n  pluginsRouterPath.push(routerPath);\r\n  createAction(router, PREFIX +'/api', config.controller, config.action, routerPath, method, false);\r\n}\r\n\r\nyapi.emitHookSync('add_router', addPluginRouter);\r\n\r\nfor (let ctrl in routerConfig) {\r\n  let actions = routerConfig[ctrl];\r\n  actions.forEach(item => {\r\n    let routerController = INTERFACE_CONFIG[ctrl].controller;\r\n    let routerPath = INTERFACE_CONFIG[ctrl].prefix + item.path;\r\n    createAction(router, PREFIX + '/api', routerController, item.action, routerPath, item.method);\r\n  });\r\n}\r\n\r\nmodule.exports = router;\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "template": "javascript",
    "multiRes": {
      "hipilot": "action: 'getUserStatics',\n      path: 'get_user_statics',\n      method: 'get'\n    },\n    {\n      action: 'getUserList',\n      path: 'get_user_list',\n      method: 'get'\n    }",
      "CodeQwen2.5-7B": "  action: 'getStatics',\r",
      "copilot": "{\r\n      action: 'set',\r\n      path: 'v1/set',\r\n      method: 'get'\r\n    }, ",
      "CodeQwen1.5-7B": "  action: 'getInterfaceInfo',"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { assemblePath1_1 } from '../../utils/index'\nimport { ArrowPath, EdgeHoverZ } from '../../utils/config'\n\nclass Edge11 {\n  constructor({ cc, parentGroup, data }) {\n    this.cc = cc\n    this.parentGroup = parentGroup\n    this.data = data\n    this.graphic = null\n  }\n  init() {\n    const data = this.data\n    this.graphic = new zrender.Group({\n      silent: true,\n    })\n    const { sourceP, targetP, rotate, clipRect, centerP } =  assemblePath1_1(data.source, data.target)\n    const pathEl = new zrender.Line({\n      name: 'edge-el',\n      shape: {\n        x1: sourceP.x,\n        y1: sourceP.y,\n        x2: targetP.x,\n        y2: targetP.y,\n      },\n      style: {\n        lineWidth: 1.5,\n        // stroke: '#89AED9',\n        stroke: 'rgba(",
    "infill": "137, 174, 217, 0.3)",
    "suffix": "',\r\n        fill: 'transparent',\r\n        lineDash: [5, 5],\r\n      },\r\n    })\r\n    this.graphic.add(pathEl)\r\n    const arrowEl = zrender.path.createFromString(ArrowPath, {\r\n      name: 'edge-arrow',\r\n      position: [targetP.x, targetP.y],\r\n      rotation: rotate,\r\n      style: {\r\n        // fill: '#89AED9',\r\n        fill: 'rgba(137, 174, 217, 0.3)',\r\n      },\r\n      z: EdgeHoverZ,\r\n    })\r\n    this.graphic.add(arrowEl)\r\n    const textBgEl = new zrender.Rect({\r\n      name: 'edge-label-bg',\r\n      shape: {\r\n        x: centerP.x - 16,\r\n        y: centerP.y - 9,\r\n        width: 32,\r\n        height: 18,\r\n        r: [2, 2, 2, 2]\r\n      },\r\n      style: {\r\n        fill: '#FFFFFF'\r\n      },\r\n    })\r\n    this.graphic.add(textBgEl)\r\n    const textEl = new zrender.Text({\r\n      name: 'edge-label-text',\r\n      style: {\r\n        text: data.target.streamType === 'up' ? '上游' : '下游',\r\n        textLineHeight: 18,\r\n        fontSize: 14,\r\n        fontFamily: 'MicrosoftYaHei',\r\n        fill: '#4F4F5E',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        x: centerP.x,\r\n        y: centerP.y,\r\n      },\r\n      // z: EdgeHoverZ,\r\n    })\r\n    this.graphic.add(textEl)\r\n    this.parentGroup.add(this.graphic)\r\n    // 入场动画\r\n    const graphicClipPathEl = new zrender.Rect({\r\n      position: clipRect.position,\r\n      rotation: -clipRect.rotation,\r\n      shape: {\r\n        x: clipRect.x,\r\n        y: clipRect.y,\r\n        width: 0,\r\n        height: clipRect.height\r\n      },\r\n    })\r\n    this.graphic.setClipPath(graphicClipPathEl)\r\n    return new Promise((resolve) => {\r\n      graphicClipPathEl.animateTo({\r\n        shape: {\r\n          width: clipRect.width\r\n        }\r\n      }, {\r\n        duration: 500,\r\n        easing: 'cubicInOut',\r\n        done: () => {\r\n          this.graphic.removeClipPath(graphicClipPathEl)\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n  updatePosition() {\r\n    const data = this.data\r\n    const { sourceP, targetP, rotate, centerP } =  assemblePath1_1(data.source, data.target)\r\n    this.graphic.childOfName('edge-el').attr({\r\n      shape: {\r\n        x1: sourceP.x,\r\n        y1: sourceP.y,\r\n        x2: targetP.x,\r\n        y2: targetP.y,\r\n      },\r\n    })\r\n    this.graphic.childOfName('edge-arrow').attr({\r\n      position: [targetP.x, targetP.y],\r\n      rotation: rotate,\r\n    })\r\n    this.graphic.childOfName('edge-label-bg').attr({\r\n      shape: {\r\n        x: centerP.x - 16,\r\n        y: centerP.y - 9,\r\n      },\r\n    })\r\n    this.graphic.childOfName('edge-label-text').attr({\r\n      style: {\r\n        x: centerP.x,\r\n        y: centerP.y,\r\n      },\r\n    })\r\n  }\r\n  blur() {\r\n    this.graphic.traverse(child => {\r\n      child.animateTo({\r\n        style: {\r\n          opacity: 0.05\r\n        }\r\n      })\r\n    })\r\n  }\r\n  unblur() {\r\n    this.graphic.traverse(child => {\r\n      child.animateTo({\r\n        style: {\r\n          opacity: 1\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\nexport default Edge11",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/ChainChart/painter/edges/Edge1_1.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "137, 174, 217, 1)",
      "CodeQwen2.5-7B": "137, 174, 217, 0.3)',\r",
      "copilot": "137, 174, 217, 0.3)",
      "CodeQwen1.5-7B": "137, 174, 217, 0.3)"
    }
  },
  {
    "prefix": "function getCookie(name) {\n  const reg = new RegExp(`(^| )${name}=([^;]*)(;|$)`);\n  const arr = document.cookie.match(reg);\n  if (arr) {\n    const index = 2;\n    return window.unescape(arr[index]);\n  } else {\n    return null;\n  }\n}\n\n/**\n * 初始化函数\n * 1. 获取cookie中的f9patner\n * 2. 如果有f9patner, 且f9patner不为空，则将它放到html标签上作为一个属性\n * 3. css中将对该属性进行",
    "infill": "样式控制，隐藏不需要的元素",
    "suffix": "\r\n */\r\nfunction init() {\r\n  const f9patner = getCookie('f9patner');\r\n  if (f9patner) {\r\n    document.documentElement.setAttribute('f9patner', f9patner);\r\n  }\r\n}\r\n\r\ninit\r\n",
    "relevantFile": "<file_path>source/lib/tyb/webpack.config.js\nconst path = require('path');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = (env, argv) => {\n  const isDev = argv.mode === 'development';\n  return {\n    entry: {\n      adapter: './js/adapter.js',\n    },\n    output: {\n      path: path.resolve(__dirname, 'dist'),\n      filename: isDev ? '[name].bundle.js' : '[name].min.js',\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          exclude: /node_modules/,\n          use: {\n            loader: 'babel-loader',\n            options: {\n              presets: ['@babel/preset-env'],\n            },\n          },\n        },\n        {\n          test: /\\.(less|css)$/,\n          use: [MiniCssExtractPlugin.loader, 'css-loader', 'less-loader'],\n        },\n      ],\n    },\n    plugins: [\n      new MiniCssExtractPlugin({\n        filename: isDev ? '[name].css' : '[name].min.css',\n        chunkFilename: isDev ? '[id].css' : '[id].min.css',\n      }),\n    ],\n    devServer: {\n      hot: true,\n      compress: true,\n      port: 8080,\n      proxy: [\n        {\n          context: ['/standardgwstatic', '/standardgwapi/api'],\n          target: 'http://172.19.80.62:80',\n        },\n      ],\n    },\n    devtool: isDev ? 'eval-source-map' : false,\n    optimization: {\n      splitChunks: {\n        chunks: 'all',\n        name: 'common',\n      },\n    },\n  };\n};\n<file_path>source/f9_pluto/src/assets/util/ta.js\nfunction getCookie(name) {\n  const reg = new RegExp(`(^| )${name}=([^;]*)(;|$)`);\n  const arr = document.cookie.match(reg);\n  if (arr) {\n    const index = 2;\n    return window.unescape(arr[index]);\n  } else {\n    return null;\n  }\n}\n\nexport function talog(id) {\n  const taArg = { id, _sid: id, client_userid: getCookie('userid') };\n  window.TA && window.TA.log(taArg);\n}\n\nconst listeners = new WeakMap();\nexport default {\n  mounted(el, { value }) {\n    const listener = () => {\n      const taId = `iFinD_F9_Pluto_${value}`;\n      talog(taId);\n    };\n    listeners.set(el, listener);\n    el && el.addEventListener('click', listener);\n  },\n  beforeUnmount(el) {\n    const listener = listeners.get(el);\n    listener && el && el.addEventListener('click', listener);\n  },\n};",
    "relevantFileList": [],
    "filePath": "source/lib/tyb/adapter.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "判断，如果f9patner属性存在，则表示当前用户是该平台的用户",
      "CodeQwen2.5-7B": "处理",
      "copilot": "样式控制，隐藏不需要的元素",
      "CodeQwen1.5-7B": "样式设置"
    }
  },
  {
    "prefix": "import CustomCanvasTable from \"./CustomCanvasTable\"\nimport ScrollView from \"./ScrollView\"\nimport debounce from \"lodash.debounce\";\nfunction TouchEventToCanvasTableTouchEvent(event) {\n    const x = {changedTouches: [], touchs: []};\n    let i;\n    for (i = 0; i < event.changedTouches.length; i++) {\n        x.changedTouches.push({\n            pageX: event.changedTouches[i].pageX,\n            pageY: event.changedTouches[i].pageY\n        });\n    }\n    for (i = 0; i < event.touches.length; i++) {\n        x.touches.push({\n            pageX: event.touches[i].pageX,\n            pageY: event.touches[i].pageY\n        });\n    }\n}\n\nexport default class CanvasTable extends CustomCanvasTable {\n    constructor(wrapper, col, data, config) {\n        super(config)\n        this.data = data\n        this.wrapper = (typeof wrapper === 'string') ? document.getElementById(wrapper) : wrapper\n        this.initCanvas()\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.wrapper.clientWidth, this.wrapper.clientHeight)\n        this.updateThemeStyle()\n        this.scrollViewChange = debounce(this.scrollViewChange, 200)\n        this.scrollView = new ScrollView(\n            this.context,\n            this,\n            this.config.scrollView,\n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    initCanvas() {\n        let clientWidth = this.wrapper.clientWidth\n        let clientHeight = this.wrapper.clientHeight\n        this.eventCanvas = this.createCanvas(clientWidth, clientHeight)\n        this.eventContext = this.eventCanvas.getContext('2d')\n        this.canvas = this.createCanvas(clientWidth, clientHeight)\n        this.context = this.canvas.getContext('2d')\n    }\n    createCanvas(clientWidth",
    "infill": ", clientHeight",
    "suffix": ") {\n        let canvas = document.createElement('canvas')\n        this.wrapper.appendChild(canvas)\n        this.eventCanvas.style.width = clientWidth + 'px'\n        this.eventCanvas.style.height = clientHeight + 'px'\n        return canvas\n    }\n    updateThemeStyle() {\n        this.wrapper.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.wrapper.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        let clientWidth = this.wrapper.clientWidth + 'px'\n        let clientHeight = this.wrapper.clientHeight + 'px'\n        this.canvas.style.width = clientWidth\n        this.canvas.style.height = clientHeight\n        this.eventCanvas.style.width = clientWidth\n        this.eventCanvas.style.height = clientHeight\n        this.setR(window.devicePixelRatio)\n        this.doResize(clientWidth, clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => JSON.parse(JSON.stringify(this.data[indexId])))\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        this.eventCanvas.width = width\n        this.eventCanvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();\n        this.TouchStart(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchMove = (e) => {\n        e.preventDefault();\n        this.TouchMove(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchEnd = (e) => {\n        e.preventDefault();\n        this.TouchEnd(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasDblClick = (e) => {\n        e.preventDefault();\n        //  this.dblClick(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.dblClick(e.offsetX, e.offsetY);\n    }\n    canvasWheel = (e) => {\n        e.preventDefault();\n        this.wheel(e.deltaMode, e.deltaX, e.deltaY);\n    }\n    canvasMouseDown = (e) => {\n        e.preventDefault();\n        this.canvas.focus();\n        // this.mouseDown(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseDown(e.offsetX, e.offsetY);\n    }\n    canvasMouseLeave = () => {\n        this.mouseLeave();\n    }\n    canvasMouseUp = (e) => {\n        e.preventDefault();\n        // this.mouseUp(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseUp(e.offsetX, e.offsetY);\n    }\n    canvasMouseUpExtended = (e) => {\n        e.preventDefault();\n        this.mouseUpExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n    }\n    canvasMouseMoveExtended = (e) => {\n        e.preventDefault();\n        // this.mouseMoveExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMoveExtended(e.offsetX, e.offsetY);\n    }\n    canvasMouseMove = (e) => {\n        e.preventDefault();\n        // this.mouseMove(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMove(e.offsetX, e.offsetY);\n    }\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ", clientHeight",
      "CodeQwen2.5-7B": ", clientHeight",
      "copilot": ", clientHeight",
      "CodeQwen1.5-7B": " , clientHeight"
    }
  },
  {
    "prefix": "export const reviewStatusCode = {\n    REVIEW_SUCCESS: 2,\n    REVIEW_FAIL: 1,",
    "infill": "REVIEW_WAIT: 0,",
    "suffix": "\r\n};\r\n\r\nexport const reviewMap = {\r\n    [reviewStatusCode.REVIEW_WAIT]: {\r\n        color: 'orange',\r\n        label: '待审核',\r\n    },\r\n    [reviewStatusCode.]: {\r\n        color: '#f50',\r\n        label: '审核不通过',\r\n    },\r\n    2: {\r\n        color: '#87d068',\r\n        label: '审核通过',\r\n    },\r\n};\r\n\r\nexport const datasetColumns = [{\r\n    title: '名称',\r\n    dataIndex: 'name',\r\n    scopedSlots: { customRender: 'name' }\r\n}, {\r\n    title: '操作',\r\n    dataIndex: 'opera',\r\n    scopedSlots: { customRender: 'opera' },\r\n    width: 150\r\n}]\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/views/annotationProcess/DataSetManage/config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "REVIEW_WAIT: 0",
      "CodeQwen2.5-7B": "",
      "copilot": "REVIEW_WAIT: 0,",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    // 设置搜索模式\n    this.$edbStore.states.searchMode = 'commandBox'\n  },\n  methods: {\n    reactCommandBox(data) {\n      if (data.action === 'closeCommandBox') {\n        this.$edbStore.states.commandBoxState.active = false\n      } else if (data.action === 'locateIndex') {\n        this.locateIndex",
    "infill": "(data.args)",
    "suffix": "\r\n      }\r\n    },\r\n  }\r\n}",
    "relevantFile": "<file_path>src/pages/dashboard/mixins/commandBoxMixin.js\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    this.commandBoxInstance = null\n  },\n  mounted () {\n    // this.openCommandBox()\n  },\n  beforeDestroy () {\n    this.closeCommandBox()\n    // this.commandBoxInstance = null\n  },\n  methods: {\n    // 触发命令框\n    triggerCommandBox (data) {\n      // console.log('triggerCommandBox', data)\n      if (data.action === 'focusCommandBox') {\n        this.openCommandBox({\n          initMode: data.args,\n          // initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 74 }\n          initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 174 }\n        }).then(() => {\n          this.commandBoxInstance.focus()\n        })\n      } else if (data.action === 'switchCommandBoxMode') {\n        this.switchCommandBoxMode({\n          mode: data.args\n        })\n      }\n    },\n    openCommandBox ({ initMode, initPosition }) {\n      if (!this.commandBoxInstance) {\n        const CommandBoxComponent = Vue.extend(CommandBox)\n        const _this = this\n        this.commandBoxInstance = new CommandBoxComponent({\n          beforeCreate () {\n            this._i18n = _this._i18n \n          },\n          propsData: {\n            // ContainerRef: this\n            initMode,\n            initPosition,\n          }\n        })\n        // this.commandBoxInstance.$on('hide', () => {\n        //   this.onCommandBoxHide()\n        // })\n        let mountEl = document.createElement('div')\n        document.body.appendChild(mountEl)\n        this.commandBoxInstance.$mount(mountEl)\n        return this.$nextTick()\n      } else {\n        this.commandBoxInstance.open()\n        return Promise.resolve()\n      }\n    },",
    "relevantFileList": [],
    "filePath": "src/views/Home/mixins/homeMixinCommandBox.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "(data.args)",
      "CodeQwen2.5-7B": "(data.index)",
      "copilot": "(data.args)",
      "CodeQwen1.5-7B": " (data.index)\r"
    }
  },
  {
    "prefix": "/**\n * 1. 读取shell脚本相关的项目中的package.json\n * 2. 根据json文件内的依赖将其分别分类至package0-x中\n * 3. 不同条件的validator放入validators数组中\n * 4. 最终得到package0-x/package.json以及package0-x.sh文件\n * 5. 注释掉原有的npm install及rm -rf node_modules\n * 5. 修改pipelines配置，进行打包\n *\n * 错误及解决方案：\n * 1. npm源问题：脚本开头需要添加“npm config set registry \"http://repositories.myhexin.com:8081/repository/npm-public/\"”\n * 2. 安装thsc-datav-paradigm-wordcloud报错，在执行npm install前先执行npm install thsc-datav-paradigm-wordcloud@latest --ignore-script\n * 3. 打包时遇到vue-cli-service找不到，由于原有的shell脚本后面会有一句rm -rf node_modules,因此后面打包的项目找不到该命令，注释掉即可\n * 4. css-loader遇到url()引入网络图片的处理报错，由于css-loader版本过高引起，高版本的css-loader会自动处理url引入的图片，①降低css-loader的版本；②修改css-loader配置options:{url: false}\n * 5. baseUI.css中的--headerbar-height: 40px;引起的报错，在其后面添加“;”即可\n * 6. eslint引起的报错，①在build命令后添加--no-lint即vue-cli-service build --no-lint，不可行；②在vue.config.js中添加lintOnSave: false,可行；\n * 7. thsc-ifind-antdv下的less文件报错，.@{ant-prefix}-btn > .@{iconfont-css-prefix}-down {.iconfont-size-under-12px(10px);\n *    - Error evaluating function `unit`: the first argument to unit must be a number. Have you forgotten parenthesis?\n *    - 将涉及到的bable.config.js中的style:'css'\n * 8. f9_index下引入样式没加后缀导致报错import 'thsc-ifind-antdv/lib/spin/style/index';添加后缀.css;\n * 9. deep_information及risk_analysis两个项目始终无法成功，忽略处理这两个项目；\n * 10. import { CancelToken } from 'thsc-ifind-stock-f9',const CancelToken = axios.CancelToken;版本不兼容\n * 11. thsc-datav-dynamic-chart 3.0.0 和 2.8.22 不兼容\n * 12. 每日行情数据的HTMLCollection没有forEach方法，\n * 13. 存在postcss的项目需要在vue.config.js中指定postcss.config.js的位置 (style-analysis/第9条)\n * 14. 高版本的axios没有编译过，需要加入transpileDependencies;\n * 15. vxe-table/lib/vxe-table in ./src/main.js 找不到，因为VXETable被babel-plugin-import解析成了vxe-table，需要在babel.config.js中添加customName自定义name\n * - camel2DashComponentName： true,不行\n */\nconst [NODE, FILENAME, writeModifyFile] = process.argv;\nconst fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst readline = require('readline');\nconst fixedVersionMap = {\n  // 高版本的copy-webpack-plugin需要getCache函数，然而高版本的webpack没有这个函数。。。\n  'copy-webpack-plugin': '^6.0.2',\n  'vue-virtual-scroll-list': '2.3.4',\n  'vxe-table': '3.5.6',\n  'xe-utils': '3.5.6',\n  'vxe-utils': '2.0.1',\n  'axios': '0.27.2',\n};\nconst ignoreModules = [];\nconst ignoreProjects = [];\nconst newLine = os.EOL;\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nconst folderPath = path.resolve('./CIfile');\nconst fileNames = fs.readdirSync(folderPath);\nconst projectArr = [];\nconst modifyInfoArr = [];\nconst pathMap = {};\nfileNames.forEach((fileName) => {\n  if (fileName.indexOf('package') < 0 && !ignoreProjects.includes(fileName)) {\n    const filePath = `${folderPath}/${fileName}`;\n    const fileContent = fs.readFileSync(filePath, 'utf-8');\n    const newFileContent = handleFileContent(fileContent);\n    fs.writeFileSync(filePath, newFileContent, {\n      encoding: 'utf-8',\n    });\n    const matchAll = fileContent.match(/cd \\/drone\\/src(\\S*)/g);\n    matchAll.forEach((path) => {\n      const project = path.replace('cd /drone/src', '');\n      projectArr.push(project);\n      addModifyInfoArr(project);\n      pathMap[project] = filePath;\n    });\n  }\n});\nfunction addModifyInfoArr(project) {\n  let title = 'No Title';\n  const relativePath = (filename) => path.resolve('./' + project + filename);\n  const nameArr = [\n    '/index.html',\n    '/build/index.html',\n    '/public/index.html',\n    '/src/index.html',\n  ];\n  let indexHTMLPath = '';\n  nameArr.some((name) => {\n    const indexPath = relativePath(name);\n    const isTruly = fs.existsSync(indexPath);\n    if (isTruly) {\n      indexHTMLPath = indexPath;\n    }\n    return isTruly;\n  });\n  if (indexHTMLPath) {\n    const indexHtmlContent = fs.readFileSync(indexHTMLPath, 'utf-8');\n    if (indexHtmlContent.indexOf('<title>') > -1) {\n      title =\n        indexHtmlContent.replace(/.*?<title>(.*?)<\\/title>.*/s, '$1').trim() ||\n        title;\n    }\n  }\n  modifyInfoArr.push(`${project},${title}`);\n}\nwriteModifyFile >= 1 &&\n  fs.writeFileSync(\n    path.resolve('./', 'modify_project.txt'),\n    modifyInfoArr.join(newLine)\n  );\nconsole.log(`Total is ${projectArr.length}`);\n\nfunction modifyVueConfig(project, hasEslint) {\n  const pathToFile = path.resolve('.' + project, 'vue.config.js');\n  if (fs.existsSync(pathToFile)) {\n    const vueConfig = fs.readFileSync(pathToFile, 'utf-8');\n    let newConfig = vueConfig;\n    if (hasEslint) {\n      newConfig = newConfig\n        .replace(/(\\/\\/)?.*?lintOnSave:.*?,\\s*/g, '\\t')\n        .replace(\n          /module.exports = {/,\n          `module.exports = {${newLine}\\tlintOnSave: false,`\n        )\n        .replace(/[\\'\\\"]{1}\\..*?f9-bff-server.*?[\\\"\\']{1}/, \"'index.ftl'\")\n        .replace(\n          /config\\.plugin.*?webpack-bundle-analyzer.*?\\s*.*?webpack-bundle-analyzer.*?BundleAnalyzerPlugin.*?\\)/,\n          ''\n        );\n    }\n    const transName = 'transpileDependencies';\n    const hasTrans = newConfig.indexOf(transName) > -1;\n    if (hasTrans) {\n      newConfig = newConfig.replace(\n        /transpileDependencies.*?\\[(.*?)\\].*?,?/s,\n        (_, deps) => {\n          const depRes = deps\n            .replace(/[\\'\\\"]?axios[\\'\\\"]?/, '')\n            .split(',')\n            .map((val) => val.trim())\n            .filter(Boolean)\n            .join(', ');\n          return depRes\n            ? `${transName}: [${depRes}, 'axios'],`\n            : `${transName}: ['axios'],`;\n        }\n      );\n    } else {\n      newConfig = newConfig.replace(\n        /module.exports = {/,\n        `module.exports = {${newLine}\\ttranspileDependencies: ['axios'],`\n      );\n    }\n    fs.writeFileSync(pathToFile, newConfig);\n  }\n}\n\nfunction handleFileContent(fileContent) {\n  let newFileContent = fileContent\n    .replace(/# rm -rf \\.\\/node_modules/g, 'rm -rf ./node_modules')\n    .replace(/npm run build --no-lint\\s?/g, 'npm run build ')\n    .replace(/# npm install\\s/g, 'npm install ')\n    .replace(/#?.*?cat \\.\\/npm\\.log/g, '# cat ./npm.log')\n    .replace(\n      /# cat \\.\\/npm\\.log \\| grep 'ERR!'( > \\/dev\\/null)? && exit 1/g,\n      \"cat ./npm.log | grep 'ERR!' && exit 1\"\n    )\n    .replace(/# npm uninstall\\s/g, 'npm uninstall ')\n    .replace(/npm uninstall\\s/g, '# npm uninstall ')\n    .replace(/npm install\\s/g, '# npm install ')\n    .replace(/\\s*npm run (git)?build /g, 'npm run $1build ')\n    .replace(/echo \"npm run.*?\"/gi, `echo \"npm run build\"${newLine}`)\n    .replace(/rm -rf \\.\\/node_modules/g, '# rm -rf ./node_modules');\n  return newFileContent;\n}\n\nfunction toVersionArr(version) {\n  let vArr = version.split('.');\n  vArr = vArr.map((str) => (str.match(/\\d+/) || ['0'])[0]);\n  return vArr;\n}\n\nfunction isLatestVersion(preVersion, currVersion) {\n  const preVersionArr = toVersionArr(preVersion);\n  const currVersionArr = toVersionArr(currVersion);\n  let flag = false;\n  for (let i = 0; i < currVersionArr.length; i++) {\n    if (!preVersionArr[i]) {\n      flag = true;\n      break;\n    }\n    if (currVersionArr[i] - preVersionArr[i] === 0) {\n      continue;\n    }\n    flag = +currVersionArr[i] > +preVersionArr[i];\n    break;\n  }\n  return flag;\n}\n\nfunction mergeDependencies(obj, dependencies) {\n  const depKeys = Object.keys(dependencies);\n  depKeys.forEach((depKey) => {\n    if (ignoreModules.includes(depKey)) {\n      return;\n    }\n    const currVersion = fixedVersionMap[depKey] || dependencies[depKey];\n    // 如果当前没有此依赖\n    if (!obj.dependencies[depKey]) {\n      obj.dependencies[depKey] = currVersion;\n      obj.versions[depKey] = [currVersion];\n      return;\n    }\n    const preVersion = obj.dependencies[depKey];\n    if (preVersion === currVersion) {\n      return;\n    }\n    obj.versions[depKey].push(currVersion);\n    obj.versions[depKey] = [...new Set(obj.versions[depKey])];\n    if (isLatestVersion(preVersion, currVersion)) {\n      obj.dependencies[depKey] = currVersion;\n    }\n  });\n}\n\nconst zwf = '{%s}';\nfunction initPackJson(num) {\n  con",
    "infill": "@0.27.2',",
    "suffix": "\r\n    ];\r\n    projects.forEach((project) => {\r\n      templateArr.push(`${softlink}`.replace(zwf, project));\r\n    });\r\n    templateArr.push(newLine);\r\n    if (i > 3) {\r\n      const index = i % 4;\r\n      const packName = 'package' + index;\r\n      const preContent = fs.readFileSync('./CIfile/' + packName + '.sh');\r\n      const newContent = [preContent, templateArr.join(newLine)].join(\r\n        `${newLine}######divide######${newLine}${newLine}`\r\n      );\r\n      fs.writeFileSync(\r\n        path.resolve('./CIfile/' + packName + '.sh'),\r\n        newContent.trim() + newLine\r\n      );\r\n      return;\r\n    }\r\n    fs.writeFileSync(\r\n      path.resolve('./CIfile/' + name + '.sh'),\r\n      templateArr.join(newLine).trim() + newLine\r\n    );\r\n  }\r\n});\r\nconst removeShContent = removeModulesArr.join(newLine) + newLine;\r\nfs.writeFileSync(path.resolve('./CIfile/package_remove.sh'), removeShContent);\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "scan.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "st name = 'package' + num;\n  return {\n    name,\n    private: true,\n    scripts: {",
      "CodeQwen2.5-7B": "st packJson = {\r",
      "copilot": "@0.27.2',",
      "CodeQwen1.5-7B": "st name = 'package' + num;\r"
    }
  },
  {
    "prefix": "/* eslint-disable @typescript-eslint/no-var-requires */\nconst fs = require('fs');\nconst path = require('path');\nconst { WebAvengerWebpack } = require('@king-fisher/web-avenger')\nconst production = process.env.NODE_ENV === 'production';\nconst analyze = process.env.ACTUAL_MODE === 'analyze';\n// 部署地址，申请后更新并删除注释\nconst staticUrl = `${process.env.VUE_APP_CDN_HOST}/frontResources/static/regular/community-discuss`;\n\n// 多页面配置\nconst pageTitle = {\n  'stock': {\n    title: '海外社区股吧',\n    chunks: [],\n  },\n  // // 预留话题页\n  // 'topic-discussion': {\n  //   title: '话题',\n  //   chunks: [],\n  // },\n};\nconst pagePath = path.resolve(__dirname, './src/pages');\nconst pageArr = fs.readdirSync(pagePath);\nconst pages = {};\npageArr.forEach(name => {\n  const title = pageTitle[name] ? pageTitle[name].title : '';\n  Object.defineProperty(pages, name, {\n    enumerable: true,\n    value: {\n      production,\n      title,\n      entry: `src/pages/${name}/main.ts`,\n      template: `public/${name}.html`,\n      filename: `${name}.html`,\n    },\n  });\n});\nconst port = 8080;\n\nmodule.exports = {\n  publicPath: production ? staticUrl : './',\n  crossorigin: 'anonymous',\n  assetsDir: 'static',\n  pages,\n  // plugins: [\n  //   WebAvengerWebpack({\n  //     enable: true,\n  //     framework: 'vue',\n  //     debugKey: 'Kr8LMTBZ',\n  //   })\n  // ],\n  devServer: {\n    port,\n    disableHostCheck: true,\n  },\n  lintOnSave: 'default',\n  chainWebpack: config => {\n    config.module.rule('eslint').use('eslint-loader');\n    config.resolve.alias\n    .set('@public', path.resolve(__dirname, './src/utils/public-method/lib'))\n    .set('@api', path.resolve(__dirname, `./src/utils/service${(production || analyze) ? '' : '/mock'}`));\n    // 正式环境将大于 2k byte 的图片添加到构建产物中，通过发布平台发布\n    config.module\n    .rule('images')\n    .test(/\\.(jpg|png|gif)$/)\n    .use('url-loader')\n    .options({\n      limit: (production || analyze) ? 0 : Infinity,\n      publicPath: staticUrl + 'static/img',\n      outputPath: 'static/img',\n      name: '[name].[ext]',\n    });\n    if (analyze) {\n      const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');\n      config.plugin('webpack-bundle-analyzer').use(new BundleAnalyzerPlugin());\n\n      const MomentLocalesPlugin = require('moment-locales-webpack-plugin');\n      config.plugin('moment-locales-plugin').use(new MomentLocalesPlugin({ localesToKeep: ['zh-cn'] }));\n    }\n    config.plugins.delete('preload');\n    config.plugins.delete('prefetch');\n\n    // config.plugins.push(WebAvengerWebpack({\n    //   enable: true,\n    //   framework: 'vue',\n    //   debugKey: 'Kr8LMTBZ',\n    // }))\n  },\n  pluginOptions: {\n    'style-resources-loader': {\n      preProcessor: 'scss',\n      patterns: [\n        path.resolve(__dirname, './src/assets/styles/base.scss'),\n      ],\n    },\n  },\n  plugins",
    "infill": ": [\n    WebAvengerWebpack({\n      enable: true,\n      framework: 'vue',\n      debugKey: 'Kr8LMTBZ',\n    })\n  ],",
    "suffix": "\n  productionSourceMap: !production,\n};\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "vue.config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ": [\n    {\n      apply: compiler => {\n        compiler.hooks.compilation.tap('webpack-compile', compilation => {\n          compilation.bail = true; // 编译出错时 停止编译\n        });\n      },\n    }",
      "CodeQwen2.5-7B": ": [",
      "copilot": ": [\n    WebAvengerWebpack({\n      enable: true,\n      framework: 'vue',\n      debugKey: 'Kr8LMTBZ',\n    })\n  ],",
      "CodeQwen1.5-7B": ": ["
    }
  },
  {
    "prefix": "import { createApp } from 'vue';\nimport i18n from './locale'\nimport { createPinia } from 'pinia';\nimport App from './App.vue';\nimport MarketTable from './components/view/MarketTable.vue';\nimport HQChart from './components/view/HQChart.vue';\nimport './styles/global.less';\n\nconst pinia = createPinia()\n\n// 行情通知函数\nconst urlParams = new URLSearchParams(window.location.search);\n// 获取参数theme的值\nwindow.theme = urlParams.get('theme') || 2\nwindow.page = urlParams.get('page') || 1\ndocument.body.classList.add(`theme-${window.theme}`)\n\nwindow.notifyData = (data) => {\n  // data数据回来，通过data里面的订阅id找到对应的表格，然后更新表格数据\n  console.log(data)\n}\n\nwindow.marketTables = []\nwindow.marketCharts = []\nwindow.setTheme = (theme) => {\n  window.theme = theme\n  marketTables.forEach((table) => {\n    table.setTheme(theme)\n  })\n  marketCharts.forEach((chart) => {\n    chart.setTheme(theme)\n  })\n  document.body.classList.remove('theme-1', 'theme-2', 'theme-3')\n  document.body.classList.add(`theme-${theme}`)\n  // 后续还需要额外处理通用组件的样式\n}\n\ncreateApp(App)\n  .use(i18n)",
    "infill": ".use(pinia)",
    "suffix": "\n  .component('MarketTable', MarketTable)\n  .component('HQChart', HQChart)\n  .provide('taPrefix', 'HQChart')\n  .mount('#app');\n",
    "relevantFile": "<file_path>bff-standard-web/source/MarketPage/src/store/page.js\nimport {defineStore} from 'pinia'\n\nexport const usePageStore = defineStore('page', {\n    state: () => ({\n        data: {\n            children: [\n                {\n                    children: [],\n                    type: 'panel'\n                }\n            ],\n            type: 'page'\n        },\n    }),\n    getters: {\n        pageData: (state) => state.data,\n    },\n    actions: {\n        loadPageData(data) {\n            console.log(data)\n        },\n    }\n})\n<file_path>bff-standard-web/source/MarketPage/src/utils/data.js\n    \"1\": {\n        \"children\": [\n            {\n                \"children\": [\n                    [\n                        {\n                            \"props\":{\"id\": 1,title:\"股票列表显示\"},\n                            \"type\": \"MarketTable\"\n                        }\n                    ],\n                    [\n                        {\n                            \"props\":{\"id\": 4,title:\"股票列表显示\"},\n                            \"type\": \"MarketTable\"\n                        }\n                    ]   \n                ],\n                \"type\": \"panel\"\n            }\n        ],\n        \"type\": \"page\"\n    },\n    \"2\": {\n        \"children\": [\n            {\n                \"children\": [\n                    [\n                        {\n                            \"props\":{\"id\": 1,title:\"股票列表显示\"},\n                            \"type\": \"MarketTable\"\n                        },\n                        {\n                            \"props\":{\"id\": 2,title:\"股票列表显示\"},\n                            \"type\": \"MarketTable\"\n                        },\n                        {\n                            \"props\":{\"id\": 3,title:\"股票列表显示\"},\n                            \"type\": \"MarketTable\"\n                        }\n                    ],\n                    [\n                        {\n                            \"props\":{\"id\": 4, \"mode\":1,title:\"股票列表显示\"},\n                            \"type\": \"HQChart\"\n                        },\n                        {\n                            \"props\":{\"id\": 5, \"mode\":1,title:\"股票列表显示\"},\n                            \"type\": \"HQChart\"\n                        },\n                        {\n                            \"props\":{\"id\": 6, \"mode\":1,title:\"股票列表显示\"},\n                            \"type\": \"HQChart\"\n                        }\n                    ]\n                ],\n                \"type\": \"panel\"\n            }\n        ],\n        \"type\": \"page\"\n    },\n<file_path>bff-standard-web/source/MarketPage/src/chart.js\nimport { createApp } from 'vue';\nimport i18n from './locale'\nimport Chart from './Chart.vue';\nimport './styles/global.less';\n\n// 行情通知函数\n// 获取url里面的参数，使用最新API形式\nconst urlParams = new URLSearchParams(window.location.search);\n// 获取参数theme的值\nwindow.theme = urlParams.get('theme') || 1\nwindow.mode = urlParams.get('mode') || 1 // 分时/k线等模式\nwindow.MARKET_CODE = urlParams.get('market') || 177\nwindow.HQCODE = urlParams.get('code') || 'HK0700'\ndocument.body.classList.add(`theme-${window.theme}`)\n\ncreateApp(Chart)\n  .use(i18n)\n  .provide('taPrefix', 'MarketPage')\n  .mount('#app');",
    "relevantFileList": [],
    "filePath": "bff-standard-web/source/MarketPage/src/main.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ".use(pinia)",
      "CodeQwen2.5-7B": "",
      "copilot": ".use(pinia)",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "(function () {\n  // 消息处理\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.type === 'update-layers') {\n      sendResponse(user);\n    }\n  });\n  const sendMsg = async (msg) => {\n    const res = await chrome.runtime.sendMessage(msg);\n    console.log(res);\n  };\n\n  // 初始化",
    "infill": "图层并发送给service-worker",
    "suffix": "\r\n  const initLayer = () => {\r\n    const iframe = document.querySelector('iframe');\r\n    const iframeDocument = iframe.contentDocument || iframe.contentWindow.document;\r\n    const iframeTitle = iframeDocument.title;\r\n    const pageName = iframeTitle.slice(0, iframeTitle.indexOf(' - '));\r\n    const iframeSrc = iframe.src;\r\n    const iframeId = iframeSrc.split('?')[1];\r\n\r\n    const obj = JSON.parse(localStorage.getItem('d2c_layer'));\r\n    if (obj?.id === iframeId) {\r\n      const dataObject = obj.data;\r\n      const newObj = dataObject.artboards.find(item => item.name === pageName);\r\n      sendMsg({\r\n        type: 'init',\r\n        data: newObj\r\n      });\r\n    } else {\r\n      fetch(iframeSrc)\r\n        .then(response => response.text())\r\n        .then(data => {\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(data, 'text/html');\r\n          const scripts = doc.querySelectorAll('script');\r\n          const scriptContent = scripts[scripts.length - 1].textContent;\r\n          // 剔除开头固定的\"let data = \"和结尾固定的\"meaxure.render(data);\"以及一些空格\r\n          const dataObject = JSON.parse(scriptContent.slice(20, -35));\r\n          localStorage.setItem('d2c_layer', JSON.stringify({\r\n            id: iframeId,\r\n            data: dataObject\r\n          }));\r\n\r\n          const newObj = dataObject.artboards.find(item => item.name === pageName);\r\n          if (newObj) {\r\n            sendMsg({\r\n              type: 'init',\r\n              data: newObj\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  iframeDocument.addEventListener('click', (e) => {\r\n    if (e.target.classList.contains('layer')) {\r\n      sendMsg({\r\n        type: 'select',\r\n        data: e.target.classList[1].slice(6)\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n})()\r\n",
    "relevantFile": "<file_path>chrome-extension/src/store/index.js\nimport { defineStore } from 'pinia';\n\nexport const useLayerStore = defineStore('layer', {\n  state: () => ({\n    layers: null,\n    currentLayer: 0,\n  }),\n  actions: {\n    initPages(layers) {\n      this.layers = layers;\n    },\n    setCurrentLayer(id) {\n      this.currentLayer = id;\n    }\n  },\n  getters: {\n    getLayerChildren(state) {\n      const currentLayer = state.layers.find(item => item.objectID === state.currentLayer);\n      const { x, y, width, height } = currentLayer.rect;\n      const children = state.layers.filter(({ rect }) => {\n        return rect.x >= x && rect.y >= y && rect.x + rect.width <= x + width && rect.y + rect.height <= y + height;\n      })\n      console.log(children);\n      return children;\n    }\n  },\n});",
    "relevantFileList": [],
    "filePath": "chrome-extension/dist/listener.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "layer",
      "CodeQwen2.5-7B": "页面",
      "copilot": "图层并发送给service-worker",
      "CodeQwen1.5-7B": " 画布\r"
    }
  },
  {
    "prefix": "/* eslint-disable import/prefer-default-export */\nimport { generateChartOption } from '@thsc-ifind-irp/vdl-generate-chart-option';\nimport server from '@/server';\n\nconst sourceData = {};\n\nconst generateParams = indicators => ({\n  zb_str: indicators.map(item => item.indexId).join(','),\n  zb_rtime: new Array(indicators.length).fill(0).join(','),\n  displayid: indicators.map(item => item.displayId).join(','),\n  formula: indicators.map(item => item.formula || '0').join('$$'),\n  zb_point: indicators.map(item => (item.point || item.point === 0 ? item.point : '2')).join(','),\n  zb_unit: indicators.map(item => item.zb_unit || '1').join(','),\n  zb_custom: indicators.map(item => (item.edit ? item.id : '')).join(','),\n  browser: indicators.map(item => (item.indexType === 4 ? item.indexParam : '0')).join('$$'),\n  emptyType: indicators.map(item => (item.indexType === 4 || item.indexType === -1 ? item.emptyDataType : '')).join(','),\n  wt: 'json',\n  usage: 'flagship-store',\n});\n\nexport const getChartData = async indicators => {\n  if (indicators.length && indicators[0].indexType === 0) {\n    const awaitList = [];\n    for (let i = 0; i < indicators.length; i += 1) {\n      const formData = new FormData();\n      formData.append('id', indicators[i].id);\n      formData.append('displayId', indicators[i].displayId);\n      formData.append('datebegin', '');\n      formData.append('dateend', '');\n      // eslint-disable-next-line no-loop-func\n      awaitList.push(server.getNonSequZbData(formData).then(res => {\n        sourceData[res.displayId] = res;\n      }));\n    }\n    await Promise.all(awaitList);\n  } else {\n    const params = generateParams(indicators);\n    await server.getZbData(params).then(rsp => {\n      const tables = rsp.tables || [];\n      tables.forEach(tableData => {\n        sourceData[tableData.displayid] = tableData;\n      });\n    });\n  }\n};\n\n// 筛选需要请求数据的指标，如果已经在sourceData里有的指标就不需要请求了\nconst filterIndicators = indicators => indicators.filter(item => !sourceData[item.displayId]);\n\nconst removeUserStyle = (option, title) => {\n  const newOption = {};\n  if (option.series.type === 'pie') {\n    newOption.legend = { data: option.series.data.map(item => item.name), type: 'scroll' };\n  } else {\n    newOption.legend = { data: option.series.map(item => item.name), type: 'scroll' };\n  }\n  newOption.dataZoom = { show: true };\n  if (option.series.type === 'pie') {\n    newOption.tooltip = { show: true };\n  } else {\n    newOption.tooltip = { trigger: 'axis', alwaysShowContent: true };\n  }\n\n  if (option.series.type !== 'pie') {\n    newOption.xAxis = {\n      type: option.xAxis.type,\n      data: option.xAxis.data,\n    };\n    newOption.yAxis = option.yAxis.map(item => ({\n      type: item.type,\n      name: item.name,\n    }));\n  }\n\n  if (option.series.type === 'pie') {\n    newOption.series = { ...option.series, name: title, data:",
    "infill": " option.series.data.map",
    "suffix": "(item => ({ name: item.name, value: item.value }));\r\n    delete newOption.series.itemStyle;\r\n  } else {\r\n    newOption.series = option.series.map(item => ({\r\n      yAxisIndex: item.yAxisIndex,\r\n      type: item.type,\r\n      data: item.data,\r\n      name: item.name,\r\n    }));\r\n  }\r\n  return newOption;\r\n};\r\n\r\nexport const getOption = async (title, indicators, variable, chartSize) => {\r\n  const fetchDataIndicators = filterIndicators(indicators);\r\n  await getChartData(fetchDataIndicators);\r\n  let option = generateChartOption(indicators, sourceData, variable, chartSize);\r\n  console.log('option', option);\r\n  option = removeUserStyle(option, title);\r\n  console.log('option', option);\r\n  return option;\r\n};\r\n",
    "relevantFile": "<file_path>src/main.js\nimport Vue from 'vue';\nimport '@/assets/css/reset.css';\nimport './plugins';\nimport App from './App.vue';\n\nif (process.env.NODE_ENV === 'development') {\n  /* eslint-disable global-require */\n  require('@/mock');\n}\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n<file_path>vue.config.js\nmodule.exports = {\n  publicPath: '/gwstatic/static/industry-research-web/flagship-store',\n  lintOnSave: true,\n  transpileDependencies: ['thsc-ifind-antdv'],\n  productionSourceMap: false,\n  chainWebpack: (config) => {\n    if (process.env.NODE_ENV === 'development') {\n      config.devServer.proxy({\n        '/standardgwstatic/js/uilib/1.8.3/chart/echartsUi.js': {\n          changeOrigin: true,\n          target: 'http://localhost:8080/',\n          pathRewrite: {\n            '/standardgwstatic/js/uilib/1.8.3/chart/': '',\n          },\n        },\n        '/founderfu_service': {\n          changeOrigin: true,\n          target: 'http://172.19.80.62/',\n        },\n      });\n    }\n  },\n};\n<file_path>src/axios/index.js\n/**\n * 公用get请求\n * @param url       接口地址\n * @param config    接口所需config配置\n */\nexport const get = ({ url, config }) => instance\n  .get(url, config)\n  .then(res => {\n    if (res.code === 1) {\n      return res.data;\n    }\n    return Promise.reject(res);\n  });\n/**\n * 公用post请求\n * @param url       接口地址\n * @param data      接口参数\n * @param config    接口所需config配置\n */\nexport const post = ({ url, data, config }) => instance\n  .post(url, data, config)\n  .then(res => {\n    if (res.code === 1) {\n      return res.data;\n    }\n    return Promise.reject(res);\n  });\n/* eslint-disable no-param-reassign */\ninstance.interceptors.response.use(response => response.data, err => {\n  if (err && err.response) {\n    switch (err.response.code) {\n      case 400:\n        err.message = '请求错误';\n        break;\n\n      case 401:\n        err.message = '未授权，请登录';\n        break;\n\n      case 403:\n        err.message = '拒绝访问';\n        break;\n\n      case 404:\n        err.message = `请求地址出错: ${err.response.config.url}`;\n        break;\n\n      case 500:\n        err.message = '服务器内部错误';\n        break;\n\n      case 501:\n        err.message = '服务未实现';\n        break;\n\n      case 502:\n        err.message = '网关错误';\n        break;\n\n      case 504:\n<file_path>src/server/index.js\n/* eslint-disable no-unused-expressions */\nimport qs from 'qs';\nimport { get, post } from '@/axios';\n\nexport default {\n  getKanbanList: async () => {\n    let data = {};\n    await get({\n      url: '/board/public/tree/getAll',\n    }).then(rsp => {\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n  getKanbanDetail: async (boardId, page, pageSize) => {\n    let data = {};\n    await get({\n      url: '/visual/table/search_table',\n      config: {\n        params: {\n          boardId, page, pageSize, boardType: 2, keyword: '',\n        },\n      },\n    }).then(rsp => {\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n  getNonSequZbData: async params => {\n    let data = {};\n    await post({\n      url: '/visual/index/ext/non_sequ/data/query',\n      data: params,\n    }).then(rsp => {\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n  getZbData: async params => {\n    let data = {};\n    await post({\n      url: '/chart/fetch_data/search',\n      data: qs.stringify(params),\n    }).then(rsp => {\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n};",
    "relevantFileList": [],
    "filePath": "src/utils/chart.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ".map",
      "CodeQwen2.5-7B": " option.series.data.map",
      "copilot": " option.series.data.map",
      "CodeQwen1.5-7B": "  option.series.data.map(item => ({ name: item.name, value: item.value })) };\r"
    }
  },
  {
    "prefix": "/**\n * 多端适配方法\n */\n\n\n/**\n * 注册端侧平台和行为，进行多端行为收口\n * platformConfig参数说明：\n * {\n * defaultPlatform: 默认平台配置，未匹配到其他平台时，默认使用此配置\n * ",
    "infill": "otherPlatform: 其他平台配置数组",
    "suffix": "\r\n * }\r\n * \r\n */\r\nexport const registerPlatformAndAction = ({ platformConfig }) => {\r\n  //依次执行otherplatform的verify，都不满足适用defalut的\r\n  const { defaultPlatform, otherPlatform } = platformConfig;\r\n  let usingPlatform = defaultPlatform;\r\n  for (let i = 0; i < otherPlatform.length; i++) {\r\n    let currentPlatform = otherPlatform[i];\r\n    const { verify } = currentPlatform;\r\n    if (verify && verify()) {\r\n      usingPlatform = currentPlatform;\r\n      break;\r\n    }\r\n  }\r\n  //获取到当前平台,提取配置\r\n  const { key, statPrefix, cssKey, action } = usingPlatform;\r\n  //把当前platform的key注入到window的_platform_config,\r\n  window._platform_config = {\r\n    platform: key,\r\n    statId: statPrefix,\r\n  };\r\n  //同时把当前平台的cssKey注入到body的class里面 //如果未声明csskey，就使用key\r\n  document.body.classList.add(cssKey || key);\r\n  //注入handler\r\n  const handlerAction = {};\r\n  for (let funcName of Object.keys(action)) {\r\n    handlerAction[funcName] = (config) => {\r\n      const { handler } = config;\r\n      //handler如果声明对于当前平台的处理，优先使用handler的处理\r\n      if (handler && handler[key]) {\r\n        handler[key](config);\r\n        return;\r\n      }\r\n      action[funcName](config);\r\n    };\r\n  }\r\n  window._action_config = {\r\n    ...handlerAction,\r\n  };\r\n  //应该暴露出去 供外部调用\r\n};\r\n\r\n\r\nwindow.supportPlatform = {\r\n  ainvestConfig: {\r\n    key: \"ainvest\",\r\n    cssKey: \"f10-in-pc\",\r\n    statPrefix: \"lhsa\",\r\n  },\r\n  pcConfig: {\r\n    key: \"pc\",\r\n    cssKey: \"f10-in-pc\",\r\n    statPrefix: \"lhsa_pc\",\r\n  },\r\n  webConfig: { key: \"web\", cssKey: \"f10-in-web\", statPrefix: \"lhsa_web\" },\r\n};\r\n\r\n// handler逻辑注入到registerPlatformAndAction里面\r\n// 需求分析 1.handler提供端侧自定义 否则走默认的端侧逻辑\r\nwindow.registerPlatformAndAction({\r\n  platformConfig: {\r\n    defaultPlatform: {\r\n      ...window.supportPlatform.ainvestConfig,\r\n      action: {\r\n        jump: (config) => {\r\n          const { arg } = config;\r\n          //通用逻辑\r\n        },\r\n      },\r\n    },\r\n    otherPlatform: [\r\n      {\r\n        ...window.supportPlatform.pcConfig,\r\n        verify: () => !!window._pc_jsBridge_,\r\n        action: {\r\n          jump: (config) => {\r\n            //pc下跳转适用pc提供的pai\r\n            const { arg } = config;\r\n            //通用逻辑\r\n          },\r\n        },\r\n      },\r\n      {\r\n        ...window.supportPlatform.webConfig,\r\n        verify: () => !!window._web_jsBridge_,\r\n        action: {\r\n          jump: (config) => {\r\n            const { arg: { url } = {} } = config;\r\n            if (!url) {\r\n              // handle empty url case\r\n              return;\r\n            }\r\n            //通用逻辑\r\n            window.open(url);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n",
    "relevantFile": "<file_path>1.js\n//   },\n//   handler:{\n//       ainvest:()=>{\n//           console.log('ainvest')\n//       },\n//       pc:()=>{\n//           console.log('pc')\n//       },\n//       web:()=>{\n//           console.log('web')\n//       }\n//   }\n//  })\n\nwindow.supportPlatform = {\n  ainvestConfig: {\n    key: 'ainvest',\n    cssKey: 'f10-in-pc',\n    statPrefix: 'lhsa',\n  },\n  pcConfig: {\n    key: 'pc',\n    cssKey: 'f10-in-pc',\n    statPrefix: 'lhsa_pc',\n  },\n  webConfig: { key: 'web', cssKey: 'f10-in-web', statPrefix: 'lhsa_web' },\n};\n\n// handler逻辑注入到registerPlatformAndAction里面\n// 需求分析 1.handler提供端侧自定义 否则走默认的端侧逻辑\nwindow.registerPlatformAndAction({\n  platformConfig: {\n    defaultPlatform: {\n      ...window.supportPlatform.ainvestConfig,\n      action: {\n        jump: config => {\n          const { arg } = config;\n          //通用逻辑\n        },\n      },\n    },\n    otherPlatform: [\n      {\n        ...window.supportPlatform.pcConfig,\n        verify: () => !!window._pc_jsBridge_,\n        action: {\n          jump: config => {\n            //pc下跳转适用pc提供的pai\n            const { arg } = config;\n            //通用逻辑\n          },\n        },\n      },\n      {\n        ...window.supportPlatform.webConfig,\n        verify: () => !!window._web_jsBridge_,\n        action: {\n          jump: config => {\n            const { arg: { url } = {} } = config;\n            if (!url) {",
    "relevantFileList": [],
    "filePath": "src/commonUtils/deviceAdapter.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "otherPlatform:  其他平台配置数组，按照注册顺序优先使用前面的配置",
      "CodeQwen2.5-7B": "otherPlatform: 其他平台配置，数组，依次执行otherplatform的verify，都不满足适用defalut的",
      "copilot": "otherPlatform: 其他平台配置数组",
      "CodeQwen1.5-7B": " otherPlatform: 端侧平台配置，按照优先级顺序，依次执行verify，如果verify返回true，则使用此配置\r"
    }
  },
  {
    "prefix": "import Vue from 'vue'\nimport NDValue from '../nodeDetails/NDValue/NDValue'\nimport NDRevenue from '../nodeDetails/NDRevenue/NDRevenue'\nimport NDIndex from '../nodeDetails/NDIndex/NDIndex'\nimport NDArea from '../nodeDetails/NDArea/NDArea'\nimport NDNews from '../nodeDetails/NDNews/NDNews'\nimport NDReport from '../nodeDetails/NDReport/NDReport'\n\nimport BLProduct from '../businessLogics/BLProduct'\nimport BLSubscribe from '../businessLogics/BLSubscribe'\nimport BLAdvertisement from '../businessLogics/BLAdvertisement'\nimport BLDatadriven from '../businessLogics/BLDatadriven'\nimport BLFranchise from '../businessLogics/BLFranchise'\nimport BLCrownfund from '../businessLogics/BLCrownfund'\nimport BLReverseinnovation from '../businessLogics/BLReverseinnovation'\nimport BLService from '../businessLogics/BLService'\nimport BLDirectsales from '../businessLogics/BLDirectsales'\nimport BLFreemium from '../businessLogics/BLFreemium'\nimport BLPlatform from '../businessLogics/BLPlatform'\nimport BLShareeconomy from '../businessLogics/BLShareeconomy'\nimport NodeTopo from '../nodeTopo/NodeTopo'\n\nconst nodeDetailComponentMap = {\n  area: NDArea,\n  revenue: NDRevenue,\n  value: NDValue,\n  index: NDIndex,\n  news: NDNews,\n  report: NDReport,\n\n  // bl_product: BLProduct,\n  // bl_subscribe: BLSubscribe,\n  // bl_advertisement: BLAdvertisement,\n  // bl_datadriven: BLDatadriven,\n  // bl_franchise: BLFranchise,\n  // bl_crownfund: BLCrownfund,\n  // bl_reverseinnovation: BLReverseinnovation,\n  // bl_service: BLService,\n  // bl_directsales: BLDirectsales,\n  // bl_freemium: BLFreemium,\n  // bl_platform: BLPlatform,\n  // bl_shareeconomy: BLShareeconomy,\n\n  // nodetopo: NodeTopo,\n}\n\nconst businessLogicComponentMap = {\n  product: BLProduct,\n  subscribe: BLSubscribe,\n  advertisement: BLAdvertisement,\n  datadriven: BLDatadriven,\n  franchise: BLFranchise,\n  crownfund: BLCrownfund,\n  reverseinnovation: BLReverseinnovation,\n  service: BLService,\n  directsales: BLDirectsales,\n  freemium: BLFreemium,\n  platform: BLPlatform,\n  shareeconomy: BLShareeconomy,\n}\n\nconst nodeTopoComponent = NodeTopo\n\nfunction mixinDetail(ChainChart) {\n  ChainChart.prototype.initNodeDetailState = function () {\n    this.currentNodeDetailIns = null\n    this.currentNodeDetailSource = null\n  }\n  // ChainChart.prototype.showNodeDetail = function (nodeId, detailType, source) {\n  //   this.destroyNodeDetail()\n  //   const nodeItem = this.store.chartData.nodes.find(item => item.id === nodeId)\n  //   if (!nodeItem) {\n  //     return\n  //   }\n  //   let containerEl = document.createElement('div')\n  //   containerEl.className = 'node-detail-container'\n  //   this.container.appendChild(containerEl)\n  //   let insEl = document.createElement('div')\n  //   containerEl.appendChild(insEl)\n  //   const Ctor = Vue.extend(nodeDetailComponentMap[detailType])\n  //   this.currentNodeDetailIns = new Ctor({\n  //     beforeCreate () {\n  //       this.nodeItem = nodeItem\n  //     }\n  //   })\n  //   this.currentNodeDetailIns.$on('renderFinish', () => {\n  //     this.currentNodeDetailIns.play && this.currentNodeDetailIns.play()\n  //   })\n  //   this.currentNodeDetailIns.$mount(insEl)\n  //   this.currentNodeDetailSource = source\n  // }\n  ChainChart.prototype.showNodeDetail = function (playParam) {\n    this.destroyNodeDetail()\n    let containerEl = document.createElement('div')\n    containerEl.className = 'node-detail-container'\n    this.container.appendChild(containerEl)\n    let insEl = document.createElement('div')\n    containerEl.appendChild(insEl)\n    this.currentNodeDetailIns = this.createNodeDetailIns(playParam)\n    this.currentNodeDetailIns.$on('renderFinish', () => {\n      this.currentNodeDetailIns.play && this.currentNodeDetailIns.play()\n    })\n    this.currentNodeDetailIns.$mount(insEl)\n    this.currentNodeDetailSource = playParam.source\n  }\n  ChainChart.prototype.createNodeDetailIns = function (playParam) {\n    if (playParam.type === 'nodeDetail') {\n      const nodeItem = this.store.chartData.nodes.find(item => item.id === playParam.id)\n      const Ctor = Vue.extend(nodeDetailComponentMap[playParam.detailType])\n      return new Ctor({\n        beforeCreate () {\n          this.nodeItem = nodeItem\n        }\n      })\n    } else if (playParam.type === 'businessLogic') {\n      const Ctor = Vue.extend(businessLogicComponentMap[playParam.detailType])\n      return new Ctor()\n    } else if (playParam.type === 'nodeTopo') {\n      const Ctor = Vue.extend(nodeTopoComponent)\n      return new Ctor({\n        beforeCreate () {\n          this.playParam = playParam\n          this.chartData = ",
    "infill": "this.store.chartData",
    "suffix": "\r\n        }\r\n      })\r\n    }\r\n  }\r\n  ChainChart.prototype.destroyNodeDetail = function () {\r\n    if (this.currentNodeDetailIns) {\r\n      this.currentNodeDetailIns.$destroy()\r\n      this.container.removeChild(this.currentNodeDetailIns.$el.parentNode)\r\n      this.currentNodeDetailIns = null\r\n      this.currentNodeDetailSource = null\r\n    }\r\n  }\r\n  // ChainChart.prototype.resumePlayNodeDetail = function () {\r\n  //   if (this.currentNodeDetailIns && this.currentNodeDetailSource === 'play') {\r\n  //     this.currentNodeDetailIns.pause && this.currentNodeDetailIns.play()\r\n  //   }\r\n  // }\r\n  ChainChart.prototype.pausePlayNodeDetail = function () {\r\n    if (this.currentNodeDetailIns && this.currentNodeDetailSource === 'play') {\r\n      this.currentNodeDetailIns.pause && this.currentNodeDetailIns.pause()\r\n    }\r\n  }\r\n  ChainChart.prototype.playToEndNodeDetail = function () {\r\n    if (this.currentNodeDetailIns && this.currentNodeDetailSource === 'play') {\r\n      this.currentNodeDetailIns.playToEnd && this.currentNodeDetailIns.playToEnd()\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default mixinDetail",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/ChainChart.js\n    //   this.painter.playToNode(currentCaptionItem.playNodeId, detailType)\n    //   this.showNodeDetail(currentCaptionItem.playNodeId, detailType, 'play')\n    // } else if (currentCaptionItem.playType === 'edge') {\n    //   this.painter.playToEdge(currentCaptionItem.playEdgeFromId, currentCaptionItem.playEdgeToId)\n    //   this.destroyNodeDetail()\n    // } else {\n    //   this.destroyNodeDetail()\n    // }\n    if (currentCaptionItem.playParam.type === 'node') {\n      this.painter.playToNode(currentCaptionItem.playParam.id)\n      this.destroyNodeDetail()\n    } else if (currentCaptionItem.playParam.type === 'nodeDetail') {\n      this.painter.playToNode(currentCaptionItem.playParam.id, currentCaptionItem.playParam.detailType)\n      // this.showNodeDetail(currentCaptionItem.playParam.id, currentCaptionItem.playParam.detailType, 'play')\n      this.showNodeDetail({\n        ...currentCaptionItem.playParam,\n        source: 'play'\n      })\n    } else if (currentCaptionItem.playParam.type === 'businessLogic') {\n      this.painter.playToNode(currentCaptionItem.playParam.id)\n      // this.destroyNodeDetail()\n      this.showNodeDetail({\n        ...currentCaptionItem.playParam,\n        source: 'play'\n      })\n    } else if (currentCaptionItem.playParam.type === 'nodeTopo') {\n      this.painter.playToNodes(currentCaptionItem.playParam.ids)\n      // this.destroyNodeDetail()\n      this.showNodeDetail({\n        ...currentCaptionItem.playParam,\n        source: 'play'\n      })\n    } else {\n      this.destroyNodeDetail()\n    }\n  }\n\n  // // 重新播放\n  // resumePlay() {\n  //   this.resumePlayNodeDetail()\n  // }\n\n  // 暂停播放\n  pausePlay() {\n    this.pausePlayNodeDetail()\n  }\n\n  // 播放到结束\n  playToEnd() {\n    this.playToEndNodeDetail()\n  }\n\n  destroy() {\n    this.painter.destroy()\n  }\n\n}\n\nmixinDetail(ChainChart)",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/ChainChart/ChainChartDetail.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "this.store.chartData",
      "CodeQwen2.5-7B": "this.$store.state.chartData",
      "copilot": "this.store.chartData",
      "CodeQwen1.5-7B": " this.store.chartData\r"
    }
  },
  {
    "prefix": "const fs = require('fs');\nconst path = require('path');\nconst production = process.env.NODE_ENV === 'production';\nconst analyze = process.env.ACTUAL_MODE === 'analyze';\n// 部署地址，申请后更新并删除注释\nconst staticUrl = `${process.env.VUE_APP_CDN_HOST}/frontResources/static/regular/community-discuss`;\n\nconst { WebAverngerWebpack }  = require('@king-fisher/web-avenger');\n\n// 多页面配置\nconst pageTitle = {\n  'stock': {\n    title: '海外社区股吧',\n    chunks: [],\n  },\n  // // 预留话题页\n  // 'topic-discussion': {\n  //   title: '话题',\n  //   chunks: [],\n  // },\n};\nconst pagePath = path.resolve(__dirname, './src/pages');\nconst pageArr = fs.readdirSync(pagePath);\nconst pages = {};\npageArr.forEach(name => {\n  const title = pageTitle[name] ? pageTitle[name].title : '';\n  Object.defineProperty(pages, name, {\n    enumerable: true,\n    value: {\n      production,\n      title,\n      entry: `src/pages/${name}/main.ts`,\n      template: `public/${name}.html`,\n      filename: `${name}.html`,\n    },\n  });\n});\nconst port = 8080;\n\nmodule.exports = {\n  publicPath: production ? staticUrl : './',\n  crossorigin: 'anonymous',\n  assetsDir: 'static',\n  pages,\n  devServer: {\n    port,\n    disableHostCheck: true,\n  },\n  plugins: [\n    // 插件配置\n    WebAverngerWebpack({\n      enable: true,\n      framew",
    "infill": "ork: 'vue',\n      debugkey: '',",
    "suffix": "\n    }),\n  lintOnSave: 'default',\n  chainWebpack: config => {\n    config.module.rule('eslint').use('eslint-loader');\n    config.resolve.alias\n    .set('@public', path.resolve(__dirname, './src/utils/public-method/lib'))\n    .set('@api', path.resolve(__dirname, `./src/utils/service${(production || analyze) ? '' : '/mock'}`));\n    // 正式环境将大于 2k byte 的图片添加到构建产物中，通过发布平台发布\n    config.module\n    .rule('images')\n    .test(/\\.(jpg|png|gif)$/)\n    .use('url-loader')\n    .options({\n      limit: (production || analyze) ? 0 : Infinity,\n      publicPath: staticUrl + 'static/img',\n      outputPath: 'static/img',\n      name: '[name].[ext]',\n    });\n    if (analyze) {\n      const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');\n      config.plugin('webpack-bundle-analyzer').use(new BundleAnalyzerPlugin());\n\n      const MomentLocalesPlugin = require('moment-locales-webpack-plugin');\n      config.plugin('moment-locales-plugin').use(new MomentLocalesPlugin({ localesToKeep: ['zh-cn'] }));\n    }\n    config.plugins.delete('preload');\n    config.plugins.delete('prefetch');\n  },\n  pluginOptions: {\n    'style-resources-loader': {\n      preProcessor: 'scss',\n      patterns: [\n        path.resolve(__dirname, './src/assets/styles/base.scss'),\n      ],\n    },\n  },\n  productionSourceMap: !production,\n};\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "vue.config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ": Object.keys(pageTitle).map(name => ({\n        name,\n        chunks: pageTitle[name].chunks || [],\n      }))",
      "CodeQwen2.5-7B": "ork: 'vue',",
      "copilot": "ork: 'vue',\n      debugkey: '',",
      "CodeQwen1.5-7B": " ork: 'vue',"
    }
  },
  {
    "prefix": "import Vue from 'vue'\nimport CommandBox from '@/components/CommandBox/CommandBox.vue'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    this.commandBoxInstance = null\n  },\n  mounted () {\n    // this.openCommandBox()\n  },\n  beforeDestroy () {\n    this.closeCommandBox()\n    // this.commandBoxInstance = null\n  },\n  methods: {\n    // 触发命令框\n    triggerCommandBox (data) {\n      // console.log('triggerCommandBox', data)\n      if (data.action === 'focusCommandBox') {\n        this.openCommandBox({\n          initMode: data.args,\n          // initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 74 }\n          initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 174 }\n        })\n      }\n    },\n    openCommandBox ({ initMode, initPosition }) {\n      const CommandBoxComponent = Vue.extend(CommandBox)\n      const _this = this\n      this.commandBoxInstance = new CommandBoxComponent({\n        beforeCreate () {\n          this._i18n = _this._i18n \n        },\n        propsData: {\n          // ContainerRef: this\n          initMode,\n          initPosition,\n        }\n      })\n      this.commandBoxInstance.$on('hide', () => {\n        this.hideCommandBox()\n      })\n      let mountEl = document.createElement('div')\n      document.body.appendChild(mountEl)\n      this.commandBoxInstance.$mount(mountEl)\n    },\n    hideCommandBox () {\n      if (this.commandBoxInstance) {\n        this.commandBoxInstance.$destroy()\n        document.body.removeChild(this.commandBoxInstance.$el)\n        this.commandBoxInstance = null\n      }\n    }",
    "infill": ",",
    "suffix": "\r\n    closeCommandBox () {\r\n      if (this.commandBoxInstance) {\r\n        this.commandBoxInstance.$destroy()\r\n        document.body.removeChild(this.commandBoxInstance.$el)\r\n        this.commandBoxInstance = null\r\n      }\r\n    },\r\n  },\r\n}\r\n",
    "relevantFile": "<file_path>src/views/Home/mixins/homeMixinCommandBox.js\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    // 设置搜索模式\n    this.$edbStore.states.searchMode = 'commandBox'\n  },\n  methods: {\n    reactCommandBox(data) {\n      if (data.action === 'closeCommandBox') {\n        this.$edbStore.states.commandBoxState.active = false\n      }\n    },\n  }\n}",
    "relevantFileList": [],
    "filePath": "src/pages/dashboard/mixins/commandBoxMixin.js",
    "template": "javascript",
    "multiRes": { "hipilot": ",", "CodeQwen2.5-7B": ",", "copilot": ",", "CodeQwen1.5-7B": ",\r" }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { sleep } from '@/utils/index'\nimport { calLabelLayout } from '../ChainChart/utils/index'\nimport { NodeBgLinearGradientMap, NodeBarLinearGradient } from './common'\n\nexport class NTParallel {\n  constructor({ container, playParam, chartData }) {\n    this.container = container\n\n    const nodesMap = {}\n    for (let i = 0; i < chartData.nodes.length; i++) {\n      nodesMap[chartData.nodes[i].id] = chartData.nodes[i]\n    }\n    this.data = playParam.ids.map(id => {\n      return {\n        name: nodesMap[id].name,\n        image: nodesMap[id].image ||",
    "infill": " `${STATIC_IMAGES_PREFIX}/nodebg.png`,",
    "suffix": "\r\n      }\r\n    })\r\n\r\n    this.width = this.container.offsetWidth\r\n    this.height = this.container.offsetHeight\r\n\r\n    // 初始化canvas\r\n    const canvas = document.createElement('canvas')\r\n    canvas.style.width = '100%'\r\n    canvas.style.height = '100%'\r\n    canvas.width = this.width\r\n    canvas.height = this.height\r\n    this.canvas = canvas\r\n    this.container.appendChild(this.canvas)\r\n    this.zr = zrender.init(this.canvas, {\r\n      devicePixelRatio: window.devicePixelRatio,\r\n      width: this.width,\r\n      height: this.height,\r\n      renderer: 'canvas'\r\n    })\r\n\r\n    // this.data = [\r\n    //   {\r\n    //     name: '滚筒洗衣机',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '便携式吸尘器',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    // ]\r\n\r\n    this.initLayout = null\r\n    this.gridLayouts = null\r\n    this.calLayout()\r\n\r\n    this.rootGroup = new zrender.Group({\r\n      position: [this.width / 2, this.height / 2],\r\n      silent: true,\r\n    })\r\n    this.zr.add(this.rootGroup)\r\n\r\n    this.render()\r\n\r\n  }\r\n\r\n  calLayout() {\r\n    this.initLayout = {\r\n      position: [0, 0],\r\n      scale: 1,\r\n    }\r\n    this.gridLayouts = [\r\n      {\r\n        position: [-125, -153],\r\n        scale: 0.5,\r\n      },\r\n      {\r\n        position: [125, -153],\r\n        scale: 0.5,\r\n      },\r\n      {\r\n        position: [-125, 153],\r\n        scale: 0.5,\r\n      },\r\n      {\r\n        position: [125, 153],\r\n        scale: 0.5,\r\n      }\r\n    ]\r\n  }\r\n\r\n  async render() {\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      if (i > 0 && i % 4 === 0) {\r\n        await this.blurAllNodes(0)\r\n        this.rootGroup.removeAll()\r\n        await sleep(500)\r\n      }\r\n      this.blurAllNodes(0.1)\r\n      const nodeGroup = await this.showNode(i)\r\n      await Promise.all([this.playNode(nodeGroup, i), this.resumeAllNodes()])\r\n      await sleep(500)\r\n    }\r\n  }\r\n\r\n  blurAllNodes(toOpacity = 0.1) {\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: toOpacity\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  resumeAllNodes() {\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  showNode(index) {\r\n    const nodeData = this.data[index]\r\n    const fromLayout = this.initLayout\r\n    let nodeGroup = new zrender.Group({\r\n      position: fromLayout.position.slice(),\r\n      scale: [fromLayout.scale, fromLayout.scale],\r\n    })\r\n    const width = 428\r\n    const height = 538\r\n    nodeGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2 - 5,\r\n        y: - height / 2 - 5,\r\n        width: width + 10,\r\n        height: height + 10,\r\n        r: 17.28,\r\n      },\r\n      style: {\r\n        fill: '#FFFFFF',\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowBlur: 20,\r\n        shadowColor: 'rgba(3,25,40,0.16)'\r\n      },\r\n    }))\r\n    // \r\n    const imageEl = new zrender.Image({\r\n      style: {\r\n        image: nodeData.image,\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: width,\r\n      },\r\n    })\r\n    const nodeMask = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        r: 16,\r\n      },\r\n    })\r\n    imageEl.setClipPath(nodeMask)\r\n    nodeGroup.add(imageEl)\r\n    // \r\n    const textBg = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2 + 298,\r\n        width: width,\r\n        height: 240,\r\n        r: [0, 0, 16, 16],\r\n      },\r\n      style: {\r\n        fill: NodeBgLinearGradientMap['contain'],\r\n      },\r\n    })\r\n    nodeGroup.add(textBg)\r\n    // 横条\r\n    nodeGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - 364 / 2,\r\n        y: - height / 2 + 423,\r\n        width: 364,\r\n        height: 2,\r\n       },\r\n      style: {\r\n        fill: NodeBarLinearGradient,\r\n      },\r\n    }))\r\n    // \r\n    const { fontSize } = calLabelLayout({\r\n      width: width - 24,\r\n      text: nodeData.name,\r\n      maxFontSize: 48,\r\n      minFontSize: 12,\r\n      isBold: true\r\n    })\r\n    nodeGroup.add(new zrender.Text({\r\n      style: {\r\n        text: nodeData.name,\r\n        textLineHeight: fontSize,\r\n        fontSize: fontSize,\r\n        fontFamily: 'MicrosoftYaHei',\r\n        fontWeight: 'bold',\r\n        fill: '#FFFFFF',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        x: 0,\r\n        y: - height / 2 + 423 + 28 + 24,\r\n      },\r\n    }))\r\n    // \r\n    nodeGroup.traverse(child => {\r\n      child.attr({\r\n        style: {\r\n          opacity: 0.1\r\n        }\r\n      })\r\n    })\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      nodeGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  playNode(nodeGroup, index) {\r\n    const toLayout = this.gridLayouts[index % 4]\r\n    return new Promise((resolve) => {\r\n      nodeGroup.animateTo({\r\n        position: toLayout.position.slice(),\r\n        scale: [toLayout.scale, toLayout.scale],\r\n      }, {\r\n        duration: 1000,\r\n        easing: 'cubicOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.zr.dispose()\r\n  }\r\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTParallel.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "`${STATIC_IMAGES_PREFIX}/nodebg.png`",
      "CodeQwen2.5-7B": " `${STATIC_IMAGES_PREFIX}/nodebg.png`",
      "copilot": " `${STATIC_IMAGES_PREFIX}/nodebg.png`,",
      "CodeQwen1.5-7B": "  `${STATIC_IMAGES_PREFIX}/nodebg.png`,"
    }
  },
  {
    "prefix": "import { SERVER_CONTEXT_STANDARDGWAPI_AI } from '@/config'\n\nexport default {\n  data() {\n    return {\n      initLoading: false,\n      ESState: {\n        state: '',  // fetching-正在查找，success-成功，fail-失败，break-中止\n        // fetchType: '',\n        percent: 0,\n        // show: false,\n        isInit: false,  // true为新建看板的第一个生成请求，false-指令框控制请求\n      },\n    }\n  },\n  created () {\n    this.ES = null\n  },\n  beforeDestroy () {\n    this.closeEventSource()\n  },\n  methods: {\n    resetESState () {\n      this.ESState = {\n        state: '',\n        // fetchType: '',\n        percent: 0,\n        // show: false,\n        isInit: false,\n      }\n    },\n    closeEs() {\n      this.closeEventSource()\n      if (this.ESState.isInit) {\n        // 初始化请求，如果加载动画未关闭，关闭加载动画\n        if (this.initLoading) {\n          this.initLoading = false\n        }\n      }\n      this.resetESState()\n    },\n    // 打开看板流式接口\n    // isInit-true为新建看板的第一个生成请求，false-指令框控制请求\n    getMessage({ args, isInit }) {\n      this.ESState.isInit = isInit || false\n      // 处理loading\n      if (this.ESState.isInit) {\n        // 初始化请求，显示加载动画\n        this.initLoading = true\n      }\n      // 准备请求参数\n      let sendParam = {\n        ...args,\n      }\n      let sendParamStr = Object.entries(sendParam).map(item => {\n        return `${item[0]}=${encodeURIComponent(typeof(item[1]) === 'object' ? JSON.stringify(item[1]) : item[1])}`\n      }).join('&')\n      // 设置请求进度状态\n      this.ESState.state = 'fetching'\n      // this.ESState.fetchType = ''\n      this.ESState.percent = 0\n      // this.ESState.show = true\n      this.ES = new EventSource(`${SERVER_CONTEXT_STANDARDGWAPI_AI}/agent/get_chat_stream?${sendParamStr}`, {\n        withCredentials: true\n      })\n      // 监听请求message事件\n      this.ES.addEventListener('message', (e) => {\n        this.handleESMessage({ e })\n      }, false);\n      // 监听请求error事件\n      this.ES.addEventListener('error', (e) => {\n        this.handleESError({ e })\n      }, false);\n    },\n    // 关闭看板流式接口\n    closeEventSource() {\n      if (this.ES) {\n        this.ES.close()\n        this.ES = null\n      }\n    },\n    // 处理流式请求 message\n    handleESMessage ({ e }) {\n      // 处理loading\n      if (this.ESState.isInit) {\n        // 初始化请求，如果加载动画未关闭，关闭加载动画\n        if (this.initLoading) {\n          this.initLoading = false\n        }\n      }\n      // \n      let data\n      try {\n        data = JSON.parse(e.data)\n      } catch (error) {\n        console.log(e)\n      }\n      this.ESState.percent = Math.min((parseInt(data.streamPercent) || 0), 99)\n      // this.handleESMessageData({ data })\n      if (data.chatType === '1') {\n        this.ESState.state = 'fail'\n        data.content && this.handleESErrorMsg(data.content)\n      } else if (data.streamType === '2')  {\n        this.handleESMessageData({ data })\n      }\n    },\n    // 处理流式请求 error\n    handleESError () {\n      if (this.ESState.isInit) {\n        // 初始化请求，如果加载动画未关闭，关闭加载动画\n        if (this.initLoading) {\n          this.initLoading = false\n        }\n      }\n      // if (this.ES.readyState === 0) {\n      //   console.log('完成了')\n      // } else {\n      //   console.log('出错了')\n      //   if (this.ESState.isInit && !this.chartReady) {\n      //     this.handleESErrorData()\n      //   }\n      // }\n      if (this.chartReady) {\n        this.ESState.state = 'success'\n        this.ESState.percent = 100\n      } else {\n        this.ESState.state = 'fail'\n        this",
    "infill": ".handleESErrorData()",
    "suffix": "\r\n      }\r\n      this.closeEventSource()\r\n      this.resetESState()\r\n    },\r\n  },\r\n};",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/views/Home/utils/esMessageMixin.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "this.$message.error('请求出错，请稍后重试！')\n        this.closeEventSource()\n        this.resetESState()\n        return",
      "CodeQwen2.5-7B": ".ESState.percent = 100",
      "copilot": ".handleESErrorData()",
      "CodeQwen1.5-7B": " .ESState.percent = 0"
    }
  },
  {
    "prefix": "import Vue from 'vue'\nimport CommandBox from '@/components/CommandBox/CommandBox.vue'\nimport { checkCommandBoxPlatformEnable } from '@/components/CommandBox/utils/index.js'\nimport * as commandBoxApi from '@/api/commandBoxApi'\nimport {TaLog} from '@/utils'\n\nexport default {\n  data () {\n    return {\n      commandBoxState: {\n        ennable: false,  // 是否启用指令框-根据灰度接口获取\n        active: false,  // 指令框是否激活中\n        searchParam_IndexSelect: '',  // 指标库表指令框搜索参数\n        searchParam_Dataset: '',  // 数据集合指令框搜索参数\n        searchParam_Selfbuilt: '',  // 自建数据指令框搜索参数\n      },\n      indexActiveCommandMode: 'IndexSelect',  // 指标库表指令框当前模式\n      screenActiveTab: null,  // 数据看板当前激活的tab\n    }\n  },\n  // computed: {\n  //   fullActiveTabMode() {\n  //     return this.activeTab + (this.activeTab === 'edb' ? `_${this.edbActiveTabMode}` : '')\n  //   }\n  // },\n  watch: {\n    // fullActiveTabMode(val) {\n    //   if ((val === 'screen' && this.screenActiveTab) || val === 'edb_table') {\n    //     if (val === 'edb_table') {\n    //       this.switchCommandBoxMode({ mode: this.indexActiveCommandMode })\n    //     } else if (val === 'screen' && this.screenActiveTab) {\n    //       this.switchCommandBoxMode({ mode: 'Screen' })\n    //     }\n    //     this.commandBoxInstance && this.commandBoxInstance.show()\n    //   } else {\n    //     this.commandBoxInstance && this.commandBoxInstance.hide()\n    //   }\n    // },\n    activeTab(val) {\n      if (val === 'edb' && this.indexActiveCommandMode !== '') {\n        this.switchCommandBoxMode({ mode: this.indexActiveCommandMode })\n        this.commandBoxInstance && this.commandBoxInstance.show()\n      } else if (val === 'screen' && this.screenActiveTab) {\n        this.switchCommandBoxMode({ mode: 'Screen' })\n        this.commandBoxInstance && this.commandBoxInstance.show()\n      } else {\n        this.commandBoxInstance && this.commandBoxInstance.hide()\n      }\n    },\n    commandBoxState: {\n      deep: true,\n      handler: function (val) {\n        this.saveCommandBoxState()\n      }\n    },\n  },\n  created () {\n    this.commandBoxInstance = null\n    this.getUserTypeCommandBoxAuth()\n  },\n  mounted () {\n    // window.addEventListener('beforeunload', this.saveCommandB",
    "infill": "oxPosition)\r\n  },\r\n  beforeDestroy () {\r\n    this.destroy",
    "suffix": "CommandBox()\r\n  },\r\n  methods: {\r\n    getUserTypeCommandBoxAuth() {\r\n      if (checkCommandBoxPlatformEnable()) {\r\n        this.saveCommandBoxState()\r\n        commandBoxApi.getUserTypeCommandBox().then(res => {\r\n          if (res.data) {\r\n            this.commandBoxState.ennable = res.data || false\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 保存指令框激活状态\r\n    saveCommandBoxState() {\r\n      localStorage.setItem(\r\n        'edb_commandBox_state',\r\n        JSON.stringify(this.commandBoxState)\r\n      )\r\n    },\r\n    // // 保存指令框的位置\r\n    // saveCommandBoxPosition() {\r\n    //   if (this.commandBoxInstance) {\r\n    //     localStorage.setItem(\r\n    //       'edb_commandBox_position',\r\n    //       JSON.stringify(this.commandBoxInstance.position)\r\n    //     )\r\n    //   }\r\n    // },\r\n    // 触发命令框\r\n    triggerCommandBox (data) {\r\n      if (data.action === 'focusCommandBox') {\r\n        this.focusCommandBox(data)\r\n      } else if (data.action === 'switchCommandBoxMode') {\r\n        this.switchCommandBoxModeFromEdb({\r\n          mode: data.args\r\n        })\r\n      } else if (data.action === 'syncSelectItems') {\r\n        if (this.commandBoxInstance) {\r\n          this.commandBoxInstance.syncSelectItems(data.args)\r\n        }\r\n      } else if (data.action === 'updateScreenActiveTab') {\r\n        this.screenActiveTab = data.args\r\n      } else if (data.action === 'addBoardSuccess') {\r\n        this.$message.success($t('MANUAL819'))\r\n      } else if (data.action === 'closeCommandBox') {\r\n        this.closeCommandBox()\r\n      } else if (data.action === 'toSearchAiWithcommandBoxHistory') {\r\n        this.commandBoxInstance.toSearchAiWithcommandBoxHistory()\r\n      }\r\n    },\r\n    focusCommandBox (data) {\r\n      // let initPosition\r\n      // try {\r\n      //   initPosition = JSON.parse(localStorage.getItem('edb_commandBox_position'))\r\n      // } catch (e) { console.log(e) }\r\n      this.openCommandBox({\r\n        initMode: data.args.mode,\r\n        // initPosition: initPosition || (data.args === 'Screen' ? { left: Math.max((window.innerWidth / 2 - 320), 0), top: 100 } : { left: 10, top: 74 })\r\n        initPosition: data.args.mode === 'Screen' ? { left: Math.max((window.innerWidth / 2 - 320), 0), top: 100 } : { left: 12, top: 73 },\r\n        initWidth: data.args.width || 640,\r\n      }).then(() => {\r\n        this.commandBoxInstance.focus()\r\n      })\r\n    },\r\n    openCommandBox ({ initMode, initPosition, initWidth }) {\r\n      if (!this.commandBoxInstance) {\r\n        const CommandBoxComponent = Vue.extend(CommandBox)\r\n        const _this = this\r\n        this.commandBoxInstance = new CommandBoxComponent({\r\n          beforeCreate () {\r\n            this._i18n = _this._i18n \r\n          },\r\n          propsData: {\r\n            ContainerRef: this,\r\n            initMode,\r\n            initPosition,\r\n            initWidth,\r\n          }\r\n        })\r\n        this.commandBoxInstance.$on('close', () => {\r\n          this.closeCommandBox()\r\n        })\r\n        this.commandBoxInstance.$on('syncSearchParam', (mode, searchParam) => {\r\n          this.commandBoxState[`searchParam_${ mode }`] = searchParam\r\n        })\r\n        let mountEl = document.createElement('div')\r\n        document.body.appendChild(mountEl)\r\n        this.commandBoxInstance.$mount(mountEl)\r\n        this.commandBoxState.active = true\r\n        TaLog({id: `iFinD_macroEconomy_${ initMode === 'Screen' ? 'DASHBOARD' : 'WEBEDB' }_AICopilot_On`})\r\n        return this.$nextTick()\r\n      } else {\r\n        this.commandBoxState.active = true\r\n        this.commandBoxInstance.show()\r\n        TaLog({id: `iFinD_macroEconomy_${ this.commandBoxInstance.mode === 'Screen' ? 'DASHBOARD' : 'WEBEDB' }_AICopilot_On`})\r\n        return Promise.resolve()\r\n      }\r\n    },\r\n    closeCommandBox () {\r\n      this.commandBoxState.active = false\r\n      this.commandBoxInstance.hide()\r\n      TaLog({id: `iFinD_macroEconomy_${ this.commandBoxInstance.mode === 'Screen' ? 'DASHBOARD' : 'WEBEDB' }_AICopilot_Off`})\r\n    },\r\n    destroyCommandBox () {\r\n      if (this.commandBoxInstance) {\r\n        this.commandBoxInstance.$destroy()\r\n        document.body.removeChild(this.commandBoxInstance.$el)\r\n        this.commandBoxInstance = null\r\n      }\r\n    },\r\n    // 从指标库表切换指令框内容模式\r\n    switchCommandBoxModeFromEdb({ mode }) {\r\n      if (mode) {\r\n        this.indexActiveCommandMode = mode\r\n        this.switchCommandBoxMode({ mode })\r\n        if (this.commandBoxState.active) {\r\n          this.commandBoxInstance && this.commandBoxInstance.show()\r\n        }\r\n      } else {\r\n        this.indexActiveCommandMode = ''\r\n        this.commandBoxInstance && this.commandBoxInstance.hide()\r\n      }\r\n    },\r\n    switchCommandBoxMode({ mode }) {\r\n      if (this.commandBoxInstance) {\r\n        this.commandBoxInstance.switchMode(mode)\r\n      }\r\n    },\r\n    // 打开数据看板的指令框\r\n    focusCommandBoxScreen() {\r\n      this.triggerCommandBox({\r\n        action: 'focusCommandBox',\r\n        args: {\r\n          mode: 'Screen',\r\n        },\r\n      })\r\n    },\r\n  },\r\n}\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/pages/dashboard/mixins/commandBoxMixin.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "oxState",
      "CodeQwen2.5-7B": "oxPosition)\r",
      "copilot": "oxPosition)\r\n  },\r\n  beforeDestroy () {\r\n    this.destroy",
      "CodeQwen1.5-7B": " oxPosition)"
    }
  },
  {
    "prefix": "import { MESSAGE_TYPE, MESSAGE_STATUS } from './constant';\nimport { repairPubItem } from './mutations';\nimport { addToGroup } from './messageHelper';\nimport { mergeTwoObject } from '@/assets/js/util';\nimport streamRequestAnswerAndParse from '@/assets/js/chat/RobotRequestAnwerAndParse/StreamRequestAnswerAndParse';\nimport { STREAM_STATUS } from '@ths/robotAnswerRequest';\nimport { chatfindF9SstorageId, userActAddChatFlag, welcomeFlag } from '@/assets/js/constant';\nimport HistoryManager from '@/assets/js/chat/HistoryManager2';\n\nfunction checkIfindSearchPage(navId) {\n  const isNewItem = navId.includes(userActAddChatFlag);\n  if (isNewItem) {\n    return true;\n  }\n  if (navId.startsWith('new-')) {\n    return false;\n  }\n  const { messages } = window.store.state.messageModule;\n  if (!messages.length && !window.f9WelcomePageLoaded) {\n    return false;\n  }\n  const firstPageTpls = ['f9Welcome', 'f9BreifingPage', 'welcome', 'hotRecommend', 'guard'];\n  const hasFirstPage = messages.some(item =>\n    item.group?.some(li => firstPageTpls.includes(li.tplType))\n  );\n  if (hasFirstPage) {\n    return false;\n  }\n  return true;\n}\nfunction checkBreifing(navId) {\n  const breifingId = sessionStorage.getItem(chatfindF9SstorageId);\n  return navId === breifingId;\n}\n\nfunction resetStatus() {\n  window.store.commit('messageModule/updateRequestStatus', false);\n  // 清除所有答案列表的内容\n  window.store.dispatch('messageModule/clearRenderMsgQueue');\n  window.store.dispatch('messageModule/clearPendingMessage');\n  window.store.commit('dialogModule/updateSuspenLabelFlag', false);\n  window.store.commit('messageModule/updateShowLoading', false);\n  window.store.commit('dialogModule/updateUserTouchProtect', false);\n  window.store.commit('loadDialogModule/loadSuspenData', {});\n  window.store.dispatch('messageModule/clearRecentMsgEval');\n}\n\nconst actions = {\n  updateBreifingCode({ state }, code) {\n    const messageNum = state.messages.length;\n    if (messageNum === 1) {\n      const message = state.messages[0];\n      const { group } = message;\n      if (group?.length === 1 && group[0].tplType === 'f9BreifingPage') {\n        group[0].thsCode = code;\n      }\n    }\n  },\n  addF9BreifingPage({ dispatch }, code) {\n    const group = {\n      tplType: 'f9BreifingPage',\n      position: 'left',\n      saveInLocal: true,\n      thsCode: code,\n    };\n    dispatch('addMessage', { group });\n  },\n  addMessage(\n    { state, getters },\n    {\n      groupKey,\n      height,\n      type = MESSAGE_TYPE.ANSWER,\n      status = MESSAGE_STATUS.LOADED,\n      group = [],\n      isBigCard = false,\n      tryAgainObj = {},\n    }\n  ) {\n    const { messages } = state;\n    const { getGroupKey, createGroup } = getters;\n    const curGroupKey = groupKey || getGroupKey();\n    const curGroup = createGroup(group, curGroupKey);\n    const curMessage = {\n      type,\n      status,\n      groupKey: curGroupKey,\n      group: curGroup,\n      height: height || 0,\n      isBigCard,\n      tryAgainObj,\n    };\n    if (\n      ['guard', 'welcome', 'hotRecommend'].includes(curMessage.group?.[0]?.tplType) &&\n      messages.some(item => item.group?.[0]?.tplType === curMessage.group?.[0]?.tplType)\n    ) {\n      return;\n    }\n    messages.push(curMessage);\n  },\n  addGroupToMessage({ getters }, { groupKey, groupData }) {\n    const { getMessage, createGroup } = getters;\n    const { message } = getMessage({ groupKey });\n    if (message) {\n      const group = createGroup(groupData, groupKey);\n      message.group.push(...group);\n    }\n  },\n  /**\n   * @description 列表增加答案的添加方法\n   * @param message 消息数据\n   * */\n  addPendingMessage({ state, getters, dispatch }, message) {\n    console.lo",
    "infill": "g('!!!addPendingMessage', message);",
    "suffix": "\r\n    const { pendingMessages } = state;\r\n    const { createGroup } = getters;\r\n    const { groupKey, ...groupData } = message;\r\n    const group = createGroup(groupData, groupKey);\r\n\r\n    pendingMessages.push(...group);\r\n    dispatch('startRenderMsg');\r\n  },\r\n  deleteMessage({ state }, { condition = {} }) {\r\n    const { messages } = state;\r\n    const conditionArr = Object.entries(condition);\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n      const needDelete = conditionArr.every(([key, value]) => messages[i][key] === value);\r\n      if (needDelete) {\r\n        messages.splice(i, 1);\r\n      }\r\n    }\r\n  },\r\n  deleteGroupItem(group, condition) {\r\n    for (let i = group.length - 1; i >= 0; i--) {\r\n      const conditionArr = Object.entries(condition);\r\n      const needDelete = conditionArr.every(([key, value]) => group[i][key] === value);\r\n      if (needDelete) {\r\n        group.splice(i, 1);\r\n      }\r\n    }\r\n  },\r\n  deleteGroupFromMessage({ state, getters }, { condition = {} }) {\r\n    const { messages } = state;\r\n    const { groupKey, otherCondition } = condition;\r\n    function deleteGroupItem(group, _condition) {\r\n      for (let i = group.length - 1; i >= 0; i--) {\r\n        const conditionArr = Object.entries(_condition);\r\n        const needDelete = conditionArr.every(([key, value]) => group[i][key] === value);\r\n        if (needDelete) {\r\n          group.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    if (groupKey) {\r\n      const { getMessage } = getters;\r\n      const { message: { group = [] } = {} } = getMessage({ groupKey });\r\n      deleteGroupItem(group, otherCondition);\r\n    } else {\r\n      for (let messageIndex = messages.length - 1; messageIndex > 0; messageIndex--) {\r\n        const { group } = messages[messageIndex];\r\n        deleteGroupItem(group, condition);\r\n      }\r\n    }\r\n  },\r\n  clearPendingMessage({ state }) {\r\n    state.pendingMessages = [];\r\n  },\r\n  updateMessage({ state, getters }, { content = {}, condition = {} }) {\r\n    const { messages } = state;\r\n    const { getMessage } = getters;\r\n    let curMessages = getMessage(condition);\r\n    curMessages = Array.isArray(curMessages) ? curMessages : [curMessages];\r\n    curMessages.forEach(({ message, index }) => {\r\n      if (messages[index]) {\r\n        messages[index] = {\r\n          ...message,\r\n          ...content,\r\n        };\r\n      }\r\n    });\r\n  },\r\n  updateMessageGroup(\r\n    { state, getters, dispatch },\r\n    { content = {}, groupKey, condition = {}, updateHistory = true }\r\n  ) {\r\n    const { messages } = state;\r\n    const { getGroupFromMessage } = getters;\r\n    let curGroup = getGroupFromMessage(groupKey, condition);\r\n    curGroup = Array.isArray(curGroup) ? curGroup : [curGroup];\r\n\r\n    curGroup.forEach(({ messageIndex, groupIndex }) => {\r\n      if (messages?.[messageIndex]?.group?.[groupIndex]) {\r\n        Object.keys(content).forEach(key => {\r\n          messages[messageIndex].group[groupIndex][key] = content[key];\r\n        });\r\n        if (updateHistory) {\r\n          dispatch(\r\n            'loadDialogModule/updateLocalHistory',\r\n            { data: messages[messageIndex].group[groupIndex] },\r\n            { root: true }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  },\r\n  /**\r\n   * 更新pendingMessage或messages\r\n   * @param {String} groupKey\r\n   * @param {Object} msgItem\r\n   */\r\n  updatePendingMessageOrDialogArr({ dispatch, state }, { groupKey, msgItem }) {\r\n    const curPendingMessage = state.pendingMessages.find(\r\n      item => item.groupKey === groupKey && item.publicKey === msgItem.publicKey\r\n    );\r\n    if (curPendingMessage) {\r\n      mergeTwoObject(curPendingMessage, msgItem);\r\n    } else {\r\n      dispatch('updateDialogArrGroup', { groupKey, msgItem });\r\n    }\r\n  },\r\n  /**\r\n   * 更新pendingMessage中group的内容\r\n   */\r\n  updatePendingMessageGroupByGroupKey({ state }, { groupKey, msgGroupItem }) {\r\n    const curPendingMessage = state.pendingMessages.find(item => item.groupKey === groupKey);\r\n    if (curPendingMessage?.group) {\r\n      const { group } = curPendingMessage;\r\n      const index = group.findIndex(groupItem => groupItem.sectionId === msgGroupItem.sectionId);\r\n      if (index > -1) {\r\n        group[index] = msgGroupItem;\r\n      } else {\r\n        curPendingMessage.group.push(msgGroupItem);\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 流式答案返回结束回调\r\n   * @param {*} groupKey 当前答案的groupKey\r\n   * @param {*} question 请求问句\r\n   * @param {*} callType 请求问句的方式\r\n   * @param {*} voiceTxt 播报内容\r\n   */\r\n  onStreamMsgResponseEnd({ state, dispatch }) {\r\n    if (state.pendingMessages.length < 1 && !state.isRendering) {\r\n      console.log('call onStreamMsgOver 1');\r\n      dispatch('onStreamMsgOver');\r\n    }\r\n  },\r\n  /**\r\n   * @description 新增列表消息，若已经存在则修改原消息且同步到历史记录\r\n   * @param state\r\n   * @param dispatch\r\n   * @param groupKey 区别不同消息的group的key值\r\n   * @param msgItem 需要更新的字段字典\r\n   * */\r\n  updateDialogArrGroup({ state, dispatch }, { groupKey, msgItem }) {\r\n    const dialogLen = state.messages.length;\r\n    for (let i = dialogLen - 1; i >= 0; i--) {\r\n      const groupData = state.messages[i];\r\n      if (groupData.groupKey === groupKey) {\r\n        // 判断是否存在相同的publicKey，存在就直接去更新\r\n        let isNew = true;\r\n        let messageIndex = -1;\r\n        groupData.group.forEach((messageData, index) => {\r\n          if (messageData.publicKey === msgItem.publicKey) {\r\n            isNew = false;\r\n            messageIndex = index;\r\n          }\r\n        });\r\n        if (isNew) {\r\n          repairPubItem(state, msgItem, groupKey);\r\n          addToGroup({ group: groupData.group, messageData: msgItem });\r\n        } else {\r\n          mergeTwoObject(groupData.group[messageIndex], msgItem);\r\n          dispatch(\r\n            'loadDialogModule/updateLocalHistory',\r\n            { data: groupData.group[messageIndex] },\r\n            { root: true }\r\n          );\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  updatePendingMessageOrMessage({ state, dispatch }, { groupData = {}, groupKey }) {\r\n    const curPendingMessageIndex = state.pendingMessages.findIndex(\r\n      item => item.groupKey === groupKey && item.publicKey === groupData.publicKey\r\n    );\r\n    if (curPendingMessageIndex > -1) {\r\n      state.pendingMessages[curPendingMessageIndex] = {\r\n        ...state.pendingMessages[curPendingMessageIndex],\r\n        ...groupData,\r\n      };\r\n    } else {\r\n      dispatch('updateMessageGroup', {\r\n        content: groupData,\r\n        groupKey,\r\n        condition: { publicKey: groupData.publicKey },\r\n      });\r\n    }\r\n  },\r\n  startRenderMsg({ state, dispatch }) {\r\n    if (state.isRendering) {\r\n      return;\r\n    }\r\n    dispatch('renderNextStreamMsg');\r\n  },\r\n  /**\r\n   * 根据group渲染下一条消息\r\n   */\r\n  renderNextMessageByGroup({ state, getters, dispatch }, message) {\r\n    const { messages, pendingMessages } = state;\r\n    const { group, groupKey, isBigCard } = message;\r\n    const isExist = getters.getGroupListByGroupKey(groupKey);\r\n    if (!isExist) {\r\n      // 大卡片中的组件不需要渲染完一个再渲染下一个的操作，所以这里把一整个group添加到messages中\r\n      if (isBigCard) {\r\n        messages.push({\r\n          ...message,\r\n          group: [...message.group],\r\n        });\r\n        pendingMessages.shift();\r\n        dispatch('renderNextStreamMsg');\r\n        return;\r\n      }\r\n      const firstItem = group.shift();\r\n      if (firstItem) {\r\n        messages.push({\r\n          ...message,\r\n          group: [{ ...firstItem }],\r\n        });\r\n        if (group.length === 0) {\r\n          pendingMessages.shift();\r\n        }\r\n      } else {\r\n        messages.push(message);\r\n        pendingMessages.shift();\r\n        dispatch('renderNextStreamMsg');\r\n      }\r\n    }\r\n  },\r\n  renderNextStreamMsg({ state, dispatch }) {\r\n    const { pendingMessages } = state;\r\n    if (pendingMessages.length > 0) {\r\n      state.isRendering = true;\r\n      const message =",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/store/messageModule/actions.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "g('message', message);",
      "CodeQwen2.5-7B": "g('addPendingMessage', message);",
      "copilot": "g('!!!addPendingMessage', message);",
      "CodeQwen1.5-7B": " g('addPendingMessage', message);\r"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { sleep } from '@/utils/index'\nimport { calLabelLayout } from '../ChainChart/utils/index'\n// import { NodeBgLinearGradientMap, NodeBarLinearGradient } from './common'\nimport * as d3hierarchy from 'd3-hierarchy'\n\nconst NodeTextBgLinearGradient = new zrender.LinearGradient(\n  0,\n  0,\n  0,\n  1,\n  [\n    { offset: 0, color: 'rgba(51,45,3,0.90)' },\n    { offset: 1, color: 'rgba(149,140,81,0.00)' },\n  ]\n)\n\nconst width = 428\nconst height = 538\n\nexport class NTContain {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n\n    this.rootData = {\n      name: '白色家电',\n      image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    }\n    this.data = [\n      {\n        name: '滚筒洗衣机便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n        value: 100,\n      },\n      {\n        name: '便携式吸尘器便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n        value: 50,\n      },\n      {\n        name: '便携式吸尘器便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n        value: 40,\n      },\n      {\n        name: '便携式吸尘器便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n        value: 30,\n      },\n    ]\n    this.treemapRootNode = this.calLayout()\n\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2],\n      silent: true,\n    })\n    this.zr.add(this.rootGroup)\n\n    this.render()\n\n  }\n\n  calLayout() {\n    const root = d3hierarchy.hierarchy({\n      ...this.rootData,\n      children: this.data\n    })\n      .sum(d => d.value)\n      .sort((a, b) => b.value - a.value)\n    const treemap = d3hierarchy.treemap()\n      .size([width, height])\n      .paddingInner(2)\n      \n    treemap(root)\n    return root\n  }\n\n  async render() {\n    this.showRootLabel()\n    const rootNodeGroup = await this.showRootNode()\n    await sleep(1000)\n    await this.blurNodeGroup(rootNodeGroup, 0.1)\n    for (let i = 0; i < this.treemapRootNode.children.length; i++) {\n      await this.showDescendantNode(i)\n    }\n  }\n\n  showRootBg() {",
    "infill": "this.rootGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        r: 16,\r\n      },\r\n      style: {\r\n        fill: '#FFFFFF',\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowBlur: 20,\r\n        shadowColor: 'rgba(3,25,40,0.16)'\r\n  ",
    "suffix": "    },\r\n    }))\r\n    this.rootContentGroup = new zrender.Group()\r\n    \r\n  }\r\n\r\n  showRootNode() {\r\n    const nodeData = this.rootData\r\n    let nodeGroup = new zrender.Group()\r\n    nodeGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2 - 5,\r\n        y: - height / 2 - 5,\r\n        width: width + 10,\r\n        height: height + 10,\r\n        r: 17.28,\r\n      },\r\n      style: {\r\n        fill: '#FFFFFF',\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowBlur: 20,\r\n        shadowColor: 'rgba(3,25,40,0.16)'\r\n      },\r\n    }))\r\n    // \r\n    const imageEl = new zrender.Image({\r\n      style: {\r\n        image: nodeData.image,\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n      },\r\n    })\r\n    const nodeMask = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        r: 16,\r\n      },\r\n    })\r\n    imageEl.setClipPath(nodeMask)\r\n    nodeGroup.add(imageEl)\r\n    // \r\n    nodeGroup.traverse(child => {\r\n      child.attr({\r\n        style: {\r\n          opacity: 0.1\r\n        }\r\n      })\r\n    })\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      nodeGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 1000,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  blurNodeGroup(nodeGroup, toOpacity = 0.1) {\r\n    return new Promise((resolve) => {\r\n      nodeGroup.childAt(1).animateTo({\r\n        style: {\r\n          opacity: toOpacity\r\n        }\r\n      }, {\r\n        duration: 500,\r\n        easing: 'cubicOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  showRootLabel() {\r\n    const nodeData = this.rootData\r\n    const { fontSize } = calLabelLayout({\r\n      width: width - 24,\r\n      text: nodeData.name,\r\n      maxFontSize: 48,\r\n      minFontSize: 12,\r\n      isBold: true\r\n    })\r\n    const labelEl = new zrender.Text({\r\n      style: {\r\n        text: nodeData.name,\r\n        textLineHeight: fontSize,\r\n        fontSize: fontSize,\r\n        fontFamily: 'MicrosoftYaHei',\r\n        fontWeight: 'bold',\r\n        fill: ' #000000',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        x: 0,\r\n        y: height / 2 + 24 + 5 + 24,\r\n        textShadowOffsetX: 0,\r\n        textShadowOffsetY: 4,\r\n        textShadowBlur: 8,\r\n        textShadowColor: 'rgba(0,0,0,0.20)'\r\n      },\r\n    })\r\n    labelEl.attr({\r\n      style: {\r\n        opacity: 0.1\r\n      }\r\n    })\r\n    this.rootGroup.add(labelEl)\r\n    labelEl.animateTo({\r\n      style: {\r\n        opacity: 1\r\n      }\r\n    }, {\r\n      duration: 1000,\r\n      easing: 'cubicOut',\r\n    })\r\n  }\r\n\r\n  showDescendantNode(index) {\r\n    const node = this.treemapRootNode.children[index]\r\n    let nodeGroup = new zrender.Group()\r\n    // \r\n    const imageEl = new zrender.Image({\r\n      style: {\r\n        image: node.data.image,\r\n        x: - width / 2 + node.x0,\r\n        y: - height / 2 + node.y0,\r\n        width: node.x1 - node.x0,\r\n        height: node.y1 - node.y0,\r\n      },\r\n    })\r\n    const nodeMask = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        r: 16,\r\n      },\r\n    })\r\n    // imageEl.setClipPath(nodeMask)\r\n    nodeGroup.add(imageEl)\r\n    // \r\n    const textBg = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2 + node.x0,\r\n        y: - height / 2 + node.y0,\r\n        width: node.x1 - node.x0,\r\n        height: 52,\r\n      },\r\n      style: {\r\n        fill: NodeTextBgLinearGradient,\r\n      },\r\n    })\r\n    nodeGroup.add(textBg)\r\n    // \r\n    const { fontSize } = calLabelLayout({\r\n      width: node.x1 - node.x0 - 40,\r\n      text: node.data.name,\r\n      maxFontSize: 20,\r\n      minFontSize: 14,\r\n      isBold: true\r\n    })\r\n    nodeGroup.add(new zrender.Text({\r\n      style: {\r\n        text: node.data.name,\r\n        textLineHeight: fontSize,\r\n        fontSize: fontSize,\r\n        fontFamily: 'MicrosoftYaHei',\r\n        fontWeight: 'bold',\r\n        fill: '#FFFFFF',\r\n        verticalAlign: 'middle',\r\n        x: - width / 2 + node.x0 + 20,\r\n        y: - height / 2 + node.y0 + 24,\r\n        width: node.x1 - node.x0 - 40,\r\n        overflow: 'truncate',\r\n      },\r\n    }))\r\n    nodeGroup.setClipPath(nodeMask)\r\n    // \r\n    nodeGroup.traverse(child => {\r\n      child.attr({\r\n        style: {\r\n          opacity: 0.1\r\n        }\r\n      })\r\n    })\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      nodeGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 1000,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.zr.dispose()\r\n  }\r\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTContain.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "this.rootGroup.add(new zrender.Rect({\n      shape: {\n        x: - width / 2,\n        y: - height / 2,\n        width: width,\n        height: height,\n      },\n      style: {",
      "CodeQwen2.5-7B": "",
      "copilot": "this.rootGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        r: 16,\r\n      },\r\n      style: {\r\n        fill: '#FFFFFF',\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowBlur: 20,\r\n        shadowColor: 'rgba(3,25,40,0.16)'\r\n  ",
      "CodeQwen1.5-7B": " \r"
    }
  },
  {
    "prefix": "window.registerPlatformAndAction = ({ platformConfig }) => {\n  console.log(platformConfig);\n  //依次执行otherplatform的verify，都不满足适用defalut的\n  const { defaultPlatform, otherPlatform } = platformConfig;\n  let usingPlatform = defaultPlatform;\n  for (let i = 0; i < otherPlatform.length; i++) {\n    let currentPlatform = otherPlatform[i];\n    const { verify } = currentPlatform;\n    if (verify && verify()) {\n      usingPlatform = currentPlatform;\n      break;\n    }\n  }\n  //获取到当前平台,提取配置\n  const { key, statPrefix, cssKey, action } = usingPlatform;\n  //把当前platform的key注入到window的_platform_config,\n  window._platform_config = {\n    platform: key,\n    statId: statPrefix,\n  };\n  //同时把当前平台的cssKey注入到body的class里面\n  document.body.classList.add(cssKey);\n  window._action_config = {\n    ...action,\n  };\n};\nwindow.supportPlatform = {\n  ainvest: 'ainvest',",
    "infill": "pc: 'pc',\r\n  web: 'web',",
    "suffix": "\r\n};\r\n// 需求分析   2. 跳转无法走通用逻辑，需要自定义逻辑（包括在部分端侧不需要跳转）\r\nwindow.registerPlatformAndAction({\r\n  platformConfig: {\r\n    defaultPlatform: {\r\n      key: 'ainvest',\r\n      cssKey: 'f10-in-pc',\r\n      statPrefix: 'lhsa',\r\n      action: {\r\n        jump: config => {\r\n          const { url, handler } = config;\r\n          //handler 用于同端侧的跳转也无法统一，逻辑较多的情况\r\n          if (handler) {\r\n            handler({\r\n              ...config,\r\n              handler: null,\r\n            });\r\n            return;\r\n          }\r\n          //这里调用原生的跳转方法\r\n          //\r\n        },\r\n      },\r\n    },\r\n    otherPlatform: [\r\n      {\r\n        des: 'pc',\r\n        uniqueKey: 'f10-in-pc',\r\n        verify: () => !!window._pc_jsBridge_,\r\n        statPrefix: 'lhsa_pc',\r\n        action: {\r\n          jump: config => {\r\n            //pc下跳转适用pc提供的pai\r\n          },\r\n        },\r\n      },\r\n      {\r\n        des: 'web',\r\n        uniqueKey: 'f10-in-web',\r\n        verify: () => !!window._web_jsBridge_,\r\n        statPrefix: 'lhsa_web',\r\n        action: {\r\n          jump: config => {\r\n            //web下跳转都走网页的默认新页面跳转\r\n            if (!enable) {\r\n              return;\r\n            }\r\n            const { url } = config;\r\n            window.open(url);\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/1.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ": 'pc',\n  web: 'web',",
      "CodeQwen2.5-7B": "",
      "copilot": "pc: 'pc',\r\n  web: 'web',",
      "CodeQwen1.5-7B": " \r"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    canvasBorderColor: '#cbcbe1',\n    dataChangeBackground: \"#84D0FE\",\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\",\n    scrollView: {\n        backgroundColor: \"#ffffff\",\n        buttonColor: \"#b2b2c5\",\n        buttonHoverColor: \"#757699\",\n    }\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    canvasBorderColor: '#181c21',\n    dataChangeBackground: \"#0E3678\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n// 经典风格\nconst blackThemeConfig = {\n    canvasBorderColor: '#4D0000',\n    dataChangeBackground: \"#1F1F1F\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst NeedBlinkFields = ['涨幅', '涨速']\nconst MainField = '代码'\nconst HightlightValue = 1\nconst AttenuationValue = 0.2\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined;\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        this.needBlinkConfig = {}\n        this.originalRangeData = null\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}\n    }\n    updateConfig(config) {\n        let themeType = config && config.theme || this.defaultTheme\n        config = {...config, ...TableTheme[themeType]}\n        this.config = {...defaultConfig, ...config}\n    }\n    getScrollView() {\n        return this.scrollView\n    }\n    isPlanToRedraw() {\n        if (!this.requestAnimationFrame) {\n            return false\n        }\n        return (this.drawconf !== undefined && this.drawconf.fulldraw)\n    }\n    setR(r) {\n        if (this.r === r) return\n        this.r = r\n        this.needToCalc = true\n        this.needToCalcFont = true \n    }\n    askForReDraw(config) {\n        if(config === undefined) {\n            this.drawconf = {fulldraw: true}\n            this.originalRangeData = null\n        } else {\n            if (this.drawconf !== undefined && this.drawconf.drawOnly) {\n                this.drawconf.drawOnly = Array.from(new Set([...this.drawconf.drawOnly, ...config.drawOnly]))\n                // console.log(this.drawconf.drawOnly)\n            } else {\n                this.drawco",
    "infill": "Width)",
    "suffix": "\n                maxPos = this.canvasHeight + this.cellHeight + 5 * this.r\n                i = Math.floor(this.scrollView.getPosY() / (height))\n                pos = (-this.scrollView.getPosY() + (i + 1) * height)\n                //pos += 14 * this.r\n                pos = pos - 5 * this.r\n                while (pos < maxPos) {\n                    let indexId = index.list[i]\n                    \n                    if (i < index.list.length) {\n                        this.drawRowItem(this.context, indexId, i, pos, posX, height,\n                                         offsetLeft, colStart, colEnd, this.drawconf)\n                    } else {\n                        break\n                    }\n\n                    pos += height\n                    i++\n                }\n\n                break\n            default:\n                break\n        }\n        // 如果头部的位置信息没有变更，可以不进行再次绘制\n        // 第一条顶部变更时进行了重绘，但是header部分没有绘制，导致header部分被覆盖\n        //if (this.drawconf !== undefined && !this.drawconf.fulldraw) return\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            // Headder\n            // pos = 14 * this.r\n            this.context.font = this.config.headerFontStyle + \" \" +\n                (this.config.headerFontSize * this.r) + \"px \" + this.config.headerFont\n            this.context.fillStyle = this.config.headerFontColor\n            this.context.clearRect(0, 0, this.fixedColumnWidth, headderHeight)\n            for (let col = colStart; col < colEnd; col++) {\n                let needClip\n                const colItem = this.column[col]\n                const colWidth = this.column[col].width * this.r - offsetLeft * 2\n                const data = this.column[col].header\n                if (colWidth > data.length * this.maxFontWidth) {\n                    needClip = false\n                } else if (colWidth < data.length * this.minFontWidth) {\n                    needClip = true\n                } else {\n                    needClip = colWidth < this.context.measureText(data).width\n                }\n\n                let x\n                switch (colItem.align) {\n                    case Align.left:\n                    default:\n                        x = colItem.leftPos + offsetLeft\n                        if (this.context.textAlign !== \"left\") {\n                            this.context.textAlign = \"left\"\n                        }\n                        break\n                    case Align.right:\n                        x = colItem.rightPos - offsetLeft\n                        if (this.context.textAlign !== \"right\") {\n                            this.context.textAlign = \"right\"\n                        }\n                        break\n                    case Align.center:\n                        x = colItem.leftPos + colItem.width * this.r * 0.5 - offsetLeft\n                        if (this.context.textAlign !== \"center\") {\n                            this.context.textAlign = \"center\"\n                        }\n                        break\n                }\n                const sortHandler = () => {\n                    let sort = undefined\n                    if (this.config.headerDrawSortArrow) {\n                        if (this.sortCol) {\n                            let sortIndex\n                            for (sortIndex = 0; sortIndex < this.sortCol.length; sortIndex++) {\n                                if (this.sortCol[sortIndex].col === this.column[col].orginalCol) {\n                                    sort = this.sortCol[sortIndex].sort\n                                    break\n                                }\n                            }\n                        }\n                        if (sort) {\n                            this.context.fillStyle = this.config.headerDrawSortArrowColor\n                            let startX\n                            if (colItem.align === 1 || colItem.align === 2) {\n                                startX = -posX + this.column[col].rightPos\n                            } else {\n                                let textWidth = this.context.measureText(data).width\n                                // console.log(textWidth, data)\n                                startX = -posX + colItem.leftPos + offsetLeft + textWidth + 15\n                            }\n                            if (sort === Sort.ascending) {\n                                this.context.beginPath()\n                                this.context.moveTo(startX - 12 * this.r, 10 * this.r)\n                                this.context.lineTo(startX - 4 * this.r, 10 * this.r)\n                                this.context.lineTo(startX - 8 * this.r, 18 * this.r)\n                                this.context.fill()\n                            } else {\n                                this.context.beginPath()\n                                this.context.moveTo(startX - 8 * this.r, 10 * this.r)\n                                this.context.lineTo(startX - 12 * this.r, 18 * this.r)\n                                this.context.lineTo(startX - 4 * this.r, 18 * this.r)\n                                this.context.fill()\n                            }\n                        }\n                    }\n                    return sort\n                }\n                this.context.fillStyle = this.config.headerBackgroundColor\n                if (needClip) {\n                    this.context.fillRect(-posX + colItem.leftPos, 0,\n                        colItem.width * this.r, headderHeight)\n                    this.context.save()\n                    this.context.beginPath()\n                    this.context.rect(-posX + colItem.leftPos + offsetLeft, 0,\n                        colItem.width * this.r - offsetLeft * 2, height)\n                    this.context.clip()\n                    let sort = sortHandler()\n                    let sortOffset = 0\n                    if (sort) sortOffset = 10\n                    let headerX = -posX + x\n                    if (colItem.align === 1 || colItem.align === 2) {\n                        headerX = headerX - sortOffset\n                    }\n                    this.context.fillStyle = this.config.headerFontColor\n                    this.context.fillText(data, headerX, 18)\n                    this.context.restore()\n                } else {\n                    this.context.fillRect(-posX + colItem.leftPos, 0,\n                        colItem.width * this.r, headderHeight)\n                    let sort = sortHandler()\n                    let sortOffset = 0\n                    if (sort) sortOffset = 10\n                    let headerX = -posX + x\n                    if (colItem.align === 1 || colItem.align === 2) {\n                        headerX = headerX - sortOffset\n                    }\n                    this.context.fillStyle = this.config.headerFontColor\n                    this.context.fillText(data, headerX, 18)\n                }\n            }\n        }\n    }\n    drawCanvas() {\n        if (!this.scrollView || !this.context || !this.dataIndex) {\n            return\n        }\n        if (this.needToCalc) {\n            this.calcColum()\n        }\n        this.context.font = this.config.fontStyle + ' ' + this.config.fontSize * this.r + 'px ' + this.config.font\n        const posX = this.scrollView.getPosX()\n\n        if (this.needToCalcFont) {\n            this.minFontWidth = this.context.measureText(\"i\").width\n            this.maxFontWidth = this.context.measureText(\"Æ\").width\n        }\n\n        // if (this.drawconf !== undefined && this.drawconf.fulldraw) {\n        //     this.drawconf = undefined\n        // }\n        // const drawConf = this.drawconf\n        // this.drawconf = undefined\n        this.requestAnimationFrame = undefined\n\n        if (this.scrollView.beforeDraw()) {\n            this.askForReDraw()\n        }\n\n        const headderHeight = this.headerHeight * this.r\n        const offsetLeft = 5 * this.r\n        if (this.drawconf !== undefined && this.drawconf.fulldraw) {\n            this.context.clearRect(0, 0, this.can",
    "relevantFile": "<file_path>src/components/canvasTable/CanvasTable.js\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    updateThemeStyle() {\n        this.canvas.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.canvas.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => JSON.parse(JSON.stringify(this.data[indexId])))\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();\n        this.TouchStart(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchMove = (e) => {\n        e.preventDefault();\n        this.TouchMove(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "nf = {fulldraw: true, drawOnly: config.drawOnly}\n                this.originalRangeData = null\n            }\n        }\n        this.requestAnimationFrame = requestAnimationFrame(this.drawCanvas.bind(this))\n    }",
      "CodeQwen2.5-7B": "nf = config",
      "copilot": "Width)",
      "CodeQwen1.5-7B": " nf = {...config}"
    }
  },
  {
    "prefix": "const yapi = require('../yapi.js');\nconst baseModel = require('./base.js');\nconst mongoose = require('mongoose');\n\nclass interfaceModel extends baseModel {\n  constructor() {\n    super()\n    let col = mongoose.connection.db.collection('interface');\n    col.createIndex(\n      {\n        service_program_id: 1\n      }\n    );\n    col.createIndex(\n      {\n        catid: 1\n      }\n    );\n  }\n\n  getName() {\n    return 'interface';\n  }\n\n  getSchema() {\n    return {\n      title: { type: String, required: true },\n      uid: { type: Number, required: true },\n      path: { type: String, required: true },\n      method: { type: String, required: true },\n      // http/https/rpc/tcp/udp\n      protocol: { type: String, required: true, default: 'http' },\n      isArsenal: { type: Boolean, default: false },\n      serviceId: { type: Number, default: 0 },\n      serviceName: { type: String, default: '' },\n      select_business: { type: String, default: '' },\n      select_businessname: { type: String, default: '' },\n      applicationid: { type: String, default: '' },\n      applicationname: { type: String, default: '' },\n      nocover: { type: Number, default: 0 },\n      arsenalUrl: { type: String, default: '' },\n      project_id: { type: Number },\n      catid: { type: Number, required: true },\n      edit_uid: { type: Number, default: 0 },\n      status: { type: String, enum: ['undone', 'done', 'testing', 'pre_production', 'abandon'], default: 'undone' },\n      desc: String,\n      markdown: String,\n      add_time: Number,\n      up_time: Number,\n      type: { type: String, enum: ['static', 'var'], default: 'static' },\n      query_path: {\n        path: String,\n        params: [\n          {\n            name: String,\n            value: String\n          }\n        ]\n      },\n      req_query: [\n        {\n          name: String,\n          value: String,\n          example: String,\n          desc: String,\n          query_type: String,\n          is_constant: {\n            type: String,\n            enum: ['1', '0'],\n            default: '0'\n          },\n          required: {\n            type: String,\n            enum: ['1', '0'],\n            default: '1'\n          }\n        }\n      ],\n      req_headers: [\n        {\n          name: String,\n          value: String,\n          example: String,\n          desc: String,\n          required: {\n            type: String,\n            enum: ['1', '0'],\n            default: '1'\n          }\n        }\n      ],\n      req_params: [\n        {\n          name: String,\n          desc: String,\n          example: String\n        }\n      ],\n      req_body_type: {\n        type: String,\n        enum: ['form', 'json', 'text', 'file', 'raw']\n      },\n      req_body_is_json_schema: { type: Boolean, default: false },\n      req_body_form: [\n        {\n          name: String,\n          type: { type: String, enum: ['text', 'file'] },\n          example: String,\n          value: String,\n          desc: String,\n          required: {\n            type: String,\n            enum: ['1', '0'],\n            default: '1'\n          }\n        }\n      ],\n      req_body_other: String,\n      res_body_type: {\n        type: String,\n        enum: ['json', 'text', 'xml', 'raw', 'json-schema']\n      },\n      res_body: String,\n      res_body_is_json_schema: { type: Boolean, default: false },\n      custom_field_value: String,\n      field2: String,\n      field3: String,\n      api_opened: { type: Boolean, default: false },\n      index: { type: Number, default: 0 },\n      tag: Array,\n      service_program_id: Number,\n      end_version: String,\n      // 操作类型\n      operate_type: { type: String, enum: [ 'command', 'query', 'event' ], default: 'query' },\n      // 协作模式\n      cooperate_mode: { type: String, enum: [ 'request-response', 'fire-and-forget', 'publish-subscribe' ], default: 'request-response' },\n      code_list: [ {\n        code: String,\n        value: String,\n        desc: String\n      }],\n      domain_path: [{\n        env: String,\n        domain: String,\n        path: String\n      }],\n      // 除http协议外的基本信息存储，例如下面的json对象转换的string\n      // {\n      //   protocol: 'rpc',\n      //   base_info: {\n      //     call_name: 'API调用名称', // 一般是jar包名\n      //     method_name: \"方法名\",\n      //     version_num: \"版本号\",\n      //     service_group: \"服务分组\"\n      //   }\n      // }\n      other_protocol_content: String\n    };\n  }\n\n  save (data) {\n    if (!data.tag || (Array.isArray(data.tag) && !data.tag.length)) {\n      // http协议的get，rpc/tcp/udp协议的接口默认打上巡检标签\n      const XJ_TAG = ['接口测试-支持巡检'];\n      const HTTP_GET = ['http', 'https' ].includes(data.protocol) && data.method === 'GET';\n      if (HTTP_GET || ['rpc', 'tcp', 'udp'].includes(data.protocol)) {\n        data.tag = XJ_TAG;\n      }\n      const ZDH_TAG = ['接口测试-支持自动化'];\n      const ZDH_PRO",
    "infill": "TOCOL = ['http', 'https', 'rpc', 'tcp', 'udp'].includes(data.protocol);",
    "suffix": "\r\n    }\r\n    let m = new this.model(data);\r\n    return m.save();\r\n  }\r\n\r\n  get(id) {\r\n    return this.model\r\n      .findOne({\r\n        _id: id\r\n      })\r\n      .exec();\r\n  }\r\n  \r\n  getByIds(ids) {\r\n    return this.model\r\n      .find({\r\n        _id: { $in: ids }\r\n      })\r\n      .exec();\r\n  }\r\n\r\n  getBaseinfo(id) {\r\n    return this.model\r\n      .findOne({\r\n        _id: id\r\n      })\r\n      .select('path method uid title project_id cat_id  status protocol isArsenal serviceId serviceName arsenalUrl select_business select_businessname applicationid applicationname nocover')\r\n      .exec();\r\n  }\r\n\r\n  getVar(project_id, method) {\r\n    return this.model\r\n      .find({\r\n        project_id: project_id,\r\n        type: 'var',\r\n        method: method\r\n      })\r\n      .select('_id path')\r\n      .exec();\r\n  }\r\n\r\n  getVarServiceProgramId(service_program_id, method) {\r\n    return this.model\r\n      .find({\r\n        service_program_id,\r\n        type: 'var',\r\n        method: method\r\n      })\r\n      .select('_id path')\r\n      .exec();\r\n  }\r\n\r\n  getVarServiceProgramIds(service_program_ids, method) {\r\n    return this.model\r\n      .find({\r\n        service_program_id: { $in: service_program_ids },\r\n        type: 'var',\r\n        method: method\r\n      })\r\n      .select('_id path')\r\n      .exec();\r\n  }\r\n  getByQueryPath(project_id, path, method) {\r\n    return this.model\r\n      .find({\r\n        project_id: project_id,\r\n        'query_path.path': path,\r\n        method: method\r\n      })\r\n      .exec();\r\n  }\r\n\r\n  getByQueryPathServiceProgramId(service_program_id, path, method) {\r\n    return this.model\r\n      .find({\r\n        service_program_id,\r\n        'query_path.path': path,\r\n        method: method\r\n      })\r\n      .exec();\r\n  }\r\n\r\n  getByQueryPathServiceProgramIds(service_program_ids, path, method) {\r\n    return this.model\r\n      .find({\r\n        service_program_id: { $in: service_program_ids },\r\n        'query_path.path': path,\r\n        method: method\r\n      })\r\n      .exec();\r\n  }\r\n  getByPath(project_id, path, method, select, protocol) {\r\n    let obj={\r\n      project_id: project_id,\r\n      path: path,\r\n      method: method\r\n    };\r\n    select =\r\n      select ||\r\n      '_id title uid path method protocol isArsenal serviceId serviceName project_id catid edit_uid status add_time up_time type query_path req_query req_headers req_params req_body_type req_body_form req_body_other res_body_type custom_field_value res_body res_body_is_json_schema req_body_is_json_schema select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content';\r\n    return this.model\r\n      .find(obj)\r\n      .select(select)\r\n      .exec();\r\n  }\r\n\r\n  getByPathServiceProgramId(service_program_id, path, method, select) {\r\n    let obj={\r\n      service_program_id,\r\n      path: path,\r\n      method: method\r\n    };\r\n    select =\r\n      select ||\r\n      '_id title uid path method protocol isArsenal serviceId serviceName project_id catid edit_uid status add_time up_time type query_path req_query req_headers req_params req_body_type req_body_form req_body_other res_body_type custom_field_value res_body res_body_is_json_schema req_body_is_json_schema select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content';\r\n    return this.model\r\n      .find(obj)\r\n      .select(select)\r\n      .exec();\r\n  }\r\n\r\n  getByPathServiceProgramIds(service_program_ids, path, method, select) {\r\n    let obj={\r\n      service_program_id: {$in: service_program_ids},\r\n      path: path,\r\n      method: method\r\n    };\r\n    select =\r\n      select ||\r\n      '_id title uid path method protocol isArsenal serviceId serviceName project_id catid edit_uid status add_time up_time type query_path req_query req_headers req_params req_body_type req_body_form req_body_other res_body_type custom_field_value res_body res_body_is_json_schema req_body_is_json_schema select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content';\r\n    return this.model\r\n      .find(obj)\r\n      .select(select)\r\n      .exec();\r\n  }\r\n\r\n  checkRepeat(id, path, method) {\r\n    return this.model.countDocuments({\r\n      project_id: id,\r\n      path: path,\r\n      method: method\r\n    });\r\n  }\r\n\r\n  findByServiceIdPath(id, path, method) {\r\n    return this.model.findOne({\r\n      service_program_id: id,\r\n      path: path,\r\n      method: method\r\n    }).exec();\r\n  }\r\n  \r\n  checkRepeatByServiceId(id, path, method) {\r\n    return this.model.countDocuments({\r\n      service_program_id: id,\r\n      path: path,\r\n      method: method\r\n    });\r\n  }\r\n\r\n  countByProjectId(id) {\r\n    return this.model.countDocuments({\r\n      project_id: id\r\n    });\r\n  }\r\n\r\n  list(project_id, select) {\r\n    select =\r\n      select || '_id title uid path method protocol isArsenal serviceId serviceName arsenalUrl project_id catid edit_uid status add_time up_time select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content';\r\n    return this.model\r\n      .find({\r\n        project_id: project_id\r\n      })\r\n      .select(select)\r\n      .sort({ title: 1 })\r\n      .exec();\r\n  }\r\n  \r\n  listUpdateTime(page, limit, option) {\r\n    page = parseInt(page);\r\n    limit = parseInt(limit);\r\n    return this.model\r\n      .find(option)\r\n      .sort({ add_time: -1 })\r\n      .skip((page - 1) * limit)\r\n      .limit(limit)\r\n      .select(\r\n        '_id title uid service_program_id path method protocol isArsenal serviceId serviceName arsenalUrl project_id catid api_opened edit_uid status add_time up_time tag select_business select_businessname applicationid applicationname nocover req_query req_body_type req_body_form req_body_other desc res_body_type res_body code_list domain_path other_protocol_content'\r\n      )\r\n      .exec();\r\n  }\r\n\r\n  listWithPage(option, page, limit) {\r\n    page = parseInt(page);\r\n    limit = parseInt(limit);\r\n    return this.model\r\n      .find(option)\r\n      .sort({ title: 1 })\r\n      .skip((page - 1) * limit)\r\n      .limit(limit)\r\n      .select(\r\n        '_id title uid path method protocol isArsenal serviceId serviceName arsenalUrl project_id catid api_opened edit_uid status add_time up_time tag select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content'\r\n      )\r\n      .exec();\r\n  }\r\n\r\n  listByPid(project_id) {\r\n    return this.model\r\n      .find({\r\n        project_id: project_id\r\n      })\r\n      .sort({ title: 1 })\r\n      .exec();\r\n  }\r\n  \r\n  listByPidSelect(option, select = '_id title uid project_id method res_body_type res_body add_time status') {\r\n    return this.model\r\n      .find(option)\r\n      .select(select)\r\n      .sort({ title: 1 })\r\n      .exec();\r\n  }\r\n\r\n  //获取全部接口信息\r\n  getInterfaceListCount() {\r\n    return this.model.countDocuments({});\r\n  }\r\n\r\n  listByCatid(catid, select) {\r\n    select =\r\n      select || '_id title uid path method protocol isArsenal serviceId serviceName arsenalUrl project_id service_program_id catid edit_uid status add_time up_time index tag select_business select_businessname applicationid applicationname nocover res_body_type res_body domain_path other_protocol_content';\r\n    return this.model\r\n      .find({\r\n        catid: catid\r\n      })\r\n      .select(select)\r\n      .sort({ index: 1 })\r\n      .exec();\r\n  }\r\n  listByIdsAll(_ids, select) {\r\n    select =\r\n      select || '_id title uid path method protocol isArsenal serviceId serviceName arsenalUrl project_id service_program_id catid edit_uid status add_time up_time index tag select_business select_businessname applicationid applicationname nocover res_body_type res_body domain_path other_protocol_content';\r\n    return this.mo",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "vendor/server/models/interface.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "TOCOLS = ['rpc', 'tcp', 'udp'];\n      if (ZDH_PROTOCOLS.includes(data.protocol)) {\n        data.tag = ZDH_TAG;\n      }",
      "CodeQwen2.5-7B": "TO = ['http', 'https' ].includes(data.protocol);\r",
      "copilot": "TOCOL = ['http', 'https', 'rpc', 'tcp', 'udp'].includes(data.protocol);",
      "CodeQwen1.5-7B": " TOCOL = ['rpc', 'tcp', 'udp'].includes(data.protocol);\r"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport EE from '../../utils/eventEmitter'\nimport {\n  NodeTool12ItemCircleLinearGradient,\n  NodeTool3ArcCircleLinearGradientMap,\n  NodeTool3ItemCircleLinearGradientMap,\n  NodeTool3ItemLabelColorMap,\n  NodeTool3ItemSectorLinearGradientMap,\n  NodeTool3ItemSectorLinearGradientMap_Emphasis,\n  NodeTool3ItemIconPathMap,\n  NodeTool3ItemIconColorMap,\n  NodeZ,\n  HighlightZ,\n  StateTransitionCfg\n} from '../../utils/config'\nimport { calNode12LabelLayout, calNodePosition, isEInNodeGroup } from '../../utils/index'\nimport { thousandSplit } from '@/utils'\nimport node1bgblur from '@/assets/images/chainchart/node1bgblur.png'\nimport draggable from 'vuedraggable'\n\nconst toolInfoDimensions = [\n  {\n    angle: -90,\n    key: 'area',\n    label: '地域分布',\n    labelAlign: 'center',\n    labelVerticalAlign: 'bottom',\n    valueDirection: 'up',\n  },\n  {\n    angle: -30,\n    key: 'value', \n    label: '公司总市值(亿元)',\n    labelAlign: 'left',\n    labelVerticalAlign: 'middle',\n    valueDirection: 'up',\n  },\n  {\n    angle: 30,\n    key: 'revenue', \n    label: '产品总营收(百万元)',\n    labelAlign: 'left',\n    labelVerticalAlign: 'middle',\n    valueDirection: 'bottom',\n  },\n  {\n    angle: 90,\n    key: 'index', \n    label: '相关指标',\n    labelAlign: 'center',\n    labelVerticalAlign: 'top',\n    valueDirection: 'bottom',\n  },\n  {\n    angle: 150,\n    key: 'news', \n    label: '新闻指数',\n    labelAlign: 'right',\n    labelVerticalAlign: 'middle',\n    valueDirection: 'bottom',\n  },\n  {\n    angle: 210,\n    key: 'report', \n    label: '研报观点(条)',\n    labelAlign: 'right',\n    labelVerticalAlign: 'middle',\n    valueDirection: 'up',\n  },\n]\n\nclass Node12Common extends EE {\n  constructor ({ cc, parentGroup, data }) {\n    super()\n\n    this.cc = cc\n    this.parentGroup = parentGroup\n    this.data = data\n    this.draggable = data.level === 2\n    // \n    this.group = new zrender.Group({\n      draggable: this.draggable\n    })\n    //\n    this.nodeGroup = new zrender.Group({\n    })\n    this.group.add(this.nodeGroup)\n\n    this.toolGroup = new zrender.Group()\n    this.group.add(this.toolGroup)\n\n    this.labelGroup = new zrender.Group()\n    this.group.add(this.labelGroup)\n\n    this.parentGroup.add(this.group)\n\n    this.isMouseIn = false\n    this.isSelect = false\n\n    this.toolLevel = -1\n    this.toolIsShow = false\n    this.toolInfos = null\n    this.activeToolItemKey = null\n\n    this.textElsMemory = null\n  }\n  init() {\n    this.renderNode()\n    this.renderLabel()\n    this.ensureElZ()\n    this.bindEvents()\n    // 入场动画\n    this.group.attr({\n      position: calNodePosition(this.data.position, this.cc.store.transformState.scale),\n      scale: [0, 0],\n    })\n    return new Promise((resolve) => {\n      this.group.animateTo({\n        scale: [1, 1],\n      }, {\n        duration: 500,\n        easing: 'quadraticIn',\n        done: () => {\n          resolve()\n        }\n      })\n    })\n  }\n  renderLabel() {\n    const data = this.data\n    const { fontSize, textMaxWidth } = calNode12LabelLayout({\n      radius: data.radius,\n      scale: this.cc.store.transformState.scale,\n      text: data.data.name,\n    })\n    if (JSON.stringify(this.textElsMemory) !== JSON.stringify({ fontSize, textMaxWidth })) {\n      this.labelGroup.removeAll()\n      const textEl = new zrender.Text({\n        name: 'node-label',\n        style: {\n          text: data.data.name,\n          fontSize: fontSize,\n          fontFamily: 'MicrosoftYaHei',\n          fill: '#FFFFFF',\n          align: 'center',\n          verticalAlign: 'middle',\n          width: textMaxWidth + 6,\n          height: fontSize,\n          overflow: 'truncate',\n        },\n        quicktitle: data.data.name,\n      })\n      this.labelGroup.add(textEl)\n      this.textElsMemory = { fontSize, textMaxWidth }\n    }\n  }\n  calToolLevel() {\n    const data = this.data\n    const radius = Math.ceil(data.radius * this.cc.store.transformState.scale)\n    if (radius < 30) {\n      return 0\n    } else if (radius >= 30 && radius < 50) {\n      return 1\n    } else if (radius >= 50 && radius < 115) {\n      return 2\n    } else if (radius >= 115) {\n      return 3\n    }\n  }\n  caltoolInfos() {\n    const data = this.data.data\n    if (!this.toolInfos) {\n      // 地域分布\n      let areaDis = ''\n      if (data.detail?.regional?.length) {\n        data.detail.regional.sort((a, b) => b.count - a.count)\n        areaDis = `${data.detail.regional[0].provinceName}${data.detail.regional.length > 1 ? `等${data.detail.regional.length}地` : ''}`\n      }\n      // 相关指标\n      let indexLabelDis = data.detail?.indexInfo?.length ? `${data.detail.indexInfo[0].info.indexName}(${data.detail.indexInfo[0].info.indexUnit})` : '- -'\n      indexLabelDis = indexLabelDis.length > 8 ? `${indexLabelDis.slice(0, 8)}...` : indexLabelDis\n      this.toolInfos = {\n        area: areaDis || '- -',\n        revenue: thousandSplit(data.detail?.productRevenue, 2) || '- -',\n        value: thousandSplit(data.detail?.inCome, 2) || '- -',\n        indexLabel: indexLabelDis || '- -',\n        index: data.detail?.indexInfo?.length ? data.detail.indexInfo[0].info.curValue : '- -',\n        news: data.detail?.newsInfo?.keywordNewsIndexDto?.latestNewsIndex || '- -',\n        report: data.detail?.reportsInfo?.total || '- -',\n      }\n    }\n  }\n  renderTool(noAnimation) {\n    this[`renderTool_${this.toolLevel}`]()\n    if (this.activeToolItemKey) {\n      this.selectToolItem(this.activeToolItemKey)\n    }\n    if (!noAnimation) {\n      this.toolGroup.traverse(child => {\n        let fromStyle = {\n          opacity: 0\n        }\n        let toStyle = {\n          opacity: 1\n        }\n        if (child.customStyleAnimate) {\n          Object.entries(child.customStyleAnimate).forEach(styleAnimateEntry => {\n            fromStyle[styleAnimateEntry[0]] = styleAnimateEntry[1].from\n            toStyle[styleAnimateEntry[0]] = styleAnimateEntry[1].to\n          })\n        }\n        ",
    "infill": " = [e.target.x, e.target.y]",
    "suffix": "\r\n  }\r\n  emphasis() {\r\n    this.isMouseIn = true\r\n    this.emphasis_more()\r\n    // this.refreshTool()\r\n    // this.ensureElZ()\r\n    this.flushUpdateView()\r\n  }\r\n  unemphasis() {\r\n    this.isMouseIn = false\r\n    this.unemphasis_more()\r\n    // this.refreshTool()\r\n    // this.ensureElZ()\r\n    this.flushUpdateView()\r\n  }\r\n  select() {\r\n    this.select_more()\r\n    this.isSelect = true\r\n    // this.refreshTool()\r\n    // this.ensureElZ()\r\n    this.flushUpdateView()\r\n  }\r\n  unselect() {\r\n    this.unselect_more()\r\n    this.isSelect = false\r\n    this.activeToolItemKey = null\r\n    // this.refreshTool()\r\n    // this.ensureElZ()\r\n    this.flushUpdateView()\r\n  }\r\n  flushUpdateView() {\r\n    if (this.flushUpdateViewTimeout) {\r\n      return\r\n    }\r\n    this.flushUpdateViewTimeout = setTimeout(() => {\r\n      this.refreshTool()\r\n      this.ensureElZ()\r\n      clearTimeout(this.flushUpdateViewTimeout)\r\n      this.flushUpdateViewTimeout = null\r\n    })\r\n  }\r\n  blur() {\r\n    this.group.attr({\r\n      silent: true\r\n    })\r\n    this.group.traverse(child => {\r\n      child.animateTo({\r\n        style: {\r\n          opacity: 0.05\r\n        }\r\n      })\r\n    })\r\n  }\r\n  unblur() {\r\n    this.group.attr({\r\n      silent: false\r\n    })\r\n    this.group.traverse(child => {\r\n      child.animateTo({\r\n        style: {\r\n          opacity: 1\r\n        }\r\n      })\r\n    })\r\n  }\r\n  ensureElZ() {\r\n    const isEmphasis = this.isMouseIn || this.isSelect\r\n    const baseZ = isEmphasis ? HighlightZ + NodeZ : NodeZ\r\n    this.group.traverse(child => {\r\n      if (child.name === 'node-tool-actionMask') {\r\n        child.attr({\r\n          z: baseZ + 1\r\n        })\r\n      } else if (child.name === 'node-el-bgBlur') {\r\n        child.attr({\r\n          z: baseZ + 3\r\n        })\r\n      } else if (child.name === 'actionArea') {\r\n        child.attr({\r\n          z: baseZ + 9\r\n        })\r\n      } else if (child.name === 'node-tool-companyProduct') {\r\n        child.attr({\r\n          z: baseZ + 10\r\n        })\r\n      } else if (child.name === 'node-label') {\r\n        child.attr({\r\n          z: baseZ + 8\r\n        })\r\n      } else if (child.name.indexOf('node-el') > -1) {\r\n        child.attr({\r\n          z: baseZ + 7\r\n        })\r\n      } else if (child.name.indexOf('node-tool') > -1) {\r\n        child.attr({\r\n          z: baseZ + 5\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Node12Common",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/painter/nodes/Node2.js\n      },\n      style: {\n        fill: '#FFFFFF',\n        stroke: '#FFFFFF',\n        lineWidth: 1,\n        ...Node2BgShadowOutMap[data.rootStreamType],\n      },\n    }))\n    this.nodeGroup.add(new zrender.Image({\n      name: 'node-el-bgImage',\n      style: {\n        image: Node2BgImageMap[data.rootStreamType],\n        x: -data.radius,\n        y: -data.radius,\n        width: data.radius * 2,\n        height: data.radius * 2,\n      },\n      states: {\n        emphasis: {\n          style: {\n            image: Node2BgImageMap_Emphasis[data.rootStreamType],\n          }\n        },\n        select: {\n          style: {\n            image: Node2BgImageMap_Emphasis[data.rootStreamType],\n          }\n        },\n      },\n    }))\n  }\n  rerenderWhenScaleChange() {\n    this.group.attr({\n      position: calNodePosition(this.data.position, this.cc.store.transformState.scale)\n    })\n    this.nodeGroup.attr({\n      scale: [this.cc.store.transformState.scale, this.cc.store.transformState.scale]\n    })\n    this.renderLabel()\n    this.refreshToolScale()\n    this.ensureElZ()\n  }\n  emphasis_more() {\n    this.nodeGroup.childOfName('node-el-bgImage').useState('emphasis', true)\n    this.getRelateNodes3().forEach(item => {\n      item.emphasis({ onlySelf: true })\n    })\n  }\n  unemphasis_more() {\n    this.nodeGroup.childOfName('node-el-bgImage').removeState('emphasis')\n    this.getRelateNodes3().forEach(item => {\n      item.unemphasis({ onlySelf: true })\n    })\n  }\n  select_more() {\n    this.nodeGroup.childOfName('node-el-bgImage').useState('select', true)\n    const relateNodeEdges = this.getRelateNodeEdges()\n    relateNodeEdges.raleteNodes3.forEach(item => {\n      item.select({ onlySelf: true })\n    })",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/ChainChart/painter/nodes/Node12Common.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "child.animateTo({\n          style: toStyle\n        }, {\n          duration: 300,\n          easing: 'quadraticOut',\n          delay: child.animateDelay,\n        })\n        if (!child.customStyleAnimate) {",
      "CodeQwen2.5-7B": "child.animateTo(toStyle, {\r",
      "copilot": " = [e.target.x, e.target.y]",
      "CodeQwen1.5-7B": " child.animateTo({\r"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    canvasBorderColor: '#cbcbe1',\n    dataChangeBackground: \"#84D0FE\",\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\",\n    scrollView: {\n        backgroundColor: \"#ffffff\",\n        buttonColor: \"#b2b2c5\",\n        buttonHoverColor: \"#757699\",\n    }\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    canvasBorderColor: '#181c21',\n    dataChangeBackground: \"#0E3678\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n// 经典风格\nconst blackThemeConfig = {\n    canvasBorderColor: '#4D0000',\n    dataChangeBackground: \"#1F1F1F\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst NeedBlinkFields = ['涨幅', '涨速']\nconst MainField = '代码'\nconst HightlightValue = 1\nconst AttenuationValue = 0.1\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined;\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        this.needBlinkConfig = {}\n        this.originalRangeData = null\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}\n    }\n    updateConfig(config) {\n        let themeType = config && config.theme || this.defaultTheme\n        config = {...config, ...TableTheme[themeType]}\n        this.config = {...defaultConfig, ...config}\n    }\n    getScrollView() {\n        return this.scrollView\n    }\n    isPlanToRedraw() {\n        if (!this.requestAnimationFrame) {\n            return false\n        }\n        return (this.drawconf !== undefined && this.drawconf.fulldraw)\n    }\n    setR(r) {\n        if (this.r === r) return\n        this.r = r\n        this.needToCalc = true\n        this.needToCalcFont = true \n    }\n    askForReDraw(config) {\n        if(config === undefined) {\n            this.drawconf = {fulldraw: true}\n        } else {\n            if (this.drawconf !== undefined && this.drawconf.drawOnly) {\n                this.drawconf.drawOnly = Array.from(new Set([...this.drawconf.drawOnly, ...config.drawOnly]))\n                // console.log(this.drawconf.drawOnly)\n            } else {\n                this.drawconf = {...config, ...{fulldraw: false}}\n   ",
    "infill": "[mainFieldValue] = originalItem",
    "suffix": "\n                Object.assign(itemDataSource, itemData)\n            }\n        })\n        // 如果推送在一帧内，还没开始绘制，第二份数据又进来，需要做合并处理\n        // if(!this.rangeData) this.rangeData = {}\n        // rangeData.forEach(itemData => {\n        //     let mainFieldValue = itemData[MainField]\n        //     this.rangeData[mainFieldValue] = itemData \n        // })\n        // 传入rangeData相关的代码，进行局部绘制\n        let fields = rangeData.map(item => item[MainField])\n        this.askForReDraw({ drawOnly: fields })\n    }\n    checkNeedRedraw() {\n        let keys = Object.keys(this.needBlinkConfig)\n        if (keys === 0) return\n        let isNeed = false\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i]\n            let fields = Object.keys(this.needBlinkConfig[key])\n            if (fields.length === 0) {\n                delete this.needBlinkConfig[key]\n                continue\n            }\n            isNeed = true\n        }\n        if (isNeed) {\n            // 传入this.needBlinkConfig相关的代码，进行局部绘制\n            let fields = Object.keys(this.needBlinkConfig)\n            this.askForReDraw({ drawOnly: fields })\n        } else {\n            this.originalRangeData = null\n            console.log('已经没有需要更新的字段')\n        }\n    }\n    viewDataChange() {\n    }\n    updateThemeStyle() {\n    }\n    updateColumns(col) {\n        this.orgColum = col\n        this.column = []\n        let i\n        for (i = 0; i < col.length; i++) {\n            if (col[i].visible === false) continue\n            const index = this.column.length\n            this.column[index] = {\n                ...{\n                    align: Align.left,\n                    index,\n                    leftPos: 0,\n                    orginalCol: col[i],\n                    rightPos: 0,\n                    width: 50\n                }, ...col[i]\n            }\n            if (this.column[index].field === '__idxnum__' || this.column[index].field === '__rownum__') {\n                this.column[index].allowEdit = false\n            }\n        }\n        this.needToCalc = true\n        this.resize()\n        this.calcColum()\n    }\n    calcColum() {\n        this.needToCalc = false\n        let leftPos = 0\n        let i\n        for (i = 0; i < this.column.length; i++) {\n            this.column[i].leftPos = leftPos\n            leftPos += this.column[i].width * this.r\n            this.column[i].rightPos = leftPos\n        }\n        this.reCalcForScrollView()\n    }\n    setIsFocus(isFocus) {\n        if (this.isFocus !== isFocus) {\n            this.isFocus = isFocus\n        }\n    }\n    reCalcForScrollView() {\n        if (this.dataIndex === undefined) return\n        let w = 0\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            if (this.column) {\n                let i\n                for(i = 0; i < this.column.length; i++) {\n                    w+= this.column[i].width * this.r + 0\n                }\n            } else {\n                w = 0\n            }\n        }\n        \n        let h = 0\n        const cellHeight = this.cellHeight\n        const calc = (index) => {\n            let i\n            switch (index.type) {\n                case CanvasTableIndexType.Index:\n                    h += cellHeight * index.list.length\n                    break\n                default:\n                    break\n            }\n        }\n        calc(this.dataIndex.index)\n        if (this.scrollView && w !== undefined) {\n            this.scrollView.setSize(this.r, this.canvasWidth, this.canvasHeight, w, h * this.r)\n            this.fireReCalcForScrollView(w / this.r, h + this.headerHeight)\n        }\n    }\n    fireReCalcForScrollView(width, height) {\n        const scrollView = this.scrollView\n        if (scrollView) {\n            let i\n            for (i = 0; i < this.eventReCalcForScrollView.length; i++) {\n                try {\n                    this.eventReCalcForScrollView[i](this, width, height, scrollView);\n                } catch {\n                    this.logError(\"fireReCalcForScrollView\")\n                }\n            }\n        }\n    }\n    calcIndex() {\n        if (this.data === undefined) return\n        const index = []\n        let i\n        // customFliter过滤 暂不支持\n        for (i = 0; i < this.data.length; i++) {\n            index[index.length] = i\n        }\n\n        // customSort排序 暂不支持\n        const sortCol = this.sortCol;\n        if (sortCol && sortCol.length) {\n            index.sort((a, b) => {\n                let sortColIndex;\n                for (sortColIndex = 0; sortColIndex < sortCol.length; sortColIndex++) {\n                    let d;\n                    const col = sortCol[sortColIndex];\n                    switch (col.col.field) {\n                        case \"__rownum__\":\n                            d = a - b;\n                            if (d !== 0) { return d * col.sort; }\n                            break;\n                        default:\n                            const da = this.getUpdateDataOrData(a, col.col.field);\n                            const db = this.getUpdateDataOrData(b, col.col.field);\n                            if (da === undefined || da === null) {\n                                if (db === undefined || db === null) {\n                                    continue;\n                                }\n                                return col.sort;\n                            }\n                            if (db === undefined || db === null) {\n                                return -1 * col.sort;\n                            }\n                            if (typeof da === \"string\" && typeof db === \"string\") {\n                                if (da.indexOf('%') !== -1 && db.indexOf('%') !== -1) {\n                                    let pda = parseFloat(da)\n                                    let pdb = parseFloat(db)\n                                    d = pda - pdb;\n                                    if (d !== 0) { return d * col.sort; }\n                                    continue;\n                                }\n                                if (da === \"\") {\n                                    if (db === \"\") {\n                                        continue;\n                                    }\n                                    return col.sort;\n                                }\n\n                                if (db === \"\") {\n                                    return -1 * col.sort;\n                                }\n                                d = da.localeCompare(db);\n                                if (d !== 0) { return d * col.sort; }\n                                continue;\n                            }\n                            if (da > db) {\n                                return col.sort;\n                            }\n                            if (da < db) {\n                                return -1 * col.sort;\n                            }\n                    }\n                }\n                return 0;\n            });\n        }\n        this.dataIndex = {\n            index: { type: CanvasTableIndexType.Index, list: index},\n            mode: CanvasTableMode.ColMode\n        }\n        this.reCalcForScrollView()\n    }\n    getUpdateDataOrData(row, field) {\n        const rowData = this.editData[row]\n        if (rowData && rowData.hasOwnProperty(field)) {\n            return rowData[field]\n        }\n\n        return (this.data[row])[field]\n    }\n    getDrawData(colItem, rowId, indexId) {\n        let data\n        switch (colItem.field) {\n            case \"__rownum__\":\n                rowId = rowId + 1\n                data = rowId.toString()\n                break\n            case \"__idxnum__\":\n                data = indexId.toString()\n                break\n            default:\n                data = String(this.getUpdateDataOrData(rowId, colItem.field))\n        }\n\n        if (colItem.customData) {\n            data = colItem.customData(this, data, this.data[rowId], this.data, rowId, colItem)\n        }\n\n        return data",
    "relevantFile": "<file_path>src/components/canvasTable/CanvasTable.js\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    updateThemeStyle() {\n        this.canvas.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.canvas.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => JSON.parse(JSON.stringify(this.data[indexId])))\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();\n        this.TouchStart(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchMove = (e) => {\n        e.preventDefault();\n        this.TouchMove(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "}",
      "CodeQwen2.5-7B": "         }",
      "copilot": "[mainFieldValue] = originalItem",
      "CodeQwen1.5-7B": "          }"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\n\nexport class NTParallel {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n    // const canvas = document.createElement('div')\n    // canvas.style.width = '100%'\n    // canvas.style.height = '100%'\n    // this.canvas = canvas\n    // this.container.appendChild(this.canvas)\n    // this.zr = zrender.init(this.canvas, {\n    //   devicePixelRatio: window.devicePixelRatio,\n    //   width: this.width,\n    //   height: this.height,\n    //   renderer: 'svg'\n    // })\n\n    this.data = [\n      {\n        name: '滚筒洗衣机',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n    ]\n\n    this.initLayout = null\n    this.gridLayouts = null\n    this.calLayout()\n\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2]\n    })\n    this.zr.add(this.rootGroup)\n\n    this.render()\n\n  }\n\n  calLayout() {\n    this.initLayout = {\n      position: [0, 0],\n      scale: 1,\n    }\n    this.gridLayouts = [\n      {\n        position: [-125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [-125, 153],\n        scale: 0.5,\n      },\n      {\n        position: [125, 153],\n        scale: 0.5,\n      }\n    ]\n  }\n\n  async render() {\n    for (let i = 0; i < this.data.length; i++) {\n      this.fadeAllNodes()\n      const nodeGroup = await this.addNode(i)\n      await this.playNode",
    "infill": "(nodeGroup)",
    "suffix": "\r\n    }\r\n  }\r\n\r\n  fadeAllNodes() {\r\n    this.rootGroup.traverse(child => {\r\n      child.animateTo({\r\n        style: {\r\n          opacity: 0.1\r\n        }\r\n      })\r\n    })\r\n    // return new Promise((resolve) => {\r\n    //   this.rootGroup.traverse(child => {\r\n    //     child.animateTo({\r\n    //       style: {\r\n    //         opacity: 0.1\r\n    //       }\r\n    //     }, {\r\n    //       duration: 500,\r\n    //       // easing: 'cubicOut',\r\n    //       done: () => {\r\n    //         resolve()\r\n    //       }\r\n    //     })\r\n    //   })\r\n    // })\r\n  }\r\n\r\n  addNode(index) {\r\n    const nodeData = this.data[index]\r\n    const fromLayout = this.initLayout\r\n    const toLayout = this.gridLayouts[index % 4]\r\n    let nodeGroup = new zrender.Group({\r\n      position: fromLayout.position.slice(),\r\n      scale: [fromLayout.scale, fromLayout.scale],\r\n    })\r\n    const width = 428\r\n    const height = 538\r\n    nodeGroup.add(new zrender.Image({\r\n      style: {\r\n        image: nodeData.image,\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        opacity: 0.1,\r\n      },\r\n    }))\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          // easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  showNode(nodeGroup) {\r\n    return new Promise((resolve) => {\r\n      nodeGroup.animateTo({\r\n        position: toLayout.position.slice(),\r\n        scale: [toLayout.scale, toLayout.scale],\r\n      }, {\r\n        duration: 1000,\r\n        easing: 'cubicOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.zr.dispose()\r\n  }\r\n}",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/ChainChartDetail.js\nimport NDValue from '../nodeDetails/NDValue/NDValue'\nimport NDRevenue from '../nodeDetails/NDRevenue/NDRevenue'\nimport NDIndex from '../nodeDetails/NDIndex/NDIndex'\nimport NDArea from '../nodeDetails/NDArea/NDArea'\nimport NDNews from '../nodeDetails/NDNews/NDNews'\nimport NDReport from '../nodeDetails/NDReport/NDReport'\n\nimport BLProduct from '../businessLogics/BLProduct'\nimport BLSubscribe from '../businessLogics/BLSubscribe'\nimport BLAdvertisement from '../businessLogics/BLAdvertisement'\nimport BLDatadriven from '../businessLogics/BLDatadriven'\nimport BLFranchise from '../businessLogics/BLFranchise'\nimport BLCrownfund from '../businessLogics/BLCrownfund'\nimport BLReverseinnovation from '../businessLogics/BLReverseinnovation'\nimport BLService from '../businessLogics/BLService'\nimport BLDirectsales from '../businessLogics/BLDirectsales'\nimport BLFreemium from '../businessLogics/BLFreemium'\nimport BLPlatform from '../businessLogics/BLPlatform'\nimport BLShareeconomy from '../businessLogics/BLShareeconomy'\nimport NodeTopo from '../nodeTopo/NodeTopo'\n\nconst nodeDetailComponentMap = {\n  area: NDArea,\n  revenue: NDRevenue,\n  value: NDValue,\n  index: NDIndex,\n  news: NDNews,\n  report: NDReport,\n\n  bl_product: BLProduct,\n  bl_subscribe: BLSubscribe,\n  bl_advertisement: BLAdvertisement,\n  bl_datadriven: BLDatadriven,\n  bl_franchise: BLFranchise,\n  bl_crownfund: BLCrownfund,\n  bl_reverseinnovation: BLReverseinnovation,\n  bl_service: BLService,\n  bl_directsales: BLDirectsales,\n  bl_freemium: BLFreemium,\n  bl_platform: BLPlatform,\n  bl_shareeconomy: BLShareeconomy,\n\n  nodetopo: NodeTopo,\n}\n\nfunction mixinDetail(ChainChart) {\n  ChainChart.prototype.initNodeDetailState = function () {\n    this.currentNodeDetailIns = null\n  }\n  ChainChart.prototype.showNodeDetail = function (nodeId, detailType) {\n    this.destroyNodeDetail()\n    // const nodeItem = this.store.chartData.nodes.find(item => item.id === nodeId)\n    // if (!nodeItem) {\n    //   return\n    // }\n    let containerEl = document.createElement('div')\n    containerEl.className = 'node-detail-container'\n    this.container.appendChild(containerEl)\n    let insEl = document.createElement('div')\n    containerEl.appendChild(insEl)\n<file_path>src/views/Home/components/Chain/ChainChart/painter/nodes/Node1.js\n\n    this.textElsMemory = null\n    \n    this.init()\n  }\n  renderNode() {\n    const data = this.data\n    this.nodeGroup.add(new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius + 12\n      },\n      style: {\n        fill: Node1BgLinearGradientMap[data.streamType],\n      },\n      classNames: ['node-1-bg-shadow', `node-1-bg-shadow-${data.streamType}`]\n    }))\n    this.nodeGroup.add(new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius + 1\n      },\n      style: {\n        fill: '#FFFFFF',\n        stroke: '#FFFFFF',\n        lineWidth: 1,\n      },\n      classNames: ['node-1-bg-el', `node-1-bg-el-${data.streamType}`]\n    }))\n    // \n    const imageEl = new zrender.Image({\n      style: {\n        // image: data.image,\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n        x: -data.radius,\n        y: -data.radius,\n        width: data.radius * 2,\n        height: data.radius * 2\n      },\n      classNames: ['node-1-image-el']\n    })\n    const imageClipPathEl = new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius\n      },\n    })\n    imageEl.setClipPath(imageClipPathEl)\n    this.nodeGroup.add(imageEl)\n    this.nodeGroup.add(new zrender.Circle({\n      name: 'node-1-mask',\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius\n      },\n      style: {",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTParallel.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "(nodeGroup)",
      "CodeQwen2.5-7B": "(nodeGroup)",
      "copilot": "(nodeGroup)",
      "CodeQwen1.5-7B": " (nodeGroup, toLayout)\r"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    canvasBorderColor: '#cbcbe1',\n    dataChangeBackground: \"#84D0FE\",\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\",\n    scrollView: {\n        backgroundColor: \"#ffffff\",\n        buttonColor: \"#b2b2c5\",\n        buttonHoverColor: \"#757699\",\n    }\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    canvasBorderColor: '#181c21',\n    dataChangeBackground: \"#0E3678\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n// 经典风格\nconst blackThemeConfig = {\n    canvasBorderColor: '#4D0000',\n    dataChangeBackground: \"#1F1F1F\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst NeedBlinkFields = ['涨幅', '涨速']\nconst MainField = '代码'\nconst HightlightValue = 1\nconst AttenuationValue = 1\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined;\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        this.needBlinkConfig = {}\n        this.originalRangeData = null\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}\n    }\n    updateConfig(config) {\n        let themeType = config && config.theme || this.defaultTheme\n        config = {...config, ...TableTheme[themeType]}\n        this.config = {...defaultConfig, ...config}\n    }\n    getScrollView() {\n        return this.scrollView\n    }\n    isPlanToRedraw() {\n        if (!this.requestAnimationFrame) {\n            return false\n        }\n        return (this.drawconf !== undefined && this.drawconf.fulldraw)\n    }\n    setR(r) {\n        if (this.r === r) return\n        this.r = r\n        this.needToCalc = true\n        this.needToCalcFont = true \n    }\n    askForReDraw(config) {\n        if(config === undefined) {\n            this.drawconf = {fulldraw: true}\n            this.originalRangeData = null\n        } else {\n            if (this.drawconf !== undefined && this.drawconf.drawOnly) {\n                this.drawconf.drawOnly = Array.from(new Set([...this.drawconf.drawOnly, ...config.drawOnly]))",
    "infill": "dColumnWidth)",
    "suffix": "\n        this.reCalcForScrollView()\n    }\n    setIsFocus(isFocus) {\n        if (this.isFocus !== isFocus) {\n            this.isFocus = isFocus\n        }\n    }\n    reCalcForScrollView() {\n        if (this.dataIndex === undefined) return\n        let w = 0\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            if (this.column) {\n                let i\n                for(i = 0; i < this.column.length; i++) {\n                    w+= this.column[i].width * this.r + 0\n                }\n            } else {\n                w = 0\n            }\n        }\n        \n        let h = 0\n        const cellHeight = this.cellHeight\n        const calc = (index) => {\n            let i\n            switch (index.type) {\n                case CanvasTableIndexType.Index:\n                    h += cellHeight * index.list.length\n                    break\n                default:\n                    break\n            }\n        }\n        calc(this.dataIndex.index)\n        if (this.scrollView && w !== undefined) {\n            this.scrollView.setSize(this.r, this.canvasWidth, this.canvasHeight, w, h * this.r)\n            this.fireReCalcForScrollView(w / this.r, h + this.headerHeight)\n        }\n    }\n    fireReCalcForScrollView(width, height) {\n        const scrollView = this.scrollView\n        if (scrollView) {\n            let i\n            for (i = 0; i < this.eventReCalcForScrollView.length; i++) {\n                try {\n                    this.eventReCalcForScrollView[i](this, width, height, scrollView);\n                } catch {\n                    this.logError(\"fireReCalcForScrollView\")\n                }\n            }\n        }\n    }\n    calcIndex() {\n        if (this.data === undefined) return\n        const index = []\n        let i\n        // customFliter过滤 暂不支持\n        for (i = 0; i < this.data.length; i++) {\n            index[index.length] = i\n        }\n\n        // customSort排序 暂不支持\n        const sortCol = this.sortCol;\n        if (sortCol && sortCol.length) {\n            index.sort((a, b) => {\n                let sortColIndex;\n                for (sortColIndex = 0; sortColIndex < sortCol.length; sortColIndex++) {\n                    let d;\n                    const col = sortCol[sortColIndex];\n                    switch (col.col.field) {\n                        case \"__rownum__\":\n                            d = a - b;\n                            if (d !== 0) { return d * col.sort; }\n                            break;\n                        default:\n                            const da = this.getUpdateDataOrData(a, col.col.field);\n                            const db = this.getUpdateDataOrData(b, col.col.field);\n                            if (da === undefined || da === null) {\n                                if (db === undefined || db === null) {\n                                    continue;\n                                }\n                                return col.sort;\n                            }\n                            if (db === undefined || db === null) {\n                                return -1 * col.sort;\n                            }\n                            if (typeof da === \"string\" && typeof db === \"string\") {\n                                if (da.indexOf('%') !== -1 && db.indexOf('%') !== -1) {\n                                    let pda = parseFloat(da)\n                                    let pdb = parseFloat(db)\n                                    d = pda - pdb;\n                                    if (d !== 0) { return d * col.sort; }\n                                    continue;\n                                }\n                                if (da === \"\") {\n                                    if (db === \"\") {\n                                        continue;\n                                    }\n                                    return col.sort;\n                                }\n\n                                if (db === \"\") {\n                                    return -1 * col.sort;\n                                }\n                                d = da.localeCompare(db);\n                                if (d !== 0) { return d * col.sort; }\n                                continue;\n                            }\n                            if (da > db) {\n                                return col.sort;\n                            }\n                            if (da < db) {\n                                return -1 * col.sort;\n                            }\n                    }\n                }\n                return 0;\n            });\n        }\n        this.dataIndex = {\n            index: { type: CanvasTableIndexType.Index, list: index},\n            mode: CanvasTableMode.ColMode\n        }\n        this.reCalcForScrollView()\n    }\n    getUpdateDataOrData(row, field) {\n        const rowData = this.editData[row]\n        if (rowData && rowData.hasOwnProperty(field)) {\n            return rowData[field]\n        }\n\n        return (this.data[row])[field]\n    }\n    getDrawData(colItem, rowId, indexId) {\n        let data\n        switch (colItem.field) {\n            case \"__rownum__\":\n                rowId = rowId + 1\n                data = rowId.toString()\n                break\n            case \"__idxnum__\":\n                data = indexId.toString()\n                break\n            default:\n                data = String(this.getUpdateDataOrData(rowId, colItem.field))\n        }\n\n        if (colItem.customData) {\n            data = colItem.customData(this, data, this.data[rowId], this.data, rowId, colItem)\n        }\n\n        return data\n    }\n    getViewRange() {\n        const height = this.cellHeight * this.r\n        const index = this.dataIndex.index\n        let maxPos = this.canvasHeight + this.cellHeight + 5 * this.r\n        let i = Math.floor(this.scrollView.getPosY() / (height))\n        let pos = (-this.scrollView.getPosY() + (i + 1) * height)\n        //pos += 14 * this.r\n        pos = pos - 5 * this.r\n        let range = []\n        while (pos < maxPos) {\n            if (i < index.list.length) {\n                range.push(index.list[i])\n            } else {\n                break\n            }\n            pos += height\n            i++\n        }\n        return range\n    }\n    drawFixedColumns() {\n        if (!this.scrollView || !this.context || !this.dataIndex) {\n            return\n        }\n        if (!this.fixedColumns.length) return\n        // if (this.needToCalc) {\n        //     this.calcColum()\n        // }\n        // this.context.font = this.config.fontStyle + ' ' + this.config.fontSize * this.r + 'px ' + this.config.font\n        const posX = 0 //this.scrollView.getPosX()\n\n        // if (this.needToCalcFont) {\n        //     this.minFontWidth = this.context.measureText(\"i\").width\n        //     this.maxFontWidth = this.context.measureText(\"Æ\").width\n        // }\n\n        // this.requestAnimationFrame = undefined\n\n        // if (this.scrollView.beforeDraw()) {\n        //     this.askForReDraw()\n        // }\n\n        const headderHeight = this.headerHeight * this.r\n        const offsetLeft = 5 * this.r\n        // if (this.drawconf !== undefined && this.drawconf.fulldraw) {\n        //     this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\n        // }\n\n        this.context.fillStyle = this.config.fontColor\n        this.context.strokeStyle = this.config.lineColor\n        const colStart = 0\n        const colEnd = this.fixedColumns.length\n\n        const height = this.cellHeight * this.r\n        const index = this.dataIndex.index\n        let pos\n        let i\n        let maxPos\n        switch (index.type) {\n            case CanvasTableIndexType.Index:\n                this.context.clearRect(0, headderHeight, this.fixedColumnWidth, this.canvasHeight - headderHeight - 10)\n                maxPos = this.canvasHeight + this.cellHeight + 5 * this.r\n                i = Math.floor(this.scrollView.getPosY() / (height))\n                pos = (-this.scrollView.getPosY()",
    "relevantFile": "<file_path>src/components/canvasTable/CanvasTable.js\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    updateThemeStyle() {\n        this.canvas.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.canvas.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => JSON.parse(JSON.stringify(this.data[indexId])))\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ";",
      "CodeQwen2.5-7B": "",
      "copilot": "dColumnWidth)",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { scale } from 'zrender/lib/core/vector'\n\nexport class NTParallel {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.className = 'cc-canvas'\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n\n    this.data = [\n      {\n        name: '滚筒洗衣机',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      }\n    ]\n\n    this.initLayout = null\n    this.gridLayouts = null\n    this.calLayout()\n\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2]\n    })\n\n    this.render()\n\n  }\n\n  calLayout() {\n    this.initLayout = {\n      position: [0, 0],\n      scale: 1,\n    }\n    this.gridLayouts = [\n      {\n        position: [-125, -153],\n        scale: 1,\n      },\n      {\n        position: [125, -153],\n        scale: 1,\n      },\n      {\n        position: [125, -153],\n        scale: 1,\n      },\n      {\n        position: [125, 153],\n        scale: 1,\n      }\n    ]\n  }\n\n  render() {\n    this.addNode(0)\n  }\n\n  addNode(index) {\n    const nodeData = this.data[index]\n    const fromLayout = this.initLayout\n    const toLayout = this.gridLayouts[index % 4]\n    let nodeGroup = new zrender.Group({\n      position: fromLayout.position,\n      scale: [fromLayout.scale, fromLayout.scale],\n    })\n    const width = 428\n    const height",
    "infill": " = 306",
    "suffix": "\r\n    nodeGroup.add(new zrender.Image({\r\n      style: {\r\n        image: nodeData.image,\r\n        x: -data.radius,\r\n        y: -data.radius,\r\n        width: data.radius * 2,\r\n        height: data.radius * 2\r\n      },\r\n      classNames: ['node-1-image-el']\r\n    }))\r\n  }\r\n}",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/ChainChartDetail.js\nimport NDValue from '../nodeDetails/NDValue/NDValue'\nimport NDRevenue from '../nodeDetails/NDRevenue/NDRevenue'\nimport NDIndex from '../nodeDetails/NDIndex/NDIndex'\nimport NDArea from '../nodeDetails/NDArea/NDArea'\nimport NDNews from '../nodeDetails/NDNews/NDNews'\nimport NDReport from '../nodeDetails/NDReport/NDReport'\n\nimport BLProduct from '../businessLogics/BLProduct'\nimport BLSubscribe from '../businessLogics/BLSubscribe'\nimport BLAdvertisement from '../businessLogics/BLAdvertisement'\nimport BLDatadriven from '../businessLogics/BLDatadriven'\nimport BLFranchise from '../businessLogics/BLFranchise'\nimport BLCrownfund from '../businessLogics/BLCrownfund'\nimport BLReverseinnovation from '../businessLogics/BLReverseinnovation'\nimport BLService from '../businessLogics/BLService'\nimport BLDirectsales from '../businessLogics/BLDirectsales'\nimport BLFreemium from '../businessLogics/BLFreemium'\nimport BLPlatform from '../businessLogics/BLPlatform'\nimport BLShareeconomy from '../businessLogics/BLShareeconomy'\nimport NodeTopo from '../nodeTopo/NodeTopo'\n\nconst nodeDetailComponentMap = {\n  area: NDArea,\n  revenue: NDRevenue,\n  value: NDValue,\n  index: NDIndex,\n  news: NDNews,\n  report: NDReport,\n\n  bl_product: BLProduct,\n  bl_subscribe: BLSubscribe,\n  bl_advertisement: BLAdvertisement,\n  bl_datadriven: BLDatadriven,\n  bl_franchise: BLFranchise,\n  bl_crownfund: BLCrownfund,\n  bl_reverseinnovation: BLReverseinnovation,\n  bl_service: BLService,\n  bl_directsales: BLDirectsales,\n  bl_freemium: BLFreemium,\n  bl_platform: BLPlatform,\n  bl_shareeconomy: BLShareeconomy,\n\n  nodetopo: NodeTopo,\n}\n\nfunction mixinDetail(ChainChart) {\n  ChainChart.prototype.initNodeDetailState = function () {\n    this.currentNodeDetailIns = null\n  }\n  ChainChart.prototype.showNodeDetail = function (nodeId, detailType) {\n    this.destroyNodeDetail()\n    // const nodeItem = this.store.chartData.nodes.find(item => item.id === nodeId)\n    // if (!nodeItem) {\n    //   return\n    // }\n    let containerEl = document.createElement('div')\n    containerEl.className = 'node-detail-container'\n    this.container.appendChild(containerEl)\n    let insEl = document.createElement('div')\n    containerEl.appendChild(insEl)\n<file_path>src/views/Home/components/Chain/ChainChart/painter/nodes/Node1.js\n\n    this.textElsMemory = null\n    \n    this.init()\n  }\n  renderNode() {\n    const data = this.data\n    this.nodeGroup.add(new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius + 12\n      },\n      style: {\n        fill: Node1BgLinearGradientMap[data.streamType],\n      },\n      classNames: ['node-1-bg-shadow', `node-1-bg-shadow-${data.streamType}`]\n    }))\n    this.nodeGroup.add(new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius + 1\n      },\n      style: {\n        fill: '#FFFFFF',\n        stroke: '#FFFFFF',\n        lineWidth: 1,\n      },\n      classNames: ['node-1-bg-el', `node-1-bg-el-${data.streamType}`]\n    }))\n    // \n    const imageEl = new zrender.Image({\n      style: {\n        // image: data.image,\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n        x: -data.radius,\n        y: -data.radius,\n        width: data.radius * 2,\n        height: data.radius * 2\n      },\n      classNames: ['node-1-image-el']\n    })\n    const imageClipPathEl = new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius\n      },\n    })\n    imageEl.setClipPath(imageClipPathEl)\n    this.nodeGroup.add(imageEl)\n    this.nodeGroup.add(new zrender.Circle({\n      name: 'node-1-mask',\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius\n      },\n      style: {",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTParallel.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "= 439",
      "CodeQwen2.5-7B": " = 428",
      "copilot": " = 306",
      "CodeQwen1.5-7B": "  = 428\r"
    }
  },
  {
    "prefix": "import { MarkerWidth, NODE_LEVEL3_RADIUS } from './config'\nimport Collisions, { Polygon as CollisionsPolygon, Circle as CollisionsCircle } from 'collisions'\n\nvar measureCanvasCtx\nfunction getMeasureCanvasCtx() {\n  if (!measureCanvasCtx) {\n    measureCanvasCtx = document.createElement('canvas').getContext('2d');\n  }\n  return measureCanvasCtx\n}\n\nexport function parseTextLines({\n  radius,\n  scale,\n  text,\n}) {\n  const ctx = getMeasureCanvasCtx()\n  const maxWidth = (radius - 8) * 2 * scale\n  const maxFontSize = 20 * scale\n  const minFontSize = 12\n  let fontSize = maxFontSize\n  let res = parseTextLinesExe({ ctx, fontSize, maxWidth, text })\n  while(!res.success && fontSize >= minFontSize) {\n    fontSize = fontSize - 1\n    res = parseTextLinesExe({ ctx, fontSize, maxWidth, text })\n  }\n  if (res.success) {\n    return {\n      textFontSize: fontSize,\n      textLines: res.lines\n    }\n  } else {\n    return {\n      textFontSize: '',\n      textLines: []\n    }\n  }\n}\n\nfunction parseTextLinesExe({ ctx, fontSize, maxWidth, text }) {\n  ctx.font = `${fontSize}px/${fontSize*1.5}px MicrosoftYaHei`\n  let lines = []\n  const words = text.split('')\n  let line = ''\n  let word = ''\n  while(words.length > 0 || word !== '') {\n    if (word === '') {\n      word = words.shift()\n    }\n    if (ctx.measureText(line + word).width < maxWidth) {\n      line = line + word\n      word = ''\n    } else {\n      lines.push(line)\n      line = ''\n      if (lines.length > 2) {\n        return {\n          success: false\n        }\n      }\n    }\n  }\n  if (line.length > 0) {\n    lines.push(line)\n  }\n  if (lines.length > 2) {\n    return {\n      success: false\n    }\n  } else {\n    return {\n      success: true,\n      fontSize,\n      lines,\n    }\n  }\n}\n\nlet measurePath = document.createElementNS(\n  'http://www.w3.org/2000/svg',\n  'path'\n)\nexport function assemblePath1_1(source, target) {\n  let path = [\n    [`M ${ source.position[0] },${ source.position[1] }`],\n    [`L ${ target.position[0] },${ target.position[1] }`],\n  ].join(' ')\n  measurePath.setAttribute('d', path)\n  let pathLength = measurePath.getTotalLength()\n  let sourceP = measurePath.getPointAtLength(source.radius + 12)\n  let targetP = measurePath.getPointAtLength(pathLength - target.radius - MarkerWidth)\n  let rotate = Math.atan2(target.position[1] - source.position[1], target.position[0] - source.position[0])\n  return {\n    sourceP,\n    targetP,\n    rotate: -rotate\n  }\n}\n\nexport function assemblePath0_1(source, target) {\n  const curveRation = 0.05\n  const length = Math.sqrt((target.position[0] - source.position[0]) ** 2 + (target.position[1] - source.position[1]) ** 2)\n  let rotation = Math.atan2(source.position[1] - target.position[1], source.position[0] - target.position[0])\n  return {\n    points: [\n      [ 0, 0 ],\n      [ length / 4, length * curveRation ],\n      [ length / 4 * 3, -length * curveRation ],\n      [ length, 0 ],\n    ],\n    rotation: -rotation,\n    position: target.position\n  }\n}\n\nexport function assemblePath3_12 (source, target) {\n  let path = [\n    [`M ${ source.position[0] },${ source.position[1] }`],\n    [`L ${ target.position[0] },${ target.position[1] }`],\n  ].join(' ')\n  measurePath.setAttribute('d', path)\n  let pathLength = measurePath.getTotalLength()\n  let sourceP = measurePath.getPointAtLength(NODE_LEVEL3_RADIUS)\n  let targetP = measurePath.getPointAtLength(pathLength - target.radius)\n  const length = Math.sqrt((targetP.x - sourceP.x) ** 2 + (targetP.y - sourceP.y) ** 2)\n  let rotation = Math.atan2(targetP.y - sourceP.y, targetP.x - sourceP.x)\n  const curveRation = 0.1\n  return {\n    pathShape: {\n      x1: 0,\n      y1: 0,\n      x2: length,\n      y2: 0,\n      cpx1: length / 2,\n      cpy1: length * curveRation,\n    },\n    rotation: -rotation,\n    sourceP: [sourceP.x, sourceP.y],\n  }\n}\n\nexport function assembleRiverPolygon ({ up, contain, down }) {\n  const length = Math.sqrt((down.endPosition[0] - up.startPosition[0]) ** 2 + (down.endPosition[1] - up.startPosition[1]) ** 2)\n  const width = Math.round(length * 0.008)\n  return {\n    up: assembleRiverPart(up, width),\n    contain: assembleRiverPart(contain, width),\n    down: assembleR",
    "infill": "isBold ? '-Bold' : ''}`",
    "suffix": "\r\n  while(ctx.measureText(text).width > width && fontSize >= minFontSize) {\r\n    fontSize = fontSize - 1\r\n    ctx.font = `${fontSize}px/${fontSize*1.5}px MicrosoftYaHei`\r\n  }\r\n  return {\r\n    fontSize,\r\n    textMaxWidth,\r\n  }\r\n}\r\n\r\n",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/ChainChartDetail.js\n  area: NDArea,\n  revenue: NDRevenue,\n  value: NDValue,\n  index: NDIndex,\n  news: NDNews,\n  report: NDReport,\n\n  bl_product: BLProduct,\n  bl_subscribe: BLSubscribe,\n  bl_advertisement: BLAdvertisement,\n  bl_datadriven: BLDatadriven,\n  bl_franchise: BLFranchise,\n  bl_crownfund: BLCrownfund,\n  bl_reverseinnovation: BLReverseinnovation,\n  bl_service: BLService,\n  bl_directsales: BLDirectsales,\n  bl_freemium: BLFreemium,\n  bl_platform: BLPlatform,\n  bl_shareeconomy: BLShareeconomy,\n\n  nodetopo: NodeTopo,\n}\n\nfunction mixinDetail(ChainChart) {\n  ChainChart.prototype.initNodeDetailState = function () {\n    this.currentNodeDetailIns = null\n  }\n  ChainChart.prototype.showNodeDetail = function (nodeId, detailType) {\n    this.destroyNodeDetail()\n    // const nodeItem = this.store.chartData.nodes.find(item => item.id === nodeId)\n    // if (!nodeItem) {\n    //   return\n    // }\n    let containerEl = document.createElement('div')\n    containerEl.className = 'node-detail-container'\n    this.container.appendChild(containerEl)\n    let insEl = document.createElement('div')\n    containerEl.appendChild(insEl)\n    const Ctor = Vue.extend(nodeDetailComponentMap[detailType])\n    this.currentNodeDetailIns = new Ctor({\n      // beforeCreate () {\n      //   this.nodeItem = nodeItem\n      // }\n    })\n    this.currentNodeDetailIns.$on('renderFinish', () => {\n      this.currentNodeDetailIns.play && this.currentNodeDetailIns.play()\n    })\n    this.currentNodeDetailIns.$mount(insEl)\n  }\n  ChainChart.prototype.destroyNodeDetail = function () {\n    if (this.currentNodeDetailIns) {\n      this.currentNodeDetailIns.$destroy()\n      this.container.removeChild(this.currentNodeDetailIns.$el.parentNode)\n      this.currentNodeDetailIns = null\n    }\n  }\n\n}\n\nexport default mixinDetail\n<file_path>src/views/Home/components/Chain/nodeTopo/NTParallel.js\n    //     await this.blurAllNodes(0)\n    //     this.rootGroup.removeAll()\n    //     await sleep(500)\n    //   }\n    //   this.blurAllNodes(0.1)\n    //   const nodeGroup = await this.showNode(i)\n    //   await Promise.all([this.playNode(nodeGroup, i), this.resumeAllNodes()])\n    //   await sleep(500)\n    // }\n  }\n\n  blurAllNodes(toOpacity = 0.1) {\n    return new Promise((resolve) => {\n      this.rootGroup.traverse(child => {\n        child.animateTo({\n          style: {\n            opacity: toOpacity\n          }\n        }, {\n          duration: 500,\n          easing: 'cubicOut',\n          done: () => {\n            resolve()\n          }\n        })\n      })\n    })\n  }\n\n  resumeAllNodes() {\n    return new Promise((resolve) => {\n      this.rootGroup.traverse(child => {\n        child.animateTo({\n          style: {\n            opacity: 1\n          }\n        }, {\n          duration: 500,\n          easing: 'cubicOut',\n          done: () => {\n            resolve()\n          }\n        })\n      })\n    })\n  }\n\n  showNode(index) {\n    const nodeData = this.data[index]\n    const fromLayout = this.initLayout\n    let nodeGroup = new zrender.Group({\n      position: fromLayout.position.slice(),\n      scale: [fromLayout.scale, fromLayout.scale],\n    })\n    const width = 428\n    const height = 538\n    nodeGroup.add(new zrender.Rect({\n      shape: {\n        x: - width / 2 - 5,\n        y: - height / 2 - 5,",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/ChainChart/utils/index.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "RiverPart(down, width),",
      "CodeQwen2.5-7B": "iverPart(down, width),",
      "copilot": "isBold ? '-Bold' : ''}`",
      "CodeQwen1.5-7B": " iverPart(down, width),\r"
    }
  },
  {
    "prefix": "export const useEventHub = () => {\n\tconst mapper = {};\n\tconst on = (name, fn) => {\n\t\t(mapper[name] || (mapper[name] = [])).push(fn);\n\t};\n\tconst off = (name, fn) => {\n\t\tmapper[name] && (mapper[name] = mapper[name].filter((x) => x != fn));\n\t};\n\tconst emit = (name, payload) => {\n\t\tconsole.log('.....', mapper",
    "infill": "[name], name",
    "suffix": ")\n\t\tmapper[name].forEach((fn) => fn(payload))\n\t};\n\treturn {\n\t\ton,\n\t\toff,\n\t\temit,\n\t};\n};\n\nexport default useEventHub();\n",
    "relevantFile": "<file_path>packages/ai-portfolionews-kline-v1/src/plugin.config.js\nconst isDev = process.env.NODE_ENV === \"development\";\n// export const plugins = []\n// 需要全局加载的插件地址列表\nexport const plugins = isDev ? [\"//s.thsi.cn/cd/iwc-datav-d3-charts/d3_charts_0.4.38.js\"] : [\"//s.thsi.cn/cd/iwc-datav-d3-charts/d3_charts_0.4.38.js\"];\n<file_path>packages/ai-portfolionews-mixed-v2/src/chart/optionConfig.js\nimport { dpr, theme } from \"../common.constant\";\nimport { labelFormatter } from \"./utils\";\nexport const colorConfig = {\n\tlight: {\n\t\tline: \"#FF9500\",\n\t\tbar: \"#36f\",\n\t\tsplitLine: \"rgba(0,0,0,0.06)\",\n\t\tlegend: \"rgba(0,0,0,0.6)\",\n\t\taxisLabel: \"rgba(0,0,0,0.6)\",\n\t\taxisPointer: \"#858585\",\n\t},\n\tdark: {\n\t\tline: \"#FF9500\",\n\t\tbar: \"#36f\",\n\t\tsplitLine: \"rgba(255,255,255,0.06)\",\n\t\tlegend: \"rgba(255,255,255,0.6)\",\n\t\taxisLabel: \"rgba(255,255,255,0.6)\",\n\t\taxisPointer: \"#858585\",\n\t},\n};\n\nexport const genTooltip = (data) => {\n\tconst xAxisLabel = data[0].name;\n\tlet str = `<div style=\"display: flex; align-items: center;\">\n      <span style=\"color: rgba(255,255,255,0.6);font-family: THSJinRongTi-Medium; margin:${8 / dpr}px 0 0 ${8 / dpr}px;line-height: ${12 / dpr}px;\">${xAxisLabel}</span>\n    </div>`;\n\n\tconsole.log('data', data)\n\tdata.forEach((element, index) => {\n\t\tstr += `<div style=\" display: flex; align-items: center; justify-content: space-between; margin: ${4 / dpr}px 0 ${4 / dpr}px 0;padding-right: ${8 / dpr}px;height: ${16 / dpr}px;\">\n        <div style=\"margin: 0 ${8 / dpr}px 0 0;display: flex; align-items: center;\">\n          <span style=\"width:${10 / dpr}px;height:${index === 1 ? 4 / dpr : 10 / dpr}px;border-radius:${2 / dpr}px;margin:0 ${4 / dpr}px 0 ${8 / dpr}px;background-color:${colorConfig[theme][index === 1 ? \"line\" : \"bar\"]}\"></span>\n          <span style=\"color: rgba(255,255,255,0.84);font-family: THSJinRongTi-Medium; line-height: ${16 / dpr}px\"> ${element.seriesName}\n          </span>\n        </div>\n        <span style=\"color: rgba(255,255,255,0.84);font-family: THSJinRongTi-Medium;style=\"margin: 0 0 0 ${8 / dpr}px;line-height: ${16 / dpr}px;>${index === 0 ? labelFormatter(element.value, 2) : element.value.toFixed(2) + \"%\"}</span>\n      </div>`;\n\t});\n\treturn str;\n};\n\nexport const fontFamily = \"THSJinRongTi-Medium\";\n<file_path>packages/ai-portfolionews-mixed-v1/src/lazyloadScript.js\nimport eventhub from \"./eventhub\";\nconst loadLib = (src) => {\n\tconst script = document.createElement(\"script\");\n\tscript.setAttribute(\"type\", \"text/javascript\");\n\tscript.setAttribute(\"src\", src);\n\tscript.onerror = () => eventhub.emit(\"failed\");\n\tscript.onload = () => eventhub.emit(\"successful\");\n\tdocument.body.appendChild(script);\n};\nexport const loadComponents = (srcarray) => {\n\tlet successCount = 0;\n\tif (Array.isArray(srcarray)) {\n\t\tsrcarray.forEach((src) => loadLib(src));\n\t}\n\teventhub.on(\"successful\", () => {\n\t\tsuccessCount++;\n\t\tif (successCount === srcarray.length) {\n\t\t\teventhub.emit(\"allLoaded\");\n\t\t}\n\t});\n\t// 插件加载失败的话\n\teventhub.on(\"failed\", () => console.log(\"failed\"));\n};",
    "relevantFileList": [],
    "filePath": "packages/ai-portfolionews-mixed-v2/src/eventhub.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "[name]",
      "CodeQwen2.5-7B": "[name]",
      "copilot": "[name], name",
      "CodeQwen1.5-7B": " [name]<file_sep> /src/utils/useEventHub.js"
    }
  },
  {
    "prefix": "(function () {\n  // 消息处理\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.type === 'update-layers') {\n      sendResponse(user);\n    }\n  });\n  const sendMsg = async (msg) => {\n    const res = await chrome.runtime.sendMessage(msg);\n    console.log(res);\n  };\n\n  // 初始化图层并发送给service-wor",
    "infill": "ker",
    "suffix": "\r\n  const initLayer = () => {\r\n    const iframe = document.querySelector('iframe');\r\n    const iframeDocument = iframe.contentDocument || iframe.contentWindow.document;\r\n    const iframeTitle = iframeDocument.title;\r\n    const pageName = iframeTitle.slice(0, iframeTitle.indexOf(' - '));\r\n    const iframeSrc = iframe.src;\r\n    const iframeId = iframeSrc.split('?')[1];\r\n\r\n    const obj = JSON.parse(localStorage.getItem('d2c_layer'));\r\n    if (obj?.id === iframeId) {\r\n      const dataObject = obj.data;\r\n      const newObj = dataObject.artboards.find(item => item.name === pageName);\r\n      sendMsg({\r\n        type: 'init',\r\n        data: newObj\r\n      });\r\n    } else {\r\n      fetch(iframeSrc)\r\n        .then(response => response.text())\r\n        .then(data => {\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(data, 'text/html');\r\n          const scripts = doc.querySelectorAll('script');\r\n          const scriptContent = scripts[scripts.length - 1].textContent;\r\n          // 剔除开头固定的\"let data = \"和结尾固定的\"meaxure.render(data);\"以及一些空格\r\n          const dataObject = JSON.parse(scriptContent.slice(20, -35));\r\n          localStorage.setItem('d2c_layer', JSON.stringify({\r\n            id: iframeId,\r\n            data: dataObject\r\n          }));\r\n\r\n          const newObj = dataObject.artboards.find(item => item.name === pageName);\r\n          if (newObj) {\r\n            sendMsg({\r\n              type: 'init',\r\n              data: newObj\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  iframeDocument.addEventListener('click', (e) => {\r\n    if (e.target.classList.contains('layer')) {\r\n      sendMsg({\r\n        type: 'select',\r\n        data: e.target.classList[1].slice(6)\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n})()\r\n",
    "relevantFile": "<file_path>chrome-extension/src/store/index.js\nimport { defineStore } from 'pinia';\n\nexport const useLayerStore = defineStore('layer', {\n  state: () => ({\n    layers: null,\n    currentLayer: 0,\n  }),\n  actions: {\n    initPages(layers) {\n      this.layers = layers;\n    },\n    setCurrentLayer(id) {\n      this.currentLayer = id;\n    }\n  },\n  getters: {\n    getLayerChildren(state) {\n      const currentLayer = state.layers.find(item => item.objectID === state.currentLayer);\n      const { x, y, width, height } = currentLayer.rect;\n      const children = state.layers.filter(({ rect }) => {\n        return rect.x >= x && rect.y >= y && rect.x + rect.width <= x + width && rect.y + rect.height <= y + height;\n      })\n      console.log(children);\n      return children;\n    }\n  },\n});",
    "relevantFileList": [],
    "filePath": "chrome-extension/dist/listener.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "ker",
      "CodeQwen2.5-7B": "ker",
      "copilot": "ker",
      "CodeQwen1.5-7B": "ker"
    }
  },
  {
    "prefix": "/* eslint-disable import/prefer-default-export */\nimport { generateChartOption } from '@thsc-ifind-irp/vdl-generate-chart-option';\nimport server from '@/server';\nimport { niceNumber } from './niceNumber';\n\nconst sourceData = {};\n\nconst generateParams = indicators => ({\n  zb_str: indicators.map(item => item.indexId).join(','),\n  zb_rtime: new Array(indicators.length).fill(0).join(','),\n  displayid: indicators.map(item => item.displayId).join(','),\n  formula: indicators.map(item => item.formula || '0').join('$$'),\n  zb_point: indicators.map(item => (item.point || item.point === 0 ? item.point : '2')).join(','),\n  zb_unit: indicators.map(item => item.zb_unit || '1').join(','),\n  zb_custom: indicators.map(item => (item.edit ? item.id : '')).join(','),\n  browser: indicators.map(item => (item.indexType === 4 ? item.indexParam : '0')).join('$$'),\n  emptyType: indicators.map(item => (item.indexType === 4 || item.indexType === -1 ? item.emptyDataType : '')).join(','),\n  wt: 'json',\n  usage: 'flagship-store',\n});\n\nexport const getChartData = async indicators => {\n  if (indicators.length && indicators[0].indexType === 0) {\n    const awaitList = [];\n    for (let i = 0; i < indicators.length; i += 1) {\n      const formData = new FormData();\n      formData.append('id', indicators[i].id);\n      formData.append('displayId', indicators[i].displayId);\n      formData.append('datebegin', '');\n      formData.append('dateend', '');\n      // eslint-disable-next-line no-loop-func\n      awaitList.push(server.getNonSequZbData(formData).then(res => {\n        sourceData[res.displayId] = res;\n      }));\n    }\n    await Promise.all(awaitList);\n  } else {\n    const params = generateParams(indicators);\n    await server.getZbData(params).then(rsp => {\n      const tables = rsp.tables || [];\n      tables.forEach(tableData => {\n        sourceData[tableData.displayid] = tableData;\n      });\n    });\n  }\n};\n\n// 筛选需要请求数据的指标，如果已经在sourceData里有的指标就不需要请求了\nconst filterIndicators = indicators => indicators.filter(item => !sourceData[item.displayId]);\n\nconst getYAxisMaxMin = (series) => {\n  let yAxisMaxMin = {\n    '0': {\n      max: 0,\n      min: 0,\n      interval: 0,\n    },\n    '1': {\n      max: 0,\n      min: 0,\n      interval: 0,\n    }\n  };\n  let leftData",
    "infill": " = [];\r\n  let rightData = [];",
    "suffix": "\r\n  series.forEach((item) => {\r\n    if (item.yAxisIndex === 0) {\r\n      leftData = leftDataitem.data.map((data) => data.value);\r\n    }\r\n  })\r\n  return yAxisMaxMin;\r\n  const fmax = Math.max(...seriesData);\r\n  const fmin = Math.min(...seriesData);\r\n  const {max, min, interval} = niceNumber(fmax, fmin);\r\n}\r\n\r\nconst setIFinDOption = (option, title) => {\r\n  const newOption = {};\r\n  if (option.series.type === 'pie') {\r\n    newOption.legend = { data: option.series.data.map(item => item.name), type: 'scroll' };\r\n  } else {\r\n    newOption.legend = { data: option.series.map(item => item.name), type: 'scroll' };\r\n  }\r\n  newOption.dataZoom = { show: true };\r\n  if (option.series.type === 'pie') {\r\n    newOption.tooltip = { show: true };\r\n  } else {\r\n    newOption.tooltip = { trigger: 'axis' };\r\n  }\r\n\r\n  if (option.series.type !== 'pie') {\r\n    newOption.xAxis = {\r\n      type: option.xAxis.type,\r\n      data: option.xAxis.data,\r\n    };\r\n    newOption.yAxis = option.yAxis.map(item => ({\r\n      type: item.type,\r\n      name: item.name,\r\n    }));\r\n  }\r\n\r\n  if (option.series.type === 'pie') {\r\n    newOption.series = {\r\n      type: 'pie',\r\n      name: title,\r\n      data: option.series.data.map(item => ({\r\n        name: item.name,\r\n        value: item.value,\r\n        originValue: item.originValue,\r\n      })),\r\n    };\r\n    delete newOption.series.itemStyle;\r\n  } else {\r\n    newOption.series = option.series.map(item => ({\r\n      areaStyle: item.areaStyle ? {} : null,\r\n      connectNulls: item.connectNulls,\r\n      yAxisIndex: item.yAxisIndex,\r\n      type: item.type,\r\n      data: item.data,\r\n      name: item.name,\r\n    }));\r\n  }\r\n  return newOption;\r\n};\r\n\r\nexport const getOption = async (title, indicators, variable, chartSize) => {\r\n  const fetchDataIndicators = filterIndicators(indicators);\r\n  await getChartData(fetchDataIndicators);\r\n  let option = generateChartOption(indicators, sourceData, variable, chartSize);\r\n  console.log('option', option);\r\n  option = setIFinDOption(option, title);\r\n  console.log('option', option);\r\n  return option;\r\n};\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/utils/chart.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": " = [];",
      "CodeQwen2.5-7B": "item = series[0];\r",
      "copilot": " = [];\r\n  let rightData = [];",
      "CodeQwen1.5-7B": "  = [];\r"
    }
  },
  {
    "prefix": "class ContextMenu {\n    constructor() {\n        this.wrapper = document.createElement('div')",
    "infill": "this.wrapper.setAttribute('class', 'market-context-menu')\r\n        document.app",
    "suffix": "\r\n    }\r\n}",
    "relevantFile": "<file_path>src/locale/index.js\n}\n\n//url -> cookie -> zh\nlet lang = getUrlParams('lang');\nif (!lang) {\n  lang = getCookie('ifindlang');\n}\nif (!lang) lang = 'cn';\nwindow.lang = lang;\ndocument.body.classList.add(lang);\ndocument.cookie = `ifindlang=${lang};path=/`;\n\nconst i18n = new createI18n({\n  locale: lang,\n  messages: {\n    'cn': { ...cn },\n    'en': { ...en }\n  }\n})\n\ni18n.$e = (key, values) => {\n  let result = i18n.t(key);\n  if (Array.isArray(values) && values.length) {\n    values.forEach((v)=> {\n        result = result.replace(/%s/, v);\n    });\n  }\n  return result;\n}\n// window.$t = function(key) {\n//   return i18n.t(key);\n// };\n// window.$extend = function(key, values) {return i18n.$e(key, values)};\n\n/* 港股速览页面导航条特殊处理 */\nlet toolbar = document.querySelector('.f9stock-header-tool');\nif (toolbar) {\n    let stockName = toolbar.querySelector('.tool-stock-name');\n    // let pageName = toolbar.querySelector('.pagename');\n    let price, updown;\n    if (lang === 'en') {\n        stockName.innerHTML = '';\n        // pageName.innerHTML = 'Snapshot ';\n        let wrapper = toolbar.querySelector('.j_bannerWrapper');\n        Array.from(wrapper.querySelectorAll('span')).forEach((item)=>{\n            if (item.innerHTML === '最新价: ') {\n                price = item;\n            }\n            if (item.innerHTML === '涨跌幅: ') {\n                updown = item;\n            }\n        })\n        if (price) {\n            price.innerHTML = 'Latest Price: ';\n        }\n        if (updown) {\n            updown.innerHTML = 'Change(%): ';\n        }\n    }\n}\n<file_path>src/components/canvasTable/CanvasTable.js\n    for (i = 0; i < event.changedTouches.length; i++) {\n        x.changedTouches.push({\n            pageX: event.changedTouches[i].pageX,\n            pageY: event.changedTouches[i].pageY\n        });\n    }\n    for (i = 0; i < event.touches.length; i++) {\n        x.touches.push({\n            pageX: event.touches[i].pageX,\n            pageY: event.touches[i].pageY\n        });\n    }\n}\n\nexport default class CanvasTable extends CustomCanvasTable {\n    constructor(wrapper, col, data, config) {\n        super(config)\n        this.id = this.config.id\n        this.data = data\n        this.initData()\n        this.wrapper = (typeof wrapper === 'string') ? document.getElementById(wrapper) : wrapper\n        this.initCanvas()\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.wrapper.clientWidth, this.wrapper.clientHeight)\n        this.updateThemeStyle()\n        this.scrollViewChange = debounce(this.scrollViewChange, 200)\n        this.scrollView = new ScrollView(\n            this.context,\n            this,\n            this.config.scrollView,\n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        // this.createViewport()\n        this.autoRender()\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    createViewport() {\n        this.dataViewport = document.createElement('div')",
    "relevantFileList": [],
    "filePath": "src/utils/ContextMenu.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ";",
      "CodeQwen2.5-7B": ";\r",
      "copilot": "this.wrapper.setAttribute('class', 'market-context-menu')\r\n        document.app",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "import ",
    "infill": "{ createRouter, createWebHashHistory } from 'vue-router'",
    "suffix": "\r\n\r\nimport Generator from '../views/Generator.vue'\r\nimport LayerPreview from '../views/LayerPreview.vue'\r\n\r\nconst routes = [\r\n  {path: '/generator', component: Generator},\r\n  {path: '/layer-preview', component: LayerPreview}\r\n]\r\n\r\nexport default createRouter({\r\n  history: createWebHashHistory(),\r\n  routes\r\n})",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "chrome-extension/src/router/index.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "{createRouter, createWebHashHistory} from 'vue-router'",
      "CodeQwen2.5-7B": "{createRouter, createWebHashHistory} from 'vue-router'",
      "copilot": "{ createRouter, createWebHashHistory } from 'vue-router'",
      "CodeQwen1.5-7B": " { createRouter, createWebHashHistory } from 'vue-router'\r"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    autoRenderInterval: 200,\n    autoSortInterval: 8000,\n    onRowSelected: ()=>{}\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    canvasBorderColor: '#cbcbe1',\n    dataChangeBackground: \"#84D0FE\",\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\",\n    scrollView: {\n        backgroundColor: \"#ffffff\",\n        buttonColor: \"#b2b2c5\",\n        buttonHoverColor: \"#757699\",\n    }\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    canvasBorderColor: '#181c21',\n    dataChangeBackground: \"#0E3678\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n// 经典风格\nconst blackThemeConfig = {\n    canvasBorderColor: '#4D0000',\n    dataChangeBackground: \"#1F1F1F\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst NeedBlinkFields = ['涨幅', '涨速']\nconst MainField = '代码'\nconst HightlightValue = 1\nconst AttenuationValue = 0.5\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined\n        this.overColValue = undefined\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        this.needBlinkConfig = {}\n        this.originalRangeData = null\n        this.dataChangePool = {}\n        this.autoRenderFlag = null\n        this.autoSortFlag = null\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}\n    }\n    updateConfig(config) {\n        let themeType = config && config.theme || this.defaultTheme\n        config = {...config, ...TableTheme[themeType]}\n        this.config = {...defaultConfig, ...config}\n    }\n    mergeChangedData() {\n        let keys = Object.keys(this.dataChangePool)\n        if (keys.length) {\n            keys.forEach(key => {\n                let item = this.dataChangePool[key]\n                let sourceItem = this.dataMap[key]\n                if (sourceItem) {\n                    // for (let field in item) {\n                    //     sourceItem[field] = item[field]\n                    // }\n                    Object.assign(sourceItem, item)\n                }\n            })\n        }\n        this.dataChangePool = {}\n    }\n    getScrollView() {\n        return this.scrollView\n    }\n    isPlanToRedraw() {\n        if (!this.requestAnimationFrame) {\n            return false\n        }\n        return (this.drawconf !== undefined && this.drawconf.fulldraw)\n    }\n    setR(r) {\n        if (this.r === r) return\n        this.r = r\n        this.needToCalc = true\n        this.needToCalcFont = true \n    }\n    askForReDraw(fromType, config) {\n        this.fromType = fromType\n        if(config === undefined) {\n            this.drawconf = {fulldraw: true}\n            this.mergeChangedData()\n        } else {\n            if (this.drawconf !== undefined && this.drawconf.drawOnly) {\n                this.drawconf.drawOnly = Array.from(new Set([...this.drawconf.drawOnly, ...config.drawOnly]))\n            } else {\n                this.drawconf = {...config, ...{fulldraw: false}}\n            }\n        }\n        if (this.requestAnimationFrame) {\n            return\n        }\n        this.requestAnimationFrame = requestAnimationFrame(()=> {\n            this.drawHoverCanvas()\n            if (this.fromType === 'setOverRow') {\n                return\n            }\n            this.drawSelectedCanvas()\n            if (this.fromType === 'setRowSelected') {\n                return\n            }\n            this.drawCanvas()\n            this.drawFixedColumns()\n            this.mergeChangedData()\n            this.scrollView.draw()\n        })\n    }\n    askForReIndex() {\n        this.calcIndex()\n        this.askForReDraw('setFullRedraw')\n    }\n    resize() {}\n    doResize(width, height) {\n        this.setCanvasSize(width * this.r, height * this.r)\n    }\n    setCanvasSize(width, height) {\n        this.canvasWidth = width\n        this.canvasHeight = height\n        this.reCalcForScrollView()\n    }\n    setTheme(themeType) {\n        let themeConfig = TableTheme[themeType]\n        this.config = {...this.config, ...themeConfig}\n        this.updateThemeStyle()\n        this.scrollView.updateConfig(this.config.scrollView)\n        this.askForReDraw('setFullRedraw')\n    }\n    setSort(sortCol) {\n        this.sortCol = sortCol\n        this.customSort = undefined\n        this.askForReIndex()\n        this.viewDataChange()\n        if (this.autoSortFlag) {\n            clearTimeout(this.autoSortFlag)\n            this.autoSortFlag = null\n        }\n        // 后续改进：排序字段的数据源还需要进行更新，在进行重新排序逻辑\n        this.autoSortFlag = setTimeout(()=> {\n            this.setSort(this.sortCol)\n        }, this.config.autoSortInterval)\n    }\n    setReset() {\n        this.sortCol = undefined\n        this.customSort = undefined\n        if (this.autoSortFlag) {\n            clearTimeout(this.autoSortFlag)\n        }\n        this.autoSortFlag = null\n        this.askForReIndex()\n        this.viewDataChange()\n    }\n    unSelected",
    "infill": "Row() {\n        \n    }",
    "suffix": "\n    updateData(rangeData) {\n        rangeData.forEach(itemData => {\n            let key = itemData[MainField]\n            if (!this.dataChangePool[key]) {\n                this.dataChangePool[key] = itemData\n            } else {\n                let changeItem = this.dataChangePool[key]\n                for (let field in itemData) {\n                    if (itemData[field] !== changeItem[field]) {\n                        changeItem[field] = itemData[field]\n                    }\n                }\n            }\n            let itemChangeData = this.dataChangePool[key]\n            NeedBlinkFields.forEach(field => {\n                if (itemChangeData[field] === undefined) return\n                if (!this.needBlinkConfig[itemChangeData[MainField]]) this.needBlinkConfig[itemChangeData[MainField]] = {}\n                this.needBlinkConfig[itemChangeData[MainField]][field] = {highlight: HightlightValue}\n            })\n        })\n    }\n    viewDataChange() {\n    }\n    updateThemeStyle() {\n    }\n    updateColumns(col) {\n        this.orgColum = col\n        this.column = []\n        let i\n        for (i = 0; i < col.length; i++) {\n            if (col[i].visible === false) continue\n            const index = this.column.length\n            this.column[index] = {\n                ...{\n                    align: Align.left,\n                    index,\n                    leftPos: 0,\n                    orginalCol: col[i],\n                    rightPos: 0,\n                    width: 50\n                }, ...col[i]\n            }\n            if (this.column[index].field === '__idxnum__' || this.column[index].field === '__rownum__') {\n                this.column[index].allowEdit = false\n            }\n        }\n        this.needToCalc = true\n        this.resize()\n        this.calcColum()\n    }\n    calcColum() {\n        this.needToCalc = false\n        let leftPos = 0\n        let i\n        for (i = 0; i < this.column.length; i++) {\n            this.column[i].leftPos = leftPos\n            leftPos += this.column[i].width * this.r\n            this.column[i].rightPos = leftPos\n        }\n        this.fixedColumns = this.column.filter(item => item.fixed)\n        this.fixedColumnWidth = this.fixedColumns.reduce((total, item) => total + item.width, 0)\n        // console.log(this.fixedColumnWidth)\n        this.reCalcForScrollView()\n    }\n    setIsFocus(isFocus) {\n        if (this.isFocus !== isFocus) {\n            this.isFocus = isFocus\n        }\n    }\n    reCalcForScrollView() {\n        if (this.dataIndex === undefined) return\n        let w = 0\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            if (this.column) {\n                let i\n                for(i = 0; i < this.column.length; i++) {\n                    w+= this.column[i].width * this.r + 0\n                }\n            } else {\n                w = 0\n            }\n        }\n        \n        let h = 0\n        const cellHeight = this.cellHeight\n        const calc = (index) => {\n            let i\n            switch (index.type) {\n                case CanvasTableIndexType.Index:\n                    h += cellHeight * index.list.length\n                    break\n                default:\n                    break\n            }\n        }\n        calc(this.dataIndex.index)\n        if (this.scrollView && w !== undefined) {\n            this.scrollView.setSize(this.r, this.canvasWidth, this.canvasHeight, w, h * this.r)\n            this.fireReCalcForScrollView(w / this.r, h + this.headerHeight)\n        }\n    }\n    fireReCalcForScrollView(width, height) {\n        const scrollView = this.scrollView\n        if (scrollView) {\n            let i\n            for (i = 0; i < this.eventReCalcForScrollView.length; i++) {\n                try {\n                    this.eventReCalcForScrollView[i](this, width, height, scrollView);\n                } catch {\n                    this.logError(\"fireReCalcForScrollView\")\n                }\n            }\n        }\n    }\n    calcIndex() {\n        if (this.data === undefined) return\n        const index = []\n        let i\n        // customFliter过滤 暂不支持\n        for (i = 0; i < this.data.length; i++) {\n            index[index.length] = i\n        }\n\n        // customSort排序 暂不支持\n        const sortCol = this.sortCol;\n        if (sortCol && sortCol.length) {\n            index.sort((a, b) => {\n                let sortColIndex;\n                for (sortColIndex = 0; sortColIndex < sortCol.length; sortColIndex++) {\n                    let d;\n                    const col = sortCol[sortColIndex];\n                    switch (col.col.field) {\n                        case \"__rownum__\":\n                            d = a - b;\n                            if (d !== 0) { return d * col.sort; }\n                            break;\n                        default:\n                            const da = this.getUpdateDataOrData(a, col.col.field);\n                            const db = this.getUpdateDataOrData(b, col.col.field);\n                            if (da === undefined || da === null) {\n                                if (db === undefined || db === null) {\n                                    continue;\n                                }\n                                return col.sort;\n                            }\n                            if (db === undefined || db === null) {\n                                return -1 * col.sort;\n                            }\n                            if (typeof da === \"string\" && typeof db === \"string\") {\n                                if (da.indexOf('%') !== -1 && db.indexOf('%') !== -1) {\n                                    let pda = parseFloat(da)\n                                    let pdb = parseFloat(db)\n                                    d = pda - pdb;\n                                    if (d !== 0) { return d * col.sort; }\n                                    continue;\n                                }\n                                if (da === \"\") {\n                                    if (db === \"\") {\n                                        continue;\n                                    }\n                                    return col.sort;\n                                }\n\n                                if (db === \"\") {\n                                    return -1 * col.sort;\n                                }\n                                d = da.localeCompare(db);\n                                if (d !== 0) { return d * col.sort; }\n                                continue;\n                            }\n                            if (da > db) {\n                                return col.sort;\n                            }\n                            if (da < db) {\n                                return -1 * col.sort;\n                            }\n                    }\n                }\n                return 0;\n            });\n        }\n        this.dataIndex = {\n            index: { type: CanvasTableIndexType.Index, list: index},\n            mode: CanvasTableMode.ColMode\n        }\n        this.reCalcForScrollView()\n    }\n    getUpdateDataOrData(row, field) {\n        const rowData = this.editData[row]\n        if (rowData && rowData.hasOwnProperty(field)) {\n            return rowData[field]\n        }\n\n        return (this.data[row])[field]\n    }\n    getDrawData(colItem, rowId, indexId) {\n        let data\n        switch (colItem.field) {\n            case \"__rownum__\":\n                rowId = rowId + 1\n                data = rowId.toString()\n                break\n            case \"__idxnum__\":\n                data = indexId.toString()\n                break\n            default:\n                data = String(this.getUpdateDataOrData(rowId, colItem.field))\n        }\n\n        if (colItem.customData) {\n            data = colItem.customData(this, data, this.data[rowId], this.data, rowId, colItem)\n        }\n\n        return data\n    }\n    getViewRange() {\n        const height = this.cellHeight * this.r\n        const ind",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "(row) {\n        if (this.overRowValue === row) this.overRowValue = undefined\n        if (this.selectRowValue === row) this.selectRowValue = undefined\n    }",
      "CodeQwen2.5-7B": "() {",
      "copilot": "Row() {\n        \n    }",
      "CodeQwen1.5-7B": " () {"
    }
  },
  {
    "prefix": "import { MarkerWidth, NODE_LEVEL3_RADIUS } from './config'\n\nvar measureCanvasCtx\nfunction getMeasureCanvasCtx() {\n  if (!measureCanvasCtx) {\n    measureCanvasCtx = document.createElement('canvas').getContext('2d');\n  }\n  return measureCanvasCtx\n}\n\nexport function calNode12LabelLayout({\n  radius,\n  scale,\n  text,\n}) {\n  const ctx = getMeasureCanvasCtx()\n  const diameter = radius * scale * 2\n  const maxFontSize = 20 * scale\n  const minFontSize = 12\n  let fontSize = maxFontSize\n  let textMaxWidth = Math.floor(Math.sqrt(diameter ** 2 + fontSize ** 2) - 24)\n  ctx.font = `${fontSize}px/${fontSize}px MicrosoftYaHei`\n  while(ctx.measureText(text).width > textMaxWidth && fontSize >= minFontSize) {\n    fontSize = fontSize - 1\n    textMaxWidth = Math.floor(Math.sqrt(diameter ** 2 + fontSize ** 2) - 24)\n    ctx.font = `${fontSize}px/${fontSize*1.5}px MicrosoftYaHei`\n  }\n  return {\n    fontSize,\n    textMaxWidth,\n  }\n}\n\nlet measurePath = document.createElementNS(\n  'http://www.w3.org/2000/svg',\n  'path'\n)\nexport function assemblePath1_1(source, target) {\n  let path = [\n    [`M ${ source.position[0] },${ source.position[1] }`],\n    [`L ${ target.position[0] },${ target.position[1] }`],\n  ].join(' ')\n  measurePath.setAttribute('d', path)\n  let pathLength = measurePath.getTotalLength()\n  let sourceP = measurePath.getPointAtLength(source.radius + 12)\n  let targetP = measurePath.getPointAtLength(pathLength - target.radius - MarkerWidth)\n  let rotate = Math.atan2(target.position[1] - source.position[1], target.position[0] - source.position[0])\n  const clipRect = {\n    position: [sourceP.x, sourceP.y],\n    rotation: rotate,\n    x: 0,\n    y: -30,\n    width: pathLength - source.radius - target.radius,\n    height: 60\n  }\n  return {\n    sourceP,\n    targetP,\n    rotate: -rotate,\n    clipRect,\n  }\n}\n\nexport function assemblePath0_1(source, target) {\n  const curveRation = 0.05\n  let length = Math.sqrt((target.position[0] - source.position[0]) ** 2 + (target.position[1] - source.position[1]) ** 2)\n  let rotation = Math.atan2(source.position[1] - target.position[1], source.position[0] - target.position[0])\n  length = length - target.radius\n  const position = [\n    target.position[0] + target.radius * Math.cos(rotation),\n    target.position[1] + target.radius * Math.sin(rotation)\n  ]\n  const clipRect = {\n    position: [length, 0],\n    rotation: Math.PI,\n    x: 0,\n    y: -length * curveRation * 2,\n    width: length,\n    height: length * curveRation * 4\n  }\n  return {\n    points: [\n      [ 0, 0 ],\n      [ length / 4, length * curveRation ],\n      [ length / 4 * 3, -length * curveRation ],\n      [ length, 0 ],\n    ],\n    rotation: -rotation,\n    position: position,\n    clipRect\n  }\n}\n\nexport function assemblePath3_12 (source, target) {\n  let path = [\n    [`M ${ source.position[0] },${ source.position[1] }`],\n    [`L ${ target.position[0] },${ target.position[1] }`],\n  ].join(' ')\n  measurePath.setAttribute('d', path)\n  let pathLength = measurePath.getTotalLength()\n  let sourceP = measurePath.getPointAtLength(NODE_LEVEL3_RADIUS)\n  let targetP = measurePath.getPointAtLength(pathLength - target.radius)\n  const length = Math.sqrt((targetP.x - sourceP.x) ** 2 + (targetP.y - sourceP.y) ** 2)\n  let rotation = Math.atan2(targetP.y - sourceP.y, targetP.x - sourceP.x)\n  const curveRation = 0.1\n  const clipRect = {\n    position: [0, 0],\n    rotation: 0,\n    x: 0,\n    y: -length * curveRation * 2,\n    width: length,\n    height: length * curveRation * 4\n  }\n  return {\n    pathShape: {\n      x1: 0,\n      y1: 0,\n      x2: length,\n      y2: 0,\n      cpx1: length / 2,\n      cpy1: length * curveRation,\n    },\n    rotation: -rotation,\n    sourceP: [sourceP.x, sourceP.y],\n    clipRect,\n  }\n}\n\nexport function assembleRiverPolygon ({ up, contain, down, rotation }, { chartWidth }) {\n  const width = 12\n  const terminalPointX = chartWidth / 2\n  const terminalPointY = Math.abs(chartWidth / 2 * Math.tan(rotation))\n  const upStartPositionDis = [-terminalPointX, -terminalPointY]\n  const downEndPositionDis = [terminalPointX, terminalPointY]\n  return {\n    up: assembleRiverPart(up, width, upStartPositionDis),\n    contain: assembleRiverPart(contain, width),\n    down: assembleRiverPart(down, width, null, downEndPositionDis)\n  }\n}\n\nfunction assembleRiverPart(part, width, startPositionDis, endPositionDis) {\n  width = width / 2\n  const { startPosition, endPosition } = part;\n  startPositionDis = startPositionDis || startPosition\n  endPositionDis = endPositionDis || endPosition\n  let points = [];\n  const slope = 0.7\n  let startX = startPositionDis[0] + width * slope\n  let endX = endPositionDis[0] + width * slope\n  let x = startX\n  const curveRatio1 = 0.6\n  const curveRatioDis = 0.8\n  while(x < endX) {\n    points.push([x,  -width * (curveRatio1 + Math.random() * curveRatioDis)])\n    x +=  (100 + Math.random() * 30)\n  }\n  points.push([endX,  -width * (curveRatio1 + Math.random() * curveRatioDis)])\n\n  startX = endPositionDis[0] - width * slope\n  endX = startPositionDis[0] - width * slop",
    "infill": "(width, height)\r\n  let centerX = x + width",
    "suffix": "\r\n}\r\n",
    "relevantFile": "<file_path>src/views/Home/components/Chain/nodeTopo/NTBase.js\nimport * as zrender from '@/third/zrender/zrender'\n\nclass NTBase {\n  constructor({ container }) {\n\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2],\n      silent: true,\n    })\n    this.zr.add(this.rootGroup)\n\n  }\n\n  pause() {\n    this.zr.animation.pause()\n  }\n\n  resume() {\n    this.zr.animation.resume()\n  }\n\n  destroy() {\n    this.zr.dispose()\n    this.container.removeChild(this.canvas)\n  }\n}\n\nexport { NTBase }\n<file_path>src/views/Home/components/Chain/nodeTopo/NTContain.js\n      })\n    })\n    this.rootGroup.add(nodeGroup)\n    return new Promise((resolve) => {\n      nodeGroup.traverse(child => {\n        child.animateTo({\n          style: {\n            opacity: 1\n          }\n        }, {\n          duration: 1000,\n          easing: 'cubicOut',\n          done: () => {\n            resolve(nodeGroup)\n          }\n        })\n      })\n    })\n  }\n\n  blurNodeGroup(nodeGroup, toOpacity = 0.1) {\n    return new Promise((resolve) => {\n      nodeGroup.childAt(1).animateTo({\n        style: {\n          opacity: toOpacity\n        }\n      }, {\n        duration: 500,\n        easing: 'cubicOut',\n        done: () => {\n          resolve()\n        }\n      })\n    })\n  }\n\n  showRootLabel() {\n    const nodeData = this.rootData\n    const { fontSize } = calLabelLayout({\n      width: width - 24,\n      text: nodeData.name,\n      maxFontSize: 48,\n      minFontSize: 12,\n      isBold: true\n    })\n    const labelEl = new zrender.Text({\n      style: {\n        text: nodeData.name,\n        textLineHeight: fontSize,\n        fontSize: fontSize,\n        fontFamily: 'MicrosoftYaHei',\n        fontWeight: 'bold',\n        fill: ' #000000',\n        align: 'center',\n        verticalAlign: 'middle',\n        x: 0,\n        y: height / 2 + 24 + 5 + 24,\n        textShadowOffsetX: 0,\n        textShadowOffsetY: 4,\n        textShadowBlur: 8,",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/ChainChart/utils/index.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "e",
      "CodeQwen2.5-7B": "e",
      "copilot": "(width, height)\r\n  let centerX = x + width",
      "CodeQwen1.5-7B": "e"
    }
  },
  {
    "prefix": "window.registerPlatformAndAction = ({ platformConfig }) => {\n  console.log(platformConfig);\n  //依次执行otherplatform的verify，都不满足适用defalut的\n  const { defaultPlatform, otherPlatform } = platformConfig;\n  let usingPlatform = defaultPlatform;\n  for (let i = 0; i < otherPlatform.length; i++) {\n    let curr",
    "infill": "entPlatform = otherPlatform[i];",
    "suffix": "\r\n    const { verify } = currentPlatform;\r\n    if (verify && verify()) {\r\n      usingPlatform = currentPlatform;\r\n      break;\r\n    }\r\n  }\r\n  //获取到当前平台的ke\r\n};\r\n\r\nwindow.registerPlatformAndAction({\r\n  platformConfig: {\r\n    defaultPlatform: {\r\n      key: 'ainvest',\r\n      cssKey: 'f10-in-pc',\r\n      statPrefix: 'lhsa',\r\n    },\r\n    otherPlatform: [\r\n      {\r\n        des: 'pc',\r\n        uniqueKey: 'f10-in-pc',\r\n        verify: () => !!window._pc_jsBridge_,\r\n        statPrefix: 'lhsa_pc',\r\n      },\r\n      {\r\n        des: 'web',\r\n        uniqueKey: 'f10-in-pc',\r\n        verify: () => !!window._web_jsBridge_,\r\n        statPrefix: 'lhsa_web',\r\n      },\r\n    ],\r\n  },\r\n});\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/1.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "entPlatform = otherPlatform[i];",
      "CodeQwen2.5-7B": "entPlatform = otherPlatform[i];",
      "copilot": "entPlatform = otherPlatform[i];",
      "CodeQwen1.5-7B": " entPlatform = otherPlatform[i];"
    }
  },
  {
    "prefix": "const Parser = require('web-tree-sitter');\nconst path",
    "infill": " = require('path');",
    "suffix": "\n(async () => {\n    await Parser.init();\n    const parser = new Parser();\n    parser.setLanguage(await Parser.Language.load(path.join(__dirname,  `./tree-sitter-javascript.wasm`)));\n    const sourceCode = 'let x = 1; console.log(x);';\n    const tree = parser.parse(sourceCode);\n    console.log(tree.rootNode.toString());\n})();\n\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "wasm/tr.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "= require('path')",
      "CodeQwen2.5-7B": " = require('path');",
      "copilot": " = require('path');",
      "CodeQwen1.5-7B": "  = require('path');"
    }
  },
  {
    "prefix": "import Vue from 'vue'\nimport CommandBox from '@/components/CommandBox/CommandBox.vue'\nimport { checkCommandBoxPlatformEnable } from '@/components/CommandBox/utils/index.js'\nimport * as commandBoxApi from '@/api/commandBoxApi'\nimport {TaLog} from '@/utils'\n\nexport default {\n  data () {\n    return {\n      commandBoxState: {\n        ennable: false,  // 是否启用指令框-根据灰度接口获取\n        active: false,  // 指令框是否激活中\n        searchParam_IndexSelect: '',  // 指标库表指令框搜索参数\n        searchParam_Dataset: '',  // 数据集合指令框搜索参数\n        searchParam_Selfbuilt: '',  // 自建数据指令框搜索参数\n      },\n      indexActiveCommandMode: 'IndexSelect',  // 指标库表指令框当前模式\n      screenActiveTab: null,  // 数据看板当前激活的tab\n    }\n  },\n  watch: {\n    activeTab(val) {\n      if (val === 'edb' && this.indexActiveCommandMode !== '') {\n        this.switchCommandBoxMode({ mode: this.indexActiveCommandMode })\n        this.commandBoxInstance && this.commandBoxInstance.show()\n      } else if (val === 'screen' && this.screenActiveTab) {\n        this.switchCommandBoxMode({ mode: 'Screen' })\n        this.commandBoxInstance && this.commandBoxInstance.show()\n      } else {\n        this.commandBoxInstance && this.commandBoxInstance.hide()\n      }\n    },\n    commandBoxState: {\n      deep: true,\n      handler: function (val) {\n        this.saveCommandBoxState()\n      }\n    },\n  },\n  created () {\n    this.commandBoxInstance = null\n    this.getUserTypeCommandBoxAuth()\n  },\n  beforeDestroy () {\n    this.destroyCommandBox()\n  },\n  methods: {\n    getUserTypeCommandBoxAuth() {\n      if (checkCommandBoxPlatformEnable()) {\n        this.saveCommandBoxState()\n        commandBoxApi.getUserTypeCommandBox().then(res => {\n          if (res.data) {\n            this.commandBoxState.ennable = res.data || false\n          }\n        })\n      }\n    },\n    // 保存指令框激活状态\n    saveCommandBoxState() {\n      localStorage.setItem(\n        'edb_commandBox_state',\n        JSON.stringify(this.commandBoxState)\n      )\n    },\n    // 触发命令框\n    triggerCommandBox (data) {\n      if (data.action === 'focusCommandBox') {\n        this.focusCommandBox(data)\n      } else if (data.action === 'switchCommandBoxMode') {\n        this.switchCommandBoxModeFromEdb({\n          mode: data.args\n        })\n      } else if (data.action === 'syncSelectItems') {\n        if (this.commandBoxInstance) {\n          this.commandBoxInstance.syncSelectItems(data.args)\n        }\n      } else if (data.action === 'updateScreenActiveTab') {\n        this.screenActiveTab = data.args\n      } else if (data.action === 'addBoardSuccess') {\n        this.$message.success($t('MANUAL819'))\n      } else if (data.action === 'closeCommandBox') {\n        this.closeCommandBox({ shouldTa: false })\n      } else if (data.action === 'toSearchAiWithcommandBoxHistory') {\n        this.commandBoxInstance.toSearchAiWithcommandBoxHistory()\n      }\n    },\n    focusCommandBox (data) {\n      this.openCommandBox({\n        initMode: data.args.mode,\n        initPosition: data.args.mode === 'Screen' ? { left: Math.max((window.innerWidth / 2 - 320), 0), top: 100 } : { left: 12, top: 73 },\n        initWidth: data.args.width || 640,\n      }).then(() => {\n        this.commandBoxInstance.focus()\n      })\n    },\n    openCommandBox ({ initMode, initPosition, initWidth }) {\n      if (!this.commandBoxInstance) {\n        const CommandBoxComponent = Vue.extend(CommandBox)\n        const _this = this\n        this.commandBoxInstance = new CommandBoxComponent({\n          beforeCreate () {\n            this._i18n = _this._i18n \n          },\n          propsData: {\n            ContainerRef: this,\n            initMode,\n            initPosition,\n            initWidth,\n          }\n        })\n        this.commandBoxInstance.$on('close', () => {\n          this.closeCommandBox({ shouldTa: true })\n        })\n        this.commandBoxInstance.$on('syncSearchParam', (mode, searchParam) => {\n          this.commandBoxState[`searchParam_${ mode }`] = searchParam\n        })\n        let mountEl = document.createElement('div')\n        document.body.appendChild(mountEl)\n        this.commandBoxInstance.$mount(mountEl)\n        this.commandBoxState.active = true\n        TaLog({id: `iFinD_macroEconomy_${ initMode === 'Screen' ? 'DASHBOARD' : 'WEBEDB' }_AICopilot_On`})\n        return this.$nextTick()\n      } else {\n        this.commandBoxState.active = true\n        this.commandBoxInstance.show()\n        TaLog({id: `iFinD_macroEconomy_${ this.commandBoxInstance.mode === 'Screen' ? 'DASHBOARD' : 'WEBEDB' }_AICopilot_On`})\n        return Promise.resolve()\n      }\n    },\n    closeCommandBox ({ shouldTa",
    "infill": " = false ",
    "suffix": "}) {\r\n      this.commandBoxState.active = false\r\n      this.commandBoxInstance && this.commandBoxInstance.hide()\r\n      if () {\r\n      TaLog({id: `iFinD_macroEconomy_${ this.commandBoxInstance.mode === 'Screen' ? 'DASHBOARD' : 'WEBEDB' }_AICopilot_Off`})}\r\n    },\r\n    destroyCommandBox () {\r\n      if (this.commandBoxInstance) {\r\n        this.commandBoxInstance.$destroy()\r\n        document.body.removeChild(this.commandBoxInstance.$el)\r\n        this.commandBoxInstance = null\r\n      }\r\n    },\r\n    // 从指标库表切换指令框内容模式\r\n    switchCommandBoxModeFromEdb({ mode }) {\r\n      if (mode) {\r\n        this.indexActiveCommandMode = mode\r\n        this.switchCommandBoxMode({ mode })\r\n        if (this.commandBoxState.active) {\r\n          this.commandBoxInstance && this.commandBoxInstance.show()\r\n        }\r\n      } else {\r\n        this.indexActiveCommandMode = ''\r\n        this.commandBoxInstance && this.commandBoxInstance.hide()\r\n      }\r\n    },\r\n    switchCommandBoxMode({ mode }) {\r\n      if (this.commandBoxInstance) {\r\n        this.commandBoxInstance.switchMode(mode)\r\n      }\r\n    },\r\n    // 打开数据看板的指令框\r\n    focusCommandBoxScreen() {\r\n      this.triggerCommandBox({\r\n        action: 'focusCommandBox',\r\n        args: {\r\n          mode: 'Screen',\r\n        },\r\n      })\r\n    },\r\n  },\r\n}\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/pages/dashboard/mixins/commandBoxMixin.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "= false",
      "CodeQwen2.5-7B": " ",
      "copilot": " = false ",
      "CodeQwen1.5-7B": " }) {"
    }
  },
  {
    "prefix": "\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    // 设置搜索模式\n    this.$edbStore.states.searchMode = 'commandBox'\n  },\n  methods: {\n    reactCommandBox(data) {\n      if (data.action === 'closeCommandBox') {\n        this.$edbStore.states.commandBoxState.active = false\n      } else if (data.action === 'locateIndex') {\n        this.locateIndex(data.args)\n      } else if (data.action === 'locateAddIndex') {\n        this.locateIndex(data.args)\n        this.batchAddIndex([data.args])        \n      } else if (data.action === 'addSubjectToDrawtool') {\n        this.addSubjectToDrawtool(data.args)\n      } else if (data.action === 'doSearch') {\n        this.getActiveLeftTabRef().doSearch(data.args)\n      } else if (data.action === 'batchAddIndexAndExtractData') {\n        this.batchAddIndexAndExtractData(data.args)\n      } else if (",
    "infill": "data.action === 'delectSearchSelectItem') {\r\n        this.getActiveLeftTabRef().delectSearchSelectItem(data.args)\r\n     ",
    "suffix": " }\r\n    },\r\n    getActiveLeftTabRef() {\r\n      if (this.activeLeftTab === 'IndexSelect') {\r\n        return this.$refs.indexSelectRef\r\n      } else if (this.activeLeftTab === 'Dataset') {\r\n        return this.$refs.datasetRef\r\n      } else if (this.activeLeftTab === 'Selfbuilt') {\r\n        return this.$refs.selfbuiltRef\r\n      }\r\n    },\r\n  }\r\n}",
    "relevantFile": "<file_path>src/pages/dashboard/mixins/commandBoxMixin.js\nimport Vue from 'vue'\nimport CommandBox from '@/components/CommandBox/CommandBox.vue'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    this.commandBoxInstance = null\n  },\n  mounted () {\n    // this.openCommandBox()\n    window.addEventListener('beforeunload', this.saveCommandBoxPosition)\n  },\n  beforeDestroy () {\n    this.closeCommandBox()\n    // this.commandBoxInstance = null\n  },\n  methods: {\n    saveCommandBoxPosition() {\n      if (this.commandBoxInstance) {\n        localStorage.setItem(\n          'edb_commandBox_position',\n          JSON.stringify(this.commandBoxInstance.position)\n        )\n      }\n    },\n    // 触发命令框\n    triggerCommandBox (data) {\n      // console.log('triggerCommandBox', data)\n      if (data.action === 'focusCommandBox') {\n        let initPosition\n        try {\n          initPosition = JSON.parse(localStorage.getItem('edb_commandBox_position'))\n        } catch (e) { console.log(e) }\n        this.openCommandBox({\n          initMode: data.args,\n          // initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 74 }\n          initPosition: initPosition || (data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 174 })\n        }).then(() => {\n          this.commandBoxInstance.focus()\n        })\n      } else if (data.action === 'switchCommandBoxMode') {\n        this.switchCommandBoxMode({\n          mode: data.args\n        })\n      } else if (data.action === 'syncSelectItems') {\n        if (this.commandBoxInstance) {\n          this.commandBoxInstance.syncSelectItems({\n            selectItems: data.args,\n          })\n        }\n      }\n    },\n    openCommandBox ({ initMode, initPosition }) {\n      if (!this.commandBoxInstance) {\n        const CommandBoxComponent = Vue.extend(CommandBox)\n        const _this = this\n        this.commandBoxInstance = new CommandBoxComponent({",
    "relevantFileList": [],
    "filePath": "src/views/Home/mixins/homeMixinCommandBox.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "data.action === 'changeTab') {\n        this.changeTab(data.args)\n      } else if (data.action === 'saveSubject') {\n        this.saveSubject(data.args)\n      }",
      "CodeQwen2.5-7B": "data.action === 'batchAddIndex') {",
      "copilot": "data.action === 'delectSearchSelectItem') {\r\n        this.getActiveLeftTabRef().delectSearchSelectItem(data.args)\r\n     ",
      "CodeQwen1.5-7B": " data.action === 'batchAddIndex') {\r"
    }
  },
  {
    "prefix": "import CustomCanvasTable from \"./CustomCanvasTable\"\nimport ScrollView from \"./ScrollView\"\nimport debounce from \"lodash.debounce\";\nfunction TouchEventToCanvasTableTouchEvent(event) {\n    const x = {changedTouches: [], touchs: []};\n    let i;\n    for (i = 0; i < event.changedTouches.length; i++) {\n        x.changedTouches.push({\n            pageX: event.changedTouches[i].pageX,\n            pageY: event.changedTouches[i].pageY\n        });\n    }\n    for (i = 0; i < event.touches.length; i++) {\n        x.touches.push({\n            pageX: event.touches[i].pageX,\n            pageY: event.touches[i].pageY\n        });\n    }\n}\n\nexport default class CanvasTable extends CustomCanvasTable {\n    constructor(canvas, col, data, config) {\n        super(config)\n        this.data = data\n        this.canvas = (typeof canvas === 'string') ? document.getElementById(canvas) : canvas\n        const context = this.canvas.getContext('2d')\n        if (context === null) { throw new Error('context is null')}\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)\n        this.context = context\n        this.updateThemeStyle()\n        this.scrollViewChange = debounce(this.scrollViewChange, 200)\n        this.scrollView = new ScrollView(\n            this.context,\n            this,\n            this.config.scrollView,\n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n    }\n    updateThemeStyle() {\n        this.canvas.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.canvas.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => this.data[indexId])\n        console.log(rangeData)\n    }\n    viewDataChange() {\n        this.scrollView",
    "infill": "Change()",
    "suffix": "\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();\n        this.TouchStart(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchMove = (e) => {\n        e.preventDefault();\n        this.TouchMove(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchEnd = (e) => {\n        e.preventDefault();\n        this.TouchEnd(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasDblClick = (e) => {\n        e.preventDefault();\n        //  this.dblClick(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.dblClick(e.offsetX, e.offsetY);\n    }\n    canvasWheel = (e) => {\n        e.preventDefault();\n        this.wheel(e.deltaMode, e.deltaX, e.deltaY);\n    }\n    canvasMouseDown = (e) => {\n        e.preventDefault();\n        this.canvas.focus();\n        // this.mouseDown(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseDown(e.offsetX, e.offsetY);\n    }\n    canvasMouseLeave = () => {\n        this.mouseLeave();\n    }\n    canvasMouseUp = (e) => {\n        e.preventDefault();\n        // this.mouseUp(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseUp(e.offsetX, e.offsetY);\n    }\n    canvasMouseUpExtended = (e) => {\n        e.preventDefault();\n        this.mouseUpExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n    }\n    canvasMouseMoveExtended = (e) => {\n        e.preventDefault();\n        // this.mouseMoveExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMoveExtended(e.offsetX, e.offsetY);\n    }\n    canvasMouseMove = (e) => {\n        e.preventDefault();\n        // this.mouseMove(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMove(e.offsetX, e.offsetY);\n    }\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ".viewDataChange()",
      "CodeQwen2.5-7B": "Change()",
      "copilot": "Change()",
      "CodeQwen1.5-7B": " Change()"
    }
  },
  {
    "prefix": "import { addClass } from '@/u",
    "infill": "tils/index",
    "suffix": "'\r\n\r\nexport default {\r\n  play() {\r\n    this.chart && this.chart.play()\r\n  },\r\n  pause() {\r\n    this.chart && this.chart.pause()\r\n  },\r\n  resume() {\r\n    this.chart && this.chart.resume()\r\n  },\r\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/businessLogics/blPlayMixin.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "tils/dom",
      "CodeQwen2.5-7B": "tils/dom",
      "copilot": "tils/index",
      "CodeQwen1.5-7B": " tils/dom"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { sleep } from '@/utils/index'\n\nexport class NTParallel {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n    // const canvas = document.createElement('div')\n    // canvas.style.width = '100%'\n    // canvas.style.height = '100%'\n    // this.canvas = canvas\n    // this.container.appendChild(this.canvas)\n    // this.zr = zrender.init(this.canvas, {\n    //   devicePixelRatio: window.devicePixelRatio,\n    //   width: this.width,\n    //   height: this.height,\n    //   renderer: 'svg'\n    // })\n\n    this.data = [\n      {\n        name: '滚筒洗衣机',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n    ]\n\n    this.initLayout = null\n    this.gridLayouts = null\n    this.calLayout()\n\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2]\n    })\n    this.zr.add(this.rootGroup)\n\n    this.render()\n\n  }\n\n  calLayout() {\n    this.initLayout = {\n      position: [0, 0],\n      scale: 1,\n    }\n    this.gridLayouts = [\n      {\n        position: [-125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [-125, 153],\n        scale: 0.5,\n      },\n      {\n        position: [125, 153],\n        scale: 0.5,\n      }\n    ]\n  }\n\n  async render() {\n    for (let i = 0; i < this.data.length; i++) {\n      this.blurAllNodes()\n      const nodeGroup = await this.addNode(i)\n      await this.playNode(nodeGroup, i)\n      await this.resumeAllNodes()\n      await",
    "infill": " sleep(1000)",
    "suffix": "\r\n    }\r\n  }\r\n\r\n  blurAllNodes() {\r\n    this.rootGroup.traverse(child => {\r\n      child.animateTo({\r\n        style: {\r\n          opacity: 0.1\r\n        }\r\n      })\r\n    })\r\n    // return new Promise((resolve) => {\r\n    //   this.rootGroup.traverse(child => {\r\n    //     child.animateTo({\r\n    //       style: {\r\n    //         opacity: 0.1\r\n    //       }\r\n    //     }, {\r\n    //       duration: 500,\r\n    //       // easing: 'cubicOut',\r\n    //       done: () => {\r\n    //         resolve()\r\n    //       }\r\n    //     })\r\n    //   })\r\n    // })\r\n  }\r\n\r\n  resumeAllNodes() {\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          // easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  addNode(index) {\r\n    const nodeData = this.data[index]\r\n    const fromLayout = this.initLayout\r\n    \r\n    let nodeGroup = new zrender.Group({\r\n      position: fromLayout.position.slice(),\r\n      scale: [fromLayout.scale, fromLayout.scale],\r\n    })\r\n    const width = 428\r\n    const height = 538\r\n    nodeGroup.add(new zrender.Image({\r\n      style: {\r\n        image: nodeData.image,\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        opacity: 0.1,\r\n      },\r\n    }))\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      nodeGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          // easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  playNode(nodeGroup, index) {\r\n    const toLayout = this.gridLayouts[index % 4]\r\n    return new Promise((resolve) => {\r\n      nodeGroup.animateTo({\r\n        position: toLayout.position.slice(),\r\n        scale: [toLayout.scale, toLayout.scale],\r\n      }, {\r\n        duration: 1000,\r\n        easing: 'cubicOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.zr.dispose()\r\n  }\r\n}",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/ChainChartDetail.js\nimport NDValue from '../nodeDetails/NDValue/NDValue'\nimport NDRevenue from '../nodeDetails/NDRevenue/NDRevenue'\nimport NDIndex from '../nodeDetails/NDIndex/NDIndex'\nimport NDArea from '../nodeDetails/NDArea/NDArea'\nimport NDNews from '../nodeDetails/NDNews/NDNews'\nimport NDReport from '../nodeDetails/NDReport/NDReport'\n\nimport BLProduct from '../businessLogics/BLProduct'\nimport BLSubscribe from '../businessLogics/BLSubscribe'\nimport BLAdvertisement from '../businessLogics/BLAdvertisement'\nimport BLDatadriven from '../businessLogics/BLDatadriven'\nimport BLFranchise from '../businessLogics/BLFranchise'\nimport BLCrownfund from '../businessLogics/BLCrownfund'\nimport BLReverseinnovation from '../businessLogics/BLReverseinnovation'\nimport BLService from '../businessLogics/BLService'\nimport BLDirectsales from '../businessLogics/BLDirectsales'\nimport BLFreemium from '../businessLogics/BLFreemium'\nimport BLPlatform from '../businessLogics/BLPlatform'\nimport BLShareeconomy from '../businessLogics/BLShareeconomy'\nimport NodeTopo from '../nodeTopo/NodeTopo'\n\nconst nodeDetailComponentMap = {\n  area: NDArea,\n  revenue: NDRevenue,\n  value: NDValue,\n  index: NDIndex,\n  news: NDNews,\n  report: NDReport,\n\n  bl_product: BLProduct,\n  bl_subscribe: BLSubscribe,\n  bl_advertisement: BLAdvertisement,\n  bl_datadriven: BLDatadriven,\n  bl_franchise: BLFranchise,\n  bl_crownfund: BLCrownfund,\n  bl_reverseinnovation: BLReverseinnovation,\n  bl_service: BLService,\n  bl_directsales: BLDirectsales,\n  bl_freemium: BLFreemium,\n  bl_platform: BLPlatform,\n  bl_shareeconomy: BLShareeconomy,\n\n  nodetopo: NodeTopo,\n}\n\nfunction mixinDetail(ChainChart) {\n  ChainChart.prototype.initNodeDetailState = function () {\n    this.currentNodeDetailIns = null\n  }\n  ChainChart.prototype.showNodeDetail = function (nodeId, detailType) {\n    this.destroyNodeDetail()\n    // const nodeItem = this.store.chartData.nodes.find(item => item.id === nodeId)\n    // if (!nodeItem) {\n    //   return\n    // }\n    let containerEl = document.createElement('div')\n    containerEl.className = 'node-detail-container'\n    this.container.appendChild(containerEl)\n    let insEl = document.createElement('div')\n    containerEl.appendChild(insEl)",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTParallel.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "sleep(1000)",
      "CodeQwen2.5-7B": " sleep(1000)\r",
      "copilot": " sleep(1000)",
      "CodeQwen1.5-7B": "  sleep(1000)\r"
    }
  },
  {
    "prefix": "import CustomCanvasTable from \"./CustomCanvasTable\"\nimport ScrollView from \"./ScrollView\"\nimport debounce from \"lodash.debounce\";\nfunction TouchEventToCanvasTableTouchEvent(event) {\n    const x = {changedTouches: [], touchs: []};\n    let i;\n    for (i = 0; i < event.changedTouches.length; i++) {\n        x.changedTouches.push({\n            pageX: event.changedTouches[i].pageX,\n            pageY: event.changedTouches[i].pageY\n        });\n    }\n    for (i = 0; i < event.touches.length; i++) {\n        x.touches.push({\n            pageX: event.touches[i].pageX,\n            pageY: event.touches[i].pageY\n        });\n    }\n}\n\nexport default class CanvasTable extends CustomCanvasTable {\n    constructor(wrapper, col, data, config) {\n        super(config)\n        this.data = data\n        this.wrapper = (typeof wrapper === 'string') ? document.getElementById(wrapper) : wrapper\n        this.initCanvas()\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.wrapper.clientWidth, this.wrapper.clientHeight)\n        this.updateThemeStyle()\n        this.scrollViewChange = debounce(this.scrollViewChange, 200)\n        this.scrollView = new ScrollView(\n            this.context,\n            this,\n            this.config.scrollView,\n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    initCanvas() {\n        let clientWidth = this.wrapper.clientWidth\n        let clientHeight = this.wrapper.clientHeight\n        this.canvas = this.createCanvas(clientWidth, clientHeight)\n        this.context = this.canvas.getContext('2d')\n        this.hoverCanvas = this.createCanvas(clientWidth, clientHeight)\n        this.hoverContext = this.eventCanvas.getContext('2d')\n        this.backCanvas = this.createCanvas(clientWidth, clientHeight)\n        this.backContext = this.canvas.getContext('2d')\n    }\n    createCanvas(clientWidth, clientHeight) {\n        let canvas = document.createElement('canvas')\n        this.wrapper.appendChild(canvas)\n        canvas.style.width = clientWidth + 'px'\n        canvas.style.height = clientHeight + 'px'\n        return canvas\n    }\n    updateThemeStyle() {\n        this.wrapper.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.wrapper.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        let clientWidth = this.wrapper.clientWidth + 'px'\n        let clientHeight = this.wrapper.clientHeight + 'px'\n        this.canvas.style.width = clientWidth\n        this.canvas.style.height = clientHeight\n        this.eventCanvas.style.width = clientWidth\n        this.eventCanvas.style.height = clientHeight",
    "infill": "this.backCanvas.style.width = clientWidth\n        this.backCanvas.style.height = clientHeight",
    "suffix": "\n        this.setR(window.devicePixelRatio)\n        this.doResize(clientWidth, clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => JSON.parse(JSON.stringify(this.data[indexId])))\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        this.eventCanvas.width = width\n        this.eventCanvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();\n        this.TouchStart(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchMove = (e) => {\n        e.preventDefault();\n        this.TouchMove(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchEnd = (e) => {\n        e.preventDefault();\n        this.TouchEnd(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasDblClick = (e) => {\n        e.preventDefault();\n        //  this.dblClick(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.dblClick(e.offsetX, e.offsetY);\n    }\n    canvasWheel = (e) => {\n        e.preventDefault();\n        this.wheel(e.deltaMode, e.deltaX, e.deltaY);\n    }\n    canvasMouseDown = (e) => {\n        e.preventDefault();\n        this.canvas.focus();\n        // this.mouseDown(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseDown(e.offsetX, e.offsetY);\n    }\n    canvasMouseLeave = () => {\n        this.mouseLeave();\n    }\n    canvasMouseUp = (e) => {\n        e.preventDefault();\n        // this.mouseUp(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseUp(e.offsetX, e.offsetY);\n    }\n    canvasMouseUpExtended = (e) => {\n        e.preventDefault();\n        this.mouseUpExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n    }\n    canvasMouseMoveExtended = (e) => {\n        e.preventDefault();\n        // this.mouseMoveExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMoveExtended(e.offsetX, e.offsetY);\n    }\n    canvasMouseMove = (e) => {\n        e.preventDefault();\n        // this.mouseMove(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMove(e.offsetX, e.offsetY);\n    }\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "this.headerHeight",
      "CodeQwen2.5-7B": "",
      "copilot": "this.backCanvas.style.width = clientWidth\n        this.backCanvas.style.height = clientHeight",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "import Service from '@/server/axios';\nimport { method } from 'lodash';\n\nexport const uploadPluginFileItem = params => {\n  const url = '/standardgwapi/api/chat_search/central/resources/upload';\n  return Service({\n    url,\n    data: params,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'form-data',\n    },\n  });\n};\n\nexport const queryUoloadFileStatus = params =>\n  Service({\n    url: '/standardgwapi/api/chat_search/central/resources/parse_state',\n    params,\n    method: 'GET',\n  });\n\nexport const computedPluginStr",
    "infill": " = (plugin, file) => {}",
    "suffix": "",
    "relevantFile": "<file_path>vue.config.js\n  lintOnSave: false,\n  runtimeCompiler: true,\n  publicPath: isPro ? '//s.thsi.cn/cd/ifind-java-search-bff-web-container/chat-find/' : '',\n  indexPath: `${ftlPath}/index.ftl`,\n  transpileDependencies: ['thsc-ifind-antdv', 'thsc-ifind-stock-f9'],\n  productionSourceMap: false,\n  chainWebpack: config => {\n    // 设置别名\n    config.resolve.alias.set('@public', path.resolve(__dirname, 'public'));\n    config.resolve.alias.set('@jgyLibSrc', path.resolve(__dirname, 'src/assets/js/chat/resource/jgyLib/src'));\n\n    if (process.env.NODE_ENV === 'development') {\n      config.devServer.proxy({\n        '/standardgwstatic/js/uilib/1.8.3/chart/echartsUi.js': {\n          changeOrigin: true,\n          target: 'http://localhost:8080/',\n          pathRewrite: {\n            '/standardgwstatic/js/uilib/1.8.3/chart/': '',\n          },\n        },\n        '/standardgwapi': {\n          changeOrigin: true,\n          // target: 'http://dev.wkd.chat.10jqka.com.cn',\n          target: 'http://172.19.80.62/',\n        },\n      });\n    }\n\n    const oneOfsMap = config.module.rule('less').oneOfs.store;\n    oneOfsMap.forEach(item => {\n      item\n        .use('style-resources-loader')\n        .loader('style-resources-loader')\n        .options({\n          // 这里的路径不能使用 @ 符号，否则会报错\n          patterns: ['./src/assets/styles/variable.less'],\n        })\n        .end();\n    });\n\n    // 排除sprite的文件夹\n    config.module\n      .rule('svg')\n      .test(/\\.svg$/)\n      .exclude.add(/svgSpriteIcon/)\n      .end();\n\n    const svgRule = config.module.rule('spritesvg');\n    svgRule.exclude.add(/node_modules/);\n    svgRule\n      .test(/\\.svg$/)\n      .include.add(/svgSpriteIcon/)\n      .end()\n      .use('svg-sprite-loader')\n      .loader('svg-sprite-loader')\n      .options({\n        symbolId: 'icon-[name]',\n      })\n      .end();\n  },\n<file_path>src/store/plugins.js\n    state.fileList.splice(val, 1);\n  },\n  resetFileList(state) {\n    state.fileList = [];\n  },\n  // 设置插件列表弹窗显示状态\n  setShowPluginList(state, val) {\n    state.showPluginList = val;\n  },\n  // 设置当前插件\n  setPluginInfo(state, val) {\n    state.pluginInfo = val;\n  },\n};\n\nconst actions = {\n  async addFileItem({ state }, item) {\n\n    const pluginStr = \n\n    const fileItem = { ...item, status: 'loading' };\n    state.fileList.push(fileItem);\n    // 上传文件\n    let formDara = new FormData();\n    formDara.set('file', item.file);\n    formDara.set('plugin', 'ifindAiImage');\n    // 补充字段\n    const res = await uploadPluginFileItem(formDara);\n    if (res.code === 1 && res.data) {\n      Object.assign(fileItem, res.data, {\n        state: 'loading',\n        //当前之支持单文件上传，先默认去第一个标识\n        paths: res.data.paths[0],\n      });\n    } else {\n      fileItem.status = 'error';\n    }\n    formDara = null;\n  },\n  async queryState({ state }) {\n    // 更新文件状态\n    // 识图单文件，其他插件多文件时考虑控制请求数量\n    state.fileList.forEach(item => {\n      // loading状态且上传成功的查询状态\n      if (item.status === 'loading' && item.sessionId) {\n        const params = {\n          plugin: item.plugin,\n          paths: item.paths,\n          sessionId: item.sessionId,\n        };\n        queryUoloadFileStatus(params).then(res => {\n          // console.log(res);\n          item.status = res.data;\n        });\n      }\n    });\n  },\n};\n\nexport default {\n<file_path>src/assets/js/chat/RobotRequestAnwerAndParse/StreamRequestAnswerAndParse.js\n    // 当前答案的groupKey\n    this.groupKey = '';\n    // 请求的source，用于组件数据中\n    this.source; // NOSONAR\n    // 请求接口SDK的实例\n    this.robotAnswerRequestInstance = null;\n    // 组件数据处理实例\n    this.componentHandler = null;\n  }\n\n  init() {\n    if (!this.robotAnswerRequestInstance) {\n      const { successCallback, errorCallback, endResponseCallback, startResponseCallback } = this;\n      const options = {\n        startResponseCallback,\n        endResponseCallback,\n        needResponseBaseInfoAnswer: true,\n        timeout: STREAM_TIMEOUT,\n        url: '/standardgwapi/api/chat_search/central/stream_query',\n        log: true,\n      };\n      this.robotAnswerRequestInstance = new RobotAnswerRequest(\n        successCallback,\n        errorCallback,\n        options\n      );\n    }\n    this.componentHandler = new ComponentHandler();\n  }\n\n  setGroupKey() {\n    this.groupKey = window.store.getters['messageModule/getGroupKey']();\n  }\n\n  /**\n   * 创建接口请求参数\n   */\n  createStreamApiParams(params) {\n    const {\n      question,\n      session_id,\n      user_id,\n      source,\n      input_type,\n      events = [],\n      entity_info = {},\n      add_info = {},\n      device_type,\n    } = params;\n\n    const finalParams = {\n      question,\n      input_type,\n      session_id,\n      user_id,\n      source,\n      events,\n      entity_info: {\n        ...entity_info,\n        // 设备类型",
    "relevantFileList": [],
    "filePath": "src/server/plugins.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": " = (type, plugin) => {\n    // type 1-插件；2-组件\n    // plugin 插件或组件名称\n    return `${type === 1 ? 'plugin' : 'component'}_${plugin}`;\n  };",
      "CodeQwen2.5-7B": "ucture = params =>",
      "copilot": " = (plugin, file) => {}",
      "CodeQwen1.5-7B": " = params =>"
    }
  },
  {
    "prefix": "window.registerPlatformAndAction = ({ platformConfig }) => {\n  console.log(platformConfig);\n  //依次执行otherplatform的verify，都不满足适用defalut的\n  const { defaultPlatform, otherPlatform } = platformConfig;\n  let usingPlatform = defaultPlatform;\n  for (let i = 0; i < otherPlatform.length; i++) {\n    let currentPlatform = otherPlatform[i];\n    const { verify } = currentPlatform;\n    if (verify && verify()) {\n      usingPlatform = currentPlatform;\n      break;\n    }\n  }\n  //获取到当前平台,提取配置\n  const { key, statPrefix, cssKey, action } = usingPlatform;\n  //把当前platform的key注入到window的_platform_config,\n  window._platform_config = {\n    platform: usingPlatform.key,\n    statId: usingPlatform.statPrefix,\n  };\n  //同时把当前平台的cssKey注入到body的class里面\n  document.body.classList.add(usingPlatform.cssKey);\n  window._action_config = {\n    ...action,\n  };\n};\n\nwindow.registerPlatformAndAction({\n  platformConfig: {\n    defaultPlatform: {\n      key: 'ainvest',\n      cssKey: 'f10-in-pc',\n      statPrefix: 'lhsa',\n      action: {\n        jump: (...arg) => {},\n      },\n    },\n    otherPlatform: [\n      {\n        des: 'pc',\n        uniqueKey: 'f10-in-pc',\n        verify: () => !!window._pc_jsBridge_,\n        statPrefix: 'lhsa_pc',\n        action: {\n          jump: (...arg) => {},\n        },\n      },\n      {\n        des: 'web',\n        uniqueKey: 'f10-in-web',\n        verify: () => !!window._web_jsBridge_,\n        statPrefix: 'lhsa_web',\n        action: {\n          jump: (...arg) => {\n            //web下跳转都走网页的默认新页面跳转",
    "infill": "const [url] = arg;",
    "suffix": "\r\n            window.open(url, '_blank')\r\n            \r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/1.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "方式",
      "CodeQwen2.5-7B": "\r",
      "copilot": "const [url] = arg;",
      "CodeQwen1.5-7B": "\r"
    }
  },
  {
    "prefix": "const path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\n\nmodule.exports = (env, argv) => {\n  const isDev = argv.mode === 'development';\n  return {\n    entry: {\n      adapter",
    "infill": ": './js/adapter.js',",
    "suffix": "\n    },\n    output: {\n      path: path.resolve(__dirname, 'dist'),\n      filename: isDev ? '[name].bundle.js' : '[name].min.js',\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          exclude: /node_modules/,\n          use: {\n            loader: 'babel-loader',\n            options: {\n              presets: ['@babel/preset-env'],\n            },\n          },\n        },\n        {\n          test: /\\.(less|css)$/,\n          use: [MiniCssExtractPlugin.loader, 'css-loader', 'less-loader'],\n        },\n      ],\n    },\n    plugins: [\n      ...pages.map(page => {\n        return new HtmlWebpackPlugin({\n          template: page.template,\n          filename: page.filename,\n          chunks: [page.entry],\n          inject: 'body',\n          minify: isDev\n            ? false\n            : {\n                removeComments: true,\n                collapseWhitespace: true,\n                removeRedundantAttributes: true,\n                useShortDoctype: true,\n                removeEmptyAttributes: true,\n                removeStyleLinkTypeAttributes: true,\n                keepClosingSlash: true,\n                minifyJS: true,\n                minifyCSS: true,\n                minifyURLs: true,\n              },\n        });\n      }),\n      new MiniCssExtractPlugin({\n        filename: isDev ? '[name].css' : '[name].[contenthash:8].css',\n        chunkFilename: isDev ? '[id].css' : '[id].[contenthash:8].css',\n      }),\n      new CopyWebpackPlugin({\n        patterns: [\n          {\n            from: path.resolve(__dirname, './lib/echarts.min.5.5.0.js'),\n            to: 'lib',\n          },\n        ],\n      }),\n    ],\n    devServer: {\n      hot: true,\n      compress: true,\n      port: 8080,\n      proxy: [\n        {\n          context: ['/standardgwstatic', '/standardgwapi/api'],\n          target: 'http://172.19.80.62:80',\n        },\n      ],\n    },\n    devtool: isDev ? 'eval-source-map' : false,\n    optimization: {\n      splitChunks: {\n        chunks: 'all',\n        name: 'common',\n      },\n    },\n  };\n};\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "source/lib/tyb/webpack.config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ": './source/adapter/index.js',\n      index: './source/index.js',\n      chart: './source/chart.js',",
      "CodeQwen2.5-7B": ": './src/adapter.js',",
      "copilot": ": './js/adapter.js',",
      "CodeQwen1.5-7B": ": './src/adapter.js',"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    canvasBorderColor: '#cbcbe1',\n    dataChangeBackground: \"#84D0FE\",\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\",\n    scrollView: {\n        backgroundColor: \"#ffffff\",\n        buttonColor: \"#b2b2c5\",\n        buttonHoverColor: \"#757699\",\n    }\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    canvasBorderColor: '#181c21',\n    dataChangeBackground: \"#0E3678\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n// 经典风格\nconst blackThemeConfig = {\n    canvasBorderColor: '#4D0000',\n    dataChangeBackground: \"#1F1F1F\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst NeedBlinkFields = ['涨幅', '涨速']\nconst MainField = '代码'\nconst HightlightValue = 1\nconst AttenuationValue = 0.5\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined\n        this.overColValue = undefined\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        this.needBlinkConfig = {}\n        this.originalRangeData = null\n        this.dataChangePool = {}\n        this.autoRenderFlag = null\n        this.autoSortFlag = null\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}\n    }\n    updateConfig(config) {\n        let themeType = config && config.theme || this.defaultTheme\n        config = {...config, ...TableTheme[themeType]}\n        this.config = {...defaultConfig, ...config}\n    }\n    mergeChangedData() {\n        let keys = Object.keys(this.dataChangePool)\n        if (keys.length) {\n            keys.forEach(key => {\n                let item = this.dataChangePool[key]\n                let sourceItem = this.dataMap[key]\n                if (sourceItem) {\n                    // for (let field in item) {\n                    //     sourceItem[field] = item[field]\n                    // }\n                    Object.assign(sourceItem, item)\n                }\n            })\n        }\n        this.dataChangePool = {}\n    }\n    getScrollView() {\n        return this.scrollView\n    }\n    isP",
    "infill": ".autoSortTime)",
    "suffix": "\n    }\n    setReset() {\n        this.sortCol = undefined\n        this.customSort = undefined\n        this.askForReIndex()\n        this.viewDataChange()\n    }\n    updateData(rangeData) {\n        rangeData.forEach(itemData => {\n            let key = itemData[MainField]\n            if (!this.dataChangePool[key]) {\n                this.dataChangePool[key] = itemData\n            } else {\n                let changeItem = this.dataChangePool[key]\n                for (let field in itemData) {\n                    if (itemData[field] !== changeItem[field]) {\n                        changeItem[field] = itemData[field]\n                    }\n                }\n            }\n            let itemChangeData = this.dataChangePool[key]\n            NeedBlinkFields.forEach(field => {\n                if (itemChangeData[field] === undefined) return\n                if (!this.needBlinkConfig[itemChangeData[MainField]]) this.needBlinkConfig[itemChangeData[MainField]] = {}\n                this.needBlinkConfig[itemChangeData[MainField]][field] = {highlight: HightlightValue}\n            })\n        })\n    }\n    viewDataChange() {\n    }\n    updateThemeStyle() {\n    }\n    updateColumns(col) {\n        this.orgColum = col\n        this.column = []\n        let i\n        for (i = 0; i < col.length; i++) {\n            if (col[i].visible === false) continue\n            const index = this.column.length\n            this.column[index] = {\n                ...{\n                    align: Align.left,\n                    index,\n                    leftPos: 0,\n                    orginalCol: col[i],\n                    rightPos: 0,\n                    width: 50\n                }, ...col[i]\n            }\n            if (this.column[index].field === '__idxnum__' || this.column[index].field === '__rownum__') {\n                this.column[index].allowEdit = false\n            }\n        }\n        this.needToCalc = true\n        this.resize()\n        this.calcColum()\n    }\n    calcColum() {\n        this.needToCalc = false\n        let leftPos = 0\n        let i\n        for (i = 0; i < this.column.length; i++) {\n            this.column[i].leftPos = leftPos\n            leftPos += this.column[i].width * this.r\n            this.column[i].rightPos = leftPos\n        }\n        this.fixedColumns = this.column.filter(item => item.fixed)\n        this.fixedColumnWidth = this.fixedColumns.reduce((total, item) => total + item.width, 0)\n        // console.log(this.fixedColumnWidth)\n        this.reCalcForScrollView()\n    }\n    setIsFocus(isFocus) {\n        if (this.isFocus !== isFocus) {\n            this.isFocus = isFocus\n        }\n    }\n    reCalcForScrollView() {\n        if (this.dataIndex === undefined) return\n        let w = 0\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            if (this.column) {\n                let i\n                for(i = 0; i < this.column.length; i++) {\n                    w+= this.column[i].width * this.r + 0\n                }\n            } else {\n                w = 0\n            }\n        }\n        \n        let h = 0\n        const cellHeight = this.cellHeight\n        const calc = (index) => {\n            let i\n            switch (index.type) {\n                case CanvasTableIndexType.Index:\n                    h += cellHeight * index.list.length\n                    break\n                default:\n                    break\n            }\n        }\n        calc(this.dataIndex.index)\n        if (this.scrollView && w !== undefined) {\n            this.scrollView.setSize(this.r, this.canvasWidth, this.canvasHeight, w, h * this.r)\n            this.fireReCalcForScrollView(w / this.r, h + this.headerHeight)\n        }\n    }\n    fireReCalcForScrollView(width, height) {\n        const scrollView = this.scrollView\n        if (scrollView) {\n            let i\n            for (i = 0; i < this.eventReCalcForScrollView.length; i++) {\n                try {\n                    this.eventReCalcForScrollView[i](this, width, height, scrollView);\n                } catch {\n                    this.logError(\"fireReCalcForScrollView\")\n                }\n            }\n        }\n    }\n    calcIndex() {\n        if (this.data === undefined) return\n        const index = []\n        let i\n        // customFliter过滤 暂不支持\n        for (i = 0; i < this.data.length; i++) {\n            index[index.length] = i\n        }\n\n        // customSort排序 暂不支持\n        const sortCol = this.sortCol;\n        if (sortCol && sortCol.length) {\n            index.sort((a, b) => {\n                let sortColIndex;\n                for (sortColIndex = 0; sortColIndex < sortCol.length; sortColIndex++) {\n                    let d;\n                    const col = sortCol[sortColIndex];\n                    switch (col.col.field) {\n                        case \"__rownum__\":\n                            d = a - b;\n                            if (d !== 0) { return d * col.sort; }\n                            break;\n                        default:\n                            const da = this.getUpdateDataOrData(a, col.col.field);\n                            const db = this.getUpdateDataOrData(b, col.col.field);\n                            if (da === undefined || da === null) {\n                                if (db === undefined || db === null) {\n                                    continue;\n                                }\n                                return col.sort;\n                            }\n                            if (db === undefined || db === null) {\n                                return -1 * col.sort;\n                            }\n                            if (typeof da === \"string\" && typeof db === \"string\") {\n                                if (da.indexOf('%') !== -1 && db.indexOf('%') !== -1) {\n                                    let pda = parseFloat(da)\n                                    let pdb = parseFloat(db)\n                                    d = pda - pdb;\n                                    if (d !== 0) { return d * col.sort; }\n                                    continue;\n                                }\n                                if (da === \"\") {\n                                    if (db === \"\") {\n                                        continue;\n                                    }\n                                    return col.sort;\n                                }\n\n                                if (db === \"\") {\n                                    return -1 * col.sort;\n                                }\n                                d = da.localeCompare(db);\n                                if (d !== 0) { return d * col.sort; }\n                                continue;\n                            }\n                            if (da > db) {\n                                return col.sort;\n                            }\n                            if (da < db) {\n                                return -1 * col.sort;\n                            }\n                    }\n                }\n                return 0;\n            });\n        }\n        this.dataIndex = {\n            index: { type: CanvasTableIndexType.Index, list: index},\n            mode: CanvasTableMode.ColMode\n        }\n        this.reCalcForScrollView()\n    }\n    getUpdateDataOrData(row, field) {\n        const rowData = this.editData[row]\n        if (rowData && rowData.hasOwnProperty(field)) {\n            return rowData[field]\n        }\n\n        return (this.data[row])[field]\n    }\n    getDrawData(colItem, rowId, indexId) {\n        let data\n        switch (colItem.field) {\n            case \"__rownum__\":\n                rowId = rowId + 1\n                data = rowId.toString()\n                break\n            case \"__idxnum__\":\n                data = indexId.toString()\n                break\n            default:\n                data = String(this.getUpdateDataOrData(rowId, colItem.field))\n        }\n\n        if (colItem.customData) {\n            data = colItem.customData(this, data, this.data[r",
    "relevantFile": "",
    "relevantFileList": [],
    "template": "javascript",
    "multiRes": {
      "hipilot": "reset() {\n        return !this.customSort\n            && !this.sortCol\n    }",
      "CodeQwen2.5-7B": "ressKey(key) {",
      "copilot": ".autoSortTime)",
      "CodeQwen1.5-7B": " ause() {"
    }
  },
  {
    "prefix": "import CustomCanvasTable from \"./CustomCanvasTable\"\nimport ScrollView from \"./ScrollView\"\nimport debounce from \"lodash.debounce\";\nfunction TouchEventToCanvasTableTouchEvent(event) {\n    const x = {changedTouches: [], touchs: []};\n    let i;\n    for (i = 0; i < event.changedTouches.length; i++) {\n        x.changedTouches.push({\n            pageX: event.changedTouches[i].pageX,\n            pageY: event.changedTouches[i].pageY\n        });\n    }\n    for (i = 0; i < event.touches.length; i++) {\n        x.touches.push({\n            pageX: event.touches[i].pageX,\n            pageY: event.touches[i].pageY\n        });\n    }\n}\n\nexport default class CanvasTable extends CustomCanvasTable {\n    constructor(wrapper, col, data, config) {\n        super(config)\n        this.data = data\n        this.initData()\n        this.wrapper = (typeof wrapper === 'string') ? document.getElementById(wrapper) : wrapper\n        this.initCanvas()\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.wrapper.clientWidth, this.wrapper.clientHeight)\n        this.updateThemeStyle()\n        this.scrollViewChange = debounce(this.scrollViewChange, 200)\n        this.scrollView = new ScrollView(\n            this.context,\n            this,\n            this.config.scrollView,\n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        this.autoRender()\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    initCanvas() {\n        let clientWidth = this.wrapper.clientWidth\n        let clientHeight = this.wrapper.clientHeight\n        this.canvas = this.createCanvas(clientWidth, clientHeight)\n        this.context = this.canvas.getContext('2d')\n        // this.hoverCanvas = this.createCanvas(clientWidth, clientHeight)\n        // this.hoverContext = this.eventCanvas.getContext('2d')\n        // this.backCanvas = this.createCanvas(clientWidth, clientHeight)\n        // this.backContext = this.canvas.getContext('2d')\n    }\n    createCanvas(clientWidth, clientHeight) {\n        let canvas = document.createElement('canvas')\n        this.wrapper.appendChild(canvas)\n        canvas.style.width = clientWidth + 'px'\n        canvas.style.height = clientHeight + 'px'\n        return canvas\n    }\n    initData() {\n        // '代码' 需要抽取到配置中 mainField\n        this.dataMap = {}\n        this.data.forEach(item => {\n            this.dataMap[item['代码']] = item\n        })\n    }\n    autoRender() {\n        this.autoRenderFlag = setTimeout(()=> {\n            let fields = Object.keys(this.dataChangePool)\n            if (fie",
    "infill": "lds.length > 0){\n                this.askForReDraw({ drawOnly: fields })\n            } else {\n                this.askForReDraw()\n            }",
    "suffix": "\n            this.autoRender()\n            // console.log('autoRender')\n        }, this.config.autoRenderInterval)\n    }\n    updateThemeStyle() {\n        this.wrapper.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.wrapper.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        let clientWidth = this.wrapper.clientWidth\n        let clientHeight = this.wrapper.clientHeight\n        this.canvas.style.width = clientWidth + 'px'\n        this.canvas.style.height = clientHeight + 'px'\n        // this.eventCanvas.style.width = clientWidth\n        // this.eventCanvas.style.height = clientHeight\n        // this.backCanvas.style.width = clientWidth\n        // this.backCanvas.style.height = clientHeight\n        this.setR(window.devicePixelRatio)\n        this.doResize(clientWidth, clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => {\n            return {'代码': this.data[indexId]['代码']}\n        })\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        // this.eventCanvas.width = width\n        // this.eventCanvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();\n        this.TouchStart(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchMove = (e) => {\n        e.preventDefault();\n        this.TouchMove(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchEnd = (e) => {\n        e.preventDefault();\n        this.TouchEnd(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasDblClick = (e) => {\n        e.preventDefault();\n        //  this.dblClick(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.dblClick(e.offsetX, e.offsetY);\n    }\n    canvasWheel = (e) => {\n        e.preventDefault();\n        this.wheel(e.deltaMode, e.deltaX, e.deltaY);\n    }\n    canvasMouseDown = (e) => {\n        e.preventDefault();\n        this.canvas.focus();\n        // this.mouseDown(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseDown(e.offsetX, e.offsetY);\n    }\n    canvasMouseLeave = () => {\n        this.mouseLeave();\n    }\n    canvasMouseUp = (e) => {\n        e.preventDefault();\n        // this.mouseUp(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseUp(e.offsetX, e.offsetY);\n    }\n    canvasMouseUpExtended = (e) => {\n        e.preventDefault();\n        this.mouseUpExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n    }\n    canvasMouseMoveExtended = (e) => {\n        e.preventDefault();\n        // this.mouseMoveExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMoveExtended(e.offsetX, e.offsetY);\n    }\n    canvasMouseMove = (e) => {\n        e.preventDefault();\n        // this.mouseMove(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMove(e.offsetX, e.offsetY);\n    }\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "lds.length > 0",
      "CodeQwen2.5-7B": "lds.length === 0) {",
      "copilot": "lds.length > 0){\n                this.askForReDraw({ drawOnly: fields })\n            } else {\n                this.askForReDraw()\n            }",
      "CodeQwen1.5-7B": " lds.length > 0) {"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    dataChangeBackground: \"#1B63D9\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    canvasBorderColor: '#cbcbe1',\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\",\n    scrollView: {\n        backgroundColor: \"#ffffff\",\n        buttonColor: \"#b2b2c5\",\n        buttonHoverColor: \"#757699\",\n    }\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    canvasBorderColor: '#181c21',\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n// 经典风格\nconst blackThemeConfig = {\n    canvasBorderColor: '#4D0000',\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined;\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}\n    }\n    updateConfig(config) {\n        let themeType = config && config.theme || this.defaultTheme\n        config = {...config, ...TableTheme[themeType]}\n        this.config = {...defaultConfig, ...config}\n    }\n    getScrollView() {\n        return this.scrollView\n    }\n    isPlanToRedraw() {\n        if (!this.requestAnimationFrame) {\n            return false\n        }\n        return (this.drawconf !== undefined && this.drawconf.fulldraw)\n    }\n    setR(r) {\n        if (this.r === r) return\n        this.r = r\n        this.needToCalc = true\n        this.needToCalcFont = true \n    }\n    askForReDraw(config) {\n        if(config === undefined || (this.drawconf !== undefined && this.drawconf.fulldraw)) {\n            this.drawconf = {fulldraw: true}\n        } else {\n            if (this.drawconf === undefined) {\n                this.drawconf = {...config, ...{fulldraw: false}}\n            }\n        }\n        if (this.requestAnimationFrame) {\n            return\n        }\n        this.requestAnimationFrame = requestAnimationFrame(()=> {\n            console.time('drawCanvas')\n            this.drawCanvas()\n            this.checkNeedRedraw()\n            console.timeEnd('drawCanvas')\n        })\n    }\n    askForReIndex() {\n        this.calcIndex()\n        this.askForReDraw()\n    }\n    resize() {}\n    doResize(width, height) {\n        this.setCanvasSize(width * this.r, height * this.r)\n    }\n    setCanvasSize(width, height) {\n        this.canvasWidth = width\n        this.canvasHeight = height\n        this.reCalcForScrollView()\n    }\n    setTheme(themeType) {\n        let themeConfig = TableTheme[themeType]\n        this.config = {...this.config, ...themeConfig}\n        this.updateThemeStyle()\n        this.scrollView.updateConfig(this.config.scrollView)\n        this.askForReDraw()\n    }\n    setSort(sortCol) {\n        this.sortCol = sortCol\n        this.customSort = undefined\n        this.askForReIndex()\n        this.viewDataChange()\n    }\n    setReset() {\n        this.sortCol = undefined\n        this.customSort = undefined\n        this.askForReIndex()\n        this.viewDataChange()\n    }\n    updateData(rangeData) {\n        rangeData.forEach(itemData => {\n            let itemDataSource = this.data.find(item => item['代码'] === itemData['代码'])\n            if (itemDataSource) {\n                if (itemDataSource['涨幅'] !== itemData['涨幅']) {\n                    itemDataSource.highlight = true\n                }\n                Object.assign(itemDataSource, itemData)\n            }\n        })\n        this.askForReDraw()\n    }\n    checkNeedRedraw() {\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => this.data[indexId])\n        let needRedrawData = rangeData.filter(item => item.highlight !== undefined)\n        let isNeed = needRedrawData.length ? true : false\n        if (isNeed) {\n            this.askForReDraw()\n        }\n    }\n    viewDataChange() {\n    }\n    updateThemeStyle() {\n    }\n    updateColumns(col) {\n        this.orgColum = col\n        this.column = []\n        let i\n        for (i = 0; i < col.length; i++) {\n            if (col[i].visible === false) continue\n            const index = this.column.length\n            this.column[index] = {\n                ...{\n                    align: Align.left,\n                    index,\n                    leftPos: 0,\n                    orginalCol: col[i],\n                    rightPos: 0,\n                    width: 50\n                }, ...col[i]\n            }\n            if (this.column[index].field === '__idxnum__' || this.column[index].field === '__rownum__') {\n                this.column[index].allowEdit = false\n            }\n        }\n        this.needToCalc = true\n        this.resize()\n        this.calcColum()\n    }\n    calcColum() {\n        this.needToCalc = false\n        let leftPos = 0\n        ",
    "infill": "ChangeBackground",
    "suffix": "\n                    }\n                }\n                context.fillRect(-posX + colItem.leftPos, pos,\n                                    colItem.width * this.r, height)\n                if (isOver) {\n                    context.fillStyle = this.config.hoverLineColor\n                    context.fillRect(-posX + colItem.leftPos, pos + height - 1,\n                                        colItem.width * this.r, 1)\n                }\n                if (isSelected) {\n                    context.fillStyle = this.config.selectedBackgroundColor\n                    context.fillRect(-posX + colItem.leftPos, pos + 0.5,\n                                    colItem.width * this.r,  height - 0.5)\n                }\n                context.fillStyle = customStyle.fontColor === undefined ?\n                                         this.config.fontColor : customStyle.fontColor\n                if (colItem.colorType === 'main') {\n                    context.fillStyle = this.config.mainTextColor\n                }\n                if (colItem.colorType === 'market') {\n                    let itemValue = parseFloat(data)\n                    if (itemValue > 0) {\n                        context.fillStyle = this.config.marketTextColor.up\n                    } else if (itemValue < 0) {\n                        context.fillStyle = this.config.marketTextColor.down\n                    } else {\n                        context.fillStyle = this.config.fontColor\n                    }\n                }\n                context.fillText(data, -posX + x, pos + 20)\n            }\n            if (lastFont) {\n                context.font = lastFont\n            }\n        }\n\n        //if (drawConf === undefined) {\n        context.beginPath()\n        // context.strokeStyle = '#f00'\n        context.moveTo(0, pos + 0.5)\n        context.lineTo(\n                            Math.min(-posX + this.column[this.column.length - 1].rightPos,\n                            this.canvasWidth), pos + 0.5)\n        context.stroke()\n        //}\n    }\n    logError(value) {\n        console.log(value)\n    }\n    setOverRow(value) {\n        if (value !== this.overRowValue) {\n            const temp = this.overRowValue\n            this.overRowValue = value\n            if (value !== undefined && temp !== undefined) {\n                this.askForReDraw({ drawOnly: [temp, value] })\n                return\n            }\n\n            if (value !== undefined) {\n                this.askForReDraw({ drawOnly: [value] })\n                return\n            }\n\n            if (temp !== undefined) {\n                this.askForReDraw({ drawOnly: [temp] })\n                return\n            }\n        }\n    }\n    TouchStart(e, offsetLeft, offsetTop) {\n        if (this.scrollView && this.scrollView.OnTouchStart(e, offsetLeft, offsetTop)) {\n            return\n        }\n\n        if (e.changedTouches.length === 1) {\n            const y = e.changedTouches[0].pageY - offsetTop\n            const x = e.changedTouches[0].pageX - offsetLeft\n            this.touchClick = {timeout: setTimeout(() => {\n                if (this.dataIndex === undefined) { return }\n                if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n                    const row = this.findRowByPos(y)\n                    const col = this.findColByPos(x)\n\n                    if (y > this.headerHeight) {\n                        if (row !== null && typeof row.select === \"object\") {\n                            row.select.isExpended = !row.select.isExpended\n                            this.askForReDraw()\n                            this.reCalcForScrollView()\n                        }\n                        this.fireClick(row === null ? null : row.select, col)\n                    } else {\n                        const colSplit = this.findColSplit(x)\n                        if (colSplit !== null) {\n                            this.columnResize = {x, col: this.column[colSplit]}\n                            return\n                        }\n\n                        this.clickOnHeader(col)\n                        this.fireClickHeader(col)\n                    }\n                } else {\n                    const result =  this.findColAndRowInRowMode(x, y)\n                    if (result === null) { return }\n                    const {col, row} = result\n                    if (col === null) {\n                        row.isExpended = !row.isExpended\n                        this.askForReDraw()\n                        this.reCalcForScrollView()\n                    }\n                }\n            }, 250), x, y}\n        } else {\n            this.clearTouchClick()\n        }\n    }\n    TouchMove(e, offsetLeft, offsetTop) {\n        const x = e.changedTouches[0].pageX - offsetLeft\n        if (this.resizeColIfNeed(x)) {\n            return\n        }\n\n        if (this.scrollView) {\n            this.scrollView.OnTouchMove(e, offsetLeft, offsetTop)\n        }\n        if (this.touchClick) {\n            if (e.changedTouches.length !== 1) {\n                this.clearTouchClick()\n                return\n            }\n\n            const y = e.changedTouches[0].pageY - offsetTop\n            if (Math.abs(x - this.touchClick.x) > 4 || Math.abs(y - this.touchClick.y) > 4) {\n                this.clearTouchClick()\n            }\n        }\n    }\n    TouchEnd(e, offsetLeft, offsetTop) {\n        this.columnResize = undefined\n\n        if (this.scrollView) {\n            this.scrollView.OnTouchEnd(e)\n        }\n    }\n\n    calcRect(col, row) {\n        if (!this.scrollView ) {\n            return\n        }\n\n        const topPos = this.findTopPosByRow(row)\n        if (topPos === undefined) {\n            return\n        }\n\n        const y = (topPos - this.scrollView.getPosY()) / this.r\n        const x = -(this.scrollView.getPosX() / this.r) + (col.leftPos / this.r)\n        const top = y\n        const left = x\n\n        let clipTop\n        const clipRight = undefined\n        const clipBottom = undefined\n        let clipLeft\n\n        if (y < this.headerHeight) {\n            // rect(<top>, <right>, <bottom>, <left>)\n            if (x < 0) {\n                clipTop = -y + this.headerHeight\n                clipLeft = -x\n            } else {\n                clipTop = -y + this.headerHeight\n            }\n        } else if (x < 0) {\n            clipLeft = -x\n        }\n\n        return {\n            cellHeight: this.cellHeight,\n            clipBottom,\n            clipLeft,\n            clipRight,\n            clipTop,\n            left,\n            top,\n            width: col.width,\n            x,\n            y,\n        }\n    }\n\n    findColSplit(x) {\n        if (this.scrollView === undefined) { return null }\n        const posXNeg = -this.scrollView.getPosX()\n        for (let i = 0; i < this.column.length; i++) {\n            const d = ((posXNeg + this.column[i].rightPos) / this.r) - x\n            if (-3 <= d && d <= 3) {\n                return i\n            }\n        }\n        return null\n    }\n\n    findColAndRowInRowMode(x, y) {\n        if (this.dataIndex === undefined || this.scrollView === undefined) { return null }\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) { return null }\n        let pos = -this.scrollView.getPosY() / this.r\n        const cellHeight = this.cellHeight\n        const find = (index) => {\n            let i\n            if (index.type === CanvasTableIndexType.GroupItems) {\n                for (i = 0; i < index.list.length; i++) {\n                    const item = index.list[i]\n                    if (pos < y && y < pos + cellHeight) {\n                        return {row: item, col: null}\n                    }\n\n                    pos += cellHeight\n                    if (item.isExpended) {\n                        const result = find(item.child)\n                        if (result != null) {\n                            return result\n                        }\n                    }\n                }\n            } else {\n                for (i = 0; i < index.list.length; i++) {\n ",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "this.column.forEach(colItem => {\n            colItem.leftPos = leftPos\n            colItem.rightPos = leftPos + colItem.width\n            leftPos = colItem.rightPos\n        })\n    }",
      "CodeQwen2.5-7B": "for (i = 0; i < this.column.length; i++) {",
      "copilot": "ChangeBackground",
      "CodeQwen1.5-7B": " for (i = 0; i < this.column.length; i++) {"
    }
  },
  {
    "prefix": "/**\n * 1. 读取shell脚本相关的项目中的package.json\n * 2. 根据json文件内的依赖将其分别分类至package0-x中\n * 3. 不同条件的validator放入validators数组中\n * 4. 最终得到package0-x/package.json以及package0-x.sh文件\n * 5. 注释掉原有的npm install及rm -rf node_modules\n * 5. 修改pipelines配置，进行打包\n *\n * 错误及解决方案：\n * 1. npm源问题：脚本开头需要添加“npm config set registry \"http://repositories.myhexin.com:8081/repository/npm-public/\"”\n * 2. 安装thsc-datav-paradigm-wordcloud报错，在执行npm install前先执行npm install thsc-datav-paradigm-wordcloud@latest --ignore-script\n * 3. 打包时遇到vue-cli-service找不到，由于原有的shell脚本后面会有一句rm -rf node_modules,因此后面打包的项目找不到该命令，注释掉即可\n * 4. css-loader遇到url()引入网络图片的处理报错，由于css-loader版本过高引起，高版本的css-loader会自动处理url引入的图片，①降低css-loader的版本；②修改css-loader配置options:{url: false}\n * 5. baseUI.css中的--headerbar-height: 40px;引起的报错，在其后面添加“;”即可\n * 6. eslint引起的报错，①在build命令后添加--no-lint即vue-cli-service build --no-lint，不可行；②在vue.config.js中添加lintOnSave: false,可行；\n * 7. thsc-ifind-antdv下的less文件报错，.@{ant-prefix}-btn > .@{iconfont-css-prefix}-down {.iconfont-size-under-12px(10px);\n *    - Error evaluating function `unit`: the first argument to unit must be a number. Have you forgotten parenthesis?\n *    - 将涉及到的bable.config.js中的style:'css'\n * 8. f9_index下引入样式没加后缀导致报错import 'thsc-ifind-antdv/lib/spin/style/index';添加后缀.css;\n * 9. deep_information及risk_analysis两个项目始终无法成功，忽略处理这两个项目；\n * 10. import { CancelToken } from 'thsc-ifind-stock-f9',const CancelToken = axios.CancelToken;版本不兼容\n * 11. thsc-datav-dynamic-chart 3.0.0 和 2.8.22 不兼容\n * 12. 每日行情数据的HTMLCollection没有forEach方法，\n * 13. 存在postcss的项目需要在vue.config.js中指定postcss.config.js的位置 (style-analysis/第9条)\n * 14. 高版本的axios没有编译过，需要加入transpileDependencies;\n * 15. vxe-table/lib/vxe-table in ./src/main.js 找不到，因为VXETable被babel-plugin-import解析成了vxe-table，需要在babel.config.js中添加customName自定义name\n * - camel2DashComponentName： true,不行\n */\nconst [NODE, FILENAME, writeModifyFile] = process.argv;\nconst fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst readline = require('readline');\nconst fixedVersionMap = {\n  // 高版本的copy-webpack-plugin需要getCache函数，然而高版本的webpack没有这个函数。。。\n  'copy-webpack-plugin': '^6.0.2',\n  'vue-virtual-scroll-list': '2.3.4',\n  'vxe-table': '3.5.6',\n  'xe-utils': '3.5.6',\n  'vxe-utils': '2.0.1',\n  'axi",
    "infill": "os': '0.21.1',\r\n",
    "suffix": "};\r\nconst ignoreModules = [];\r\nconst ignoreProjects = [];\r\nconst newLine = os.EOL;\r\nconst rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout,\r\n});\r\n\r\nconst folderPath = path.resolve('./CIfile');\r\nconst fileNames = fs.readdirSync(folderPath);\r\nconst projectArr = [];\r\nconst modifyInfoArr = [];\r\nconst pathMap = {};\r\nfileNames.forEach((fileName) => {\r\n  if (fileName.indexOf('package') < 0 && !ignoreProjects.includes(fileName)) {\r\n    const filePath = `${folderPath}/${fileName}`;\r\n    const fileContent = fs.readFileSync(filePath, 'utf-8');\r\n    const newFileContent = handleFileContent(fileContent);\r\n    fs.writeFileSync(filePath, newFileContent, {\r\n      encoding: 'utf-8',\r\n    });\r\n    const matchAll = fileContent.match(/cd \\/drone\\/src(\\S*)/g);\r\n    matchAll.forEach((path) => {\r\n      const project = path.replace('cd /drone/src', '');\r\n      projectArr.push(project);\r\n      addModifyInfoArr(project);\r\n      pathMap[project] = filePath;\r\n    });\r\n  }\r\n});\r\nfunction addModifyInfoArr(project) {\r\n  let title = 'No Title';\r\n  const relativePath = (filename) => path.resolve('./' + project + filename);\r\n  const nameArr = [\r\n    '/index.html',\r\n    '/build/index.html',\r\n    '/public/index.html',\r\n    '/src/index.html',\r\n  ];\r\n  let indexHTMLPath = '';\r\n  nameArr.some((name) => {\r\n    const indexPath = relativePath(name);\r\n    const isTruly = fs.existsSync(indexPath);\r\n    if (isTruly) {\r\n      indexHTMLPath = indexPath;\r\n    }\r\n    return isTruly;\r\n  });\r\n  if (indexHTMLPath) {\r\n    const indexHtmlContent = fs.readFileSync(indexHTMLPath, 'utf-8');\r\n    if (indexHtmlContent.indexOf('<title>') > -1) {\r\n      title =\r\n        indexHtmlContent.replace(/.*?<title>(.*?)<\\/title>.*/s, '$1').trim() ||\r\n        title;\r\n    }\r\n  }\r\n  modifyInfoArr.push(`${project},${title}`);\r\n}\r\nwriteModifyFile >= 1 &&\r\n  fs.writeFileSync(\r\n    path.resolve('./', 'modify_project.txt'),\r\n    modifyInfoArr.join(newLine)\r\n  );\r\nconsole.log(`Total is ${projectArr.length}`);\r\n\r\nfunction modifyVueConfig(project, hasEslint) {\r\n  const pathToFile = path.resolve('.' + project, 'vue.config.js');\r\n  if (fs.existsSync(pathToFile)) {\r\n    const vueConfig = fs.readFileSync(pathToFile, 'utf-8');\r\n    let newConfig = vueConfig;\r\n    if (hasEslint) {\r\n      newConfig = newConfig\r\n        .replace(/(\\/\\/)?.*?lintOnSave:.*?,\\s*/g, '\\t')\r\n        .replace(\r\n          /module.exports = {/,\r\n          `module.exports = {${newLine}\\tlintOnSave: false,`\r\n        )\r\n        .replace(/[\\'\\\"]{1}\\..*?f9-bff-server.*?[\\\"\\']{1}/, \"'index.ftl'\")\r\n        .replace(\r\n          /config\\.plugin.*?webpack-bundle-analyzer.*?\\s*.*?webpack-bundle-analyzer.*?BundleAnalyzerPlugin.*?\\)/,\r\n          ''\r\n        );\r\n    }\r\n    const transName = 'transpileDependencies';\r\n    const hasTrans = newConfig.indexOf(transName) > -1;\r\n    if (hasTrans) {\r\n      newConfig = newConfig.replace(\r\n        /transpileDependencies.*?\\[(.*?)\\].*?,?/s,\r\n        (_, deps) => {\r\n          const depRes = deps\r\n            .replace(/[\\'\\\"]?axios[\\'\\\"]?/, '')\r\n            .split(',')\r\n            .map((val) => val.trim())\r\n            .filter(Boolean)\r\n            .join(', ');\r\n          return depRes\r\n            ? `${transName}: [${depRes}, 'axios'],`\r\n            : `${transName}: ['axios'],`;\r\n        }\r\n      );\r\n    } else {\r\n      newConfig = newConfig.replace(\r\n        /module.exports = {/,\r\n        `module.exports = {${newLine}\\ttranspileDependencies: ['axios'],`\r\n      );\r\n    }\r\n    fs.writeFileSync(pathToFile, newConfig);\r\n  }\r\n}\r\n\r\nfunction handleFileContent(fileContent) {\r\n  let newFileContent = fileContent\r\n    .replace(/# rm -rf \\.\\/node_modules/g, 'rm -rf ./node_modules')\r\n    .replace(/npm run build --no-lint\\s?/g, 'npm run build ')\r\n    .replace(/# npm install\\s/g, 'npm install ')\r\n    .replace(/#?.*?cat \\.\\/npm\\.log/g, '# cat ./npm.log')\r\n    .replace(\r\n      /# cat \\.\\/npm\\.log \\| grep 'ERR!'( > \\/dev\\/null)? && exit 1/g,\r\n      \"cat ./npm.log | grep 'ERR!' && exit 1\"\r\n    )\r\n    .replace(/# npm uninstall\\s/g, 'npm uninstall ')\r\n    .replace(/npm uninstall\\s/g, '# npm uninstall ')\r\n    .replace(/npm install\\s/g, '# npm install ')\r\n    .replace(/\\s*npm run (git)?build /g, 'npm run $1build ')\r\n    .replace(/echo \"npm run.*?\"/gi, `echo \"npm run build\"${newLine}`)\r\n    .replace(/rm -rf \\.\\/node_modules/g, '# rm -rf ./node_modules');\r\n  return newFileContent;\r\n}\r\n\r\nfunction toVersionArr(version) {\r\n  let vArr = version.split('.');\r\n  vArr = vArr.map((str) => (str.match(/\\d+/) || ['0'])[0]);\r\n  return vArr;\r\n}\r\n\r\nfunction isLatestVersion(preVersion, currVersion) {\r\n  const preVersionArr = toVersionArr(preVersion);\r\n  const currVersionArr = toVersionArr(currVersion);\r\n  let flag = false;\r\n  for (let i = 0; i < currVersionArr.length; i++) {\r\n    if (!preVersionArr[i]) {\r\n      flag = true;\r\n      break;\r\n    }\r\n    if (currVersionArr[i] - preVersionArr[i] === 0) {\r\n      continue;\r\n    }\r\n    flag = +currVersionArr[i] > +preVersionArr[i];\r\n    break;\r\n  }\r\n  return flag;\r\n}\r\n\r\nfunction mergeDependencies(obj, dependencies) {\r\n  const depKeys = Object.keys(dependencies);\r\n  depKeys.forEach((depKey) => {\r\n    if (ignoreModules.includes(depKey)) {\r\n      return;\r\n    }\r\n    const currVersion = fixedVersionMap[depKey] || dependencies[depKey];\r\n    // 如果当前没有此依赖\r\n    if (!obj.dependencies[depKey]) {\r\n      obj.dependencies[depKey] = currVersion;\r\n      obj.versions[depKey] = [currVersion];\r\n      return;\r\n    }\r\n    const preVersion = obj.dependencies[depKey];\r\n    if (preVersion === currVersion) {\r\n      return;\r\n    }\r\n    obj.versions[depKey].push(currVersion);\r\n    obj.versions[depKey] = [...new Set(obj.versions[depKey])];\r\n    if (isLatestVersion(preVersion, currVersion)) {\r\n      obj.dependencies[depKey] = currVersion;\r\n    }\r\n  });\r\n}\r\n\r\nconst zwf = '{%s}';\r\nfunction initPackJson(num) {\r\n  const res = {\r\n    name: 'package' + num,\r\n    version: '0.1.0',\r\n    private: true,\r\n    projects: [],\r\n    dependencies: {},\r\n    versions: {},\r\n    softlink: `ln -s /drone/src/package${num}/node_modules /drone/src${zwf}/`,\r\n  };\r\n  return res;\r\n}\r\n\r\nfunction createDir(dir) {\r\n  if (!fs.existsSync(dir)) {\r\n    fs.mkdirSync(dir);\r\n  }\r\n}\r\n\r\nlet i = 0;\r\nconst arr = [\r\n  initPackJson(0),\r\n  initPackJson(1),\r\n  initPackJson(2),\r\n  initPackJson(3),\r\n];\r\nfunction writeContent(dependency, project, handlerIndex) {\r\n  if (!arr[handlerIndex]) {\r\n    arr[handlerIndex] = initPackJson(handlerIndex);\r\n  }\r\n  arr[handlerIndex].projects.push(project);\r\n  mergeDependencies(arr[handlerIndex], dependency);\r\n  createDir(path.resolve('./' + arr[handlerIndex].name));\r\n  fs.writeFileSync(\r\n    path.resolve(`./${arr[handlerIndex].name}/package.json`),\r\n    JSON.stringify(arr[handlerIndex], null, 2) + newLine\r\n  );\r\n  return true;\r\n}\r\nconst validators = [\r\n  function (dependency) {\r\n    return (dependency['less-loader'] || '').indexOf('5.0.0') > -1;\r\n  },\r\n  function (dependency) {\r\n    return (\r\n      dependency.less === '^2.7.3' && dependency['less-loader'] === '^7.1.0'\r\n    );\r\n  },\r\n  function (dependency) {\r\n    return ['^4', '^3', '^5'].some((key) =>\r\n      `${dependency.webpack}`.startsWith(key)\r\n    );\r\n  },\r\n  function (dependency) {\r\n    return (\r\n      dependency.sass ||\r\n      ['^7.', '^6.'].some((key) =>\r\n        `${dependency['less-loader']}`.startsWith(key)\r\n      )\r\n    );\r\n  },\r\n];\r\n\r\n/**\r\n * 给对应项目添加browserslist配置\r\n * 1. 如果存在.browserslistrc文件，则覆盖该文件\r\n * 2. 否则修改package.json文件\r\n */\r\nfunction addBrowsersList(projectPath, packageJsonObj) {\r\n  const browserlistFile = path.resolve('./' + projectPath + '/.browserslistrc');\r\n  const browserList = ['> 0%', 'Chrome 49', 'not dead'",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "scan.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "os': '0.21.1'",
      "CodeQwen2.5-7B": "os': '0.21.1',\r",
      "copilot": "os': '0.21.1',\r\n",
      "CodeQwen1.5-7B": " os': '0.21.1',\r"
    }
  },
  {
    "prefix": "import { mount } from '@vue/test-utils';\n\nconst B",
    "infill": "\nconst B",
    "suffix": "\nconst Button = require('../component/buttons.vue').default;\n\ndescribe('Button', () => {\n    const wrapper = mount(Button);\n    it('should render the component', () => {\n        expect(wrapper.html()).toMatchSnapshot();\n    });\n    it('should be a Vue instance', () => {\n        expect(wrapper.isVueInstance()).toBe(true);\n    });\n\n})",
    "relevantFile": "<file_path>jest.config.js\nmodule.exports = {\n    \"collectCoverage\": true,\n    \"coverageReporters\": [\"html\", \"text-summary\"],\n    \"transformIgnorePatterns\": [\"/node_modules/\"],\n    \"collectCoverageFrom\": [\"**/*.{js,vue}\", \"!**/node_modules/**\"],\n    \"transform\": {\n        \"^.+\\\\.vue$\": \"vue-jest\",\n        \"^.+\\\\.js$\": \"babel-jest\"\n    },\n    \"moduleFileExtensions\": [\"js\", \"vue\"],\n}\nconst { describe } = require(\"node:test\");\nimport Button from '../component/buttons';",
    "relevantFileList": [],
    "filePath": "packages/certification/src/test/test.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "{ describe } = require('node:test');",
      "CodeQwen2.5-7B": "utton = require('../component/buttons.vue').default;",
      "copilot": "\nconst B",
      "CodeQwen1.5-7B": " utton = require('../component/buttons.vue').default;"
    }
  },
  {
    "prefix": "/* eslint-disable @typescript-eslint/no-var-requires */\nconst fs = require('fs');\nconst path = require('path');\n\nconst production = process.env.NODE_ENV === 'production';\nconst analyze = process.env.ACTUAL_MODE === 'analyze';\n// 部署地址，申请后更新并删除注释\nconst staticUrl = '//s.thsi.cn/cd/mbweb-lgt-community-list/';\n\n// 多页面配置\nconst pageTitle = {\n  'stock-discussion': {\n    title: '海外社区股吧',\n    chunks: [],\n  },\n  // // 预留话题页\n  // 'topic-discussion': {\n  //   title: '话题',\n  //   chunks: [],\n  // },\n};\nconst pagePath = path.resolve(__dirname, './src/pages');\nconst pageArr = fs.readdirSync(pagePath);\nconst pages = {};\npageArr.forEach(name => {\n  const title = pageTitle[name] ? pageTitle[name].title : '';\n  Object.defineProperty(pages, name, {\n    enumerable: true,\n    value: {\n      production,\n      title,\n      entry: `src/pages/${name}/main.ts`,\n      template: `public/${name}.html`,\n      filename: `${name}.html`,\n    },\n  });\n});\nconst port = 8080;\n\nmodule.exports = {\n  publicPath: production ? staticUrl : './',\n  crossorigin: 'anonymous',\n  assetsDir: 'static',\n  pages,\n  devServer: {\n    // 配置proxy代理\n    proxy: {",
    "infill": "'/gw/socialcenter': {\n        target: 'http://\n      }",
    "suffix": "\n    },\n    port,\n    disableHostCheck: true,\n  },\n  lintOnSave: 'default',\n  chainWebpack: config => {\n    config.module.rule('eslint').use('eslint-loader');\n    config.resolve.alias\n    .set('@public', path.resolve(__dirname, './src/utils/public-method/lib'))\n    .set('@api', path.resolve(__dirname, `./src/utils/service${(production || analyze) ? '' : '/mock'}`));\n    // 正式环境将大于 2k byte 的图片添加到构建产物中，通过发布平台发布\n    config.module\n    .rule('images')\n    .test(/\\.(jpg|png|gif)$/)\n    .use('url-loader')\n    .options({\n      limit: (production || analyze) ? 0 : Infinity,\n      publicPath: staticUrl + 'static/img',\n      outputPath: 'static/img',\n      name: '[name].[ext]',\n    });\n    if (analyze) {\n      const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');\n      config.plugin('webpack-bundle-analyzer').use(new BundleAnalyzerPlugin());\n\n      const MomentLocalesPlugin = require('moment-locales-webpack-plugin');\n      config.plugin('moment-locales-plugin').use(new MomentLocalesPlugin({ localesToKeep: ['zh-cn'] }));\n    }\n    config.plugins.delete('preload');\n    config.plugins.delete('prefetch');\n  },\n  pluginOptions: {\n    'style-resources-loader': {\n      preProcessor: 'scss',\n      patterns: [\n        path.resolve(__dirname, './src/assets/styles/base.scss'),\n      ],\n    },\n  },\n  productionSourceMap: !production,\n};\n",
    "relevantFile": "<file_path>.eslintrc.js\nmodule.exports = {\n  extends: [\n    '@thsf2e/eslint-config-ths/vue',\n    // '@thsf2e/eslint-config-ths/ts',\n  ],\n};",
    "relevantFileList": [],
    "filePath": "vue.config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "},",
      "CodeQwen2.5-7B": "",
      "copilot": "'/gw/socialcenter': {\n        target: 'http://\n      }",
      "CodeQwen1.5-7B": ""
    }
  },
  {
    "prefix": "const yapi = require('../yapi.js');\nconst baseModel = require('./base.js');\nconst mongoose = require('mongoose');\n\nclass interfaceModel extends baseModel {\n  constructor() {\n    super()\n    let col = mongoose.connection.db.collection('interface');\n    col.createIndex(\n      {\n        service_program_id: 1\n      }\n    );\n    col.createIndex(\n      {\n        catid: 1\n      }\n    );\n  }\n\n  getName() {\n    return 'interface';\n  }\n\n  getSchema() {\n    return {\n      title: { type: String, required: true },\n      uid: { type: Number, required: true },\n      path: { type: String, required: true },\n      method: { type: String, required: true },\n      // http/https/rpc/tcp/udp\n      protocol: { type: String, required: true, default: 'http' },\n      isArsenal: { type: Boolean, default: false },\n      serviceId: { type: Number, default: 0 },\n      serviceName: { type: String, default: '' },\n      select_business: { type: String, default: '' },\n      select_businessname: { type: String, default: '' },\n      applicationid: { type: String, default: '' },\n      applicationname: { type: String, default: '' },\n      nocover: { type: Number, default: 0 },\n      arsenalUrl: { type: String, default: '' },\n      project_id: { type: Number },\n      catid: { type: Number, required: true },\n      edit_uid: { type: Number, default: 0 },\n      status: { type: String, enum: ['undone', 'done', 'testing', 'pre_production', 'abandon'], default: 'undone' },\n      desc: String,\n      markdown: String,\n      add_time: Number,\n      up_time: Number,\n      type: { type: String, enum: ['static', 'var'], default: 'static' },\n      query_path: {\n        path: String,\n        params: [\n          {\n            name: String,\n            value: String\n          }\n        ]\n      },\n      req_query: [\n        {\n          name: String,\n          value: String,\n          example: String,\n          desc: String,\n          query_type: String,\n          is_constant: {\n            type: String,\n            enum: ['1', '0'],\n            default: '0'\n          },\n          required: {\n            type: String,\n            enum: ['1', '0'],\n            default: '1'\n          }\n        }\n      ],\n      req_headers: [\n        {\n          name: String,\n          value: String,\n          example: String,\n          desc: String,\n          required: {\n            type: String,\n            enum: ['1', '0'],\n            default: '1'\n          }\n        }\n      ],\n      req_params: [\n        {\n          name: String,\n          desc: String,\n          example: String\n        }\n      ],\n      req_body_type: {\n        type: String,\n        enum: ['form', 'json', 'text', 'file', 'raw']\n      },\n      req_body_is_json_schema: { type: Boolean, default: false },\n      req_body_form: [\n        {\n          name: String,\n          type: { type: String, enum: ['text', 'file'] },\n          example: String,\n          value: String,\n          desc: String,\n          required: {\n            type: String,\n            enum: ['1', '0'],\n            default: '1'\n          }\n        }\n      ],\n      req_body_other: String,\n      res_body_type: {\n        type: String,\n        enum: ['json', 'text', 'xml', 'raw', 'json-schema']\n      },\n      res_body: String,\n      res_body_is_json_schema: { type: Boolean, default: false },\n      custom_field_value: String,\n      field2: String,\n      field3: String,\n      api_opened: { type: Boolean, default: false },\n      index: { type: Number, default: 0 },\n      tag: Array,\n      service_program_id: Number,\n      end_version: String,\n      // 操作类型\n      operate_type: { type: String, enum: [ 'command', 'query', 'event' ], default: 'query' },\n      // 协作模式\n      cooperate_mode: { type: String, enum: [ 'request-response', 'fire-and-forget', 'publish-subscribe' ], default: 'request-response' },\n      code_list: [ {\n        code: String,\n        value: String,\n        desc: String\n      }],\n      domain_path: [{\n        env: String,\n        domain: String,\n        path: String\n      }],\n      // 除http协议外的基本信息存储，例如下面的json对象转换的string\n      // {\n      //   protocol: 'rpc',\n      //   base_info: {\n      //     call_name: 'API调用名称', // 一般是jar包名\n      //     method_name: \"方法名\",\n      //     version_num: \"版本号\",\n      //     service_group: \"服务分组\"\n      //   }\n      // }\n      other_protocol_content: String\n    };\n  }\n\n  save (data) {\n    if (!data.tag || (Array.isArray(data.tag) && !data.tag.length)) {\n      // http协议的get，rpc/tcp/udp协议的接口默认打上巡检标签\n      const XJ_TAG = ['接口测试-支持巡检'];\n      // http协议的get\n      const HTTP_GET = ['http', 'https' ].includes(data.protocol) && data.method === 'GET';\n      if (HTTP_GET || ['rpc', 'tcp', 'udp'].includes(data.protocol)) {\n        data.tag = XJ_TAG;\n      }\n      // 所有接口支持接口zi'd\n      const ZDH_TAG = ['接口测试-支持自动化'];\n      const ZDH_OPTION = ['http', 'https', 'rpc', 'tcp', 'udp'].includes(data.protocol);\n      if",
    "infill": " (ZDH_OPTION) {\r\n        data.tag = ZDH_TAG;\r\n     ",
    "suffix": " }\r\n    }\r\n    let m = new this.model(data);\r\n    return m.save();\r\n  }\r\n\r\n  get(id) {\r\n    return this.model\r\n      .findOne({\r\n        _id: id\r\n      })\r\n      .exec();\r\n  }\r\n  \r\n  getByIds(ids) {\r\n    return this.model\r\n      .find({\r\n        _id: { $in: ids }\r\n      })\r\n      .exec();\r\n  }\r\n\r\n  getBaseinfo(id) {\r\n    return this.model\r\n      .findOne({\r\n        _id: id\r\n      })\r\n      .select('path method uid title project_id cat_id  status protocol isArsenal serviceId serviceName arsenalUrl select_business select_businessname applicationid applicationname nocover')\r\n      .exec();\r\n  }\r\n\r\n  getVar(project_id, method) {\r\n    return this.model\r\n      .find({\r\n        project_id: project_id,\r\n        type: 'var',\r\n        method: method\r\n      })\r\n      .select('_id path')\r\n      .exec();\r\n  }\r\n\r\n  getVarServiceProgramId(service_program_id, method) {\r\n    return this.model\r\n      .find({\r\n        service_program_id,\r\n        type: 'var',\r\n        method: method\r\n      })\r\n      .select('_id path')\r\n      .exec();\r\n  }\r\n\r\n  getVarServiceProgramIds(service_program_ids, method) {\r\n    return this.model\r\n      .find({\r\n        service_program_id: { $in: service_program_ids },\r\n        type: 'var',\r\n        method: method\r\n      })\r\n      .select('_id path')\r\n      .exec();\r\n  }\r\n  getByQueryPath(project_id, path, method) {\r\n    return this.model\r\n      .find({\r\n        project_id: project_id,\r\n        'query_path.path': path,\r\n        method: method\r\n      })\r\n      .exec();\r\n  }\r\n\r\n  getByQueryPathServiceProgramId(service_program_id, path, method) {\r\n    return this.model\r\n      .find({\r\n        service_program_id,\r\n        'query_path.path': path,\r\n        method: method\r\n      })\r\n      .exec();\r\n  }\r\n\r\n  getByQueryPathServiceProgramIds(service_program_ids, path, method) {\r\n    return this.model\r\n      .find({\r\n        service_program_id: { $in: service_program_ids },\r\n        'query_path.path': path,\r\n        method: method\r\n      })\r\n      .exec();\r\n  }\r\n  getByPath(project_id, path, method, select, protocol) {\r\n    let obj={\r\n      project_id: project_id,\r\n      path: path,\r\n      method: method\r\n    };\r\n    select =\r\n      select ||\r\n      '_id title uid path method protocol isArsenal serviceId serviceName project_id catid edit_uid status add_time up_time type query_path req_query req_headers req_params req_body_type req_body_form req_body_other res_body_type custom_field_value res_body res_body_is_json_schema req_body_is_json_schema select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content';\r\n    return this.model\r\n      .find(obj)\r\n      .select(select)\r\n      .exec();\r\n  }\r\n\r\n  getByPathServiceProgramId(service_program_id, path, method, select) {\r\n    let obj={\r\n      service_program_id,\r\n      path: path,\r\n      method: method\r\n    };\r\n    select =\r\n      select ||\r\n      '_id title uid path method protocol isArsenal serviceId serviceName project_id catid edit_uid status add_time up_time type query_path req_query req_headers req_params req_body_type req_body_form req_body_other res_body_type custom_field_value res_body res_body_is_json_schema req_body_is_json_schema select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content';\r\n    return this.model\r\n      .find(obj)\r\n      .select(select)\r\n      .exec();\r\n  }\r\n\r\n  getByPathServiceProgramIds(service_program_ids, path, method, select) {\r\n    let obj={\r\n      service_program_id: {$in: service_program_ids},\r\n      path: path,\r\n      method: method\r\n    };\r\n    select =\r\n      select ||\r\n      '_id title uid path method protocol isArsenal serviceId serviceName project_id catid edit_uid status add_time up_time type query_path req_query req_headers req_params req_body_type req_body_form req_body_other res_body_type custom_field_value res_body res_body_is_json_schema req_body_is_json_schema select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content';\r\n    return this.model\r\n      .find(obj)\r\n      .select(select)\r\n      .exec();\r\n  }\r\n\r\n  checkRepeat(id, path, method) {\r\n    return this.model.countDocuments({\r\n      project_id: id,\r\n      path: path,\r\n      method: method\r\n    });\r\n  }\r\n\r\n  findByServiceIdPath(id, path, method) {\r\n    return this.model.findOne({\r\n      service_program_id: id,\r\n      path: path,\r\n      method: method\r\n    }).exec();\r\n  }\r\n  \r\n  checkRepeatByServiceId(id, path, method) {\r\n    return this.model.countDocuments({\r\n      service_program_id: id,\r\n      path: path,\r\n      method: method\r\n    });\r\n  }\r\n\r\n  countByProjectId(id) {\r\n    return this.model.countDocuments({\r\n      project_id: id\r\n    });\r\n  }\r\n\r\n  list(project_id, select) {\r\n    select =\r\n      select || '_id title uid path method protocol isArsenal serviceId serviceName arsenalUrl project_id catid edit_uid status add_time up_time select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content';\r\n    return this.model\r\n      .find({\r\n        project_id: project_id\r\n      })\r\n      .select(select)\r\n      .sort({ title: 1 })\r\n      .exec();\r\n  }\r\n  \r\n  listUpdateTime(page, limit, option) {\r\n    page = parseInt(page);\r\n    limit = parseInt(limit);\r\n    return this.model\r\n      .find(option)\r\n      .sort({ add_time: -1 })\r\n      .skip((page - 1) * limit)\r\n      .limit(limit)\r\n      .select(\r\n        '_id title uid service_program_id path method protocol isArsenal serviceId serviceName arsenalUrl project_id catid api_opened edit_uid status add_time up_time tag select_business select_businessname applicationid applicationname nocover req_query req_body_type req_body_form req_body_other desc res_body_type res_body code_list domain_path other_protocol_content'\r\n      )\r\n      .exec();\r\n  }\r\n\r\n  listWithPage(option, page, limit) {\r\n    page = parseInt(page);\r\n    limit = parseInt(limit);\r\n    return this.model\r\n      .find(option)\r\n      .sort({ title: 1 })\r\n      .skip((page - 1) * limit)\r\n      .limit(limit)\r\n      .select(\r\n        '_id title uid path method protocol isArsenal serviceId serviceName arsenalUrl project_id catid api_opened edit_uid status add_time up_time tag select_business select_businessname applicationid applicationname nocover domain_path other_protocol_content'\r\n      )\r\n      .exec();\r\n  }\r\n\r\n  listByPid(project_id) {\r\n    return this.model\r\n      .find({\r\n        project_id: project_id\r\n      })\r\n      .sort({ title: 1 })\r\n      .exec();\r\n  }\r\n  \r\n  listByPidSelect(option, select = '_id title uid project_id method res_body_type res_body add_time status') {\r\n    return this.model\r\n      .find(option)\r\n      .select(select)\r\n      .sort({ title: 1 })\r\n      .exec();\r\n  }\r\n\r\n  //获取全部接口信息\r\n  getInterfaceListCount() {\r\n    return this.model.countDocuments({});\r\n  }\r\n\r\n  listByCatid(catid, select) {\r\n    select =\r\n      select || '_id title uid path method protocol isArsenal serviceId serviceName arsenalUrl project_id service_program_id catid edit_uid status add_time up_time index tag select_business select_businessname applicationid applicationname nocover res_body_type res_body domain_path other_protocol_content';\r\n    return this.model\r\n      .find({\r\n        catid: catid\r\n      })\r\n      .select(select)\r\n      .sort({ index: 1 })\r\n      .exec();\r\n  }\r\n  listByIdsAll(_ids, select) {\r\n    select =\r\n      select || '_id title uid path method protocol isArsenal serviceId serviceName arsenalUrl project_id service_program_id catid edit_uid status add_time up_time index tag select_business select_businessname applicationid applicationname nocover res_body_type res_body domain_path other_protocol_content';\r\n    return this.",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "vendor/server/models/interface.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "(ZDH_OPTION) {\n        data.tag = data.tag?data.tag.concat(ZDH_TAG):ZDH_TAG;\n      }",
      "CodeQwen2.5-7B": " (ZDH_OPTION) {\r",
      "copilot": " (ZDH_OPTION) {\r\n        data.tag = ZDH_TAG;\r\n     ",
      "CodeQwen1.5-7B": "  (ZDH_OPTION) {\r"
    }
  },
  {
    "prefix": "/**\n * 获取文件变动日志\n * @param {*} logs \n * @returns \n */\nconst getFileChangeLogs = logs => {\n    const fileChangeLogs = [];\n    logs.forEach(log => {\n        const { _source } = log;\n        const { request_uri, request_body } = _source;\n        if(request_uri.includes('/copilot-ai-plugins/stat-logs') && request_body && request_body.includes('fileChange')) {;\n            fileChangeLogs.push(_source);\n        }\n    });\n\n    return fileChangeLogs;\n}\n\nconst run = (logs, userMap) => {\n    const addCodeLines = new Map();\n    const fileChangeLogs = getFileChangeLogs(logs);\n    console.log(fileChangeLogs[0])\n    for(const item of fileChangeLogs) {\n        const requestBodyObj = JSON.parse(item.request_body);\n        const { data } = requestBodyObj.data;\n        const { user_id, file_id, original_file, action_type, final_file } = data.source;\n        const key = `${user_id}-${file_id}`;\n\n        let value = addCodeLines.get(key);\n        if(!value) {\n            value = {\n                original_file,\n                action_type,\n                final_file,\n                log_time: item.log_time\n            }\n        } else {\n            value = {\n                ...value,\n                action_type,\n                final_file,\n                log_time: item.log_time\n            }\n        }\n    }\n\n}\n\n\n// 随机函数\nfunction random(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\n// 生成日志",
    "infill": "function generateLogs() {\r\n    const logs = [];\r\n    for(let i = 0; i < 100; i++) {\r\n        const log = {\r\n            _source: {\r\n                request_uri: '/copilot-ai-plugins/stat-logs',\r\n                request_body: JSON.stringify({\r\n                    data: {\r\n                        data: {\r\n                            source: {\r\n                                user_id: random(1, 10),\r\n                                file_id: random(1, 10),\r\n                                original_file: `original_file_${random(1, 10)}`,\r\n                                action_type: random(1, 10),\r\n                                final_file: `final_file_${random(1, 10)}`\r\n                            }\r\n                        }\r\n                    }\r\n                }),\r\n                log_time: new Date().getTime()\r\n            }\r\n        }\r\n        logs.push(log);\r\n  ",
    "suffix": "  }\r\n\r\n    return logs;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    run\r\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "scripts/calcAddCodeLines.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "数据\nfunction generateLogs(users, files, size) {\n    const logs = [];\n    for(let i = 0; i < size; i++) {\n        const user_id = users[random(0, users.length)];",
      "CodeQwen2.5-7B": "\r",
      "copilot": "function generateLogs() {\r\n    const logs = [];\r\n    for(let i = 0; i < 100; i++) {\r\n        const log = {\r\n            _source: {\r\n                request_uri: '/copilot-ai-plugins/stat-logs',\r\n                request_body: JSON.stringify({\r\n                    data: {\r\n                        data: {\r\n                            source: {\r\n                                user_id: random(1, 10),\r\n                                file_id: random(1, 10),\r\n                                original_file: `original_file_${random(1, 10)}`,\r\n                                action_type: random(1, 10),\r\n                                final_file: `final_file_${random(1, 10)}`\r\n                            }\r\n                        }\r\n                    }\r\n                }),\r\n                log_time: new Date().getTime()\r\n            }\r\n        }\r\n        logs.push(log);\r\n  ",
      "CodeQwen1.5-7B": " 函数\r"
    }
  },
  {
    "prefix": "import { percentConfig } from \"../valueConfig/percentConfig.js\";\nimport { valueConfig } from \"../valueConfig/valueConfig.js\";\nimport { stockConfig, pcStockConfig } from \"../valueConfig/stockConfig.js\";\nimport { evaluateConfig } from \"../valueConfig/evaluateConfig.js\";\nimport { pcValueConfig } from \"../valueConfig/pcValueConfig.js\";\nimport { pcpercentConfig } from \"../valueConfig/pcpercentConfig.js\";\nimport { getLang } from \"@overseafront/utils\";\nimport { handleUnit, handleRetainNew } from \"./formatData.js\";\n\nconst Big = require(\"big.js\");\nconst LN_10 = 10;\nconst LN_100 = 100;\nconst DEFAULT_DECIMALI = 2;\n/**\n *@description [-0.0001----0.0001] 文本显示处理 或者及负数处理（添加'-'）\n *\n * @param {Number} result 第一次处理数字结果\n * @param {Array} secondConfig 匹配的config策略\n * @param {Boolean} inTheText   显示<还是小于\n * @param {Boolean} isNegative  是否负数\n * @returns\n */\nfunction handleNegativeAndLess(result, secondConfig, inTheText, isNegative) {\n  let val = \"\";\n  if (isNegative) {\n    val = \"-\" + result;\n  }\n  if (secondConfig.hasOwnProperty(\"text\")) {\n    //处理文本\n    val = inTheText ? secondConfig[\"text\"] : secondConfig[\"tableText\"];\n    //负数文本\n    if (isNegative) {\n      val = inTheText\n        ? secondConfig[\"negativeText\"]\n        : secondConfig[\"negativeTableText\"];\n    }\n  }\n  return val;\n}\n\n/**\n *@description 去除末尾的零 1.100-> 1.1  1.000->1\n *\n * @param {*} val\n * @returns\n */\nfunction handleTailZero(val) {\n  const valstr = String(val);\n  const dotIndex = valstr.indexOf(\".\");\n  let result = \"\";\n  let subTemp = \"\";\n  if (dotIndex > -1) {\n    const pre = valstr.slice(0, dotIndex);\n    const subfix = valstr.slice(dotIndex + 1);\n    for (let i = subfix.length - 1; i >= 0; i--) {\n      if (subfix[i] != \"0\") {\n        subTemp = subfix.slice(0, i + 1);\n        break;\n      }\n    }\n    return (result = subTemp.length > 0 ? pre + \".\" + subTemp : pre);\n  } else {\n    return val;\n  }\n}\n\n/**\n *@description 根据valueConfig 配置处理数据格式，现有金钱和股的配置\n *             通过val范围 选择配置 保留有效数字\n * @export\n * @param {Number|String} val\n * @param {string} [unit=\"元\"]\n * @param {boolean} [inTheText=true]\n * @returns\n */\nexport function formatMoney(val, inTheText = true, showYuan = false) {\n  if (val == 0) return { value: \"0.00\", unit: \"\" };\n  let isNegative = false;\n  if (val < 0) {\n    isNegative = true;\n    val = val.toString().replace(\"-\", \"\");\n  }\n  const typeConfig = valueConfig[\"Y\"];\n  for (let i = 0; i < typeConfig.length; i++) {\n    //第一层循环 判断大范围 rate 单位 ex: 9999.5-> range:[9999.5,99995000],rate:0.0001,unit:万\n    const firstConfig = typeConfig[i];\n    const range = firstConfig[\"range\"];\n    const floorNum = range[0];\n    const ceilNum = range[1];\n    if (val >= floorNum && val < ceilNum) {\n      const rate = firstConfig[\"rate\"];\n      const tempVal = new Big(val).times(rate);\n      let subfix = firstConfig[\"unit\"];\n      //第二层循环 判断小范围，保留位数（keep）range:[] keep:3\n      for (let j = 0; j < firstConfig[\"config\"].length; j++) {\n        const secondConfig = firstConfig[\"config\"][j];\n        const valRange = secondConfig[\"range\"];\n        const sfloorNum = valRange[0];\n        const sCeilNum = valRange[1];\n        if (tempVal >= sfloorNum && tempVal < sCeilNum) {\n          const keep = secondConfig[\"keep\"];\n          let result = new Big(tempVal).toFixed(keep);\n          if (showYuan && i == 0) {\n            subfix = \"元\";\n          }\n          // let result = handleRetain(tempVal, keep);\n          //处理负数或者文本\n          result =\n            secondConfig.hasOwnProperty(\"text\") || isNegative\n              ? handleNegativeAndLess(\n                  result,\n                  secondConfig,\n                  inTheText,\n                  isNegative\n                )\n              : result;\n          return { value: result + \"\", unit: subfix };\n        }\n      }\n    }\n  }\n\n  return { value: val, unit: \"\" };\n}\n\n/**\n *\n *\n * @export\n * @param {Number|String} val\n * @param {string} [unit=\"%\"]\n * @param {boolean} [inTheText=true]\n * @returns\n */\nexport function formatPercent(val, inTheText = true) {\n  if (val == 0) return { value: \"0.00\", unit: \"%\" };\n  if (!val) {\n    return { value: \"--\", unit: \"\" };\n  }\n  if (isNaN(Number(val))) {\n    return { value: val, unit: \"\" };\n  }\n\n  let isNegative = false;\n  if (val < ",
    "infill": "数字奇偶和后续数字决定（例子1.255 => 1.25）",
    "suffix": "\r\n */\r\nexport const handleChartStockPrice = (price) => {\r\n  //非法数字 直接返回 ‘--’\r\n  if (isNaN(Number(price))) {\r\n    return \"--\";\r\n  }\r\n  if (price < 1) {\r\n    // 如果输入小于 1，则使用 toFixed 方法保留 4 位小数\r\n    return new Big(price).toFixed(4);\r\n  } else {\r\n    // 如果输入大于等于 1，则使用 toFixed 方法保留 2 位小数\r\n    return new Big(price).toFixed(2);\r\n  }\r\n};\r\n",
    "relevantFile": "<file_path>src/combineFunction/judgeUA.js\nlet isQs = !!(userAgent.indexOf(\"(Royal Flush; Qs)\") + 1);\nlet deviceVersion = getAppVersion();\n\n/**\n * 判断用户是否在客户端环境下\n * 如果在客户端环境，则看用户端版本是否符合要求，符合要求则返回true\n whiteList=[{\n    name:@String,\n    lowestVersion:@String\n },{\n    name:'common'   //默认ths都匹配\n }]\n coverQs 是否覆盖券商，true为包括券商，[default] false 不包括券商\n*/\nexport function judgeUA(whiteList, coverQs = false) {\n  if (!deviceVersion || deviceVersion == '') {\n    return false;\n  }\n  if (isQs && !coverQs) {\n    return false;\n  }\n  let commonList = [...allDeviceList]\n  let isUpperLowest = false;\n  let isUpperHighest = true;\n  //解决安卓4的兼容性问题，array没有find方法,就自定义一个\n  if (!Array.prototype.find) {\n    Array.prototype.find = function(callback) {\n      return callback && (this.filter(callback) || [])[0];\n    };\n  }\n  let whiteDevice = whiteList.find(item => item.name === curDevice);\n\n  // 如果whiteDevice没有version，则直接返回true\n  if (whiteDevice && !whiteDevice.lowestVersion) {\n    return true;\n  } else if (!whiteDevice) {\n    // 其他规则未匹配，但whiteList里面有name:'common'，则获取当前设备的名称，如果在commonList里面则返回true\n    let isCommon = !!whiteList.find(item => item.name === 'common');\n    if (isCommon) {\n      if (commonList.includes(curDevice)) {\n        return true;\n        // 白名单什么都没找到，需要干嘛\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  isUpperLowest = compareVersion(deviceVersion, whiteDevice.lowestVersion); // 用户版本大于最低版本返回true， 小于最低版本返回false\n  // 仅在highestVersion存在时才对isUpperHighest重新赋值\n  if (whiteDevice.highestVersion) {\n    isUpperHighest = compareVersion(whiteDevice.highestVersion, deviceVersion); // 用户版本小于最高版本返回true， 大于最高版本返回false\n  }\n  if (isUpperLowest && isUpperHighest) {\n    return true;\n  } else {\n    return false;\n  }\n<file_path>src/formatData/formatData.js\n\n/**\n * 单位转换函数，转换为万/亿/万亿\n * @param {string / number} value 需要转换的值\n * \n * @return { value: 转换后的值, unit: 单位 }\n * @return 例 { value: '1.23', unit: '万' }\n */\nexport function handleUnit(value) {\n  if (value.toString().replace('-', '') / 10000 < 1) {\n    return {\n      value: value,\n      unit: ''\n    }\n  } else if (value.toString().replace('-', '') / 100000000 < 1) {\n    return {\n      value: value / 10000,\n      unit: '万'\n    }\n  } else if (value.toString().replace('-', '') / 1000000000000 < 1) {\n    return {\n      value: value / 100000000,\n      unit: '亿'\n    }\n  } else {\n    return {\n      value: value / 1000000000000,\n      unit: '万亿'\n    }\n  }\n}\n\n/**\n * 四舍五入保留小数函数\n * @param {string / number} value 需要转换的值\n * @param {number} digit 保留小数的位数\n */\nexport function handleRetain(value, digit) {\n  if (!digit) return Math.round(value)\n  var roundNum = Math.round(value * Math.pow(10, digit)) / Math.pow(10, digit);\n  var roundStr = roundNum.toString();\n  if (roundStr.indexOf('.') < 0) {\n    roundStr = roundStr + '.'\n  }\n  for (let i = 0; i < digit; i++) {\n    roundStr = roundStr + '0'\n  }\n  return roundStr.substr(0, roundStr.indexOf('.') + digit + 1)\n}\n\n/**\n * 判断是否为正数\n * @param {string / number} value 需要判断的值\n */\nexport function isPositive(value) {\n  return value.toString().indexOf('-') < 0\n}\n\nexport function handleRetainNew(value, digit) {\n  if (!digit) return new Big(value).toFixed(0)",
    "relevantFileList": [],
    "filePath": "src/formatData/formatF10Data.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "0) {\n    isNegative = true;\n    val = val.toString().replace(\"-\", \"\");\n  }\n  for (let i = 0; i < percentConfig.length; i++) {\n    const firstConfig = percentConfig[i];",
      "CodeQwen2.5-7B": "0) {",
      "copilot": "数字奇偶和后续数字决定（例子1.255 => 1.25）",
      "CodeQwen1.5-7B": " 0) {\r"
    }
  },
  {
    "prefix": "import Vue from 'vue'\nimport CommandBox from '@/components/CommandBox/CommandBox.vue'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    this.commandBoxInstance = null\n  },\n  mounted () {\n    // this.openCommandBox()\n    window.addEventListener('beforeunload', this.saveCommandBoxPosition)\n  },\n  beforeDestroy () {\n    this.closeCommandBox()\n    // this.commandBoxInstance = null\n  },\n  methods: {\n    saveCommandBoxPosition() {\n      if (this.commandBoxInstance) {\n        localStorage.setItem(\n          'edb_commandBox_position',\n          JSON.stringify(this.commandBoxInstance.position)\n        )\n      }\n    },\n    // 触发命令框\n    triggerCommandBox (data) {\n      // console.log('triggerCommandBox', data)\n      if (data.action === 'focusCommandBox') {\n        let initPosition\n        try {\n          initPosition = JSON.parse(localStorage.getItem('edb_commandBox_position'))\n        } catch (e) { console.log(e) }\n        this.openCommandBox({\n          initMode: data.args,\n          // initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 74 }\n          initPosition: initPosition || (data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 174 })\n        }).then(() => {\n          this.commandBoxInstance.focus()\n        })\n      } else if (data.action === 'switchCommandBoxMode') {\n        this.switchCommandBoxMode({\n          mode: data.args\n        })\n      } else if (data.action === 'syncSelectItems') {",
    "infill": "if (this.commandBoxInstance) {\r\n          this.commandBoxInstance.syncSelectItems({\r\n            selectItems:\r\n          })\r\n       ",
    "suffix": " }\r\n      }\r\n    },\r\n    openCommandBox ({ initMode, initPosition }) {\r\n      if (!this.commandBoxInstance) {\r\n        const CommandBoxComponent = Vue.extend(CommandBox)\r\n        const _this = this\r\n        this.commandBoxInstance = new CommandBoxComponent({\r\n          beforeCreate () {\r\n            this._i18n = _this._i18n \r\n          },\r\n          propsData: {\r\n            // ContainerRef: this\r\n            initMode,\r\n            initPosition,\r\n          }\r\n        })\r\n        // this.commandBoxInstance.$on('hide', () => {\r\n        //   this.onCommandBoxHide()\r\n        // })\r\n        let mountEl = document.createElement('div')\r\n        document.body.appendChild(mountEl)\r\n        this.commandBoxInstance.$mount(mountEl)\r\n        return this.$nextTick()\r\n      } else {\r\n        this.commandBoxInstance.open()\r\n        return Promise.resolve()\r\n      }\r\n    },\r\n    // onCommandBoxHide () {\r\n    // },\r\n    closeCommandBox () {\r\n      if (this.commandBoxInstance) {\r\n        this.commandBoxInstance.$destroy()\r\n        document.body.removeChild(this.commandBoxInstance.$el)\r\n        this.commandBoxInstance = null\r\n      }\r\n    },\r\n    switchCommandBoxMode({ mode }) {\r\n      if (this.commandBoxInstance) {\r\n        if (mode) {\r\n          this.commandBoxInstance.show()\r\n          this.commandBoxInstance.switchMode(mode)\r\n        } else {\r\n          this.commandBoxInstance.hide()\r\n        }\r\n      }\r\n    },\r\n  },\r\n}\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/pages/dashboard/mixins/commandBoxMixin.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "{\n        this.$emit('commandBox::syncSelectItems', data.args)\n      }",
      "CodeQwen2.5-7B": "",
      "copilot": "if (this.commandBoxInstance) {\r\n          this.commandBoxInstance.syncSelectItems({\r\n            selectItems:\r\n          })\r\n       ",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "import httpRequestV2 from '@overseafront/http-request';\nimport fl from '@king-fisher/falcon';\n\nimport { checkMethodValid } from '@overseafront/utils';\n\n// 轮询快讯更新的接口\nexport const getUpdateData = function (data) {\n  return httpRequestV2.send({\n    url: '/gw/news_f10/v1/newsFlash/getUpdateData',\n    method: 'get',\n    data,\n  });\n};\n\n// 快讯分页接口\nexport const getNewsData = function (data) {\n  return httpRequestV2.send({\n    url: '/gw/news_f10/v1/newsFlash/getNewsData',\n    method: 'get',\n    data,\n  });\n};\n\n// 获取push快讯接口\nexport const getPushNews = function (data) {\n  return httpRequestV2.send({\n    url: '/gw/news_f10/v1/newsFlash/getPushNews',\n    method: 'get',\n    data,\n  });\n};\n\n// 根据id获取快讯信息\nexport const getNewsById = function (data) {\n  return httpRequestV2.send({\n    url: '/gw/news_f10/v1/newsFlash/getNewsById',\n    method: 'get',\n    data,\n    isRequestByNative: false,\n  });\n};\n\n// 分享数量计数\nexport const countShare = function (data) {\n  return httpRequestV2.send({\n    url: '/gw/news_f10/v1/newsFlash/metrics/increment',\n    method: 'POST',\n    data,\n    isRequestByNative: false,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n// 判断是否支持自选股弹窗\nexport const isSupportWatchList = async function () {\n  let valid;\n  try {\n    valid = await checkMethodValid('addStocksToWatchlistAlert');\n  } catch (error) {\n    window.console.log('---isSupportWatchList error');\n    return false;\n  }\n  return valid?.errorCode === 0;\n};\n\nexport const addStocksToWatchlistAlert = async (params, type, callback) => {\n  window.console.log('--------addStocksToWatchlistAlert params', {\n    type: 'stock',\n    addStyle: 'hint',\n    actionType: type,\n    stocks: params,\n  });\n  window.callNativeHandler(\n    'addStocksToWatchlistAlert',\n    {\n      type: 'stock',\n      addStyle: 'hint',\n      actionType: type,\n      stocks: params,\n    },\n    res => {\n      window.console.log('--------addStocksToWatchlistAlert done', res);\n      const isValid = res?.errorCode === 0;\n      callback(isValid);\n    }\n  );\n};\nexport const checkStocksInGroup = async function () {\n  let valid;\n  try {\n    valid = await checkMethodValid('isStocksInGroup');\n  } catch (error) {\n    window.console.log('---isStocksInGroup error');\n    return false;\n  }\n  return valid?.errorCode === 0;\n};\n// 判断该股是否在某个组内\nexport const isStocksInGroup = async function (params) {\n  window.console.log('--------isStocksInGroup start', params);\n  return new Promise(resolve => {\n    try {\n      window.callNativeHandler(\n        'isStocksInGroup',\n        {\n          type: 'stock',\n          stocks: params,\n        },\n        res => {\n          window.console.log('--------isStocksInGroup done', res);\n          const isValid = res?.data?.isInGroup;\n          resolve(isValid);\n        }\n      );\n    } catch (error) {\n      resolve(false);\n    }\n  });\n};\n\n// 调用AIME取数\nexport const callAimeQuery = (funcCards, lang) => {\n  console.error('callAimeQuery', fl.canIUse('callAImeQuery'));\n  if (fl.canIUse('callAImeQuery')) {\n    console.error('allAImeQuery params', funcCards);\n    fl.callAImeQuery({\n      from: 'in-app',\n      lang,\n      funcCards,\n      success: () => {\n        window.console.log('allAImeQuery success');\n      },\n      fail: () => {\n        window.console.error('allAImeQuery failed');\n      },\n    });\n  }\n};\n\nexport const getDataPlatform = (option = {}) => {\n  const ajaxData = {\n    ...option,\n  };\n  return httpRequestV2.send({\n    headers: {\n      'Content-type': 'application/json',\n    },\n    noBaseURL: true,\n    id: 'getDataPlatform',\n    // url: 'gw/dataplatform/v1/query',\n    url: `${process.env.VUE_APP_API_HOST}/gw/dataplatform/v1/queryBatch`,\n    isRequestByNative: false,\n    method: 'post',\n    data: ajaxData,\n  });\n};\n\n//更新AIME的位置\nexport const updateAimePositions = bottom => {\n  if (fl.canIUse('updateAnyWhereAImeSafeAreaInsets')) {\n    const two = 2;\n    window.console.error('updateAimePositions', bottom);\n    fl.updateAnyWhereAImeSafeAreaInsets({\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: bottom - two,\n    });\n  }\n};\n\nexport const getLiveStreamState = () =>\n  httpRequestV2.send({\n    url: '/gw/live/v1/stream/state',\n    method: 'GET',\n  });\n\n// 获取广告信息\nexport const getAdvert = async params => {\n  const uri = process.env.VUE_APP_CURRENTMODE !== 'production' ? '//testm.10jqka.com.cn' : '//advert.ainvest.com",
    "infill": "';",
    "suffix": "\n  const { data } = await httpRequestV2.send({\n    method: 'GET',\n    url: `${uri}/yyzt/ad/v1/list`,\n    data: params,\n    noEncrypt: true,\n    noBaseURL: true,\n    isRequestByNative: true, // 广告接口得走端内\n  });\n  return data;\n};\n",
    "relevantFile": "<file_path>src/main.js\n// 注册广告组件\ntry {\n  Vue.use(window.businessComponents?.advert)\n} catch (err) { \n  console.log(err)\n}\n// 全局公共样式\nimport '@/assets/styles/index.less';\n\n// 全局过滤器\nimport filters from '@/filters';\nObject.keys(filters).forEach(filterName => {\n  Vue.filter(filterName, filters[filterName]);\n});\n\n// 全局注入自定义指令\nimport directives from '@/directives';\nVue.use(directives);\n\nconst IS_DEV = process.env.VUE_APP_CURRENTMODE === 'development';\n\nimport mockBridge from './debug/mockBridge';\nif (IS_DEV && !window.WebViewJavascriptBridge) {\n  window.WebViewJavascriptBridge = mockBridge;\n}\n\n// http sdk\nimport httpRequestV2 from '@overseafront/http-request';\nimport { BT_CODE } from './config/project';\n\nconst legacyHttpRequestConfig = IS_DEV\n  ? {\n    baseURL: 'http://yapi.myhexin.com/yapi/mock_v2/310570',\n    token: '192f0e6a434f544f3ba909a54058c3776',\n  }\n  : { baseURL: process.env.VUE_APP_API_HOST };\nconst httpRequestConfig = {\n  btcode: BT_CODE,\n  timeout: 5000,\n  noEncrypt: IS_DEV,\n  env: process.env.VUE_APP_CURRENTMODE,\n  ...legacyHttpRequestConfig,\n};\n\n// 注册http中间层\nVue.use(httpRequestV2, httpRequestConfig);\n\n// vue异常捕获并上报监控\nVue.config.errorHandler = function (error, vm, info) {\n  try {\n    window.ClientMonitor.reportFrameErrors(\n      {\n        category: 'vue',\n        grade: 'error',\n        errorUrl: window.location.href,\n        message: info,\n        stack: error.stack,\n      },\n      error,\n    );",
    "relevantFileList": [],
    "filePath": "src/api/api.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "';",
      "CodeQwen2.5-7B": ".cn';",
      "copilot": "';",
      "CodeQwen1.5-7B": " ';"
    }
  },
  {
    "prefix": "const fs = require('fs');\nconst path = require('path');\nconst production = process.env.NODE_ENV === 'production';\nconst analyze = process.env.ACTUAL_MODE === 'analyze';\n// 部署地址，申请后更新并删除注释\nconst staticUrl = `${process.env.VUE_APP_CDN_HOST}/frontResources/static/regular/community-discuss`;\n\nconst { WebAverngerWebpack }  = require('@king-fisher/web-avenger');\n\n// 多页面配置\nconst pageTitle = {\n  'stock': {\n    title: '海外社区股吧',\n    chunks: [],\n  },\n  // // 预留话题页\n  // 'topic-discussion': {\n  //   title: '话题',\n  //   chunks: [],\n  // },\n};\nconst pagePath = path.resolve(__dirname, './src/pages');\nconst pageArr = fs.readdirSync(pagePath);\nconst pages = {};\npageArr.forEach(name => {\n  const title = pageTitle[name] ? pageTitle[name].title : '';\n  Object.defineProperty(pages, name, {\n    enumerable: true,\n    value: {\n      production,\n      title,\n      entry: `src/pages/${name}/main.ts`,\n      template: `public/${name}.html`,\n      filename: `${name}.html`,\n    },\n  });\n});\nconst port = 8080;\n\nmodule.exports = {\n  publicPath: production ? staticUrl : './',\n  crossorigin: 'anonymous',\n  assetsDir: 'static',\n  pages,\n  devServer: {\n    port,\n    disableHostCheck: true,\n  },\n  plugins: [\n    // 插件配置\n    WebAverngerWebpack({\n      enable: true,\n      framew",
    "infill": "ork: 'vue',\n      debugkey: '',",
    "suffix": "\n    }),\n  lintOnSave: 'default',\n  chainWebpack: config => {\n    config.module.rule('eslint').use('eslint-loader');\n    config.resolve.alias\n    .set('@public', path.resolve(__dirname, './src/utils/public-method/lib'))\n    .set('@api', path.resolve(__dirname, `./src/utils/service${(production || analyze) ? '' : '/mock'}`));\n    // 正式环境将大于 2k byte 的图片添加到构建产物中，通过发布平台发布\n    config.module\n    .rule('images')\n    .test(/\\.(jpg|png|gif)$/)\n    .use('url-loader')\n    .options({\n      limit: (production || analyze) ? 0 : Infinity,\n      publicPath: staticUrl + 'static/img',\n      outputPath: 'static/img',\n      name: '[name].[ext]',\n    });\n    if (analyze) {\n      const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');\n      config.plugin('webpack-bundle-analyzer').use(new BundleAnalyzerPlugin());\n\n      const MomentLocalesPlugin = require('moment-locales-webpack-plugin');\n      config.plugin('moment-locales-plugin').use(new MomentLocalesPlugin({ localesToKeep: ['zh-cn'] }));\n    }\n    config.plugins.delete('preload');\n    config.plugins.delete('prefetch');\n  },\n  pluginOptions: {\n    'style-resources-loader': {\n      preProcessor: 'scss',\n      patterns: [\n        path.resolve(__dirname, './src/assets/styles/base.scss'),\n      ],\n    },\n  },\n  productionSourceMap: !production,\n};\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "vue.config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ": Object.keys(pageTitle).map(name => ({\n        name,\n        chunks: pageTitle[name].chunks || [],\n      }))",
      "CodeQwen2.5-7B": "ork: 'vue',",
      "copilot": "ork: 'vue',\n      debugkey: '',",
      "CodeQwen1.5-7B": " ork: 'vue',"
    }
  },
  {
    "prefix": "import Vue from 'vue'\nimport CommandBox from '@/components/CommandBox/CommandBox.vue'\n\nexport default {\n  data () {\n    return {\n      edbActiveCommandMode: 'IndexSelect',\n    }\n  },\n  computed: {\n    fullActiveTabMode() {\n      return this.activeTab + (this.activeTab === 'edb' ? `_${this.edbActiveTabMode}` : '')\n    }\n  },\n  watch: {\n    fullActiveTabMode(val) {\n      console.log('fullActiveTabMode', val)\n      if (val === 'screen' || val === 'edb_table') {\n      // if (val === 'edb_table') {\n        if (val === 'edb_table') {\n          this.switchCommandBoxMode({ mode: ",
    "infill": "this.edbActiveCommandMode })",
    "suffix": "\r\n        } else if (val === 'screen') {\r\n          this.switchCommandBoxMode({ mode: 'Screen' })\r\n        }\r\n        this.commandBoxInstance && this.commandBoxInstance.show()\r\n      } else {\r\n        this.commandBoxInstance && this.commandBoxInstance.hide()\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    this.commandBoxInstance = null\r\n  },\r\n  mounted () {\r\n    // this.openCommandBox()\r\n    window.addEventListener('beforeunload', this.saveCommandBoxPosition)\r\n  },\r\n  beforeDestroy () {\r\n    this.closeCommandBox()\r\n    // this.commandBoxInstance = null\r\n  },\r\n  methods: {\r\n    // 保存指令框的位置\r\n    saveCommandBoxPosition() {\r\n      if (this.commandBoxInstance) {\r\n        localStorage.setItem(\r\n          'edb_commandBox_position',\r\n          JSON.stringify(this.commandBoxInstance.position)\r\n        )\r\n      }\r\n    },\r\n    // 触发命令框\r\n    triggerCommandBox (data) {\r\n      // console.log('triggerCommandBox', data)\r\n      if (data.action === 'focusCommandBox') {\r\n        let initPosition\r\n        try {\r\n          initPosition = JSON.parse(localStorage.getItem('edb_commandBox_position'))\r\n        } catch (e) { console.log(e) }\r\n        this.openCommandBox({\r\n          initMode: data.args,\r\n          // initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 74 }\r\n          initPosition: initPosition || (data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 174 })\r\n        }).then(() => {\r\n          this.commandBoxInstance.focus()\r\n        })\r\n      } else if (data.action === 'switchCommandBoxMode') {\r\n        this.switchCommandBoxModeFromEdb({\r\n          mode: data.args\r\n        })\r\n      } else if (data.action === 'syncSelectItems') {\r\n        if (this.commandBoxInstance) {\r\n          this.commandBoxInstance.syncSelectItems({\r\n            selectItems: data.args,\r\n          })\r\n        }\r\n      }\r\n    },\r\n    openCommandBox ({ initMode, initPosition }) {\r\n      if (!this.commandBoxInstance) {\r\n        const CommandBoxComponent = Vue.extend(CommandBox)\r\n        const _this = this\r\n        this.commandBoxInstance = new CommandBoxComponent({\r\n          beforeCreate () {\r\n            this._i18n = _this._i18n \r\n          },\r\n          propsData: {\r\n            // ContainerRef: this\r\n            initMode,\r\n            initPosition,\r\n          }\r\n        })\r\n        // this.commandBoxInstance.$on('hide', () => {\r\n        //   this.onCommandBoxHide()\r\n        // })\r\n        let mountEl = document.createElement('div')\r\n        document.body.appendChild(mountEl)\r\n        this.commandBoxInstance.$mount(mountEl)\r\n        return this.$nextTick()\r\n      } else {\r\n        this.commandBoxInstance.open()\r\n        return Promise.resolve()\r\n      }\r\n    },\r\n    // onCommandBoxHide () {\r\n    // },\r\n    closeCommandBox () {\r\n      if (this.commandBoxInstance) {\r\n        this.commandBoxInstance.$destroy()\r\n        document.body.removeChild(this.commandBoxInstance.$el)\r\n        this.commandBoxInstance = null\r\n      }\r\n    },\r\n    // 从指标库表切换指令框内容模式\r\n    switchCommandBoxModeFromEdb({ mode }) {\r\n      if (mode) {\r\n        this.edbActiveCommandMode = mode\r\n        this.switchCommandBoxMode({ mode })\r\n      }\r\n    },\r\n    switchCommandBoxMode({ mode }) {\r\n      if (this.commandBoxInstance) {\r\n        // if (mode) {\r\n        //   this.commandBoxInstance.show()\r\n        //   this.commandBoxInstance.switchMode(mode)\r\n        // } else {\r\n        //   this.commandBoxInstance.hide()\r\n        // }\r\n        // if (mode) {\r\n        //   this.commandBoxInstance.switchMode(mode)\r\n        // }\r\n        this.commandBoxInstance.switchMode(mode)\r\n      }\r\n    },\r\n    // 打开数据看板的指令框\r\n    focusCommandBoxScreen() {\r\n      this.triggerCommandBox({ action: 'focusCommandBox', args: 'screen' })\r\n    },\r\n  },\r\n}\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/pages/dashboard/mixins/commandBoxMixin.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "'Table'",
      "CodeQwen2.5-7B": "'IndexSelect' })",
      "copilot": "this.edbActiveCommandMode })",
      "CodeQwen1.5-7B": " 'Table' })<file_sep> /src/components/CommandBox/CommandBox.js"
    }
  },
  {
    "prefix": "\nconst { it } = require('node:test');\n\n// a:  \nconst Button = require('../component/buttons.vue').default;\n\ndescribe('Button', () => {\n    const ",
    "infill": "wrapper = mount(Button);\n    it\n    ",
    "suffix": "\n    it('should be defined', () => {\n        expect(Button).toBeDefined();\n    })\n})",
    "relevantFile": "<file_path>jest.config.js\nmodule.exports = {\n    \"collectCoverage\": true,\n    \"coverageReporters\": [\"html\", \"text-summary\"],\n    \"transformIgnorePatterns\": [\"/node_modules/\"],\n    \"collectCoverageFrom\": [\"**/*.{js,vue}\", \"!**/node_modules/**\"],\n    \"transform\": {\n        \"^.+\\\\.vue$\": \"vue-jest\",\n        \"^.+\\\\.js$\": \"babel-jest\"\n    },\n    \"moduleFileExtensions\": [\"js\", \"vue\"],\n}\nconst { describe } = require(\"node:test\");\nimport Button from '../component/buttons';\nq:  Cannot find module '../component/buttons' from 'packages/certification/src/test/test.js'",
    "relevantFileList": [],
    "filePath": "packages/certification/src/test/test.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "btn = shallowMount(Button);",
      "CodeQwen2.5-7B": "button = new Button();",
      "copilot": "wrapper = mount(Button);\n    it\n    ",
      "CodeQwen1.5-7B": " wrapper = shallowMount(Button);"
    }
  },
  {
    "prefix": "\"use strict\";\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\";\n// process.env.NODE_EXTRA_CA_CERTS = 'D:/FiddlerRoot.pem';\n\nvar PROXY_DOMAIN = [\n  \"copilot-proxy.githubusercontent.com\",\n  \"copilot-telemetry.githubusercontent.com\",\n  'default.exp-tas.com',\n  'api.github.com',\n  'copilot-api.github.com',\n  'gh.io',\n  'api.githubcopilot.com',\n  'copilot-api.githubcopilot.com',\n  'github.com',\n  'repositorypolicy.azurewebsites.net',\n  'origin-tracker.githubusercontent.com',\n  'docs.github.com',\n  'dc.services.visualstudio.com',\n  'breeze.aimon.applicationinsights.io',\n  'dc-int.services.visualstudio.com'\n];\nvar ProxyURL = (e) => {\n  const URL_PROXY = URL;\n  try {\n    var abc = new d0(1, \"URL_PROXY\");\n    setTimeout(() => {\n      var iR = require(\"path\");\n      abc.info(e, `[test] 123`);\n      // abc.info(e, `[test] ${e.document}`);\n      // abc.info(e, `[test] ${window.document}`);\n      e.get($0).fetch('http://copilot-proxy.myhexin.com/copilot-ai-plugins/stat-logs', {\n        method: 'POST',\n        body: JSON.stringify({\n          type: 'projectPath',\n          data: {\n            machine_id: e.get(kl).machineId,\n            session_id: e.get(kl).sessionId,\n            project_path: '',\n            remote_svc: 'intellij-copilot'\n          }\n        }),\n      }).then(res => {\n        abc.info(e, `[test] ${JSON.string",
    "infill": "ify(res)",
    "suffix": "}`);\n      });\n    }, 1000);\n    URL = class URL extends URL_PROXY {\n      constructor(input, base) {\n        let _input = input;\n        const proxyURLItem = PROXY_DOMAIN.find((item) => input.includes(item));\n        const proxyDomain = \"copilot-proxy.myhexin.com\";\n        const thsDomain = \"10jqka.com.cn\";\n        const proxyPrefixPath = \"/copilot-ai-plugins\";\n        if (proxyURLItem && !input.includes(proxyDomain) && !input.includes(thsDomain)) {\n          _input = appendDomain(input, proxyDomain, proxyPrefixPath);\n        } else {\n          console.log(\"[test]URL hook\", input, base);\n        }\n        _input = _input.replace(\"https://\", \"http://\");\n        abc.info(e, `[test] _input ${_input} ${input} ${proxyURLItem} ${input.includes(proxyDomain)}`);\n        super(_input, base);\n      }\n    };\n  } catch (error) {\n    console.error(error);\n  }\n  var appendDomain = (url, domain, _path = \"\") => {\n    const _url = new URL_PROXY(url);\n    if (_url.hostname === domain) return url;\n    return `${_url.protocol}//${domain}${_path !== \"\" ? _path + \"/\" : \"/\"}${\n      _url.hostname\n    }${_url.pathname}${_url.search}`;\n  };\n};\n\n\nvar J6e = Object.create;\nvar CS = Object.defineProperty;\nvar Q6e = Object.getOwnPropertyDescriptor;\nvar X6e = Object.getOwnPropertyNames;\nvar Z6e = Object.getPrototypeOf,\n  eye = Object.prototype.hasOwnProperty;\nvar tye = (e, t, r) =>\n  t in e\n    ? CS(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })\n    : (e[t] = r);\nvar l = (e, t) => CS(e, \"name\", { value: t, configurable: !0 });\nvar Jt = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports);\nvar rye = (e, t, r, n) => {\n  if ((t && typeof t == \"object\") || typeof t == \"function\")\n    for (let s of X6e(t))\n      !eye.call(e, s) &&\n        s !== r &&\n        CS(e, s, {\n          get: () => t[s],\n          enumerable: !(n = Q6e(t, s)) || n.enumerable,\n        });\n  return e;\n};\nvar Mr = (e, t, r) => (\n  (r = e != null ? J6e(Z6e(e)) : {}),\n  rye(\n    t || !e || !e.__esModule\n      ? CS(r, \"default\", { value: e, enumerable: !0 })\n      : r,\n    e\n  )\n);\nvar nc = (e, t, r) => (tye(e, typeof t != \"symbol\" ? t + \"\" : t, r), r),\n  $O = (e, t, r) => {\n    if (!t.has(e)) throw TypeError(\"Cannot \" + r);\n  };\nvar Ai = (e, t, r) => (\n    $O(e, t, \"read from private field\"), r ? r.call(e) : t.get(e)\n  ),\n  H0 = (e, t, r) => {\n    if (t.has(e))\n      throw TypeError(\"Cannot add the same private member more than once\");\n    t instanceof WeakSet ? t.add(e) : t.set(e, r);\n  },\n  N0 = (e, t, r, n) => (\n    $O(e, t, \"write to private field\"), n ? n.call(e, r) : t.set(e, r), r\n  );\nvar Kf = (e, t, r) => ($O(e, t, \"access private method\"), r);\nvar _Z = Jt((HO) => {\n  var CZ =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\n      \"\"\n    );\n  HO.encode = function (e) {\n    if (0 <= e && e < CZ.length) return CZ[e];\n    throw new TypeError(\"Must be between 0 and 63: \" + e);\n  };\n  HO.decode = function (e) {\n    var t = 65,\n      r = 90,\n      n = 97,\n      s = 122,\n      o = 48,\n      a = 57,\n      c = 43,\n      f = 47,\n      u = 26,\n      d = 52;\n    return t <= e && e <= r\n      ? e - t\n      : n <= e && e <= s\n      ? e - n + u\n      : o <= e && e <= a\n      ? e - o + d\n      : e == c\n      ? 62\n      : e == f\n      ? 63\n      : -1;\n  };\n});\nvar GO = Jt((VO) => {\n  var TZ = _Z(),\n    WO = 5,\n    SZ = 1 << WO,\n    EZ = SZ - 1,\n    wZ = SZ;\n  function nye(e) {\n    return e < 0 ? (-e << 1) + 1 : (e << 1) + 0;\n  }\n  l(nye, \"toVLQSigned\");\n  function iye(e) {\n    var t = (e & 1) === 1,\n      r = e >> 1;\n    return t ? -r : r;\n  }\n  l(iye, \"fromVLQSigned\");\n  VO.encode = l(function (t) {\n    var r = \"\",\n      n,\n      s = nye(t);\n    do (n = s & EZ), (s >>>= WO), s > 0 && (n |= wZ), (r += TZ.encode(n));\n    while (s > 0);\n    return r;\n  }, \"base64VLQ_encode\");\n  VO.decode = l(function (t, r, n) {\n    var s = t.length,\n      o = 0,\n      a = 0,\n      c,\n      f;\n    do {\n      if (r >= s) throw new Error(\"Expected more digits in base 64 VLQ value.\");\n      if (((f = TZ.decode(t.charCodeAt(r++))), f === -1))\n        throw new Error(\"Invalid base64 digit: \" + t.charAt(r - 1));\n      (c = !!(f & wZ)), (f &= EZ), (o = o + (f << a)), (a += WO);\n    } while (c);\n    (n.value = iye(o)), (n.rest = r);\n  }, \"base64VLQ_decode\");\n});\nvar ty = Jt((Pf) => {\n  function sye(e, t, r) {\n    if (t in e) return e[t];\n    if (arguments.length === 3) return r;\n    throw new Error('\"' + t + '\" is a required argument.');\n  }\n  l(sye, \"getArg\");\n  Pf.getArg = sye;\n  var IZ = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/,\n    oye = /^data:.+\\,.+$/;\n  function tb(e) {\n    var t = e.match(IZ);\n    return t\n      ? { scheme: t[1], auth: t[2], host: t[3], port: t[4], path: t[5] }\n      : null;\n  }\n  l(tb, \"urlParse\");\n  Pf.urlParse = tb;\n  function Z6(e) {\n    var t = \"\";\n    return (\n      e.scheme && (t += e.scheme + \":\"),\n      (t += \"//\"),\n      e.auth && (t += e.auth + \"@\"),\n      e.host && (t += e.host),\n      e.port && (t += \":\" + e.port),\n      e.path && (t += e.path),\n      t\n    );\n  }\n  l(Z6, \"urlGenerate\");\n  Pf.urlGenerate = Z6;\n  function zO(e) {\n    var t = e,\n      r = tb(e);\n    if (r) {\n      if (!r.path) return e;\n      t = r.path;\n    }\n    for (\n      var n = Pf.isAbsolute(t), s = t.split(/\\/+/), o, a = 0, c = s.length - 1;\n      c >= 0;\n      c--\n    )\n      (o = s[c]),\n        o === \".\"\n          ? s.splice(c, 1)\n          : o === \"..\"\n          ? a++\n          : a > 0 &&\n            (o === \"\" ? (s.splice(c + 1, a), (a = 0)) : (s.splice(c, 2), a--));\n    return (\n      (t = s.join(\"/\")),\n      t === \"\" && (t = n ? \"/\" : \".\"),\n      r ? ((r.path = t), Z6(r)) : t\n    );\n  }\n  l(zO, \"normalize\");\n  Pf.normalize = zO;\n  function AZ(e, t) {\n    e === \"\" && (e = \".\"), t === \"\" && (t = \".\");\n    var r = tb(t),\n      n = tb(e);\n    if ((n && (e = n.path || \"/\"), r && !r.scheme))\n      return n && (r.scheme = n.scheme), Z6(r);\n    if (r || t.match(oye)) return t;\n    if (n && !n.host && !n.path) return (n.host = t), Z6(n);\n    var s = t.charAt(0) === \"/\" ? t : zO(e.replace(/\\/+$/, \"\") + \"/\" + t);\n    return n ? ((n.path = s), Z6(n)) : s;\n  }\n  l(AZ, \"join\");\n  Pf.join = AZ;\n  Pf.isAbsolute = function (e) {\n    return e.charAt(0) === \"/\" || IZ.test(e);\n  };\n  function aye(e, t) {\n    e === \"\" && (e = \".\"), (e = e.replace(/\\/$/, \"\"));\n    for (var r = 0; t.indexOf(e + \"/\") !== 0; ) {\n      var n = e.lastIndexOf(\"/\");\n      if (n < 0 || ((e = e.slice(0, n)), e.match(/^([^\\/]+:\\/)?\\/*$/)))\n        return t;\n      ++r;\n    }\n    return Array(r + 1).join(\"../\") + t.substr(e.length + 1);\n  }\n  l(aye, \"relative\");\n  Pf.relative = aye;\n  var PZ = (function () {\n    var e = Object.create(null);\n    return !(\"__proto__\" in e);\n  })();\n  function RZ(e) {\n    return e;\n  }\n  l(RZ, \"identity\");\n  function lye(e) {\n    return kZ(e) ? \"$\" + e : e;\n  }\n  l(lye, \"toSetString\");\n  Pf.toSetString = PZ ? RZ : lye;\n  function cye(e) {\n    return kZ(e) ? e.slice(1) : e;\n  }\n  l(cye, \"fromSetString\");\n  Pf.fromSetString = PZ ? RZ : cye;\n  function kZ(e) {\n    if (!e) return !1;\n    var t = e.length;\n    if (\n      t < 9 ||\n      e.charCodeAt(t - 1) !== 95 ||\n      e.charCodeAt(t - 2) !== 95 ||\n      e.charCodeAt(t - 3) !== 111 ||\n      e.charCodeAt(t - 4) !== 116 ||\n      e.charCodeAt(t - 5) !== 111 ||\n      e.charCodeAt(t - 6) !== 114 ||\n      e.charCodeAt(t - 7) !== 112 ||\n      e.charCodeAt(t - 8) !== 95 ||\n      e.charCodeAt(t - 9) !== 95\n    )\n      return !1;\n    for (var r = t - 10; r >= 0; r--) if (e.charCodeAt(r) !== 36) return !1;\n    return !0;\n  }\n  l(kZ, \"isProtoString\");\n  function fye(e, t, r) {\n    var n = ey(e.source, t.source);\n    return n !== 0 ||\n      ((n = e.originalLine - t.originalLine), n !== 0)",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "agent.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ".stringify(res)",
      "CodeQwen2.5-7B": "ify(res)}`);",
      "copilot": "ify(res)",
      "CodeQwen1.5-7B": "ify(res)}`);"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { sleep } from '@/utils/index'\nimport { calLabelLayout } from '../ChainChart/utils/index'\nimport { NodeBgLinearGradientMap, NodeBarLinearGradient } from './common'\n\nexport class NTParallel {\n  constructor({ container, playParam, chartData }) {\n    super",
    "infill": "({ container, playParam, chartData })",
    "suffix": "\r\n    // this.container = container\r\n\r\n    const nodesMap = {}\r\n    for (let i = 0; i < chartData.nodes.length; i++) {\r\n      nodesMap[chartData.nodes[i].id] = chartData.nodes[i]\r\n    }\r\n    this.data = playParam.ids.map(id => {\r\n      return {\r\n        name: nodesMap[id].data.name,\r\n        image: nodesMap[id].data.image || `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n      }\r\n    })\r\n    this.rootStreamType = nodesMap[playParam.ids[0]].rootStreamType || nodesMap[playParam.ids[0]].streamType\r\n\r\n    this.width = this.container.offsetWidth\r\n    this.height = this.container.offsetHeight\r\n\r\n    // 初始化canvas\r\n    const canvas = document.createElement('canvas')\r\n    canvas.style.width = '100%'\r\n    canvas.style.height = '100%'\r\n    canvas.width = this.width\r\n    canvas.height = this.height\r\n    this.canvas = canvas\r\n    this.container.appendChild(this.canvas)\r\n    this.zr = zrender.init(this.canvas, {\r\n      devicePixelRatio: window.devicePixelRatio,\r\n      width: this.width,\r\n      height: this.height,\r\n      renderer: 'canvas'\r\n    })\r\n\r\n    // this.data = [\r\n    //   {\r\n    //     name: '滚筒洗衣机',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '便携式吸尘器',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    //   {\r\n    //     name: '法式精致双开门冰箱',\r\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\r\n    //   },\r\n    // ]\r\n\r\n    this.initLayout = null\r\n    this.gridLayouts = null\r\n    this.calLayout()\r\n\r\n    this.rootGroup = new zrender.Group({\r\n      position: [this.width / 2, this.height / 2],\r\n      silent: true,\r\n    })\r\n    this.zr.add(this.rootGroup)\r\n\r\n    this.render()\r\n\r\n  }\r\n\r\n  pause() {\r\n    this.zr.animation.pause()\r\n  }\r\n\r\n  resume() {\r\n    this.zr.animation.resume()\r\n  }\r\n\r\n  calLayout() {\r\n    this.initLayout = {\r\n      position: [0, 0],\r\n      scale: 1,\r\n    }\r\n    this.gridLayouts = [\r\n      {\r\n        position: [-125, -153],\r\n        scale: 0.5,\r\n      },\r\n      {\r\n        position: [125, -153],\r\n        scale: 0.5,\r\n      },\r\n      {\r\n        position: [-125, 153],\r\n        scale: 0.5,\r\n      },\r\n      {\r\n        position: [125, 153],\r\n        scale: 0.5,\r\n      }\r\n    ]\r\n  }\r\n\r\n  async render() {\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      if (i > 0 && i % 4 === 0) {\r\n        await this.blurAllNodes(0)\r\n        this.rootGroup.removeAll()\r\n        await sleep(500)\r\n      }\r\n      this.blurAllNodes(0.1)\r\n      const nodeGroup = await this.showNode(i)\r\n      await Promise.all([this.playNode(nodeGroup, i), this.resumeAllNodes()])\r\n      await sleep(500)\r\n    }\r\n  }\r\n\r\n  blurAllNodes(toOpacity = 0.1) {\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: toOpacity\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  resumeAllNodes() {\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  showNode(index) {\r\n    const nodeData = this.data[index]\r\n    const fromLayout = this.initLayout\r\n    let nodeGroup = new zrender.Group({\r\n      position: fromLayout.position.slice(),\r\n      scale: [fromLayout.scale, fromLayout.scale],\r\n    })\r\n    const width = 428\r\n    const height = 538\r\n    nodeGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2 - 5,\r\n        y: - height / 2 - 5,\r\n        width: width + 10,\r\n        height: height + 10,\r\n        r: 17.28,\r\n      },\r\n      style: {\r\n        fill: '#FFFFFF',\r\n        shadowOffsetX: 0,\r\n        shadowOffsetY: 0,\r\n        shadowBlur: 20,\r\n        shadowColor: 'rgba(3,25,40,0.16)'\r\n      },\r\n    }))\r\n    // \r\n    const imageEl = new zrender.Image({\r\n      style: {\r\n        image: nodeData.image,\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: width,\r\n      },\r\n    })\r\n    const nodeMask = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        r: 16,\r\n      },\r\n    })\r\n    imageEl.setClipPath(nodeMask)\r\n    nodeGroup.add(imageEl)\r\n    // \r\n    const textBg = new zrender.Rect({\r\n      shape: {\r\n        x: - width / 2,\r\n        y: - height / 2 + 298,\r\n        width: width,\r\n        height: 240,\r\n        r: [0, 0, 16, 16],\r\n      },\r\n      style: {\r\n        fill: NodeBgLinearGradientMap[this.rootStreamType],\r\n      },\r\n    })\r\n    nodeGroup.add(textBg)\r\n    // 横条\r\n    nodeGroup.add(new zrender.Rect({\r\n      shape: {\r\n        x: - 364 / 2,\r\n        y: - height / 2 + 423,\r\n        width: 364,\r\n        height: 2,\r\n       },\r\n      style: {\r\n        fill: NodeBarLinearGradient,\r\n      },\r\n    }))\r\n    // \r\n    const { fontSize } = calLabelLayout({\r\n      width: width - 24,\r\n      text: nodeData.name,\r\n      maxFontSize: 48,\r\n      minFontSize: 12,\r\n      isBold: true\r\n    })\r\n    nodeGroup.add(new zrender.Text({\r\n      style: {\r\n        text: nodeData.name,\r\n        textLineHeight: fontSize,\r\n        fontSize: fontSize,\r\n        fontFamily: 'MicrosoftYaHei',\r\n        fontWeight: 'bold',\r\n        fill: '#FFFFFF',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        x: 0,\r\n        y: - height / 2 + 423 + 28 + 24,\r\n      },\r\n    }))\r\n    // \r\n    nodeGroup.traverse(child => {\r\n      child.attr({\r\n        style: {\r\n          opacity: 0.1\r\n        }\r\n      })\r\n    })\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      nodeGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  playNode(nodeGroup, index) {\r\n    const toLayout = this.gridLayouts[index % 4]\r\n    return new Promise((resolve) => {\r\n      nodeGroup.animateTo({\r\n        position: toLayout.position.slice(),\r\n        scale: [toLayout.scale, toLayout.scale],\r\n      }, {\r\n        duration: 1000,\r\n        easing: 'cubicOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.zr.dispose()\r\n  }\r\n}",
    "relevantFile": "<file_path>ChainChartDetail.js\n    this.currentNodeDetailIns.$on('renderFinish', () => {\n      this.currentNodeDetailIns.play && this.currentNodeDetailIns.play()\n    })\n    this.currentNodeDetailIns.$mount(insEl)\n    this.currentNodeDetailSource = playParam.source\n  }\n  ChainChart.prototype.createNodeDetailIns = function (playParam) {\n    if (playParam.type === 'nodeDetail') {\n      const nodeItem = this.store.chartData.nodes.find(item => item.id === playParam.id)\n      const Ctor = Vue.extend(nodeDetailComponentMap[playParam.detailType])\n      return new Ctor({\n        beforeCreate () {\n          this.nodeItem = nodeItem\n        }\n      })\n    } else if (playParam.type === 'businessLogic') {\n      const Ctor = Vue.extend(businessLogicComponentMap[playParam.detailType])\n      return new Ctor()\n    } else if (playParam.type === 'nodeTopo') {\n      const Ctor = Vue.extend(nodeTopoComponent)\n      const chartData = this.store.chartData\n      return new Ctor({\n        beforeCreate () {\n          this.playParam = playParam\n          this.chartData = chartData\n        }\n      })\n    }\n  }\n  ChainChart.prototype.destroyNodeDetail = function () {\n    if (this.currentNodeDetailIns) {\n      this.currentNodeDetailIns.$destroy()\n      this.container.removeChild(this.currentNodeDetailIns.$el.parentNode)\n      this.currentNodeDetailIns = null\n      this.currentNodeDetailSource = null\n    }\n  }\n  ChainChart.prototype.resumePlayNodeDetail = function () {\n    if (this.currentNodeDetailIns && this.currentNodeDetailSource === 'play') {\n      if (this.currentNodeDetailIns.resume) {\n        this.currentNodeDetailIns.resume()\n      } else if (this.currentNodeDetailIns.play) {\n        this.currentNodeDetailIns.play()\n      }\n    }\n  }\n  ChainChart.prototype.pausePlayNodeDetail = function () {\n    if (this.currentNodeDetailIns && this.currentNodeDetailSource === 'play') {\n      this.currentNodeDetailIns.pause && this.currentNodeDetailIns.pause()\n    }\n  }\n  ChainChart.prototype.playToEndNodeDetail = function () {\n    if (this.currentNodeDetailIns && this.currentNodeDetailSource === 'play') {\n      this.currentNodeDetailIns.playToEnd && this.currentNodeDetailIns.playToEnd()\n    }\n  }\n\n}\n\nexport default mixinDetail\n<file_path>ChainChart.js\nimport './index.less'\nimport EE from './utils/eventEmitter'\nimport { createStore } from './store'\nimport { Painter } from './painter/painter'\nimport * as layoutUtil from './utils/layoutUtil'\nimport mixinDetail from './ChainChartDetail'\n\nclass ChainChart extends EE {\n  constructor() {\n    super()\n    this.store = createStore()\n    this.painter = new Painter({\n      cc: this\n    })\n    // 初始化详情面板状态\n    this.initNodeDetailState()\n    // 初始化播放状态\n    this.initCaptionPlayState()\n  }\n\n  // 初始化\n  async init({\n    data,\n    container\n  }) {\n    this.container = container\n    this.store.originData = data\n    this.painter.init({\n      container: container\n    })\n    this.emit('loadingChange', true)\n    this.store.chartData = await layoutUtil.init(this.store.originData)\n    this.emit('loadingChange', false)\n    this.painter.render()\n    // this.painter.draw()\n    // this.painter.calScaleLimit()\n    // this.painter.zoomAdapt()\n    this.emit('renderFinish')\n  }\n\n  // async processChartData() {\n  //   this.store.chartData = await layoutUtil.init(this.store.originData)\n  // }\n\n  zoomAdapt () {\n    this.painter.zoomAdapt()\n  }\n\n  zoomIn() {\n    // this.store.transformState.scale = this.store.transformState.scale * 1.1\n    // this.painter.rerenderWhenScaleChange()\n    this.painter.zoom('in')\n    // this.painter.playToNode(this.store.chartData.nodes[0].id)\n    \n  }\n\n  zoomOut() {\n    this.painter.zoom('out')\n    // this.painter.playToNode(this.store.chartData.nodes[3].id)\n    // if (this.store.transformState.scale < 0.05) {",
    "relevantFileList": [],
    "filePath": "NTParallel.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "()",
      "CodeQwen2.5-7B": "()",
      "copilot": "({ container, playParam, chartData })",
      "CodeQwen1.5-7B": " ()\r"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\nconst whiteThemeConfig = {\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    howerBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    selectLineColor: \"green\",\n    sepraBackgroundColor: \"#181c21\"\n}\n// dian'y\nconst grayThemeConfig = {\n    \n}\n// 经典风格\nconst blackThemeConfig = {\n    \n}\n\nconst TableTheme = {\n    '1': whiteThemeConfig,\n    '2': grayThemeConfig,",
    "infill": "'3': blackThemeConfig",
    "suffix": "\n}\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined;\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}\n    }\n    updateConfig(config) {\n        this.config = {...defaultConfig, ...config}\n    }\n    getScrollView() {\n        return this.scrollView\n    }\n    isPlanToRedraw() {\n        if (!this.requestAnimationFrame) {\n            return false\n        }\n        return (this.drawconf !== undefined && this.drawconf.fulldraw)\n    }\n    setR(r) {\n        if (this.r === r) return\n        this.r = r\n        this.needToCalc = true\n        this.needToCalcFont = true \n    }\n    askForReDraw(config) {\n        if(config === undefined || (this.drawconf !== undefined && this.drawconf.fulldraw)) {\n            this.drawconf = {fulldraw: true}\n        } else {\n            if (this.drawconf === undefined) {\n                this.drawconf = {...config, ...{fulldraw: false}}\n            }\n        }\n        if (this.requestAnimationFrame) {\n            return\n        }\n        this.requestAnimationFrame = requestAnimationFrame(()=> {\n            console.time('drawCanvas')\n            this.drawCanvas()\n            console.timeEnd('drawCanvas')\n        })\n    }\n    askForReIndex() {\n        this.calcIndex()\n        this.askForReDraw()\n    }\n    resize() {}\n    doResize(width, height) {\n        this.setCanvasSize(width * this.r, height * this.r)\n    }\n    setCanvasSize(width, height) {\n        this.canvasWidth = width\n        this.canvasHeight = height\n        this.reCalcForScrollView()\n    }\n    updateColumns(col) {\n        this.orgColum = col\n        this.column = []\n        let i\n        for (i = 0; i < col.length; i++) {\n            if (col[i].visible === false) continue\n            const index = this.column.length\n            this.column[index] = {\n                ...{\n                    align: Align.left,\n                    index,\n                    leftPos: 0,\n                    orginalCol: col[i],\n                    rightPos: 0,\n                    width: 50\n                }, ...col[i]\n            }\n            if (this.column[index].field === '__idxnum__' || this.column[index].field === '__rownum__') {\n                this.column[index].allowEdit = false\n            }\n        }\n        this.needToCalc = true\n        this.resize()\n        this.calcColum()\n    }\n    calcColum() {\n        this.needToCalc = false\n        let leftPos = 0\n        let i\n        for (i = 0; i < this.column.length; i++) {\n            this.column[i].leftPos = leftPos\n            leftPos += this.column[i].width * this.r\n            this.column[i].rightPos = leftPos\n        }\n        this.reCalcForScrollView()\n    }\n    setIsFocus(isFocus) {\n        if (this.isFocus !== isFocus) {\n            this.isFocus = isFocus\n        }\n    }\n    reCalcForScrollView() {\n        if (this.dataIndex === undefined) return\n        let w = undefined\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            if (this.column) {\n                let i\n                for(i = 0; i < this.column.length; i++) {\n                    w+= this.column[i].width * this.r + 0\n                }\n            } else {\n                w = undefined\n            }\n        }\n        \n        let h = 0\n        const cellHeight = this.cellHeight\n        const calc = (index) => {\n            let i\n            switch (index.type) {\n                case CanvasTableIndexType.Index:\n                    h += cellHeight * index.list.length\n                    break\n                default:\n                    break\n            }\n        }\n        calc(this.dataIndex.index)\n        if (this.scrollView && w !== undefined) {\n            this.scrollView.setSize(this.r, this.canvasWidth, this.canvasHeight, w, h * this.r)\n            this.fireReCalcForScrollView(w / this.r, h + this.headerHeight)\n        }\n    }\n    fireReCalcForScrollView(width, height) {\n        const scrollView = this.scrollView\n        if (scrollView) {\n            let i\n            for (i = 0; i < this.eventReCalcForScrollView.length; i++) {\n                try {\n                    this.eventReCalcForScrollView[i](this, width, height, scrollView);\n                } catch {\n                    this.logError(\"fireReCalcForScrollView\")\n                }\n            }\n        }\n    }\n    calcIndex() {\n        if (this.data === undefined) return\n        const index = []\n        let i\n        // customFliter过滤 暂不支持\n        for (i = 0; i < this.data.length; i++) {\n            index[index.length] = i\n        }\n        // customSort排序 暂不支持\n        this.dataIndex = {\n            index: { type: CanvasTableIndexType.Index, list: index},\n            mode: CanvasTableMode.ColMode\n        }\n        this.reCalcForScrollView()\n    }\n    getUpdateDataOrData(row, field) {\n        const rowData = this.editData[row]\n        if (rowData && rowData.hasOwnProperty(field)) {\n            return rowData[field]\n        }\n\n        return (this.data[row])[field]\n    }\n    getDrawData(colItem, rowId, indexId) {\n        let data\n        switch (colItem.field) {\n            case \"__rownum__\":\n                data = rowId.toString()\n                break\n            case \"__idxnum__\":\n                data = indexId.toString()\n                break\n            default:\n                data = String(this.getUpdateDataOrData(rowId, colItem.field))\n        }\n\n        if (colItem.customData) {\n            data = colItem.customData(this, data, this.data[rowId], this.data, rowId, colItem)\n        }\n\n        return data\n    }\n    drawCanvas() {\n        if (!this.scrollView || !this.context || !this.dataIndex) {\n            return\n        }\n        if (this.needToCalc) {\n            this.calcColum()\n        }\n        this.context.font = this.config.fontStyle + ' ' + this.config.fontSize * this.r + 'px ' + this.config.font\n        const posX = this.scrollView.getPosX()\n\n        if (this.needToCalcFont) {\n            this.minFontWidth = this.context.measureText(\"i\").width\n            this.maxFontWidth = this.context.measureText(\"Æ\").width\n        }\n        if (this.drawconf !== undefined && this.drawconf.fulldraw) {\n            this.drawconf = undefined\n        }\n        const drawConf = this.drawconf\n        this.drawconf = undefined\n        this.requestAnimationFrame = undefined\n\n        if (this.scrollView.beforeDraw()) {\n            this.askForReDraw()\n        }\n\n        const headderHeight = this.headerHeight * this.r\n        const offsetLeft = 5 * this.r\n        if (drawConf === undefined) {\n            this.context.clearRect(0, 0, ",
    "relevantFile": "<file_path>src/components/canvasTable/CanvasTable.js\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();\n        this.TouchStart(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchMove = (e) => {\n        e.preventDefault();\n        this.TouchMove(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchEnd = (e) => {\n        e.preventDefault();\n        this.TouchEnd(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasDblClick = (e) => {\n        e.preventDefault();\n        //  this.dblClick(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.dblClick(e.offsetX, e.offsetY);\n    }\n    canvasWheel = (e) => {\n        e.preventDefault();\n        this.wheel(e.deltaMode, e.deltaX, e.deltaY);\n    }\n    canvasMouseDown = (e) => {\n        e.preventDefault();\n        this.canvas.focus();\n        // this.mouseDown(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseDown(e.offsetX, e.offsetY);\n    }\n    canvasMouseLeave = () => {\n        this.mouseLeave();\n    }\n    canvasMouseUp = (e) => {\n        e.preventDefault();\n        // this.mouseUp(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseUp(e.offsetX, e.offsetY);\n    }\n    canvasMouseUpExtended = (e) => {\n        e.preventDefault();\n        this.mouseUpExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n    }\n    canvasMouseMoveExtended = (e) => {\n        e.preventDefault();\n        // this.mouseMoveExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMoveExtended(e.offsetX, e.offsetY);\n    }\n    canvasMouseMove = (e) => {\n        e.preventDefault();\n        // this.mouseMove(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMove(e.offsetX, e.offsetY);\n    }\n}\n<file_path>src/components/canvasTable/CircularBuffer.js\nexport default class CircularBuffer {\n    constructor(length, allowOverFlow) {\n        this.length = length\n        this.allowOverFlow = allowOverFlow\n        this.buffer = new Array(this.length)\n    }\n    size() {\n        return this.count\n    }\n    pop() {\n        if (this.count === 0) {\n            throw new Error('empty')\n        }\n        const i = this.pointerRead\n        this.pointerRead = (this.length * this.pointerRead + 1) % this.length\n        this.count--\n        const temp = this.buffer[i]\n        if (temp === undefined) {\n            throw new Error('undefined')\n        }\n        this.buffer[i] = undefined\n        return temp\n    }\n    push(item) {\n        if (!this.allowOverFlow && this.count === this.length) {\n            throw new Error('overflow')\n        }\n        this.buffer[this.pointerWrite] = item\n        this.pointerWrite = (this.length + this.pointerWrite + 1) % this.length\n        if (this.count === this.length) {\n            this.pointerRead = this.pointerWrite\n        } else {\n            this.count++\n        }\n    }\n    clear() {\n        this.pointerRead = 0;\n        this.pointerWrite = 0;\n        this.count = 0;\n        this.buffer = new Array(this.length);\n    }\n    export() {\n        const result = [];\n        while (this.size() > 0) {\n            result[result.length] = this.pop();\n        }\n        return result;\n    }\n}",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "blackThemeConfig",
      "CodeQwen2.5-7B": "",
      "copilot": "'3': blackThemeConfig",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "/* eslint-disable import/prefer-default-export */\nimport { generateChartOption } from '@thsc-ifind-irp/vdl-generate-chart-option';\nimport server from '@/server';\n\nconst sourceData = {};\n\nconst generateParams = indicators => ({\n  zb_str: indicators.map(item => item.indexId).join(','),\n  zb_rtime: new Array(indicators.length).fill(0).join(','),\n  displayid: indicators.map(item => item.displayId).join(','),\n  formula: indicators.map(item => item.formula || '0').join('$$'),\n  zb_point: indicators.map(item => (item.point || item.point === 0 ? item.point : '2')).join(','),\n  zb_unit: indicators.map(item => item.zb_unit || '1').join(','),\n  zb_custom: indicators.map(item => (item.edit ? item.id : '')).join(','),\n  browser: indicators.map(item => (item.indexType === 4 ? item.indexParam : '0')).join('$$'),\n  emptyType: indicators.map(item => (item.indexType === 4 || item.indexType === -1 ? item.emptyDataType : '')).join(','),\n  wt: 'json',\n  usage: 'flagship-store',\n});\n\nexport const getChartData = async indicators => {\n  if (indicators.length && indicators[0].indexType === 0) {\n    const formData = new FormData();\n    formData.append('id', indicators[0].id);\n    formData.append('displayId', indicators[0].displayId);\n    formData.append('datebegin', '');\n    formData.append('dateend', '');\n    await server.getNonSequZbData(formData).then(res => {\n      sourceData[res.displayId] = res;\n    });\n  } else {\n    const params = generateParams(indicators);\n    await server.getZbData(params).then(rsp => {\n      const tables = rsp.tables || [];\n      tables.forEach(tableData => {\n        sourceData[tableData.displayid] = tableData;\n      });\n    });\n  }\n};\n\n// 筛选需要请求数据的指标，如果已经在sourceData里有的指标就不需要请求了\nconst filterIndicators = indicators => indicators.filter(item => !sourceData[item.displayId]);\n\nexport const getOption = async (indicators, variable, chartSize) => {\n  const fetchDataInd",
    "infill": "icators = filterIndicators(indicators);",
    "suffix": "\r\n  await getChartData(fetchDataIndicators);\r\n  return generateChartOption(\r\n    indicators,\r\n    sourceData,\r\n    variable,\r\n    chartSize,\r\n  );\r\n};\r\n",
    "relevantFile": "<file_path>src/plugins/ant.js\nimport {\n  ConfigProvider, Button, Row, Col, Cascader, Spin, Empty, Pagination,\n} from 'thsc-ifind-antdv';\nimport Vue from 'vue';\n\nVue.use(ConfigProvider).use(Button).use(Row).use(Col)\n  .use(Cascader)\n  .use(Spin)\n  .use(Empty)\n  .use(Pagination);\n<file_path>vue.config.js\nmodule.exports = {\n  publicPath: '/gwstatic/static/industry-research-web/flagship-store',\n  lintOnSave: true,\n  transpileDependencies: ['thsc-ifind-antdv'],\n  productionSourceMap: false,\n  chainWebpack: (config) => {\n    if (process.env.NODE_ENV === 'development') {\n      config.devServer.proxy({\n        '/standardgwstatic/js/uilib/1.8.3/chart/echartsUi.js': {\n          changeOrigin: true,\n          target: 'http://localhost:8080/',\n          pathRewrite: {\n            '/standardgwstatic/js/uilib/1.8.3/chart/': '',\n          },\n        },\n        '/founderfu_service': {\n          changeOrigin: true,\n          target: 'http://172.19.80.62/',\n        },\n      });\n    }\n  },\n};\n<file_path>src/axios/index.js\n  .then(res => {\n    if (res.code === 1) {\n      return res.data;\n    }\n    return Promise.reject(res);\n  });\n/**\n * 公用post请求\n * @param url       接口地址\n * @param data      接口参数\n * @param config    接口所需config配置\n */\nexport const post = ({ url, data, config }) => instance\n  .post(url, data, config)\n  .then(res => {\n    if (res.code === 1) {\n      return res.data;\n    }\n    return Promise.reject(res);\n  });\n/* eslint-disable no-param-reassign */\ninstance.interceptors.response.use(response => response.data, err => {\n  if (err && err.response) {\n    switch (err.response.code) {\n      case 400:\n        err.message = '请求错误';\n        break;\n\n      case 401:\n        err.message = '未授权，请登录';\n        break;\n\n      case 403:\n        err.message = '拒绝访问';\n        break;\n\n      case 404:\n        err.message = `请求地址出错: ${err.response.config.url}`;\n        break;\n\n      case 500:\n        err.message = '服务器内部错误';\n        break;\n\n      case 501:\n        err.message = '服务未实现';\n        break;\n\n      case 502:\n        err.message = '网关错误';\n        break;\n\n      case 504:\n        err.message = '网关超时';\n        break;\n\n      default:\n    }\n  }\n  return Promise.reject(err);\n<file_path>src/server/index.js\n/* eslint-disable no-unused-expressions */\nimport qs from 'qs';\nimport { get, post } from '@/axios';\n\nexport default {\n  getKanbanList: async () => {\n    let data = {};\n    await get({\n      url: '/board/public/tree/getAll',\n    }).then(rsp => {\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n  getKanbanDetail: async (boardId, page, pageSize) => {\n    let data = {};\n    await get({\n      url: '/visual/table/search_table',\n      config: {\n        params: {\n          boardId, page, pageSize, boardType: 2, keyword: '',\n        },\n      },\n    }).then(rsp => {\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n  getNonSequZbData: async params => {\n    let data = {};\n    await post({\n      url: '/visual/index/ext/non_sequ/data/query',\n      data: params,\n    }).then(rsp => {\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n  getZbData: async params => {\n    let data = {};\n    await post({\n      url: '/chart/fetch_data/search',\n      data: qs.stringify(params),\n    }).then(rsp => {\n      rsp && (data = rsp);\n    });\n    return data;\n  },\n};",
    "relevantFileList": [],
    "filePath": "src/utils/chart.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "icators = filterIndicators(indicators);",
      "CodeQwen2.5-7B": "icators = filterIndicators(indicators);",
      "copilot": "icators = filterIndicators(indicators);",
      "CodeQwen1.5-7B": " icators = filterIndicators(indicators);<file_sep> /src/utils/index.js"
    }
  },
  {
    "prefix": "import { clientCmd, modeDict } from '@/components/globalInput/client/utils';\n\nconst state = () => ({\n  mode: modeDict[window.queryParams.mode],\n  dlgtype: window.queryParams.dlgtype,\n  historyExpand: false,\n  inputValueStore: '',\n  fromChat: false,\n  // histortData 储存历史记录，避免关闭弹窗再打开时，历史记录闪动\n  histortData: [],\n  modeHistoryFlag: {\n    smart: false,\n    search: false,\n  },\n\n  // 指令框模式下业务方传入的option\n  generalOption: null,\n\n  // 用来标记f9灵动看板的客户端标识\n  globalCommandFlag: null,\n  // 记录当前全局指令框的url，用与判断相同url时不跳转重绘\n  globalCommandUrl: null,\n\n  // lenovoData 储存联想记录，避免关闭弹窗再打开时，联想记录闪动\n  lenovoData: {\n    smart: [],\n    search: [],\n  },\n  inputCurrentLines: 1,\n\n  // 指令框是否在resize状态\n  dlgResizing: false,\n\n  // 支持文件上传及插件功能的相关state\n  currentPlugin: {},\n  isUploading: false,\n  currentFile: null,\n\n});\n\nexport const getLenovoHeight = list => {\n  const len = list.length;\n  const minH = 131;\n  const totalH = len * 40 + minH;\n  // 考虑输入框换行的情况\n  const line = window.store.state.globalInput.inputCurrentLines;\n  const lineExtraH = (line - 1) * 24;\n  const maxH = (totalH + lineExtraH) > 480 ? 480 : totalH;\n  return len ? maxH : minH;\n}\n\nconst getters = {\n  curModeLenovoHeight(state) {\n    return getLenovoHeight(state.lenovoData[state.mode]);\n  },\n};\n\nconst mutations = {\n  setMode(state, val) {\n    state.mode = val;\n    window.queryParams.mode = `${modeDict.indexOf(val)}`;\n  },\n  setDlgtype(state, val) {\n    state.dlgtype = val;\n    window.queryParams.dlgtype = val;\n  },\n  setHistoryExpand(state, val) {\n    state.historyExpand = val;\n  },\n  setInputValueStore(state, val) {\n    state.inputValueStore = val;\n  },\n  setFromChat(state, val) {\n    state.fromChat = val;\n  },\n  setHistortData(state, val) {\n    state.histortData = val;\n  },\n  setModeHistoryFlag(state, [key, val]) {\n    state.modeHistoryFlag[key] = val;\n  },\n  setCurModeLenovoData(state, val) {\n    state.lenovoData[state.mode] = val;\n    const h = getLenovoHeight(val);\n    clientCmd.changeLenovoHeight(h);\n  },\n  clearOtherModeLenovoData(state) {\n    Object.keys(state.lenovoData).forEach(mode => {\n      if (mode !== state.mode) {\n        state.lenovoData[mode] = [];\n      }\n    })\n  },\n  setLenovoData(state, val) {\n    state.lenovoData = val;\n  },\n  setInputCurrentLines(state, val) {\n    state.inputCurrentLines = val;\n  },\n  setGeneralOption(state, option) {\n    state.generalOption = option;\n  },\n  setGlobalCommandFlag(state, globalCommandFlag) {\n    state.globalCommandFlag = globalCommandFlag;\n  },\n  setGlobalCommandUrl(state, globalCommandUrl) {\n    state.globalCommandUrl = globalCommandUrl;\n  },\n  setDlgResizing(state, val) {\n    state.dlgResizing = val;\n  },\n\n  setCurrentPlugin(state, val) {\n    deb",
    "infill": "ugger;",
    "suffix": "\r\n    state.currentPlugin = val;\r\n  },\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n};\r\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/store/globalInput.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "console.log('setCurrentPlugin', val);",
      "CodeQwen2.5-7B": "ounce(() => {",
      "copilot": "ugger;",
      "CodeQwen1.5-7B": "ugger;\r"
    }
  },
  {
    "prefix": "import CustomCanvasTable from \"./CustomCanvasTable\"\nimport ScrollView from \"./ScrollView\"\nimport debounce from \"lodash.debounce\";\nfunction TouchEventToCanvasTableTouchEvent(event) {\n    const x = {changedTouches: [], touchs: []};\n    let i;\n    for (i = 0; i < event.changedTouches.length; i++) {\n        x.changedTouches.push({\n            pageX: event.changedTouches[i].pageX,\n            pageY: event.changedTouches[i].pageY\n        });\n    }\n    for (i = 0; i < event.touches.length; i++) {\n        x.touches.push({\n            pageX: event.touches[i].pageX,\n            pageY: event.touches[i].pageY\n        });\n    }\n}\n\nexport default class CanvasTable extends CustomCanvasTable {\n    constructor(wrapper, col, data, config) {\n        super(config)\n        this.data = data\n        this.wrapper = (typeof wrapper === 'string') ? document.getElementById(wrapper) : wrapper\n        this.initCanvas()\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.wrapper.clientWidth, this.wrapper.clientHeight)\n        this.updateThemeStyle()\n        this.scrollViewChange = debounce(this.scrollViewChange, 200)\n        this.scrollView = new ScrollView(\n            this.context,\n            this,\n            this.config.scrollView,\n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    initCanvas() {\n        let clientWidth = this.wrapper.clientWidth\n        let clientHeight = this.wrapper.clientHeight\n        this.canvas = this.createCanvas(clientWidth, clientHeight)\n        this.context = this.canvas.getContext('2d')\n        this.hoverCanvas = this.createCanvas(clientWidth, clientHeight)\n        this.hoverContext = this.eventCanvas.getContext('2d')\n        this.backCanvas = this.createCanvas(clientWidth, clientHeight)\n        this.backContext = this.canvas.getContext('2d')\n    }\n    createCanvas(clientWidth, clientHeight) {\n        let canvas = document.createElement('canvas')\n        this.wrapper.appendChild(canvas)\n        canvas.style.width = clientWidth + 'px'\n        canvas.style.height = clientHeight + 'px'\n        return canvas\n    }\n    updateThemeStyle() {\n        this.wrapper.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.wrapper.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        let clientWidth = this.wrapper.clientWidth + 'px'\n        let clientHeight = this.wrapper.clientHeight + 'px'\n        this.canvas.style.width = clientWidth\n        this.canvas.style.height = clientHeight\n        this.eventCanvas.style.width = clientWidth\n        this.eventCanvas.style.height = clientHeight",
    "infill": "this.backCanvas.style.width = clientWidth\n        this.backCanvas.style.height = clientHeight",
    "suffix": "\n        this.setR(window.devicePixelRatio)\n        this.doResize(clientWidth, clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => JSON.parse(JSON.stringify(this.data[indexId])))\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        this.eventCanvas.width = width\n        this.eventCanvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }\n    canvasKeydown = (e) => {\n        this.keydown(e.keyCode)\n    }\n    canvasTouchStart = (e) => {\n        e.preventDefault();\n        this.TouchStart(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchMove = (e) => {\n        e.preventDefault();\n        this.TouchMove(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasTouchEnd = (e) => {\n        e.preventDefault();\n        this.TouchEnd(TouchEventToCanvasTableTouchEvent(e), this.canvas.offsetLeft, this.canvas.offsetTop);\n    }\n    canvasDblClick = (e) => {\n        e.preventDefault();\n        //  this.dblClick(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.dblClick(e.offsetX, e.offsetY);\n    }\n    canvasWheel = (e) => {\n        e.preventDefault();\n        this.wheel(e.deltaMode, e.deltaX, e.deltaY);\n    }\n    canvasMouseDown = (e) => {\n        e.preventDefault();\n        this.canvas.focus();\n        // this.mouseDown(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseDown(e.offsetX, e.offsetY);\n    }\n    canvasMouseLeave = () => {\n        this.mouseLeave();\n    }\n    canvasMouseUp = (e) => {\n        e.preventDefault();\n        // this.mouseUp(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseUp(e.offsetX, e.offsetY);\n    }\n    canvasMouseUpExtended = (e) => {\n        e.preventDefault();\n        this.mouseUpExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n    }\n    canvasMouseMoveExtended = (e) => {\n        e.preventDefault();\n        // this.mouseMoveExtended(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMoveExtended(e.offsetX, e.offsetY);\n    }\n    canvasMouseMove = (e) => {\n        e.preventDefault();\n        // this.mouseMove(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);\n        this.mouseMove(e.offsetX, e.offsetY);\n    }\n}",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "this.headerHeight",
      "CodeQwen2.5-7B": "",
      "copilot": "this.backCanvas.style.width = clientWidth\n        this.backCanvas.style.height = clientHeight",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "import CustomCanvasTable from \"./CustomCanvasTable\"\nimport ScrollView from \"./ScrollView\"\nimport debounce from \"lodash.debounce\";\nfunction TouchEventToCanvasTableTouchEvent(event) {\n    const x = {changedTouches: [], touchs: []};\n    let i;\n    for (i = 0; i < event.changedTouches.length; i++) {\n        x.changedTouches.push({\n            pageX: event.changedTouches[i].pageX,\n            pageY: event.changedTouches[i].pageY\n        });\n    }\n    for (i = 0; i < event.touches.length; i++) {\n        x.touches.push({\n            pageX: event.touches[i].pageX,\n            pageY: event.touches[i].pageY\n        });\n    }\n}\n\nexport default class CanvasTable extends CustomCanvasTable {\n    constructor(wrapper, col, data, config) {\n        super(config)\n        this.id = this.config.id\n        this.data = data\n        this.initData()\n        this.wrapper = (typeof wrapper === 'string') ? document.getElementById(wrapper) : wrapper\n        this.initCanvas()\n        this.initContextMenu()\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.wrapper.clientWidth, this.wrapper.clientHeight)\n        this.updateThemeStyle()\n        this.scrollViewChange = debounce(this.scrollViewChange, 200)\n        this.scrollView = new ScrollView(\n            this.context,\n            this,\n            this.config.scrollView,\n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"contextmenu\", this.canvasContextMenu);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        document.addEventListener('mousedown', this.documentMouseDown);\n        this.updateColumns(col)\n        // this.createViewport()\n        this.autoRender()\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    createViewport() {\n        this.dataViewport = document.createElement('div')\n        let height = this.data.length * this.cellHeight + this.headerHeight\n        let width = this.column.reduce((acc, cur) => acc + cur.width, 0)\n        this.dataViewport.style.height = height + 'px'\n        this.dataViewport.style.width = width + 'px'\n        this.wrapper.insertBefore(this.dataViewport, this.wrapper.firstChild)\n    }\n    initCanvas() {\n        if (!this.wrapper || !this.wrapper.clientWidth || !this.wrapper.clientHeight) {\n            debugger\n        }\n        let clientWidth = this.wrapper.clientWidth\n        let clientHeight = this.wrapper.clientHeight\n        this.backCanvas = this.createCanvas(clientWidth, clientHeight, 'back-canvas')\n        this.backContext = this.backCanvas.getContext('2d')\n        this.canvas = this.createCanvas(clientWidth, clientHeight, 'main-canvas')\n        this.context = this.canvas.getContext('2d')\n        this.hoverCanvas = this.createCanvas(clientWidth, clientHeight, 'hover-canvas')\n        this.hoverContext = this.hoverCanvas.getContext('2d')\n    }\n    createCanvas(clientWidth, clientHeight, className) {\n        let canvas = document.createElement('canvas')\n        canvas.setAttribute('class', className)\n        this.wrapper.appendChild(canvas)\n        canvas.style.width = clientWidth + 'px'\n        canvas.style.height = clientHeight + 'px'\n        return canvas\n    }\n    initData() {\n        // '代码' 需要抽取到配置中 mainField\n        this.dataMap = {}\n        this.data.forEach(item => {\n            this.dataMap[item['代码']] = item\n        })\n    }\n    autoRender() {\n        this.autoRenderFlag = setTimeout(()=> {\n            let fields = Object.keys(this.dataChangePool)\n            if (fields.length > 0){\n                this.askForReDraw('setAutoReDraw', { drawOnly: fields })\n            } else {\n                let blinkKeys = Object.keys(this.needBlinkConfig)\n                if (blinkKeys.length > 0) {\n                    this.askForReDraw('setAutoReDraw', { drawOnly: blinkKeys })\n                }\n            }\n            this.autoRender()\n        }, this.config.autoRenderInterval)\n    }\n    refreshBlink() {\n        debugger\n        let blinkKeys = Object.keys(this.needBlinkConfig)\n        if (blinkKeys.length > 0) {\n            this.askForReDraw('setAutoReDraw', { drawOnly: blinkKeys })\n        }\n    }\n    updateThemeStyle() {\n        // this.wrapper.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.wrapper.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        if (!this.wrapper || !this.wrapper.clientWidth || !this.wrapper.clientHeight) {\n            debugger\n        }\n        let clientWidth = this.wrapper.clientWidth\n        let clientHeight = this.wrapper.clientHeight\n        this.canvas.style.width = clientWidth + 'px'\n        this.canvas.style.height = clientHeight + 'px'\n        this.hoverCanvas.style.width = clientWidth + 'px'\n        this.hoverCanvas.style.height = clientHeight + 'px'\n        this.backCanvas.style.width = clientWidth + 'px'\n        this.backCanvas.style.height = clientHeight + 'px'\n        this.setR(window.devicePixelRatio)\n        this.doResize(clientWidth, clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => {\n            return {'代码': this.data[indexId]['代码']}\n        })\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        ",
    "infill": "(menu => {\n            return `<div class=\"menu-item\" data-action=\"${menu.action}\">${menu.name}</div>`\n        })\n        wrapper.innerHTML = buf.join('')\n        this.contextMenuWrapper = wrapper",
    "suffix": "\n    }\n}",
    "relevantFile": "<file_path>bff-standard-web/source/MarketPage/src/main.js\nimport { createApp } from 'vue';\nimport i18n from './locale'\nimport { createPinia } from 'pinia';\nimport App from './App.vue';\nimport MarketTable from './components/view/MarketTable.vue';\nimport HQChart from './components/view/HQChart.vue';\nimport './styles/global.less';\n\nconst pinia = createPinia()\n\n// 行情通知函数\nconst urlParams = new URLSearchParams(window.location.search);\n// 获取参数theme的值\nwindow.theme = urlParams.get('theme') || 2\nwindow.page = urlParams.get('page') || 1\ndocument.body.classList.add(`theme-${window.theme}`)\n\nwindow.notifyData = (data) => {\n  // data数据回来，通过data里面的订阅id找到对应的表格，然后更新表格数据\n  console.log(data)\n}\n\nwindow.marketTables = []\n\ncreateApp(App)\n  .use(i18n)\n  .use(pinia)\n  .component('MarketTable', MarketTable)\n  .component('HQChart', HQChart)\n  .provide('taPrefix', 'HQChart')\n  .mount('#app');",
    "relevantFileList": [],
    "filePath": "bff-standard-web/source/MarketPage/src/components/canvasTable/CanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);",
      "CodeQwen2.5-7B": "window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);",
      "copilot": "(menu => {\n            return `<div class=\"menu-item\" data-action=\"${menu.action}\">${menu.name}</div>`\n        })\n        wrapper.innerHTML = buf.join('')\n        this.contextMenuWrapper = wrapper",
      "CodeQwen1.5-7B": "window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);"
    }
  },
  {
    "prefix": "const fs = require('fs');\nconst path = require('path');\nconst production = process.env.NODE_ENV === 'production';\nconst analyze = process.env.ACTUAL_MODE === 'analyze';\n// 部署地址，申请后更新并删除注释\nconst staticUrl = `${process.env.VUE_APP_CDN_HOST}/frontResources/static/regular/community-discuss`;\n\n// 导入@king-fisher/web-avenger",
    "infill": "const WebAverngerWebpack = require('@king-fisher/web-avenger');",
    "suffix": "\n\n// 多页面配置\nconst pageTitle = {\n  'stock': {\n    title: '海外社区股吧',\n    chunks: [],\n  },\n  // // 预留话题页\n  // 'topic-discussion': {\n  //   title: '话题',\n  //   chunks: [],\n  // },\n};\nconst pagePath = path.resolve(__dirname, './src/pages');\nconst pageArr = fs.readdirSync(pagePath);\nconst pages = {};\npageArr.forEach(name => {\n  const title = pageTitle[name] ? pageTitle[name].title : '';\n  Object.defineProperty(pages, name, {\n    enumerable: true,\n    value: {\n      production,\n      title,\n      entry: `src/pages/${name}/main.ts`,\n      template: `public/${name}.html`,\n      filename: `${name}.html`,\n    },\n  });\n});\nconst port = 8080;\n\nmodule.exports = {\n  publicPath: production ? staticUrl : './',\n  crossorigin: 'anonymous',\n  assetsDir: 'static',\n  pages,\n  devServer: {\n    port,\n    disableHostCheck: true,\n  },\n  plugins: [\n    // 插件配置\n    WebAverngerWebpack({\n      enable: true,\n      framework: 'vue',\n      debugkey: 'Kr8LMTBZ',\n    })\n  ],\n  lintOnSave: 'default',\n  chainWebpack: config => {\n    config.module.rule('eslint').use('eslint-loader');\n    config.resolve.alias\n    .set('@public', path.resolve(__dirname, './src/utils/public-method/lib'))\n    .set('@api', path.resolve(__dirname, `./src/utils/service${(production || analyze) ? '' : '/mock'}`));\n    // 正式环境将大于 2k byte 的图片添加到构建产物中，通过发布平台发布\n    config.module\n    .rule('images')\n    .test(/\\.(jpg|png|gif)$/)\n    .use('url-loader')\n    .options({\n      limit: (production || analyze) ? 0 : Infinity,\n      publicPath: staticUrl + 'static/img',\n      outputPath: 'static/img',\n      name: '[name].[ext]',\n    });\n    if (analyze) {\n      const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');\n      config.plugin('webpack-bundle-analyzer').use(new BundleAnalyzerPlugin());\n\n      const MomentLocalesPlugin = require('moment-locales-webpack-plugin');\n      config.plugin('moment-locales-plugin').use(new MomentLocalesPlugin({ localesToKeep: ['zh-cn'] }));\n    }\n    config.plugins.delete('preload');\n    config.plugins.delete('prefetch');\n  },\n  pluginOptions: {\n    'style-resources-loader': {\n      preProcessor: 'scss',\n      patterns: [\n        path.resolve(__dirname, './src/assets/styles/base.scss'),\n      ],\n    },\n  },\n  productionSourceMap: !production,\n};\n",
    "relevantFile": "",
    "relevantFileList": [],
    "filePath": "vue.config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "插件",
      "CodeQwen2.5-7B": "",
      "copilot": "const WebAverngerWebpack = require('@king-fisher/web-avenger');",
      "CodeQwen1.5-7B": " n-webpack"
    }
  },
  {
    "prefix": "const express = require('express');\nconst axios = require('axios');\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(express.json());\n\n// 设置跨域请求头\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n});\n\n// 中转接口\napp.post('/proxy', async (req, res) => {\n  try {\n    console.log(req.body);\n    const { url, method, data, headers } = req.body;\n    if (!url) {\n      throw new Error('URL parameter is required');\n    }\n    const response = await axios[method](\n      url,",
    "infill": "\r\n      data,\r\n      {\r\n        headers,\r\n   ",
    "suffix": "   }\r\n    );\r\n    \r\n    res.json(response.data);\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Proxy server is running on port ${PORT}`);\r\n});\r\n",
    "relevantFile": "<file_path>chrome-extension/src/main.js\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\n\nimport './style.css'\nimport App from './App.vue'\n\nconst pinia = createPinia()\nconst app = createApp(App)\n\napp.use(pinia)\napp.mount('#app')\n<file_path>chrome-extension/src/api/index.js\nimport axios from \"axios\";\n\nconst request = axios.create({\n  baseURL: \"http://localhost:3000\",\n  // withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport const chat = async (prompt) => {\n  const requestData = {\n    model: 'qwen-turbo',\n    input: {\n      message: [{\n        role: 'user',\n        content: `You are a professional Vue developer\n        You get the layer information of the reference UI design draft from the user and then build a single-page application\n        Use Vue and CSS.\n        You may also receive subsequent prompts asking you to improve the generated Vue application.\n        - Make sure the application looks exactly the same as the layer information.\n        - Pay close attention to background color, text color, font size, font family,\n        Padding, margins, borders, etc. Color and size should match exactly.\n        - Use the exact text from the screenshot.\n        - Do not add comments in your code such as \"<!-- Add additional navigation links as needed -->\" and \"<!-- ...Other news items... -->\" instead of writing the full content code. Write complete code.\n        - Repeat elements as needed to match the screenshot. For example, if there are 15 projects, the code should have 15 projects. Don't leave comments like \"<!--Repeat for every news item-->\" or something bad will happen.\n        - For images, use the placeholder image from https://placehold.co and include a detailed description of the image in the alt text so that the image generation AI can generate the image later.\n        - \n        The returned result must contain only codes. Below is the layer information:\n        <layer>${prompt}</layer>`\n      }]\n    }\n  };\n  const { data } = await request.post(\"/proxy\", {\n    url: \"https://dashscope.aliyuncs.com/api/v1/generation/qwen_turbo/generate\",\n    method: \"post\",\n    data: requestData,\n    headers: {\n      \"X-DashScope-SSE\": \"enable\",\n      'Authorization': `Bearer sk-cef42a9dbe6a4eb5a858150c8f7330f1`,\n    }\n  });\n  console.log(data);\n  return data;\n}",
    "relevantFileList": [],
    "filePath": "proxy-interface/server.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "data,\n      {\n        headers,\n      }\n    );\n    console.log(response);\n    if (!response) {\n      throw new Error('No response from server');\n ",
      "CodeQwen2.5-7B": "",
      "copilot": "\r\n      data,\r\n      {\r\n        headers,\r\n   ",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    // 设置搜索模式\n    this.$edbStore.states.searchMode = 'commandBox'\n  },\n  methods: {\n    reactCommandBox(data) {\n      if (data.action === 'closeCommandBox') {\n        this.$edbStore.states.commandBoxState.active = false\n      } else if (data.action === 'locateIndex') {\n        this.locateIndex(data.args)\n      } else if (data.action === 'locateAddIndex') {\n        this.locateIndex(data.args)\n        this.batchAddIndex([data.args])        \n      } else if (data.action === 'addSubjectToDrawtool') {\n        this.addSubjectToDrawtool(data.args)\n      } else if (data.action === 'doSearch') {\n        this.getActiveLeftTabRef().doSearch(data.args)\n      } else if (data.action === 'batchAddIndexAndExtractData') {\n        this.batchAddIndexAndExtractData(data.args)\n      } else if (",
    "infill": "data.action === 'delectSearchSelectItem') {\r\n        this.getActiveLeftTabRef().delectSearchSelectItem(data.args)\r\n     ",
    "suffix": " }\r\n    },\r\n    getActiveLeftTabRef() {\r\n      if (this.activeLeftTab === 'IndexSelect') {\r\n        return this.$refs.indexSelectRef\r\n      } else if (this.activeLeftTab === 'Dataset') {\r\n        return this.$refs.datasetRef\r\n      } else if (this.activeLeftTab === 'Selfbuilt') {\r\n        return this.$refs.selfbuiltRef\r\n      }\r\n    },\r\n  }\r\n}",
    "relevantFile": "<file_path>src/pages/dashboard/mixins/commandBoxMixin.js\nimport Vue from 'vue'\nimport CommandBox from '@/components/CommandBox/CommandBox.vue'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  created () {\n    this.commandBoxInstance = null\n  },\n  mounted () {\n    // this.openCommandBox()\n    window.addEventListener('beforeunload', this.saveCommandBoxPosition)\n  },\n  beforeDestroy () {\n    this.closeCommandBox()\n    // this.commandBoxInstance = null\n  },\n  methods: {\n    saveCommandBoxPosition() {\n      if (this.commandBoxInstance) {\n        localStorage.setItem(\n          'edb_commandBox_position',\n          JSON.stringify(this.commandBoxInstance.position)\n        )\n      }\n    },\n    // 触发命令框\n    triggerCommandBox (data) {\n      // console.log('triggerCommandBox', data)\n      if (data.action === 'focusCommandBox') {\n        let initPosition\n        try {\n          initPosition = JSON.parse(localStorage.getItem('edb_commandBox_position'))\n        } catch (e) { console.log(e) }\n        this.openCommandBox({\n          initMode: data.args,\n          // initPosition: data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 74 }\n          initPosition: initPosition || (data.args === 'screen' ? { x: 0, y: 0 } : { left: 10, top: 174 })\n        }).then(() => {\n          this.commandBoxInstance.focus()\n        })\n      } else if (data.action === 'switchCommandBoxMode') {\n        this.switchCommandBoxMode({\n          mode: data.args\n        })\n      } else if (data.action === 'syncSelectItems') {\n        if (this.commandBoxInstance) {\n          this.commandBoxInstance.syncSelectItems({\n            selectItems: data.args,\n          })\n        }\n      }\n    },\n    openCommandBox ({ initMode, initPosition }) {\n      if (!this.commandBoxInstance) {\n        const CommandBoxComponent = Vue.extend(CommandBox)\n        const _this = this\n        this.commandBoxInstance = new CommandBoxComponent({",
    "relevantFileList": [],
    "filePath": "src/views/Home/mixins/homeMixinCommandBox.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "data.action === 'changeTab') {\n        this.changeTab(data.args)\n      } else if (data.action === 'saveSubject') {\n        this.saveSubject(data.args)\n      }",
      "CodeQwen2.5-7B": "data.action === 'batchAddIndex') {",
      "copilot": "data.action === 'delectSearchSelectItem') {\r\n        this.getActiveLeftTabRef().delectSearchSelectItem(data.args)\r\n     ",
      "CodeQwen1.5-7B": " data.action === 'batchAddIndex') {\r"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    canvasBorderColor: '#cbcbe1',\n    dataChangeBackground: \"#84D0FE\",\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\",\n    scrollView: {\n        backgroundColor: \"#ffffff\",\n        buttonColor: \"#b2b2c5\",\n        buttonHoverColor: \"#757699\",\n    }\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    canvasBorderColor: '#181c21',\n    dataChangeBackground: \"#0E3678\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n// 经典风格\nconst blackThemeConfig = {\n    canvasBorderColor: '#4D0000',\n    dataChangeBackground: \"#1F1F1F\",\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst NeedBlinkFields = ['涨幅', '涨速']\nconst MainField = '代码'\nconst HightlightValue = 1\nconst AttenuationValue = 0.5\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined\n        this.overColValue = undefined\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        this.needBlinkConfig = {}\n        this.originalRangeData = null\n        this.dataChangePool = {}\n        this.autoRenderFlag = null\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editData = {}\n    }\n    updateConfig(config) {\n        let themeType = config && config.theme || this.defaultTheme\n        config = {...config, ...TableTheme[themeType]}\n        this.config = {...defaultConfig, ...config}\n    }\n    mergeChangedData() {\n        let keys = Object.keys(this.dataChangePool)\n        if (keys.length) {\n            keys.forEach(key => {\n                let item = this.dataChangePool[key]\n                let sourceItem = this.dataMap[key]\n                if (sourceItem) {\n                    // for (let field in item) {\n                    //     sourceItem[field] = item[field]\n                    // }\n                    Object.assign(sourceItem, item)\n                }\n          ",
    "infill": "itemChangeData = this.dataChangePool[key]\n            for (let field in itemChangeData) {}",
    "suffix": "\n            if (NeedBlinkFields.includes(field)) {\n                if (!this.needBlinkConfig[itemData[MainField]]) this.needBlinkConfig[itemData[MainField]] = {}\n                this.needBlinkConfig[itemData[MainField]][field] = {highlight: HightlightValue}\n            }\n            // let itemDataSource = this.dataMap[itemData[MainField]]\n            // if (itemDataSource) {\n            //     NeedBlinkFields.forEach(field => {\n            //         if (itemDataSource[field] !== itemData[field]) {\n            //             if (!this.needBlinkConfig[itemData[MainField]]) this.needBlinkConfig[itemData[MainField]] = {}\n            //             this.needBlinkConfig[itemData[MainField]][field] = {highlight: HightlightValue}\n            //         }\n            //     })\n            //     // 如果推送在一帧内，还没开始绘制，第二份数据又进来，需要做合并处理\n            //     let originalItem = JSON.parse(JSON.stringify(itemDataSource))\n            //     let mainFieldValue = itemDataSource[MainField]\n            //     this.originalRangeData[mainFieldValue] = originalItem\n            //     Object.assign(itemDataSource, itemData)\n            // }\n        })\n        // 传入rangeData相关的代码，进行局部绘制\n        // let fields = rangeData.map(item => item[MainField])\n        // let fields = Object.keys(this.dataChangePool)\n        // console.log(fields)\n        // this.askForReDraw({ drawOnly: fields })\n    }\n    // checkNeedRedraw() {\n    //     let keys = Object.keys(this.needBlinkConfig)\n    //     if (keys === 0) return\n    //     let isNeed = false\n    //     for (let i = 0; i < keys.length; i++) {\n    //         let key = keys[i]\n    //         let fields = Object.keys(this.needBlinkConfig[key])\n    //         if (fields.length === 0) {\n    //             delete this.needBlinkConfig[key]\n    //             continue\n    //         }\n    //         isNeed = true\n    //     }\n    //     if (isNeed) {\n    //         // 传入this.needBlinkConfig相关的代码，进行局部绘制\n    //         let fields = Object.keys(this.needBlinkConfig)\n    //         this.askForReDraw({ drawOnly: fields })\n    //     } else {\n    //         this.originalRangeData = null\n    //         console.log('已经没有需要更新的字段')\n    //     }\n    // }\n    viewDataChange() {\n    }\n    updateThemeStyle() {\n    }\n    updateColumns(col) {\n        this.orgColum = col\n        this.column = []\n        let i\n        for (i = 0; i < col.length; i++) {\n            if (col[i].visible === false) continue\n            const index = this.column.length\n            this.column[index] = {\n                ...{\n                    align: Align.left,\n                    index,\n                    leftPos: 0,\n                    orginalCol: col[i],\n                    rightPos: 0,\n                    width: 50\n                }, ...col[i]\n            }\n            if (this.column[index].field === '__idxnum__' || this.column[index].field === '__rownum__') {\n                this.column[index].allowEdit = false\n            }\n        }\n        this.needToCalc = true\n        this.resize()\n        this.calcColum()\n    }\n    calcColum() {\n        this.needToCalc = false\n        let leftPos = 0\n        let i\n        for (i = 0; i < this.column.length; i++) {\n            this.column[i].leftPos = leftPos\n            leftPos += this.column[i].width * this.r\n            this.column[i].rightPos = leftPos\n        }\n        this.fixedColumns = this.column.filter(item => item.fixed)\n        this.fixedColumnWidth = this.fixedColumns.reduce((total, item) => total + item.width, 0)\n        // console.log(this.fixedColumnWidth)\n        this.reCalcForScrollView()\n    }\n    setIsFocus(isFocus) {\n        if (this.isFocus !== isFocus) {\n            this.isFocus = isFocus\n        }\n    }\n    reCalcForScrollView() {\n        if (this.dataIndex === undefined) return\n        let w = 0\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            if (this.column) {\n                let i\n                for(i = 0; i < this.column.length; i++) {\n                    w+= this.column[i].width * this.r + 0\n                }\n            } else {\n                w = 0\n            }\n        }\n        \n        let h = 0\n        const cellHeight = this.cellHeight\n        const calc = (index) => {\n            let i\n            switch (index.type) {\n                case CanvasTableIndexType.Index:\n                    h += cellHeight * index.list.length\n                    break\n                default:\n                    break\n            }\n        }\n        calc(this.dataIndex.index)\n        if (this.scrollView && w !== undefined) {\n            this.scrollView.setSize(this.r, this.canvasWidth, this.canvasHeight, w, h * this.r)\n            this.fireReCalcForScrollView(w / this.r, h + this.headerHeight)\n        }\n    }\n    fireReCalcForScrollView(width, height) {\n        const scrollView = this.scrollView\n        if (scrollView) {\n            let i\n            for (i = 0; i < this.eventReCalcForScrollView.length; i++) {\n                try {\n                    this.eventReCalcForScrollView[i](this, width, height, scrollView);\n                } catch {\n                    this.logError(\"fireReCalcForScrollView\")\n                }\n            }\n        }\n    }\n    calcIndex() {\n        if (this.data === undefined) return\n        const index = []\n        let i\n        // customFliter过滤 暂不支持\n        for (i = 0; i < this.data.length; i++) {\n            index[index.length] = i\n        }\n\n        // customSort排序 暂不支持\n        const sortCol = this.sortCol;\n        if (sortCol && sortCol.length) {\n            index.sort((a, b) => {\n                let sortColIndex;\n                for (sortColIndex = 0; sortColIndex < sortCol.length; sortColIndex++) {\n                    let d;\n                    const col = sortCol[sortColIndex];\n                    switch (col.col.field) {\n                        case \"__rownum__\":\n                            d = a - b;\n                            if (d !== 0) { return d * col.sort; }\n                            break;\n                        default:\n                            const da = this.getUpdateDataOrData(a, col.col.field);\n                            const db = this.getUpdateDataOrData(b, col.col.field);\n                            if (da === undefined || da === null) {\n                                if (db === undefined || db === null) {\n                                    continue;\n                                }\n                                return col.sort;\n                            }\n                            if (db === undefined || db === null) {\n                                return -1 * col.sort;\n                            }\n                            if (typeof da === \"string\" && typeof db === \"string\") {\n                                if (da.indexOf('%') !== -1 && db.indexOf('%') !== -1) {\n                                    let pda = parseFloat(da)\n                                    let pdb = parseFloat(db)\n                                    d = pda - pdb;\n                                    if (d !== 0) { return d * col.sort; }\n                                    continue;\n                                }\n                                if (da === \"\") {\n                                    if (db === \"\") {\n                                        continue;\n                                    }\n                                    return col.sort;\n                                }\n\n                                if (db === \"\") {\n                                    return -1 * col.sort;\n                                }\n                                d = da.localeCompare(db);\n                                if (d !== 0) { return d * col.sort; }\n                                continue;\n                            }\n                            if (da > db) {\n                                return col.sort;\n                            }\n                            if (da < db) {\n                                return",
    "relevantFile": "<file_path>src/components/canvasTable/CanvasTable.js\n            let fields = Object.keys(this.dataChangePool)\n            if (fields.length > 0){\n                this.askForReDraw('setAutoReDraw', { drawOnly: fields })\n            } \n            // else {\n            //     // 如果不存在fields是否可以认为不需要重绘了\n            //     this.askForReDraw('setAutoReDraw')\n            // }\n            this.autoRender()\n        }, this.config.autoRenderInterval)\n    }\n    updateThemeStyle() {\n        this.wrapper.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.wrapper.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        let clientWidth = this.wrapper.clientWidth\n        let clientHeight = this.wrapper.clientHeight\n        this.canvas.style.width = clientWidth + 'px'\n        this.canvas.style.height = clientHeight + 'px'\n        this.hoverCanvas.style.width = clientWidth + 'px'\n        this.hoverCanvas.style.height = clientHeight + 'px'\n        this.backCanvas.style.width = clientWidth + 'px'\n        this.backCanvas.style.height = clientHeight + 'px'\n        this.setR(window.devicePixelRatio)\n        this.doResize(clientWidth, clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => {\n            return {'代码': this.data[indexId]['代码']}\n        })\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        this.hoverCanvas.width = width\n        this.hoverCanvas.height = height\n        this.backCanvas.width = width",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "this.dataMap[key] = item",
      "CodeQwen2.5-7B": "  })",
      "copilot": "itemChangeData = this.dataChangePool[key]\n            for (let field in itemChangeData) {}",
      "CodeQwen1.5-7B": "   })"
    }
  },
  {
    "prefix": "class DragController {\n  constructor({\n    el,\n    onPisitionChange,\n    containerEl,\n  }) {\n    this.el = el\n    this.onPisitionChangeCb = onPisitionChange\n    this.containerEl = containerEl\n    const elRect = this.el.getBoundingClientRect()\n    this.elSize = {\n      width: elRect.width,\n      height: elRect.height,\n    }\n    this.elPosition = {\n      left: elRect.left,\n      top: elRect.top,\n    }\n    this.autoLayout()\n    this.updateLayoutParam()\n    this.init()\n\n    this.onWindowResizeThis",
    "infill": " = this.onWindowResize.bind(this)",
    "suffix": "\r\n    this.maskEl = null\r\n  }\r\n\r\n  init() {\r\n    const _this = this\r\n    // // 鼠标移到左下角或右下角，显示成拉伸箭头\r\n    // this.el.onmousemove = function (event) {\r\n    //   let dir = getDirection(event, this.elSize, this.elPosition);\r\n    //   if (dir) {\r\n    //     this.el.style.cursor = dir + '-resize';\r\n    //   } else if (findNodeUntilClass(event.target, 'ant-modal-header')) {\r\n    //     this.el.style.cursor = 'all-scroll';\r\n    //   } else {\r\n    //     this.el.style.cursor = 'default';\r\n    //   }\r\n    // };\r\n    // 监听鼠标mousedown事件，如果点击在拖拽、缩放的区域，则执行相应的逻辑\r\n    this.el.onmousedown = function (event) {\r\n      // let dir = getDirection(event, this.elSize, this.elPosition);\r\n      // if (dir) {\r\n      //   // 如果点击在左下、右下角上，执行resize逻辑\r\n      //   resizeHandler(event, dir);\r\n      // } else if (findNodeUntilClass(event.target, 'ant-modal-header')) {\r\n      //   // 如果点击在header上，执行拖拽逻辑\r\n      //   dragHandler(event);\r\n      // }\r\n      dragHandler(event);\r\n    };\r\n    \r\n    // // 监听window的resize事件，处理reisize后，弹窗自动调整位置及大小\r\n    // this.el[ctx].onWindowResize = function () {\r\n    //   autoLayout(this.elSize, this.elPosition, modalCenterPosition);\r\n    //   updateLayoutParam(this.el);\r\n    //   modalCenterPosition = getCenterXY(this.elSize, this.elPosition);\r\n    //   if (vnode.context && vnode.context[el[ctx].onResizeEnd]) {\r\n    //     vnode.context[el[ctx].onResizeEnd]({\r\n    //       ...this.elSize,\r\n    //       ...this.elPosition,\r\n    //       ...modalCenterPosition\r\n    //     });\r\n    //   }\r\n    // };\r\n    window.addEventListener('resize', this.onWindowResizeThis);\r\n    // 拖拽逻辑\r\n    function dragHandler(event) {\r\n      const ePositionBegin = {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n      };\r\n      const positionBegin = {\r\n        x: _this.el.offsetLeft,\r\n        y: _this.el.offsetTop\r\n      };\r\n      const xMax = window.innerWidth - _this.elSize.width;\r\n      const yMax = window.innerHeight - _this.elSize.height;\r\n      document.onmousemove = function (event) {\r\n        // 计算新位置x\r\n        const xChange = event.clientX - ePositionBegin.x;\r\n        let xNew = positionBegin.x + xChange;\r\n        if (xNew < 0) {\r\n          xNew = 0;\r\n        }\r\n        if (xNew > xMax) {\r\n          xNew = xMax;\r\n        }\r\n        _this.elPosition.left = xNew;\r\n        // 计算新位置y\r\n        const yChange = event.clientY - ePositionBegin.y;\r\n        let yNew = positionBegin.y + yChange;\r\n        if (yNew < 0) {\r\n          yNew = 0;\r\n        }\r\n        if (yNew > yMax) {\r\n          yNew = yMax;\r\n        }\r\n        _this.elPosition.top = yNew;\r\n        // 更新this.el位置\r\n        _this.el.style.left = _this.elPosition.left + 'px';\r\n        _this.el.style.top = _this.elPosition.top + 'px';\r\n        _this.onPisitionChangeCb && _this.onPisitionChangeCb(_this.elPosition)\r\n        if (xChange || yChange) {\r\n          _this.ensureBeginDragging();\r\n        }\r\n      };\r\n      // 结束逻辑\r\n      let onDragEnd = function () {\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n        document.onmouseleave = null;\r\n        // _this.el.onmouseleave = null;\r\n        _this.ensureFinishDragging();\r\n        // modalCenterPosition = getCenterXY(this.elSize, this.elPosition);\r\n        // if (vnode.context && vnode.context[el[ctx].onMoveEnd]) {\r\n        //   vnode.context[el[ctx].onMoveEnd]({\r\n        //     ...this.elSize,\r\n        //     ...this.elPosition,\r\n        //     ...modalCenterPosition\r\n        //   });\r\n        // }\r\n      };\r\n      document.onmouseup = onDragEnd;\r\n      document.onmouseleave = onDragEnd;\r\n      // _this.el.onmouseleave = onDragEnd;\r\n    }\r\n    // // resize逻辑\r\n    // function resizeHandler(event, dir) {\r\n    //   const ePositionBegin = {\r\n    //     x: event.clientX,\r\n    //     y: event.clientY\r\n    //   };\r\n    //   const sizeBegin = {\r\n    //     width: this.elSize.width,\r\n    //     height: this.elSize.height\r\n    //   };\r\n    //   const positionBegin = {\r\n    //     x: this.el.offsetLeft,\r\n    //     y: this.el.offsetTop\r\n    //   };\r\n    //   document.onmousemove = function (event) {\r\n    //     // 计算新的宽度\r\n    //     if (dir.indexOf('e') > -1 || dir.indexOf('w') > -1) {\r\n    //       let widthNew;\r\n    //       let widthMaxCurrent;\r\n    //       if (dir.indexOf('e') > -1) {\r\n    //         // 在右侧拖\r\n    //         widthNew = sizeBegin.width + (event.clientX - ePositionBegin.x);\r\n    //         widthMaxCurrent = Math.min(sizeLimit.widthMax, window.innerWidth - positionBegin.x);\r\n    //       } else if (dir.indexOf('w') > -1) {\r\n    //         // 在左侧拖\r\n    //         widthNew = sizeBegin.width + (ePositionBegin.x - event.clientX);\r\n    //         widthMaxCurrent = Math.min(sizeLimit.widthMax, positionBegin.x + sizeBegin.width);\r\n    //       }\r\n    //       if (widthNew < sizeLimit.widthMin) {\r\n    //         widthNew = sizeLimit.widthMin;\r\n    //       }\r\n    //       if (widthNew > widthMaxCurrent) {\r\n    //         widthNew = widthMaxCurrent;\r\n    //       }\r\n    //       this.elSize.width = widthNew;\r\n    //       if (dir.indexOf('w') > -1) {\r\n    //         // 在左侧拖\r\n    //         this.elPosition.left = positionBegin.x - (widthNew - sizeBegin.width);\r\n    //       }\r\n    //     }\r\n    //     if (dir.indexOf('s') > -1 || dir.indexOf('n') > -1) {\r\n    //       let heightNew;\r\n    //       let heightMaxCurrent;\r\n    //       if (dir.indexOf('s') > -1) {\r\n    //         // 在下侧拖\r\n    //         heightNew = sizeBegin.height + (event.clientY - ePositionBegin.y);\r\n    //         heightMaxCurrent = Math.min(sizeLimit.heightMax, window.innerHeight - positionBegin.y);\r\n    //       } else if (dir.indexOf('n') > -1) {\r\n    //         // 在上侧拖\r\n    //         heightNew = sizeBegin.height + (ePositionBegin.y - event.clientY);\r\n    //         heightMaxCurrent = Math.min(sizeLimit.heightMax, positionBegin.y + sizeBegin.height);\r\n    //       }\r\n    //       if (heightNew < sizeLimit.heightMin) {\r\n    //         heightNew = sizeLimit.heightMin;\r\n    //       }\r\n    //       if (heightNew > heightMaxCurrent) {\r\n    //         heightNew = heightMaxCurrent;\r\n    //       }\r\n    //       this.elSize.height = heightNew;\r\n    //       if (dir.indexOf('n') > -1) {\r\n    //         // 在左侧拖\r\n    //         this.elPosition.top = positionBegin.y - (heightNew - sizeBegin.height);\r\n    //       }\r\n    //     }\r\n    //     // 更新this.el位置及大小\r\n    //     updateLayoutParam(this.el);\r\n    //   };\r\n    //   // 结束逻辑\r\n    //   let onDragEnd = function () {\r\n    //     document.onmousemove = null;\r\n    //     document.onmouseup = null;\r\n    //     document.onmouseleave = null;\r\n    //     modalCenterPosition = getCenterXY(this.elSize, this.elPosition);\r\n    //     if (vnode.context && vnode.context[el[ctx].onResizeEnd]) {\r\n    //       vnode.context[el[ctx].onResizeEnd]({\r\n    //         ...this.elSize,\r\n    //         ...this.elPosition,\r\n    //         ...modalCenterPosition\r\n    //       });\r\n    //     }\r\n    //   };\r\n    //   document.onmouseup = onDragEnd;\r\n    //   document.onmouseleave = onDragEnd;\r\n    // }\r\n  }\r\n\r\n  ensureBeginDragging() {\r\n    if (!this.maskEl) {\r\n      let maskEl = document.createElement('div')\r\n      maskEl.style.position = 'fixed'\r\n      maskEl.style.top = 0\r\n      maskEl.style.left = 0\r\n      maskEl.style.width = '100%'\r\n      maskEl.style.height = '100%'\r\n      maskEl.style.zIndex = 99\r\n      this.containerEl.insertBefore(maskEl, this.el)\r\n      this.maskEl = maskEl\r\n    }\r\n  }\r\n\r\n  ensureFinishDragging() {\r\n    this.maskEl && this.maskEl.remove()\r\n    this.maskEl = null\r\n  }\r\n\r\n  autoLayout() {\r\n    // const centerXY = {}\r\n    let elLeft = this.elPosition.left;\r\n    // if (centerXY.centerX) {\r\n    //   elLeft = Math.max(window.innerWidth * centerXY.centerX - this.elSize.width * 0.5, 0);\r\n    // } else {\r\n    ",
    "relevantFile": "<file_path>src/mixins/compSizeSensorMixin.js\nimport { bind, clear } from 'size-sensor';\nexport default {\n  mounted() {\n    this.bindSizeSensor();\n  },\n  beforeDestroy() {\n    this.resizeUnbind = null;\n    clear(this.$el);\n  },\n  methods: {\n    bindSizeSensor() {\n      if (this.resizeUnbind) {\n        return;\n      }\n      this.resizeMemory = `width_${this.$el.offsetWidth}_height_${this.$el.offsetHeight}`;\n      this.resizeUnbind = bind(this.$el, () => {\n        let sizeNew = `width_${this.$el.offsetWidth}_height_${this.$el.offsetHeight}`;\n        if (this.resizeMemory === sizeNew) {\n          return;\n        }\n        this.resizeMemory = sizeNew;\n        this.resize(this.$el.offsetWidth, this.$el.offsetHeight);\n      });\n    },\n  }\n};",
    "relevantFileList": [],
    "filePath": "src/components/CommandBox/utils/DragController.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "= () => {\n      this.autoLayout()\n      this.updateLayoutParam()\n    }",
      "CodeQwen2.5-7B": " = this.onWindowResize.bind(this)\r",
      "copilot": " = this.onWindowResize.bind(this)",
      "CodeQwen1.5-7B": "  = this.onWindowResize.bind(this)\r"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { sleep } from '@/utils/index'\n\nexport class NTParallel {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n    // const canvas = document.createElement('div')\n    // canvas.style.width = '100%'\n    // canvas.style.height = '100%'\n    // this.canvas = canvas\n    // this.container.appendChild(this.canvas)\n    // this.zr = zrender.init(this.canvas, {\n    //   devicePixelRatio: window.devicePixelRatio,\n    //   width: this.width,\n    //   height: this.height,\n    //   renderer: 'svg'\n    // })\n\n    this.data = [\n      {\n        name: '滚筒洗衣机',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '便携式吸尘器',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n      // {\n      //   name: '法式精致双开门冰箱',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n    ]\n\n    this.initLayout = null\n    this.gridLayouts = null\n    this.calLayout()\n\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2]\n    })\n    this.zr.add(this.rootGroup)\n\n    this.render()\n\n  }\n\n  calLayout() {\n    this.initLayout = {\n      position: [0, 0],\n      scale: 1,\n    }\n    this.gridLayouts = [\n      {\n        position: [-125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [-125, 153],\n        scale: 0.5,\n      },\n      {\n        position: [125, 153],\n        scale: 0.5,\n      }\n    ]\n  }\n\n  async render() {\n    for (let i = 0; i < this.data.length; i++) {\n      if (i > 0 &",
    "infill": "& i % 4 === 0",
    "suffix": ") {\r\n        await this.blurAllNodes()\r\n      }\r\n      this.blurAllNodes()\r\n      const nodeGroup = await this.addNode(i)\r\n      // await this.playNode(nodeGroup, i)\r\n      // await this.resumeAllNodes()\r\n      await Promise.all([this.playNode(nodeGroup, i), this.resumeAllNodes()])\r\n      await sleep(500)\r\n    }\r\n  }\r\n\r\n  blurAllNodes() {\r\n    // this.rootGroup.traverse(child => {\r\n    //   child.animateTo({\r\n    //     style: {\r\n    //       opacity: 0.1\r\n    //     }\r\n    //   })\r\n    // })\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 0.1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          // easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  resumeAllNodes() {\r\n    return new Promise((resolve) => {\r\n      this.rootGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          // easing: 'cubicOut',\r\n          done: () => {\r\n            resolve()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  addNode(index) {\r\n    const nodeData = this.data[index]\r\n    const fromLayout = this.initLayout\r\n    \r\n    let nodeGroup = new zrender.Group({\r\n      position: fromLayout.position.slice(),\r\n      scale: [fromLayout.scale, fromLayout.scale],\r\n    })\r\n    const width = 428\r\n    const height = 538\r\n    nodeGroup.add(new zrender.Image({\r\n      style: {\r\n        image: nodeData.image,\r\n        x: - width / 2,\r\n        y: - height / 2,\r\n        width: width,\r\n        height: height,\r\n        opacity: 0.1,\r\n      },\r\n    }))\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      nodeGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          // easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  playNode(nodeGroup, index) {\r\n    const toLayout = this.gridLayouts[index % 4]\r\n    return new Promise((resolve) => {\r\n      nodeGroup.animateTo({\r\n        position: toLayout.position.slice(),\r\n        scale: [toLayout.scale, toLayout.scale],\r\n      }, {\r\n        duration: 1000,\r\n        easing: 'cubicOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.zr.dispose()\r\n  }\r\n}",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/ChainChartDetail.js\nimport NDValue from '../nodeDetails/NDValue/NDValue'\nimport NDRevenue from '../nodeDetails/NDRevenue/NDRevenue'\nimport NDIndex from '../nodeDetails/NDIndex/NDIndex'\nimport NDArea from '../nodeDetails/NDArea/NDArea'\nimport NDNews from '../nodeDetails/NDNews/NDNews'\nimport NDReport from '../nodeDetails/NDReport/NDReport'\n\nimport BLProduct from '../businessLogics/BLProduct'\nimport BLSubscribe from '../businessLogics/BLSubscribe'\nimport BLAdvertisement from '../businessLogics/BLAdvertisement'\nimport BLDatadriven from '../businessLogics/BLDatadriven'\nimport BLFranchise from '../businessLogics/BLFranchise'\nimport BLCrownfund from '../businessLogics/BLCrownfund'\nimport BLReverseinnovation from '../businessLogics/BLReverseinnovation'\nimport BLService from '../businessLogics/BLService'\nimport BLDirectsales from '../businessLogics/BLDirectsales'\nimport BLFreemium from '../businessLogics/BLFreemium'\nimport BLPlatform from '../businessLogics/BLPlatform'\nimport BLShareeconomy from '../businessLogics/BLShareeconomy'\nimport NodeTopo from '../nodeTopo/NodeTopo'\n\nconst nodeDetailComponentMap = {\n  area: NDArea,\n  revenue: NDRevenue,\n  value: NDValue,\n  index: NDIndex,\n  news: NDNews,\n  report: NDReport,\n\n  bl_product: BLProduct,\n  bl_subscribe: BLSubscribe,\n  bl_advertisement: BLAdvertisement,\n  bl_datadriven: BLDatadriven,\n  bl_franchise: BLFranchise,\n  bl_crownfund: BLCrownfund,\n  bl_reverseinnovation: BLReverseinnovation,\n  bl_service: BLService,\n  bl_directsales: BLDirectsales,\n  bl_freemium: BLFreemium,\n  bl_platform: BLPlatform,\n  bl_shareeconomy: BLShareeconomy,\n\n  nodetopo: NodeTopo,\n}\n\nfunction mixinDetail(ChainChart) {\n  ChainChart.prototype.initNodeDetailState = function () {\n    this.currentNodeDetailIns = null\n  }\n  ChainChart.prototype.showNodeDetail = function (nodeId, detailType) {\n    this.destroyNodeDetail()\n    // const nodeItem = this.store.chartData.nodes.find(item => item.id === nodeId)\n    // if (!nodeItem) {\n    //   return\n    // }\n    let containerEl = document.createElement('div')\n    containerEl.className = 'node-detail-container'\n    this.container.appendChild(containerEl)\n    let insEl = document.createElement('div')\n    containerEl.appendChild(insEl)",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTParallel.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "i % 4",
      "CodeQwen2.5-7B": "& i % 4 === 0",
      "copilot": "& i % 4 === 0",
      "CodeQwen1.5-7B": " & i % 4 === 0"
    }
  },
  {
    "prefix": "module.exports = {\n    \"collectCoverage\": true,\n    \"coverageReporters\": [\"html\", \"text-summary\"],\n    \"collectCoverageFrom\": [\"**/*.{js,vue}\", \"!**/node_",
    "infill": "modules/**\"],",
    "suffix": "\n}",
    "relevantFile": "<file_path>packages/certification/src/test/test.js\nconst { describe } = require(\"node:test\");\nimport Button from '../component/buttons';\n// const Button = require('../component/buttons');\n\ndescribe('Button', () => {\n    it('should be defined', () => {\n        expect(Button).toBeDefined();\n    })\n    it('should be a function', () => {\n        expect(typeof Button).toBe('function');\n    })\n    it('should return a button element', () => {\n        const button = Button();\n        expect(button.tagName).toBe('BUTTON');\n    })\n    it('should return a button element with the text \"Click me\"', () => {\n        const button = Button();\n        expect(button.textContent).toBe('Click me');\n    })\n    it('should return a button element with the text \"Click me\"', () => {\n        const button = Button('Submit');\n        expect(button.textContent).toBe('Submit');\n    })\n})",
    "relevantFileList": [],
    "filePath": "jest.config.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "modules/**\"]",
      "CodeQwen2.5-7B": "modules/**\"],",
      "copilot": "modules/**\"],",
      "CodeQwen1.5-7B": " modules/**\"],"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { assemblePath1_1 } from '../../utils/index'\nimport { ArrowPath, EdgeHoverZ } from '../../utils/config'\n\nclass Edge11 {\n  constructor({ cc, parentGroup, data }) {\n    this.cc = cc\n    this.parentGroup = parentGroup\n    this.data = data\n    this.graphic = null\n  }\n  init() {\n    const data = this.data\n    this.graphic = new zrender.Group({\n      silent: true,\n    })\n    const { sourceP, targetP, rotate, clipRect } =  assemblePath1_1(data.source, data.target)\n    const centerP = {\n      x: (sourceP.x + targetP.x) / 2,\n      y: (sourceP.y + targetP.y) / 2,\n    }\n    const pathEl = new zrender.Line({\n      name",
    "infill": ": 'edge-el-path',",
    "suffix": "\r\n      shape: {\r\n        x1: sourceP.x,\r\n        y1: sourceP.y,\r\n        x2: targetP.x,\r\n        y2: targetP.y,\r\n      },\r\n      style: {\r\n        lineWidth: 1.5,\r\n        stroke: '#89AED9',\r\n        fill: 'transparent',\r\n        lineDash: [5, 5],\r\n      },\r\n    })\r\n    this.graphic.add(pathEl)\r\n    const arrowEl = zrender.path.createFromString(ArrowPath, {\r\n      name: 'edge-el-arrow',\r\n      position: [targetP.x, targetP.y],\r\n      rotation: rotate,\r\n      style: {\r\n        fill: '#89AED9',\r\n      },\r\n      z: EdgeHoverZ,\r\n    })\r\n    this.graphic.add(arrowEl)\r\n    const textBgEl = new zrender.Rect({\r\n      shape: {\r\n        x: centerP.x - 16,\r\n        y: centerP.y - 9,\r\n        width: 32,\r\n        height: 18,\r\n        r: [2, 2, 2, 2]\r\n      },\r\n      style: {\r\n        fill: '#FFFFFF'\r\n      },\r\n    })\r\n    this.graphic.add(textBgEl)\r\n    const textEl = new zrender.Text({\r\n      style: {\r\n        text: data.target.streamType === 'up' ? '上游' : '下游',\r\n        textLineHeight: 18,\r\n        fontSize: 14,\r\n        fontFamily: 'MicrosoftYaHei',\r\n        fill: '#4F4F5E',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        x: centerP.x,\r\n        y: centerP.y,\r\n      },\r\n      z: EdgeHoverZ,\r\n    })\r\n    this.graphic.add(textEl)\r\n    this.parentGroup.add(this.graphic)\r\n    // 入场动画\r\n    const graphicClipPathEl = new zrender.Rect({\r\n      position: clipRect.position,\r\n      rotation: -clipRect.rotation,\r\n      shape: {\r\n        x: clipRect.x,\r\n        y: clipRect.y,\r\n        width: 0,\r\n        height: clipRect.height\r\n      },\r\n    })\r\n    this.graphic.setClipPath(graphicClipPathEl)\r\n    return new Promise((resolve) => {\r\n      graphicClipPathEl.animateTo({\r\n        shape: {\r\n          width: clipRect.width\r\n        }\r\n      }, {\r\n        duration: 500,\r\n        easing: 'cubicInOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n  updatePosition() {\r\n    const data = this.data\r\n    const { sourceP, targetP, rotate, clipRect } =  assemblePath1_1(data.source, data.target)\r\n    const centerP = {\r\n      x: (sourceP.x + targetP.x) / 2,\r\n      y: (sourceP.y + targetP.y) / 2,\r\n    }\r\n  }\r\n  blur() {\r\n    this.graphic.traverse(child => {\r\n      child.animateTo({\r\n        style: {\r\n          opacity: 0.05\r\n        }\r\n      })\r\n    })\r\n  }\r\n  unblur() {\r\n    this.graphic.traverse(child => {\r\n      child.animateTo({\r\n        style: {\r\n          opacity: 1\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\nexport default Edge11",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/painter/nodes/Node2.js\nimport * as zrender from '@/third/zrender/zrender'\nimport Node12Common from './Node12Common'\nimport { calNodePosition } from '../../utils/index'\nimport { Node2BgImageMap, Node2BgShadowOutMap, Node2BgImageMap_Emphasis } from '../../utils/config'\n\nclass Node2 extends Node12Common {\n  constructor({ cc, parentGroup, data }) {\n    super({ cc, parentGroup, data })\n  }\n  renderNode() {\n    const data = this.data\n    this.nodeGroup.add(new zrender.Circle({\n      name: 'node-el-bg',\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius\n      },\n      style: {\n        fill: '#FFFFFF',\n        stroke: '#FFFFFF',\n        lineWidth: 1,\n        ...Node2BgShadowOutMap[data.rootStreamType],\n      },\n    }))\n    this.nodeGroup.add(new zrender.Image({\n      name: 'node-el-bgImage',\n      style: {\n        image: Node2BgImageMap[data.rootStreamType],\n        x: -data.radius,\n        y: -data.radius,\n        width: data.radius * 2,\n        height: data.radius * 2,\n      },\n      states: {\n        emphasis: {\n          style: {\n            image: Node2BgImageMap_Emphasis[data.rootStreamType],\n          }\n        },\n        select: {\n          style: {\n            image: Node2BgImageMap_Emphasis[data.rootStreamType],\n          }\n        },\n      },\n    }))\n  }\n  rerenderWhenScaleChange() {\n    this.group.attr({\n      position: calNodePosition(this.data.position, this.cc.store.transformState.scale)\n    })\n    this.nodeGroup.attr({\n      scale: [this.cc.store.transformState.scale, this.cc.store.transformState.scale]\n    })\n    this.renderLabel()\n    this.refreshToolScale()\n    this.ensureElZ()\n  }\n  emphasis_more() {\n<file_path>src/views/Home/components/Chain/ChainChart/painter/nodes/Node1.js\nimport * as zrender from '@/third/zrender/zrender'\nimport Node12Common from './Node12Common'\nimport { calNodePosition } from '../../utils/index'\nimport { Node1BgImageMap, Node1BgShadowOut, Node2BgShadowOutMap, Node1MaskLinearGradient, NodeDefaultImageUrl } from '../../utils/config'\n\nclass Node1 extends Node12Common {\n  constructor({ cc, parentGroup, data }) {\n    super({ cc, parentGroup, data })\n  }\n  renderNode() {\n    const data = this.data\n    if (data.level === 1) {\n      // 节点底晕\n      this.nodeGroup.add(new zrender.Image({\n        name: 'node-el-bgBlur',\n        style: {\n          image: Node1BgImageMap[data.streamType],\n          x: -(data.radius + 12),\n          y: -(data.radius + 12),\n          width: (data.radius + 12) * 2,\n          height: (data.radius + 12) * 2,\n          ...Node2BgShadowOutMap[data.streamType],\n        },\n      }))\n    }\n    // 节点底\n    this.nodeGroup.add(new zrender.Circle({\n      name: 'node-el-bg',\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius + 1\n      },\n      style: {\n        fill: '#FFFFFF',\n        stroke: '#FFFFFF',\n        lineWidth: 1,\n        ...Node1BgShadowOut,\n      },\n    }))\n    // 节点图片\n    const imageEl = new zrender.Image({\n      name: 'node-el-bgImage',\n      style: {\n        image: data?.data?.detail?.imageUrl || NodeDefaultImageUrl,\n        x: -data.radius,\n        y: -data.radius,\n        width: data.radius * 2,\n        height: data.radius * 2\n      },\n    })\n    const imageClipPathEl = new zrender.Circle({\n      shape: {\n        cx: 0,\n        cy: 0,\n        r: data.radius\n      },\n    })\n    imageEl.setClipPath(imageClipPathEl)\n    this.nodeGroup.add(imageEl)",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/ChainChart/painter/edges/Edge1_1.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": ": 'edge-el-line',",
      "CodeQwen2.5-7B": ": 'edge-el-line',",
      "copilot": ": 'edge-el-path',",
      "CodeQwen1.5-7B": " : 'edge-el-path',"
    }
  },
  {
    "prefix": "import * as screenApi from '@/api/screenApi'\nimport * as homeApi from '@/api/homeApi'\nimport { TaLog, getQueryString, getThemeStyle } from '@/utils'\nimport { reLayout, parseNormalThemeBoards } from './utils/layoutUtil.js'\n\nexport default {\n  data() {\n    return {\n      SelectSizeModalState: {\n        show: false,\n        modalParam: null\n      }\n    };\n  },\n  methods: {\n    // 检查标签页是否超过\n    async checkIsOverLimit(errMsg = '') {\n      let isOver = true;\n      await screenApi.checkIsOverLimit().then(res => {\n        isOver = res.data;\n      });\n      if (isOver) {\n        const limitSize = this.$customScreenStore.states.role === 'jgb' ? 20 : 5;\n        this.$message.error(errMsg || $extend(\"f9ae2c2388\", [limitSize]));\n      }\n      return isOver;\n    },\n    // 获取所有标签页\n    getAllScreenTabs() {\n      if (this.$customScreenStore.states.pageModal === 'popularize') {\n        return this.getAllScreenTabsPopularize()\n      } else {\n        return this.getAllScreenTabsNormal()\n      }\n    },\n    // 获取所有标签页-普通\n    async getAllScreenTabsNormal () {\n      await screenApi.getAllTabs({\n        addBillBoard: false\n      }).then(res => {\n        let allScreenTabs = res.data.result || []\n        // allScreenTabs.unshift({\n        //   ctime: \"2023-02-09 15:23:55\",\n        //   mtime: \"2023-06-17 12:40:16\",\n        //   name: \"AI 看板\",\n        //   order: 0,\n        //   seq: \"63e49f8bfd0bcc00157bc8b4\",\n        //   size: \"7\",\n        //   type: \"3\",\n        //   userId: 602607488,\n        // })\n        allScreenTabs.forEach(item => {\n          item.actionDisable = item.type === '3'\n        })\n        this.allScreenTabs = allScreenTabs\n        // this.allScreenTabs = res.data.result;\n        this.recommendBillBoard = res.data.recommendBillBoard;\n        // if (this.allScreenTabs.length === 1 && this.recommendBillBoard) {\n        //   this.getFirstLoadInfo()\n        // }\n      });\n    },\n    // 获取所有标签页-统一版运营位推广\n    async getAllScreenTabsPopularize () {\n      await screenApi.getPopularizeList({\n        param: getQueryString('popularize')\n      }).then(res => {\n        let tabNames = res.data || []\n        let allScreenTabs = tabNames.map((name, index) => {\n          return {\n            name,\n            seq: `${ name }_${ index }`,\n            actionDisable: true,\n          }\n        })\n        this.allScreenTabs = allScreenTabs\n        this.recommendBillBoard = false;\n      });\n    },\n    // 添加空白看板标签页\n    async addBlankScreenTab() {\n      const isOver = await this.checkIsOverLimit();\n      if (isOver) {\n        return;\n      }\n      if (this.$customScreenStore.states.searchMode === 'commandBox') {  // 指令框模式将原有的选择看板尺寸去掉，即无需弹窗，默认横向8格\n        let tabSeq = await this.addScreenTab(8, $extend(\"dcc308721b\", [this.allScreenTabs.filter(item => !item.actionDisable).length + 1]));\n        if (tabSeq) {\n          this.screenTabChangeHandle(tabSeq);\n          TaLog({\n            id: `_DASHBOARD_${tabSeq}_NewDashboard`\n          });\n        }\n      } else {  // 非指令框模式，弹窗选择看板尺寸\n        this.SelectSizeModalState.modalParam = {\n          type: 'new'\n        };\n        this.SelectSizeModalState.show = true;\n      }\n    },\n    // 添加AI看板标签页\n    addAiScreenTab",
    "infill": "() {\r\n\r\n    },",
    "suffix": "\r\n    // 关闭看板尺寸选择弹窗\r\n    closeSelectSizeModal() {\r\n      this.SelectSizeModalState.show = false;\r\n      this.SelectSizeModalState.modalParam = null;\r\n    },\r\n    // 看板尺寸选择弹窗选择成功\r\n    async selectSizeSuccess(colNum) {\r\n      if (this.SelectSizeModalState.modalParam.type === 'new') {\r\n        let tabSeq = await this.addScreenTab(colNum, $extend(\"dcc308721b\", [this.allScreenTabs.filter(item => !item.actionDisable).length + 1]));\r\n        if (tabSeq) {\r\n          this.screenTabChangeHandle(tabSeq);\r\n          TaLog({\r\n            id: `_DASHBOARD_${tabSeq}_NewDashboard`\r\n          });\r\n        }\r\n      } else if (this.SelectSizeModalState.modalParam.type === 'edit') {\r\n        this.editSizeScreenTabExe(colNum);\r\n      }\r\n      this.closeSelectSizeModal();\r\n    },\r\n    // 添加主题看板-打开 选择主题 弹窗\r\n    async addThemeScreenTab() {\r\n      const isOver = await this.checkIsOverLimit();\r\n      if (isOver) {\r\n        return;\r\n      }\r\n      this.SelectThemeBlockModalState.modalParam = {\r\n        type: 'new',\r\n        title: $t(\"0e43a8a5ba\"),\r\n        // showSizeSelect: true,\r\n        okText: $t(\"38cf16f220\"),\r\n        showSizeSelect: this.$customScreenStore.states.searchMode === 'commandBox' ? false : true,  // 指令框模式默认选择横向8格尺寸，其余不变\r\n        colNum: this.$customScreenStore.states.searchMode === 'commandBox' ? 8 : 7,  // 指令框模式默认选择横向8格尺寸，其余不变\r\n      };\r\n      this.SelectThemeBlockModalState.show = true;\r\n    },\r\n    // 添加主题看板-实现\r\n    async addThemeScreenTabExe(selectTheme) {\r\n      // 若创建多张相同的主题看板，则命名为'xxxxY'\r\n      let screenName = selectTheme.chartName;\r\n      let existTabsWithSameName = this.allScreenTabs.filter(item => item.name && item.name.indexOf(screenName) === 0);\r\n      // let existTabsWithSameName = this.allScreenTabs.filter(item => {\r\n      //   let res = false\r\n      //   if (item.name) {\r\n      //     [nameText, numberText] = item.name.split(' ')\r\n      //     if (nameText === screenName) {\r\n      //       res = true\r\n      //     }\r\n      //   }\r\n      //   return res\r\n      // })\r\n      if (existTabsWithSameName && existTabsWithSameName.length > 0) {\r\n        screenName = screenName + '' + existTabsWithSameName.length;\r\n      }\r\n      this.layoutLoading = true\r\n      let tabSeq = await this.addScreenTab(selectTheme.colNum, screenName)\r\n      if (tabSeq) {\r\n        TaLog({ id: `_DASHBOARD_${ tabSeq }_NewSubject2` })\r\n        let newBoards\r\n        if (selectTheme.type === 'normalTheme') {\r\n          newBoards = await this.getNormalThemeBoards({ selectTheme })\r\n          if (!newBoards || newBoards.length === 0) {\r\n            this.layoutLoading = false\r\n            return\r\n          }\r\n          newBoards.forEach(board => board.sheetSeq = tabSeq)\r\n        } else {\r\n          newBoards = [{\r\n            sheetSeq: tabSeq,\r\n            path: selectTheme.path,\r\n            style: getThemeStyle(selectTheme.chartName),\r\n            type: 3\r\n          }]\r\n        }\r\n        await screenApi.saveCustomScreenList(newBoards)\r\n        this.layoutLoading = false\r\n        this.screenTabChangeHandle(tabSeq)\r\n        setTimeout(() => {\r\n          TaLog({ id: `_DASHBOARD_${ tabSeq }_ADDSubject2`, keyword: `${ selectTheme.colNum }n-${ selectTheme.chartName }` })\r\n        }, 1000)\r\n      } else {\r\n        this.layoutLoading = false\r\n      }\r\n    },\r\n    // 从推荐看板添加主题看板 \r\n    addThemeScreenTabByRecommend(recommendTheme) {\r\n      this.addThemeScreenTabExe({\r\n        colNum: 7,\r\n        chartName: recommendTheme.chartName,\r\n        path: JSON.stringify(recommendTheme),\r\n        type: recommendTheme.type === '1' ? 'normalTheme' : ''\r\n      })\r\n    },\r\n    // 推荐看板主题隐藏后，标签页重新显隐\r\n    onRecommendThemeToggle() {\r\n      this.$refs.ScreenTabsRef.calTabsShowAndHidden();\r\n    },\r\n    // 顶部权限部件展开搜索后，标签页重新计算显隐\r\n    onAuthWidgetToggle() {\r\n      this.$refs.ScreenTabsRef.calTabsShowAndHidden();\r\n    },\r\n    // 获取普通专题的看板组件\r\n    getNormalThemeBoards ({ selectTheme }) {\r\n      return screenApi.getThematicData(JSON.parse(selectTheme.path)).then((res) => {\r\n        let boards = parseNormalThemeBoards(res.data)\r\n        // if (action === 'add') {\r\n        //   moveBoardsToLayoutEnd(boards, this.layout)\r\n        // }\r\n        return boards\r\n      }).catch(err => {\r\n        // console.log('获取普通专题的看板组件失败:', err)\r\n      })\r\n    },\r\n    // 标签页操作\r\n    async addScreenTab(colNum, screenName) {\r\n      this.$refs.ScreenTabsRef.addItemExe();\r\n      let screenNameValid = await this.getScreenNameValid(screenName)\r\n      if (!screenNameValid) {\r\n        return\r\n      }\r\n      return screenApi.addSreen({\r\n        name: screenNameValid,\r\n        order: this.allScreenTabs.length,\r\n        type: 2,\r\n        size: colNum\r\n      }).then(res => {\r\n        this.allScreenTabs.push(res.data);\r\n        // TaLog({ id: `_DASHBOARD_${res.data.seq}_NewDashboard`, keyword: res.data.name })\r\n        this.$refs.ScreenTabsRef.addItemFinish();\r\n        return res.data.seq;\r\n      }).catch(err => {\r\n        // console.log('看板新建失败:', err)\r\n        this.$refs.ScreenTabsRef.addItemFinish();\r\n      });\r\n    },\r\n    // 生成有效的screenName\r\n    getScreenNameValid(screenName) {\r\n      return screenApi.getAllTabs({ addBillBoard: true }).then(res => {\r\n        const allScreenTabs = res.data.result\r\n        if (allScreenTabs.some(item => item.name === screenName)) {\r\n          let uniqNum = 0\r\n          let screenNameNew = `${screenName}${++uniqNum}`\r\n          while(allScreenTabs.some(item => item.name === screenNameNew)) {\r\n            screenNameNew = `${screenName}${++uniqNum}`\r\n          }\r\n          return screenNameNew\r\n        } else {\r\n          return screenName\r\n        }\r\n      }).catch((e) => {\r\n        return ''\r\n      })\r\n    },\r\n    // 复制看板\r\n    async copyScreenTab(item) {\r\n      const isOver = await this.checkIsOverLimit();\r\n      const index = this.allScreenTabs.findIndex(t => t.seq === item.seq);\r\n      if (!isOver) {\r\n        screenApi.copySreen({\r\n          seq: item.seq\r\n        }).then(res => {\r\n          this.allScreenTabs.splice(index + 1, 0, res.data);\r\n          this.screenTabChangeHandle(res.data.seq);\r\n        }).catch(err => {\r\n          // console.log('看板新建失败:', err)\r\n        });\r\n      }\r\n      TaLog({\r\n        id: `_DASHBOARD_${this.currentScreenTab}_Copy`,\r\n        keyword: this.currentTab.name\r\n      });\r\n    },\r\n    renameScreenTabExe(item, newName) {\r\n      screenApi.renameSreen({\r\n        seq: item.seq,\r\n        name: newName\r\n      }).then(res => {\r\n        const renameTab = this.allScreenTabs.find(i => i.seq === item.seq);\r\n        renameTab.name = newName;\r\n        this.$refs.ScreenTabsRef.calTabsShowAndHidden();\r\n      }).catch(err => {\r\n        // console.log('重命名失败', err)\r\n        if (err && err.subCode === 'same name') {\r\n          this.$message.error($t('MANUAL051'));\r\n        } else if (err && err.subCode === 'deleted') {\r\n          this.$message.error($t('MANUAL052'));\r\n        }\r\n      });\r\n    },\r\n    // 重命名\r\n    renameScreenTab(item, newName) {\r\n      homeApi.wordCheck({\r\n        appId: 357,\r\n        content: newName\r\n      }).then(res => {\r\n        if (res.data) {\r\n          this.renameScreenTabExe(item, newName)\r\n        } else {\r\n          this.$message.warning($t('MANUAL049'))\r\n        }\r\n      }).catch(() => {\r\n        this.renameScreenTabExe(item, newName)\r\n      })\r\n      TaLog({\r\n        id: `_DASHBOARD_${this.currentScreenTab}_Rename`,\r\n        keyword: `${this.currentTab.name} to ${newName}`\r\n      });\r\n    },\r\n    async getTabHasLayout(tab) {\r\n      let r = true;\r\n      await screenApi.getScreenCompList({\r\n        seq: tab.seq\r\n      }).then(res => {\r\n        r = !!res.data.length;\r\n      }).catch(() => {});\r\n      return r;\r\n    },\r\n    // 删除标签页\r\n    async deleteScreenTab(item) {\r\n      const _self = this;\r\n      const index = this.a",
    "relevantFile": "<file_path>src/views/CustomScreen/customScreenMixinCommandBox.js\n\nexport default {\n  components: {\n    LoadingAnimation,\n  },\n  data () {\n    return {\n      searchAiESState: null,\n      // searchAiESState: {\n      //   state: 'fetching'\n      // },\n    }\n  },\n  mounted () {\n    this.parseSearchMode()\n  },\n  methods: {\n    parseSearchMode() {\n      if (this.$customScreenStore.states.platform === 'ifind' && getChromeVersion() > 80 && !pluginVersion) {\n        this.$customScreenStore.states.searchMode = 'commandBox'\n        // this.updateCommandBoxState()\n        // window.addEventListener('storage', event => {\n        //   if (event.key === 'edb_commandBox_state') {\n        //     this.updateCommandBoxState()\n        //   }\n        // })\n      }\n    },\n    updateCommandBoxState() {\n      if (localStorage.getItem('edb_commandBox_state')) {\n        const commandBoxState = JSON.parse(localStorage.getItem('edb_commandBox_state'))\n        this.$customScreenStore.states.searchMode = commandBoxState.ennable ? 'commandBox' : ''\n        this.$customScreenStore.states.commandBoxState.active = commandBoxState.active ? true : false\n      }\n    },\n    reactCommandBox(data) {\n      // if (data.action === 'closeCommandBox') {\n      //   this.$edbStore.states.commandBoxState.active = false\n      // } else if (data.action === 'locateIndex') {\n      //   this.locateIndex(data.args)\n      // } else if (data.action === 'locateAddIndex') {\n      //   this.locateIndex(data.args)\n      //   this.batchAddIndex([data.args])        \n      // } else if (data.action === 'addSubjectToDrawtool') {\n      //   this.addSubjectToDrawtool(data.args)\n      // } else if (data.action === 'doSearch') {\n      //   this.getActiveLeftTabRef().doSearch(data.args)\n      // } else if (data.action === 'batchAddIndexAndExtractData') {\n      //   this.batchAddIndexAndExtractData(data.args)\n      // } else if (data.action === 'delectSearchSelectItem') {\n      //   this.getActiveLeftTabRef().delectSearchSelectItem(data.args)\n      // } else if (data.action === 'addSearchSelectItem') {\n      //   this.getActiveLeftTabRef().addSearchSelectItem(data.args)\n      // } else if (data.action === 'fillupSearchList') {\n      //   this.getActiveLeftTabRef().fillupSearchList(data.args)\n      // } else if (data.action === 'syncSearchListESState') {\n      //   this.getActiveLeftTabRef().syncSearchListESState(data.args)\n      // }\n    },\n  }",
    "relevantFileList": [],
    "filePath": "src/views/CustomScreen/customScreenMixinTabs.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "() {\n      this.addBlankScreenTab();\n    },",
      "CodeQwen2.5-7B": "() {\r",
      "copilot": "() {\r\n\r\n    },",
      "CodeQwen1.5-7B": " () {\r"
    }
  },
  {
    "prefix": "import shareVideo from '@/components/shareVideo';\nimport controllTip from '@/components/controllTip';\nimport modalCom from '@/components/modalCom';\nimport debug from '@/components/debug';\nimport remoteApi from '@/api/remote.api';\nimport clientApi from '@/api/client.api';\nimport { envInfo } from '@/config';\nimport { JSEncryptExtInstance } from '@/config/index';\nimport { getUrlParams } from '@/utils/urlParams';\nimport { useConfigInfo, cLog } from '@/multipleEnv';\nimport { EventBus } from '@/bus';\n\nconst { remoteMixins } = useConfigInfo;\nlet urlAllParams;\n\nconst statusObj = {\n  // 无权限\n  noAuth: {\n    icon: 'rejected',\n    text: '远程校验不通过，请由发起端重新发起',\n  },\n  // 初始态，未进入会议\n  init: {\n    icon: 'loading',\n    text: '发起中...',\n  },\n  // 已进入会议，等待对方接受\n  start: {\n    icon: 'loading',\n    text: '发起中,等待对方接受邀请...',\n  },\n  // 接口异常或远程会议房间初始化异常\n  'start-error': {\n    icon: 'rejected',\n    text: '发起异常，请稍后尝试...',\n  },\n  // 关闭前状态，关闭前需要webrtc发送远程结束消息\n  beforeClose: {\n    icon: 'rejected',\n    text: '远程已关闭',\n  },\n  // 关闭状态，远程实例不存在\n  close: {\n    icon: 'rejected',\n    text: '远程已关闭',\n  },\n  // 拒绝\n  rejected: {\n    icon: 'rejected',\n    text: '对方拒绝，发起前请与对方沟通确认',\n  },\n  timeout: {\n    icon: 'timeout',\n    text: '对方未响应，请稍后尝试...',\n  },\n};\nlet RemoteToolInstance = null;\nexport default {\n  components: {\n    'share-video': shareVideo,\n    'controll-tip': controllTip,\n    'modal-com': modalCom,\n    debug,\n  },\n  inject: ['parent'],\n  data() {\n    return {\n      urlAllParams,\n      debug: envInfo.debug,\n      // 远程鉴权\n      authPass: false,\n      // 当发起后，接收端在弹窗后的120s内没有点击接收的情况下，判定为未响应状态。start/agreed/rejected/timeout\n      status: 'init',\n      msgLoading: false,\n      // 延迟销毁实例\n      delayClose: 100,\n      // 关闭只调用一次，禁止异常套娃\n      closeNum: 0,\n      isInMetting: false,\n      receiveType: 1,\n    };\n  },\n  props: {},\n  computed: {\n    statusObj() {\n      return statusObj;\n    },\n    userId() {\n      if (!envInfo.noAuth) {\n        // 发起、接收类型页面\n        return this.parent?.userInfo?.userId;\n      }\n      return this.parent?.userInfo?.userId || urlAllParams.d;\n    },\n    userName() {\n      if (!envInfo.noAuth) {\n        // 发起、接收类型页面\n        return this.parent?.userInfo?.userName;\n      }\n      return this.parent?.userInfo?.userName || urlAllParams.dn || this.userId;\n    },\n    encryptUserId() {\n      return JSEncryptExtInstance.encrypt(`${this.userId}`);\n    },\n    // 触发远程开启\\关闭\n    showShareVideo() {\n      const isClose = this.status === 'cancel' || this.status === 'close';\n      return this.userId && this.conferenceId && this.authPass && !isClose;\n    },\n    // 会议id\n    conferenceId() {\n      // 2种类型页面：接收、浏览器中转\n      return this.$route.params.conferenceId || ",
    "infill": "urlAllParams.conferenceId;",
    "suffix": "\r\n    },\r\n    // 远程类型\r\n    remoteType() {\r\n      // 2种类型页面：接收、浏览器中转\r\n      return this.$route.params.remoteType;\r\n    },\r\n    showDebug() {\r\n      return this.debug && this.isInMetting;\r\n    },\r\n  },\r\n  methods: {\r\n    getAuthParams() {\r\n      return {\r\n        user_id: this.encryptUserId,\r\n        meeting_id: this.conferenceId,\r\n      };\r\n    },\r\n    // 校验加入远程权限\r\n    async checkAuthPass() {\r\n      if (!this.userId) {\r\n        return;\r\n      }\r\n      const params = this.getAuthParams();\r\n      try {\r\n        if (!envInfo.noAuth) {\r\n          await remoteApi.checkPermission(params);\r\n        }\r\n        this.status = 'start';\r\n        this.authPass = true;\r\n        this.afterAuthInit();\r\n        window.TA.log({\r\n          id: 'pc_web_free_remote_tool_front.common.remoteMixins.checkAuthPass.success',\r\n          _id: 'pc_web_free_remote_tool_front.common.remoteMixins.checkAuthPass.success',\r\n        });\r\n      } catch (error) {\r\n        // 取消、拒绝、关闭等\r\n        const notExistCode = -20001;\r\n        if (error?.data?.status_code === notExistCode) {\r\n          this.status = 'close';\r\n        } else {\r\n          this.status = 'noAuth';\r\n          this.$handleError(error, 'checkAuthPass', { params });\r\n        }\r\n        this.closeRemote();\r\n      }\r\n    },\r\n    errorCallback() {\r\n      this.status = 'start-error';\r\n    },\r\n    getRemoteToolInstance() {\r\n      return RemoteToolInstance;\r\n    },\r\n    successrCallback(instance) {\r\n      RemoteToolInstance = instance || {};\r\n      this.isInMetting = true;\r\n      this.handleJoinMetting();\r\n    },\r\n    sendMessage(data) {\r\n      return RemoteToolInstance?.handleSendMessage(data);\r\n    },\r\n    // 异常上报上下文\r\n    getReportContent() {\r\n      return {\r\n        userId: this.userId,\r\n        userName: this.userName,\r\n        conferenceId: this.conferenceId,\r\n        remoteType: this.remoteType,\r\n        rolePageType: this.rolePageType,\r\n        isUserEnd: this.isUserEnd,\r\n      };\r\n    },\r\n    getParams(actionType) {\r\n      // 新建\r\n      if (actionType === 'cancel') {\r\n        return {\r\n          is_init_success: 3,\r\n          // 新建\r\n          upload_type: 4,\r\n          meeting_id: this.conferenceId,\r\n        };\r\n      } else if (actionType === 'timeout') {\r\n        return {\r\n          is_connection_success: 3,\r\n          upload_type: 2,\r\n          meeting_id: this.conferenceId,\r\n        };\r\n      } else if (actionType === 'close') {\r\n        return {\r\n          upload_type: 3,\r\n          meeting_id: this.conferenceId,\r\n        };\r\n      } else {\r\n        // 未走入\r\n        return {};\r\n      }\r\n    },\r\n    // 取消远程 cancel 、未响应 timeout 、关闭 close；单纯调用接口，不耦合其他操作！\r\n    async uploadMsg(actionType) {\r\n      const mobileSolfType = 3;\r\n      const pcTybType = 1;\r\n      const params = {\r\n        ...this.getParams(actionType),\r\n        receiver_software_type: this.receiveType === 1 ? pcTybType : mobileSolfType,\r\n        receiver_type: this.receiveType,\r\n      };\r\n      try {\r\n        if (this.msgLoading) {\r\n          return;\r\n        }\r\n        this.msgLoading = true;\r\n        await remoteApi.uploadMsg(params);\r\n        this.msgLoading = false;\r\n      } catch (error) {\r\n        this.msgLoading = false;\r\n        // 取消、拒绝、关闭等\r\n        const notExistCode = -20001;\r\n        if (error?.data?.status_code !== notExistCode) {\r\n          this.$messageError({\r\n            message: '系统异常!',\r\n            type: 'error',\r\n          });\r\n          this.$handleError(error, 'uploadMsg', { actionType, params });\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 客户端通知web；注册事件回传消息（拒绝、接收、关闭）;\r\n     * @param {*} data\r\n     * 1、用户拒绝 2、会议关闭\r\n        {\r\n            \"CommunicationMethod\":1, // 操作类型 1：远程控制；2：邀请操作；3：桌面观看；4：桌面分享至PC；\r\n            \"roomId\":\"xxxx\", // 房间ID\r\n            \"ResponseType\":0 // 1表示接受，2表示拒绝，3表示未响应，4表示关闭\r\n        }\r\n    * @returns {*}  {Promise<void>}\r\n    */\r\n    handleRemoteMsg(_data) {\r\n      try {\r\n        const data = JSON.parse(_data);\r\n        cLog('handleRemoteMsg: ', data);\r\n        if (!data?.roomId || this.conferenceId !== data?.roomId) {\r\n          return;\r\n        }\r\n        const closeNum = 4;\r\n        const rejectedNum = 2;\r\n        const cancelNum = 5;\r\n        // 处理客户端传来的push消息--用户操作响应\r\n        if (data.ResponseType === closeNum) {\r\n          this.closeRemote();\r\n        } else if (data.ResponseType === rejectedNum) {\r\n          this.status = 'rejected';\r\n          this.$emit('handleAction', 'reject');\r\n        } else if (data.ResponseType === cancelNum) {\r\n          this.status = 'cancel';\r\n          this.cancelRemote('cancel');\r\n        } else {\r\n          // 未使用\r\n        }\r\n      } catch (error) {\r\n        this.$handleError(error, 'handleRemoteMsg', _data);\r\n      }\r\n    },\r\n    // 通知客户端关闭，销毁相关资源\r\n    sendCloseToClient() {\r\n      const params = {\r\n        // 操作类型 1：远程控制；2：邀请操作；3：桌面观看；4：桌面分享至PC；\r\n        CommunicationMethod: Number(this.remoteType),\r\n        // 房间ID\r\n        roomId: this.conferenceId,\r\n        // 0表示远程发起，1表示远程关闭\r\n        actionType: 1,\r\n      };\r\n      try {\r\n        clientApi.sendRtInteractionMsgData(params);\r\n      } catch (error) {\r\n        this.$handleError(error, 'sendCloseToClient', { params });\r\n      }\r\n    },\r\n    // 弹出浏览器\r\n    openUaPage(roleType) {\r\n      const newRouter = this.$router.resolve({\r\n        name: 'remoteua',\r\n        params: {\r\n          roleType,\r\n          remoteType: this.remoteType,\r\n        },\r\n        query: {\r\n          ...this.$route.query,\r\n          conferenceId: this.conferenceId,\r\n          d: this.encryptUserId,\r\n        },\r\n      });\r\n      window.open(remoteMixins.getOpenUaPageUrl(newRouter), '_blank');\r\n    },\r\n    beforeDestroyPop() {\r\n      this.closeRemote();\r\n    },\r\n  },\r\n  watch: {\r\n    userId(newvalue) {\r\n      if (newvalue) {\r\n        this.checkAuthPass();\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    urlAllParams = getUrlParams();\r\n    EventBus.$on('beforeDestroyPop', this.beforeDestroyPop);\r\n    EventBus.$on('remoteEventMsg', this.handleRemoteMsg);\r\n    EventBus.$on('changeReceiveType', type => {\r\n      this.receiveType = type;\r\n    });\r\n  },\r\n  mounted() {\r\n    this.checkAuthPass();\r\n  },\r\n  beforeDestroy() {\r\n    EventBus.$off('beforeDestroyPop', this.beforeDestroyPop);\r\n    EventBus.$off('remoteEventMsg', this.handleRemoteMsg);\r\n    EventBus.$off('changeReceiveType');\r\n  },\r\n};\r\n",
    "relevantFile": "<file_path>src/utils/ua.js\n// 客户端bug，统一版ua可能带上hexin_gphone，特殊处理hexin_gphone\nconst {userAgent} = navigator;\nconst mobileUa =\n/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i;\nconst isMobile = (!userAgent.includes('Hexin_Gphone') && userAgent.match(mobileUa)) ? true : false;\n\nlet isRemoteAbled = false;\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n// 判断SDK是否可用，苹果只考虑移动端，pc端内内核均为chrome\nif (isIOS) {\n  const match = userAgent.match(/iPhone OS (\\d+_?\\d*)/i);\n  const version = match ? match[1].replace('_', '.') : '0';\n  const abledVersion = 14.3;\n  isRemoteAbled = Number(version) > abledVersion;\n} else {\n  const list = /Chrome\\/([\\d]+)/.exec(navigator.userAgent);\n  const version = list && list.length ? list[1] : '0';\n  // 同顺会议sdk浏览器兼容性80以上\n  const abledVersion = 80;\n  isRemoteAbled = Number(version) > abledVersion;\n}\n\n// 判断是否是客户端环境\nconst checkPlatform = () => new Promise(resolve => {\n  // 使用对象字面量存储平台信息，提高可读性\n  const platforms = {\n    'tyb': () => window.external && 'createObject' in window.external, // PC统一版\n    'hevo': () => window.HevoCef && 'IsHevoCef' in window.HevoCef, // 远航版\n    'mac': () => window.MacStockMetaData, // MAC客户端\n  };\n\n  // 优先判断非异步的平台类型\n  for (const [platform, checkFn] of Object.entries(platforms)) {\n    if (checkFn()) {\n      return resolve(platform);\n    }\n  }\n\n  // 手机端异步判断\n  if (isMobile) {\n    window.callNativeHandler && window.callNativeHandler('getAppInfo', '', data => {\n      resolve(data.appid === 1 ? 'sjcg' : 'tyb'); // 根据appid判断是否为手炒\n    });\n    // callNativeHandler不存在，兜底\n    const delay = 500;\n    setTimeout(() => {\n      resolve('sjcg');\n    }, delay);\n\n  } else {\n    // 默认平台\n    resolve('tyb');\n  }\n});\n\n\nexport { isRemoteAbled, checkPlatform, isMobile };\n<file_path>src/config/index.js\n  // 远程链路节点较长，测试环境链路节点不稳定，为方便联调测试，测试环境 可配置显示debug信息\n  debug: false,\n  // 日志打印\n  log: false,\n  meetingTest: process.env.VUE_APP_MEETING_SDK_TEST === 'true'\n};\n\nif (envInfo.isTest && urlAllParams.noAuth) {\n  envInfo.noAuth = true;\n}\n\nif (envInfo.isTest && urlAllParams.debug) {\n  envInfo.debug = true;\n}\n\nif (envInfo.isTest && urlAllParams.log) {\n  envInfo.log = true;\n}\n\nif (envInfo.env === 'development') {\n  envInfo.isDev = true;\n}\n\n// 远程操作类型\nconst remoteTypeList = {\n  'tyb': [\n    {\n      key: '1',\n      name: '远程控制',\n      desc: '远程操控对方的同花顺PC软件',\n      icon: 'remote-control',\n    },\n    {\n      key: '2',\n      name: '邀请操作',\n      desc: '邀请对方远程操作你的同花顺PC软件',\n      icon: 'Invite-action',\n    },\n    {\n      key: '3',\n      name: '桌面分享',\n      desc: '将您的同花顺PC软件页面分享到对方的PC端观看，对方只能观看不能操作',\n      icon: 'desktop-sharing',\n    },\n    {\n      key: '4',\n      name: '桌面观看',\n      desc: '远程观看对方的电脑桌面，但不能操作对方电脑',\n      icon: 'desktop-viewing',\n    },\n  ],\n  'sjcg': [{\n    key: '3',\n    name: '桌面分享',\n    desc: '将您的同花顺PC软件页面分享到对方的移动端观看，对方只能观看不能操作',\n    icon: 'desktop-sharing',\n  }]\n};\n\nexport { remoteTypeList, envInfo, JSEncryptExtInstance };",
    "relevantFileList": [],
    "filePath": "src/components/mixins/remote.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "urlAllParams.meeting_id;",
      "CodeQwen2.5-7B": "urlAllParams.m;",
      "copilot": "urlAllParams.conferenceId;",
      "CodeQwen1.5-7B": " urlAllParams.cid;"
    }
  },
  {
    "prefix": "import './index.less'\nimport EE from './utils/eventEmitter'\nimport { createStore } from './store'\nimport { Painter } from './painter/painter'\nimport * as layoutUtil from './utils/layoutUtil'\nimport mixinDetail from './ChainChartDetail'\n\nclass ChainChart extends EE {\n  constructor() {\n    super()\n    this.store = createStore()\n    this.painter = new Painter({\n      cc: this\n    })\n    // 初始化详情面板状态\n    this.initNodeDetailState()\n    // 初始化播放状态\n    this.initPlayState()\n  }\n\n  // 初始化\n  async init({\n    data,\n    container\n  }) {\n    this.container = container\n    this.store.originData = data\n    this.painter.init({\n      container: container\n    })\n    this.emit('loadingChange', true)\n    this.store.chartData = await layoutUtil.init(this.store.originData)\n    this.emit('loadingChange', false)\n    this.painter.render()\n    // this.painter.draw()\n    // this.painter.calScaleLimit()\n    // this.painter.zoomAdapt()\n    this.emit('renderFinish')\n  }\n\n  // async processChartData() {\n  //   this.store.chartData = await layoutUtil.init(this.store.originData)\n  // }\n\n  zoomAdapt () {\n    this.painter.zoomAdapt()\n  }\n\n  zoomIn() {\n    // this.store.transformState.scale = this.store.transformState.scale * 1.1\n    // this.painter.rerenderWhenScaleChange()\n    this.painter.zoom('in')\n    // this.painter.playToNode(this.store.chartData.nodes[0].id)\n    \n  }\n\n  zoomOut() {\n    this.painter.zoom('out')\n    // this.painter.playToNode(this.store.chartData.nodes[3].id)\n    // if (this.store.transformState.scale < 0.05) {\n    //   return\n    // }\n    // const scale = Math.max(this.store.transformState.scale * 0.9, this.store.transformLimit.minScale)\n    // if (scale !== this.store.transformState.scale) {\n    //   this.store.transformState.scale = scale\n    //   this.painter.rerenderWhenScaleChange()\n    // }\n  }\n\n  // panToSmooth() {\n  //   this.painter.panToSmooth(462, 268)\n  // }\n\n  // focusNode() {\n  //   this.painter.focusNode()\n  // }\n\n  initPlayState() {",
    "infill": "this.playState = {\r\n      isPlaying: false,\r\n      currentCaptionIndex: -1,\r\n ",
    "suffix": "   }\r\n  }\r\n\r\n  // 播放到\r\n  playTo({ captionList, currentCaptionIndex }) {\r\n    const currentCaptionItem = captionList[currentCaptionIndex]\r\n    // if (currentCaptionItem.playType === 'node') {\r\n    //   this.painter.playToNode(currentCaptionItem.playNodeId)\r\n    //   this.destroyNodeDetail()\r\n    // } else if (currentCaptionItem.playType.indexOf('nodeDetail') > -1) {\r\n    //   const detailType = currentCaptionItem.playType.split('_')[1]\r\n    //   this.painter.playToNode(currentCaptionItem.playNodeId, detailType)\r\n    //   this.showNodeDetail(currentCaptionItem.playNodeId, detailType, 'play')\r\n    // } else if (currentCaptionItem.playType === 'edge') {\r\n    //   this.painter.playToEdge(currentCaptionItem.playEdgeFromId, currentCaptionItem.playEdgeToId)\r\n    //   this.destroyNodeDetail()\r\n    // } else {\r\n    //   this.destroyNodeDetail()\r\n    // }\r\n    if (currentCaptionItem?.playParam?.type === 'node') {\r\n      this.painter.playToNode(currentCaptionItem.playParam.id)\r\n      this.destroyNodeDetail()\r\n    } else if (currentCaptionItem?.playParam?.type === 'nodeDetail') {\r\n      this.painter.playToNode(currentCaptionItem.playParam.id, currentCaptionItem.playParam.detailType)\r\n      // this.showNodeDetail(currentCaptionItem.playParam.id, currentCaptionItem.playParam.detailType, 'play')\r\n      this.showNodeDetail({\r\n        ...currentCaptionItem.playParam,\r\n        source: 'play'\r\n      })\r\n    } else if (currentCaptionItem?.playParam?.type === 'businessLogic') {\r\n      this.painter.zoomAdapt()\r\n      // this.destroyNodeDetail()\r\n      this.showNodeDetail({\r\n        ...currentCaptionItem.playParam,\r\n        source: 'play'\r\n      })\r\n    } else if (currentCaptionItem?.playParam?.type === 'nodeTopo') {\r\n      this.painter.playToNodes(currentCaptionItem.playParam.ids)\r\n      // this.destroyNodeDetail()\r\n      this.showNodeDetail({\r\n        ...currentCaptionItem.playParam,\r\n        source: 'play'\r\n      })\r\n    } else {\r\n      this.destroyNodeDetail()\r\n    }\r\n  }\r\n\r\n  // // 重新播放\r\n  // resumePlay() {\r\n  //   this.resumePlayNodeDetail()\r\n  // }\r\n\r\n  // 暂停播放\r\n  pausePlay() {\r\n    this.pausePlayNodeDetail()\r\n  }\r\n\r\n  // 播放到结束\r\n  playToEnd() {\r\n    this.playToEndNodeDetail()\r\n  }\r\n\r\n  destroy() {\r\n    this.painter.destroy()\r\n  }\r\n\r\n}\r\n\r\nmixinDetail(ChainChart)\r\n\r\nexport { ChainChart }",
    "relevantFile": "<file_path>src/views/Home/components/Chain/nodeTopo/NTContain.js\n    this.container = container\n\n    const nodesMap = {}\n    for (let i = 0; i < chartData.nodes.length; i++) {\n      nodesMap[chartData.nodes[i].id] = chartData.nodes[i]\n    }\n    this.rootData = {\n      name: nodesMap[playParam.fromId].data.name,\n      image: nodesMap[playParam.fromId].data.image || `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    }\n    this.data = playParam.toIds.map(id => {\n      return {\n        name: nodesMap[id].data.name,\n        image: nodesMap[id].data.image || `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n        value: nodesMap[id].data?.detail?.nodeValue || 1,\n      }\n    })\n    this.rootStreamType = nodesMap[playParam.fromId].rootStreamType || nodesMap[playParam.fromId].streamType\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n\n    // this.rootData = {\n    //   name: '白色家电',\n    //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    // }\n    // this.data = [\n    //   {\n    //     name: '滚筒洗衣机便携式吸尘器',\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    //     value: 100,\n    //   },\n    //   {\n    //     name: '便携式吸尘器便携式吸尘器',\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    //     value: 50,\n    //   },\n    //   {\n    //     name: '便携式吸尘器便携式吸尘器',\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    //     value: 40,\n    //   },\n    //   {\n    //     name: '便携式吸尘器便携式吸尘器',\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n<file_path>src/views/Home/components/Chain/nodeTopo/NTParallel.js\n    //     name: '法式精致双开门冰箱',\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    //   },\n    //   {\n    //     name: '法式精致双开门冰箱',\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    //   },\n    //   {\n    //     name: '法式精致双开门冰箱',\n    //     image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n    //   },\n    // ]\n\n    this.initLayout = null\n    this.gridLayouts = null\n    this.calLayout()\n\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2],\n      silent: true,\n    })\n    this.zr.add(this.rootGroup)\n\n    this.render()\n\n  }\n\n  pause() {\n    this.zr.animation.pause()\n  }\n\n  calLayout() {\n    this.initLayout = {\n      position: [0, 0],\n      scale: 1,\n    }\n    this.gridLayouts = [\n      {\n        position: [-125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [-125, 153],\n        scale: 0.5,\n      },\n      {\n        position: [125, 153],\n        scale: 0.5,\n      }\n    ]\n  }\n\n  async render() {\n    for (let i = 0; i < this.data.length; i++) {\n      if (i > 0 && i % 4 === 0) {\n        await this.blurAllNodes(0)",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/ChainChart/ChainChart.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "}",
      "CodeQwen2.5-7B": "",
      "copilot": "this.playState = {\r\n      isPlaying: false,\r\n      currentCaptionIndex: -1,\r\n ",
      "CodeQwen1.5-7B": " "
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\"\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\"\n}\n// 经典风格\nconst blackThemeConfig = {\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\"\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n        this.dataIndex = undefined\n        this.config = undefined\n        this.column = [];\n        \n        this.eventDblClick = []\n        this.eventClick = []\n        this.eventClickHeader = []\n        this.eventReCalcForScrollView = []\n        \n        this.needToCalc = true\n        this.needToCalcFont = true\n\n        this.isFocus = false\n        this.minFontWidth = 1\n        this.maxFontWidth = 1\n        this.orgColum = []\n        this.customRowColStyle = undefined\n        this.customFilter = undefined\n        this.customSort = undefined\n        this.sortCol = undefined\n        this.overRowValue = undefined;\n        this.selectRowValue = undefined\n        this.selectColValue = undefined\n        this.columnResize = undefined\n        this.touchClick = undefined\n        \n        this.lastCursor = ''\n        this.canvasHeight = 0\n        this.canvasWidth = 0\n        this.editDa",
    "infill": "sortCol) {\n        this.sortCol = sortCol\n        this.customSort = undefined\n        this.askForReDraw()\n    }",
    "suffix": "\n    updateColumns(col) {\n        this.orgColum = col\n        this.column = []\n        let i\n        for (i = 0; i < col.length; i++) {\n            if (col[i].visible === false) continue\n            const index = this.column.length\n            this.column[index] = {\n                ...{\n                    align: Align.left,\n                    index,\n                    leftPos: 0,\n                    orginalCol: col[i],\n                    rightPos: 0,\n                    width: 50\n                }, ...col[i]\n            }\n            if (this.column[index].field === '__idxnum__' || this.column[index].field === '__rownum__') {\n                this.column[index].allowEdit = false\n            }\n        }\n        this.needToCalc = true\n        this.resize()\n        this.calcColum()\n    }\n    calcColum() {\n        this.needToCalc = false\n        let leftPos = 0\n        let i\n        for (i = 0; i < this.column.length; i++) {\n            this.column[i].leftPos = leftPos\n            leftPos += this.column[i].width * this.r\n            this.column[i].rightPos = leftPos\n        }\n        this.reCalcForScrollView()\n    }\n    setIsFocus(isFocus) {\n        if (this.isFocus !== isFocus) {\n            this.isFocus = isFocus\n        }\n    }\n    reCalcForScrollView() {\n        if (this.dataIndex === undefined) return\n        let w = undefined\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            if (this.column) {\n                let i\n                for(i = 0; i < this.column.length; i++) {\n                    w+= this.column[i].width * this.r + 0\n                }\n            } else {\n                w = undefined\n            }\n        }\n        \n        let h = 0\n        const cellHeight = this.cellHeight\n        const calc = (index) => {\n            let i\n            switch (index.type) {\n                case CanvasTableIndexType.Index:\n                    h += cellHeight * index.list.length\n                    break\n                default:\n                    break\n            }\n        }\n        calc(this.dataIndex.index)\n        if (this.scrollView && w !== undefined) {\n            this.scrollView.setSize(this.r, this.canvasWidth, this.canvasHeight, w, h * this.r)\n            this.fireReCalcForScrollView(w / this.r, h + this.headerHeight)\n        }\n    }\n    fireReCalcForScrollView(width, height) {\n        const scrollView = this.scrollView\n        if (scrollView) {\n            let i\n            for (i = 0; i < this.eventReCalcForScrollView.length; i++) {\n                try {\n                    this.eventReCalcForScrollView[i](this, width, height, scrollView);\n                } catch {\n                    this.logError(\"fireReCalcForScrollView\")\n                }\n            }\n        }\n    }\n    calcIndex() {\n        if (this.data === undefined) return\n        const index = []\n        let i\n        // customFliter过滤 暂不支持\n        for (i = 0; i < this.data.length; i++) {\n            index[index.length] = i\n        }\n        // customSort排序 暂不支持\n        this.dataIndex = {\n            index: { type: CanvasTableIndexType.Index, list: index},\n            mode: CanvasTableMode.ColMode\n        }\n        this.reCalcForScrollView()\n    }\n    getUpdateDataOrData(row, field) {\n        const rowData = this.editData[row]\n        if (rowData && rowData.hasOwnProperty(field)) {\n            return rowData[field]\n        }\n        if (!this.data[row]) debugger\n        return (this.data[row])[field]\n    }\n    getDrawData(colItem, rowId, indexId) {\n        let data\n        switch (colItem.field) {\n            case \"__rownum__\":\n                rowId = rowId + 1\n                data = rowId.toString()\n                break\n            case \"__idxnum__\":\n                data = indexId.toString()\n                break\n            default:\n                data = String(this.getUpdateDataOrData(rowId, colItem.field))\n        }\n\n        if (colItem.customData) {\n            data = colItem.customData(this, data, this.data[rowId], this.data, rowId, colItem)\n        }\n\n        return data\n    }\n    drawCanvas() {\n        if (!this.scrollView || !this.context || !this.dataIndex) {\n            return\n        }\n        if (this.needToCalc) {\n            this.calcColum()\n        }\n        this.context.font = this.config.fontStyle + ' ' + this.config.fontSize * this.r + 'px ' + this.config.font\n        const posX = this.scrollView.getPosX()\n\n        if (this.needToCalcFont) {\n            this.minFontWidth = this.context.measureText(\"i\").width\n            this.maxFontWidth = this.context.measureText(\"Æ\").width\n        }\n        if (this.drawconf !== undefined && this.drawconf.fulldraw) {\n            this.drawconf = undefined\n        }\n        const drawConf = this.drawconf\n        this.drawconf = undefined\n        this.requestAnimationFrame = undefined\n\n        if (this.scrollView.beforeDraw()) {\n            this.askForReDraw()\n        }\n\n        const headderHeight = this.headerHeight * this.r\n        const offsetLeft = 5 * this.r\n        if (drawConf === undefined) {\n            this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\n        }\n\n        this.context.fillStyle = this.config.fontColor\n        this.context.strokeStyle = this.config.lineColor\n        const colStart = 0\n        const colEnd = this.column.length\n\n        const height = this.cellHeight * this.r\n        const index = this.dataIndex.index\n        let pos\n        let i\n        let maxPos\n        switch (index.type) {\n            case CanvasTableIndexType.Index:\n                maxPos = this.canvasHeight + this.cellHeight + 5 * this.r\n                i = Math.floor(this.scrollView.getPosY() / (height))\n                pos = (-this.scrollView.getPosY() + (i + 1) * height)\n                //pos += 14 * this.r\n                pos = pos - 5 * this.r\n                while (pos < maxPos) {\n                    if (i < index.list.length) {\n                        this.drawRowItem(this.context, index.list[i], i, pos, posX, height,\n                                         offsetLeft, colStart, colEnd, drawConf)\n                    } else {\n                        break\n                    }\n\n                    pos += height\n                    i++\n                }\n\n                // this.context.beginPath()\n                // this.context.strokeStyle = '#181C21'\n                // const end = pos - height + 4 * this.r\n                // const firstLine = -this.scrollView.getPosX() + this.column[colStart].leftPos\n                // this.context.moveTo(firstLine, headderHeight)\n                // this.context.lineTo(firstLine, end)\n                // for (let col = colStart; col < colEnd; col++) {\n                //     const rightPos = -this.scrollView.getPosX() + this.column[col].rightPos\n                //     this.context.moveTo(rightPos, headderHeight)\n                //     this.context.lineTo(rightPos, end)\n                // }\n                // this.context.stroke()\n                break\n            default:\n                break\n        }\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            // Headder\n            // pos = 14 * this.r\n            this.context.font = this.config.headerFontStyle + \" \" +\n                (this.config.headerFontSize * this.r) + \"px \" + this.config.headerFont\n            this.context.fillStyle = this.config.headerFontColor\n            this.context.clearRect(0, 0, this.canvasWidth, headderHeight)\n            this.context.beginPath()\n            this.context.strokeStyle = this.config.lineColor\n\n            // const leftPos = -this.scrollView.getPosX() + this.column[colStart].leftPos\n            // this.context.moveTo(leftPos, 0)\n            // this.context.lineTo(leftPos, headderHeight)\n\n            // for (let col = colStart; col < colEnd; col++) {\n            //     const rightPos = -this.scrollView.getPosX() + this.column[col].rightPos\n            //     this.context.moveTo(rightPos, ",
    "relevantFile": "<file_path>src/components/canvasTable/CanvasTable.js\n            config ? config.scrollView : undefined, \n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n    }\n    resize() {\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width\n        this.canvas.height = height\n        super.setCanvasSize(width, height)\n    }\n    canvasFocus = (e) => {\n        this.setIsFocus(true)\n    }\n    canvasBlur = (e) => {\n        this.setIsFocus(false)\n    }",
    "relevantFileList": [],
    "template": "javascript",
    "multiRes": {
      "hipilot": "ta = []",
      "CodeQwen2.5-7B": "ta = undefined",
      "copilot": "sortCol) {\n        this.sortCol = sortCol\n        this.customSort = undefined\n        this.askForReDraw()\n    }",
      "CodeQwen1.5-7B": " ta = []"
    }
  },
  {
    "prefix": "const defaultConfig = {\n    font: \"arial\",\n    fontSize: 14,\n    fontStyle: \"\",\n    headerDrawSortArrow: true,\n    headerDrawSortArrowColor: \"purple\",\n    headerFont: \"arial\",\n    headerFontSize: 14,\n    headerFontStyle: \"bold\",\n    dataChangeBackground: \"#1B63D9\",\n    selectLineColor: \"green\",\n    groupItemArrowColor: \"black\",\n    groupItemBackgroundColor: \"#F9D3CB\",\n    groupItemFontColor: \"back\",\n    rowGroupItemArrowColor: \"black\",\n    rowGroupItemBackgroundColor: \"#F9D3CB\",\n    rowGroupItemFontColor: \"black\"\n}\n\n// 清新简白\nconst whiteThemeConfig = {\n    canvasBorderColor: '#cbcbe1',\n    mainTextColor: \"#C2621A\",\n    marketTextColor: {\n        down: \"#168E20\",\n        up: \"#E52C32\"\n    },\n    backgroundColor: \"#ffffff\",\n    fontColor: \"#272841\",\n    headerBackgroundColor: \"#ffffff\",\n    headerFontColor: \"#272841\",\n    selectedBackgroundColor: \"#D4E1F8\",\n    lineColor: \"#ECECF7\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#ffffff\",\n    scrollView: {\n        backgroundColor: \"#ffffff\",\n        buttonColor: \"#b2b2c5\",\n        buttonHoverColor: \"#757699\",\n    }\n}\n// 典雅灰蓝\nconst grayThemeConfig = {\n    canvasBorderColor: '#181c21',\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#181c21\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#181c21\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#1A2B46\",\n    lineColor: \"#2E2E33\",\n    hoverLineColor: '#2267da',\n    sepraBackgroundColor: \"#181c21\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n// 经典风格\nconst blackThemeConfig = {\n    canvasBorderColor: '#4D0000',\n    mainTextColor: \"#FFC61F\",\n    marketTextColor: {\n        down: \"#30C85F\",\n        up: \"#FF2B48\"\n    },\n    backgroundColor: \"#000000\",\n    fontColor: \"#d0d1d2\",\n    headerBackgroundColor: \"#000000\",\n    headerFontColor: \"#d0d1d2\",\n    selectedBackgroundColor: \"#2B2B31\",\n    lineColor: \"#16181C\",\n    hoverLineColor: '#4D4D54',\n    sepraBackgroundColor: \"#000000\",\n    scrollView: {\n        backgroundColor: \"#181c21\",\n        buttonColor: \"#393941\",\n        buttonHoverColor: \"#5f5f67\",\n    }\n}\n\nconst TableTheme = {\n    '1': grayThemeConfig,\n    '2': whiteThemeConfig,\n    '3': blackThemeConfig\n}\n\nconst NeedBlinkFields = ['涨幅', '涨速']\nconst MainField = '代码'\nconst HightlightValue = 1\nconst AttenuationValue = 0.1\n\nconst CanvasTableMode = {\n    RowMode: 1,\n    ColMode: 2\n}\n\nconst CanvasTableIndexType = {\n    GroupItems: 1,\n    Index: 2,\n    GroupRows: 3\n}\n\nconst Align = {\n    left: 0,\n    center: 1,\n    right: 2\n}\n\nconst Sort = {\n    ascending: 1,\n    descending: -1\n}\n\nexport default class CustomCanvasTable {\n    constructor(config) {\n        this.init()\n        this.updateConfig(config)\n    }\n    init() {\n        this.context = undefined\n        this.requestAnimationFrame = 0;\n        this.drawconf = undefined\n        this.defaultTheme = '1'\n        this.r = 1;\n        this.data = []\n        \n        this.scrollView = undefined\n        this.headerHeight = 25\n        this.cellHeight = 30\n      ",
    "infill": "fields = Object.keys(this.needBlinkConfig[key])\n            if (fields.length === 0) {\n                delete this.needBlinkConfig[key]\n            }",
    "suffix": "\n        })\n        if (isNeed) {\n            this.askForReDraw()\n        }\n    }\n    viewDataChange() {\n    }\n    updateThemeStyle() {\n    }\n    updateColumns(col) {\n        this.orgColum = col\n        this.column = []\n        let i\n        for (i = 0; i < col.length; i++) {\n            if (col[i].visible === false) continue\n            const index = this.column.length\n            this.column[index] = {\n                ...{\n                    align: Align.left,\n                    index,\n                    leftPos: 0,\n                    orginalCol: col[i],\n                    rightPos: 0,\n                    width: 50\n                }, ...col[i]\n            }\n            if (this.column[index].field === '__idxnum__' || this.column[index].field === '__rownum__') {\n                this.column[index].allowEdit = false\n            }\n        }\n        this.needToCalc = true\n        this.resize()\n        this.calcColum()\n    }\n    calcColum() {\n        this.needToCalc = false\n        let leftPos = 0\n        let i\n        for (i = 0; i < this.column.length; i++) {\n            this.column[i].leftPos = leftPos\n            leftPos += this.column[i].width * this.r\n            this.column[i].rightPos = leftPos\n        }\n        this.reCalcForScrollView()\n    }\n    setIsFocus(isFocus) {\n        if (this.isFocus !== isFocus) {\n            this.isFocus = isFocus\n        }\n    }\n    reCalcForScrollView() {\n        if (this.dataIndex === undefined) return\n        let w = 0\n        if (this.dataIndex.mode === CanvasTableMode.ColMode) {\n            if (this.column) {\n                let i\n                for(i = 0; i < this.column.length; i++) {\n                    w+= this.column[i].width * this.r + 0\n                }\n            } else {\n                w = 0\n            }\n        }\n        \n        let h = 0\n        const cellHeight = this.cellHeight\n        const calc = (index) => {\n            let i\n            switch (index.type) {\n                case CanvasTableIndexType.Index:\n                    h += cellHeight * index.list.length\n                    break\n                default:\n                    break\n            }\n        }\n        calc(this.dataIndex.index)\n        if (this.scrollView && w !== undefined) {\n            this.scrollView.setSize(this.r, this.canvasWidth, this.canvasHeight, w, h * this.r)\n            this.fireReCalcForScrollView(w / this.r, h + this.headerHeight)\n        }\n    }\n    fireReCalcForScrollView(width, height) {\n        const scrollView = this.scrollView\n        if (scrollView) {\n            let i\n            for (i = 0; i < this.eventReCalcForScrollView.length; i++) {\n                try {\n                    this.eventReCalcForScrollView[i](this, width, height, scrollView);\n                } catch {\n                    this.logError(\"fireReCalcForScrollView\")\n                }\n            }\n        }\n    }\n    calcIndex() {\n        if (this.data === undefined) return\n        const index = []\n        let i\n        // customFliter过滤 暂不支持\n        for (i = 0; i < this.data.length; i++) {\n            index[index.length] = i\n        }\n\n        // customSort排序 暂不支持\n        const sortCol = this.sortCol;\n        if (sortCol && sortCol.length) {\n            index.sort((a, b) => {\n                let sortColIndex;\n                for (sortColIndex = 0; sortColIndex < sortCol.length; sortColIndex++) {\n                    let d;\n                    const col = sortCol[sortColIndex];\n                    switch (col.col.field) {\n                        case \"__rownum__\":\n                            d = a - b;\n                            if (d !== 0) { return d * col.sort; }\n                            break;\n                        default:\n                            const da = this.getUpdateDataOrData(a, col.col.field);\n                            const db = this.getUpdateDataOrData(b, col.col.field);\n                            if (da === undefined || da === null) {\n                                if (db === undefined || db === null) {\n                                    continue;\n                                }\n                                return col.sort;\n                            }\n                            if (db === undefined || db === null) {\n                                return -1 * col.sort;\n                            }\n                            if (typeof da === \"string\" && typeof db === \"string\") {\n                                if (da === \"\") {\n                                    if (db === \"\") {\n                                        continue;\n                                    }\n                                    return col.sort;\n                                }\n\n                                if (db === \"\") {\n                                    return -1 * col.sort;\n                                }\n                                d = da.localeCompare(db);\n                                if (d !== 0) { return d * col.sort; }\n                                continue;\n                            }\n                            if (da > db) {\n                                return col.sort;\n                            }\n                            if (da < db) {\n                                return -1 * col.sort;\n                            }\n                    }\n                }\n                return 0;\n            });\n        }\n        this.dataIndex = {\n            index: { type: CanvasTableIndexType.Index, list: index},\n            mode: CanvasTableMode.ColMode\n        }\n        this.reCalcForScrollView()\n    }\n    getUpdateDataOrData(row, field) {\n        const rowData = this.editData[row]\n        if (rowData && rowData.hasOwnProperty(field)) {\n            return rowData[field]\n        }\n\n        return (this.data[row])[field]\n    }\n    getDrawData(colItem, rowId, indexId) {\n        let data\n        switch (colItem.field) {\n            case \"__rownum__\":\n                rowId = rowId + 1\n                data = rowId.toString()\n                break\n            case \"__idxnum__\":\n                data = indexId.toString()\n                break\n            default:\n                data = String(this.getUpdateDataOrData(rowId, colItem.field))\n        }\n\n        if (colItem.customData) {\n            data = colItem.customData(this, data, this.data[rowId], this.data, rowId, colItem)\n        }\n\n        return data\n    }\n    getViewRange() {\n        const height = this.cellHeight * this.r\n        const index = this.dataIndex.index\n        let maxPos = this.canvasHeight + this.cellHeight + 5 * this.r\n        let i = Math.floor(this.scrollView.getPosY() / (height))\n        let pos = (-this.scrollView.getPosY() + (i + 1) * height)\n        //pos += 14 * this.r\n        pos = pos - 5 * this.r\n        let range = []\n        while (pos < maxPos) {\n            if (i < index.list.length) {\n                range.push(index.list[i])\n            } else {\n                break\n            }\n            pos += height\n            i++\n        }\n        return range\n    }\n    drawCanvas() {\n        if (!this.scrollView || !this.context || !this.dataIndex) {\n            return\n        }\n        if (this.needToCalc) {\n            this.calcColum()\n        }\n        this.context.font = this.config.fontStyle + ' ' + this.config.fontSize * this.r + 'px ' + this.config.font\n        const posX = this.scrollView.getPosX()\n\n        if (this.needToCalcFont) {\n            this.minFontWidth = this.context.measureText(\"i\").width\n            this.maxFontWidth = this.context.measureText(\"Æ\").width\n        }\n        if (this.drawconf !== undefined && this.drawconf.fulldraw) {\n            this.drawconf = undefined\n        }\n        const drawConf = this.drawconf\n        this.drawconf = undefined\n        this.requestAnimationFrame = undefined\n\n        if (this.scrollView.beforeDraw()) {\n            this.askForReDraw()\n        }\n\n        const headderHeight = this.headerHeig",
    "relevantFile": "<file_path>src/components/canvasTable/CircularBuffer.js\nexport default class CircularBuffer {\n    constructor(length, allowOverFlow) {\n        this.length = length\n        this.allowOverFlow = allowOverFlow\n        this.buffer = new Array(this.length)\n    }\n    size() {\n        return this.count\n    }\n    pop() {\n        if (this.count === 0) {\n            throw new Error('empty')\n        }\n        const i = this.pointerRead\n        this.pointerRead = (this.length * this.pointerRead + 1) % this.length\n        this.count--\n        const temp = this.buffer[i]\n        if (temp === undefined) {\n            throw new Error('undefined')\n        }\n        this.buffer[i] = undefined\n        return temp\n    }\n    push(item) {\n        if (!this.allowOverFlow && this.count === this.length) {\n            throw new Error('overflow')\n        }\n        this.buffer[this.pointerWrite] = item\n        this.pointerWrite = (this.length + this.pointerWrite + 1) % this.length\n        if (this.count === this.length) {\n            this.pointerRead = this.pointerWrite\n        } else {\n            this.count++\n        }\n    }\n    clear() {\n        this.pointerRead = 0;\n        this.pointerWrite = 0;\n        this.count = 0;\n        this.buffer = new Array(this.length);\n    }\n    export() {\n        const result = [];\n        while (this.size() > 0) {\n            result[result.length] = this.pop();\n        }\n        return result;\n    }\n}\n<file_path>src/components/canvasTable/CanvasTable.js\n            this.askForExtentedMouseMoveAndMaouseUp,\n            this.askForNormalMouseMoveAndMaouseUp,\n            this.scrollViewChange\n        )\n        this.calcIndex()\n\n        // event bind\n        this.canvas.addEventListener(\"blur\", this.canvasBlur);\n        this.canvas.addEventListener(\"focus\", this.canvasFocus);\n        this.canvas.addEventListener(\"wheel\", this.canvasWheel);\n        this.canvas.addEventListener(\"dblclick\", this.canvasDblClick);\n        this.canvas.addEventListener(\"mousedown\", this.canvasMouseDown);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n        this.canvas.addEventListener(\"mouseleave\", this.canvasMouseLeave);\n        this.canvas.addEventListener(\"touchstart\", this.canvasTouchStart);\n        this.canvas.addEventListener(\"touchmove\", this.canvasTouchMove);\n        this.canvas.addEventListener(\"touchend\", this.canvasTouchEnd);\n        this.canvas.addEventListener(\"keydown\", this.canvasKeydown);\n        this.canvas.addEventListener(\"resize\", () => this.resize);\n        this.updateColumns(col)\n        window.addEventListener('resize', () => {\n            this.resize()\n        })\n        this.viewDataChange()\n    }\n    updateThemeStyle() {\n        this.canvas.style.border = '1px solid ' + this.config.canvasBorderColor\n        this.canvas.style.backgroundColor = this.config.backgroundColor\n    }\n    resize() {\n        this.setR(window.devicePixelRatio)\n        this.doResize(this.canvas.clientWidth, this.canvas.clientHeight)\n        this.askForReDraw()\n    }\n    scrollViewChange() {\n        console.log('滚动事件')\n        let range = this.getViewRange()\n        let rangeData = range.map(indexId => JSON.parse(JSON.stringify(this.data[indexId])))\n        this.config.onViewDataChange.call(this, rangeData)\n    }\n    viewDataChange() {\n        this.scrollViewChange()\n    }\n    askForExtentedMouseMoveAndMaouseUp() {\n        this.canvas.removeEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.removeEventListener(\"mouseup\", this.canvasMouseUp);\n        window.addEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.addEventListener(\"mouseup\", this.canvasMouseUpExtended);\n    }\n    askForNormalMouseMoveAndMaouseUp() {\n        window.removeEventListener(\"mousemove\", this.canvasMouseMoveExtended);\n        window.removeEventListener(\"mouseup\", this.canvasMouseUpExtended);\n        this.canvas.addEventListener(\"mousemove\", this.canvasMouseMove);\n        this.canvas.addEventListener(\"mouseup\", this.canvasMouseUp);\n    }\n    setCursor(cursor) {\n        this.canvas.style.cursor = cursor === undefined ? 'default' : cursor\n    }\n    setCanvasSize(width, height) {",
    "relevantFileList": [],
    "filePath": "src/components/canvasTable/CustomCanvasTable.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "this.sortCol = []",
      "CodeQwen2.5-7B": "  this.cellWidth = 100",
      "copilot": "fields = Object.keys(this.needBlinkConfig[key])\n            if (fields.length === 0) {\n                delete this.needBlinkConfig[key]\n            }",
      "CodeQwen1.5-7B": "   this.cellWidth = 100"
    }
  },
  {
    "prefix": "\nimport Generator from '../views/Generator.vue'\nimport LayerPreview from '../views/LayerPreview.vue'\n\nconst routes = [\n  {\n    path: '/generator',\n    name: 'Code ",
    "infill": "Generator',",
    "suffix": "\r\n    component: Generator\r\n  },{\r\n    path: '/layer-preview',\r\n    name: 'Layer Preview',\r\n    component: LayerPreview}\r\n]\r\n\r\nexport default routes",
    "relevantFile": "<file_path>chrome-extension/src/main.js\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport { createRouter, createWebHashHistory } from 'vue-router'\n\nimport './style.css'\nimport App from './App.vue'\nimport routes from './routes'\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nconst pinia = createPinia()\nconst app = createApp(App)\n\napp.use(router)\napp.use(pinia)\napp.mount('#app')",
    "relevantFileList": [],
    "filePath": "chrome-extension/src/routes/index.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "Generator',",
      "CodeQwen2.5-7B": "Generator',",
      "copilot": "Generator',",
      "CodeQwen1.5-7B": " Generator',"
    }
  },
  {
    "prefix": "import * as zrender from '@/third/zrender/zrender'\nimport { STATIC_IMAGES_PREFIX } from '@/config/index'\nimport { sleep } from '@/utils/index'\nimport { calLabelLayout } from '../ChainChart/utils/index'\n\nconst NodeBgLinearGradientMap = {\n  up: new zrender.LinearGradient(\n    0,\n    0,\n    0,\n    1,\n    [\n      { offset: 0.07, color: 'rgba(78,134,146,0.00)' },\n      { offset: 0.54, color: '#042C34' },\n    ]\n  ),\n  contain: new zrender.LinearGradient(\n    0,\n    0,\n    0,\n    1,\n    [\n      { offset: 0.07, color: 'rgba(149,140,81,0.00)' },\n      { offset: 0.54, color: '#332D03' },\n    ]\n  ),\n  down: new zrender.LinearGradient(\n    0,\n    0,\n    0,\n    1,\n    [\n      { offset: 0.07, color: 'rgba(65,120,131,0.00)' },\n      { offset: 0.54, color: '#043B46' },\n    ]\n  )\n}\n\nconst NodeBarLinearGradient = new zrender.LinearGradient(\n  0,\n  0,\n  1,\n  0,\n  [\n    { offset: 0, color: 'rgba(255,255,255,0.00)' },\n    { offset: 0.2, color: 'rgba(255,255,255,1)' },\n    { offset: 0.8, color: 'rgba(255,255,255,1)' },\n    { offset: 1, color: 'rgba(255,255,255,0.00)' },\n  ]\n)\n\nexport class NTParallel {\n  constructor({ container }) {\n    this.container = container\n\n    this.width = this.container.offsetWidth\n    this.height = this.container.offsetHeight\n\n    // 初始化canvas\n    const canvas = document.createElement('canvas')\n    canvas.style.width = '100%'\n    canvas.style.height = '100%'\n    canvas.width = this.width\n    canvas.height = this.height\n    this.canvas = canvas\n    this.container.appendChild(this.canvas)\n    this.zr = zrender.init(this.canvas, {\n      devicePixelRatio: window.devicePixelRatio,\n      width: this.width,\n      height: this.height,\n      renderer: 'canvas'\n    })\n\n    this.data = [\n      // {\n      //   name: '滚筒洗衣机',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n      // {\n      //   name: '便携式吸尘器',\n      //   image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      // },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n      {\n        name: '法式精致双开门冰箱',\n        image: `${STATIC_IMAGES_PREFIX}/nodebg.png`,\n      },\n    ]\n\n    this.initLayout = null\n    this.gridLayouts = null\n    this.calLayout()\n\n    this.rootGroup = new zrender.Group({\n      position: [this.width / 2, this.height / 2]\n    })\n    this.zr.add(this.rootGroup)\n\n    this.render()\n\n  }\n\n  calLayout() {\n    this.initLayout = {\n      position: [0, 0],\n      scale: 1,\n    }\n    this.gridLayouts = [\n      {\n        position: [-125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [125, -153],\n        scale: 0.5,\n      },\n      {\n        position: [-125, 153],\n        scale: 0.5,\n      },\n      {\n        position: [125, 153],\n        scale: 0.5,\n      }\n    ]\n  }\n\n  async render() {\n    // this.showNode(0)\n    for (let i = 0; i < this.data.length; i++) {\n      if (i > 0 && i % 4 === 0) {\n        await this.blurAllNodes(0)\n        this.rootGroup.removeAll()\n        await sleep(500)\n      }\n      this.blurAllNodes(0.1)\n      const nodeGroup = await this.showNode(i)\n      await Promise.all([this.playNode(nodeGroup, i), this.resumeAllNodes()])\n      await sleep(500)\n    }\n  }\n\n  blurAllNodes(toOpacity = 0.1) {\n    return new Promise((resolve) => {\n      this.rootGroup.traverse(child => {\n        child.animateTo({\n          style: {\n            opacity: toOpacity\n          }\n        }, {\n          duration: 500,\n          easing: 'cubicOut',\n          done: () => {\n            resolve()\n          }\n        })\n      })\n    })\n  }\n\n  resumeAllNodes() {\n    return new Promise((resolve) => {\n      this.rootGroup.traverse(child => {\n        child.animateTo({\n          style: {\n            opacity: 1\n          }\n        }, {\n          duration: 500,\n          easing: 'cubicOut',\n          done: () => {\n            resolve()\n          }\n        })\n      })\n    })\n  }\n\n  showNode(index) {\n    const nodeData = this.data[index]\n    const fromLayout = this.initLayout\n    let nodeGroup = new zrender.Group({\n      position: fromLayout.position.slice(),\n      scale: [fromLayout.scale, fromLayout.scale],\n    })\n    const width = 428\n    const height = 538\n    nodeGroup.add(new zrender.Rect({\n      shape: {\n        x: - width / 2 - 5,\n        y: - height / 2 - 5,\n        width: width + 10,\n        height: height + 10,\n        r: 17.28,\n      },\n      style: {\n        fill: '#FFFFFF',\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        shadowBlur: 20,\n        shadowColor: 'rgba(3,25,40,0.16)'\n      },\n    }))\n    // \n    const imageEl = new zrender.Image({\n      style: {\n        image: nodeData.image,\n        x: - width / 2,\n        y: - height / 2,\n        width: width,\n        height: width,\n      },\n    })\n    const nodeMask = new zrender.Rect({\n      shape: {\n        x: - width / 2,\n        y: - height / 2,\n        width: width,\n        height: height,\n        r: 16,\n      },\n    })\n    imageEl.setClipPath(nodeMask)\n    nodeGroup.add(imageEl)\n    // \n    const textBg = new zrender.Rect({\n      shape: {\n        x: - width / 2,\n        y: - height / 2 + 298,\n        width: width,\n        height: 240,\n        r: [0, 0, 16, 16],\n      },\n      style: {\n        fill: NodeBgLinearGradientMap['contain'],\n      },\n    })\n    nodeGroup.add(textBg)\n    // 横条\n    nodeGroup.add(new zrender.Rect({\n      shape: {\n        x: - 364 / 2,\n        y: - height / 2 + 423,\n        width: 364,\n        height: 2,\n       },\n      style: {\n        fill: NodeBa",
    "infill": "nodeData.name,",
    "suffix": "\r\n      maxFontSize: 48,\r\n      minFontSize: 12,\r\n      isBold: true\r\n    })\r\n    nodeGroup.add(new zrender.Text({\r\n      style: {\r\n        text: nodeData.name,\r\n        textLineHeight: fontSize,\r\n        fontSize: fontSize,\r\n        fontFamily: 'MicrosoftYaHei',\r\n        fontWieght: 'bold',\r\n        fill: '#FFFFFF',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        x: 0,\r\n        y: - height / 2 + 423 + 28 + 24,\r\n      },\r\n    }))\r\n    // \r\n    nodeGroup.traverse(child => {\r\n      child.attr({\r\n        style: {\r\n          opacity: 0.1\r\n        }\r\n      })\r\n    })\r\n    this.rootGroup.add(nodeGroup)\r\n    return new Promise((resolve) => {\r\n      nodeGroup.traverse(child => {\r\n        child.animateTo({\r\n          style: {\r\n            opacity: 1\r\n          }\r\n        }, {\r\n          duration: 500,\r\n          easing: 'cubicOut',\r\n          done: () => {\r\n            resolve(nodeGroup)\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  playNode(nodeGroup, index) {\r\n    const toLayout = this.gridLayouts[index % 4]\r\n    return new Promise((resolve) => {\r\n      nodeGroup.animateTo({\r\n        position: toLayout.position.slice(),\r\n        scale: [toLayout.scale, toLayout.scale],\r\n      }, {\r\n        duration: 1000,\r\n        easing: 'cubicOut',\r\n        done: () => {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.zr.dispose()\r\n  }\r\n}",
    "relevantFile": "<file_path>src/views/Home/components/Chain/ChainChart/utils/index.js\n  return {\n    up: assembleRiverPart(up, width),\n    contain: assembleRiverPart(contain, width),\n    down: assembleRiverPart(down, width)\n  }\n}\n\nfunction assembleRiverPart(part, width) {\n  width = width / 2\n  const { startPosition, endPosition } = part;\n  let points = [];\n  const slope = 0.3\n  let startX = startPosition[0] + width * slope\n  let endX = endPosition[0] + width * slope\n  let x = startX\n  while(x < endX) {\n    points.push([x,  -width * (0.7 + Math.random() * 0.6)])\n    x +=  (100 + Math.random() * 30)\n  }\n  points.push([endX,  -width * (0.7 + Math.random() * 0.6)])\n\n  startX = endPosition[0] - width * slope\n  endX = startPosition[0] - width * slope\n  x = startX\n  while(x > endX) {\n    points.push([x, width * (0.7 + Math.random() * 0.6)])\n    x -=  (100 + Math.random() * 30)\n  }\n  points.push([endX,  width * (0.7 + Math.random() * 0.6)])\n  return points\n}\n\nexport function calRiverPartLabel(text, startPosition, endPosition) {\n  const centerX = (startPosition[0] + endPosition[0]) / 2\n  const ctx = getMeasureCanvasCtx()\n  ctx.font = `${24}px/${24*1.5}px MicrosoftYaHei`\n  const textWidth = ctx.measureText(text).width\n  const w = textWidth + 8\n  const h = 32\n  const x = 10\n  const y = -16\n  const r = {\n    r1: 4, r2: 4, r3: 4, r4: 4\n  }\n  const aw = 5\n  const ah = 5\n  const d = [\n    [`M ${x + r.r1},${y}`],\n    [`l ${w - r.r1 - r.r2},0`],\n    [`a ${r.r2},${r.r2},0,0,1,${r.r2},${r.r2}`],\n    [`l 0,${h - r.r2 - r.r3}`],\n    [`a ${r.r3},${r.r3},0,0,1,${-r.r3},${r.r3}`],\n    [`l ${r.r3 + r.r4 - w},0`],\n    [`a ${r.r4},${r.r4},0,0,1,${-r.r4},${-r.r4}`],\n    // [`l 0,${r.r4 + r.r1 - h}`],\n    [`l 0,${r.r4 + ah - h / 2}`],\n    [`l ${-aw},${-ah}`],\n    [`l ${aw},${-ah}`],\n    [`l 0,${r.r1 + ah - h / 2}`],\n    [`a ${r.r1},${r.r1},0,0,1,${r.r1},${-r.r1}`],",
    "relevantFileList": [],
    "filePath": "src/views/Home/components/Chain/nodeTopo/NTParallel.js",
    "template": "javascript",
    "multiRes": {
      "hipilot": "rLinearGradient",
      "CodeQwen2.5-7B": "rLinearGradient,\r",
      "copilot": "nodeData.name,",
      "CodeQwen1.5-7B": " rLinearGradient,\r"
    }
  }
]
